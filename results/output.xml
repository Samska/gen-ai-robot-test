<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230418 14:25:19.010" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests">
<suite id="s1-s1" name="Api" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api">
<suite id="s1-s1-s1" name="Users" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api\users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api\users\test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 14:25:19.692" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 14:25:19.692" endtime="20230418 14:25:19.692"/>
</kw>
<status status="PASS" starttime="20230418 14:25:19.691" endtime="20230418 14:25:19.692"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 14:25:20.045" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 14:25:20.045" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f81e256b-372a-42b7-b7e5-2c743bc9c25e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5ab3699b8645d246952660ef5ff40d11;o=1', 'Date': 'Tue, 18 Apr 2023 17:25:18 GMT', 'Server': 'Google Frontend', 'Content-Length': '2760'} 
 body={
    "quantidade": 13,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Christelle.Fadel31@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EJkVQhhbAUyMA48V"
        },
        {
            "nome": "Joesph",
            "email": "Elsie_Jast66@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "Ki2g0rlR5QmObeBw"
        },
        {
            "nome": "Augusta",
            "email": "Alejandra.Rippin@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "KuNXgF8bjoZEZALK"
        },
        {
            "nome": "Augusta",
            "email": "Marisa.Hessel@yahoo.com",
            "password": "teste",
            "administrador": "true",
            "_id": "OBNET4kMLgAqdmcU"
        },
        {
            "nome": "Lola",
            "email": "Tad72@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "QUHTwkJWX5unYqNG"
        },
        {
            "nome": "Misael Usuario",
            "email": "misael@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "Y2etvjOChCuLEMIb"
        },
        {
            "nome": "Misael Adm",
            "email": "misael@gmail.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "YMIE73lmcVjnbVjt"
        },
        {
            "nome": "Sabina",
            "email": "Rosario59@yahoo.com",
            "password": "L_vDW80csV_mypw",
            "administrador": "true",
            "_id": "b5bqhHqwL6Vz8CWL"
        },
        {
            "nome": "Lola",
            "email": "Rodolfo_Hudson@yahoo.com",
            "password": "teste",
            "administrador": "true",
            "_id": "iSv29R5iHr7VnHYp"
        },
        {
            "nome": "Joesph",
            "email": "Roberta.Schroeder@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "iaR865Xg1xpQxmTQ"
        },
        {
            "nome": "Reta",
            "email": "Newell58@yahoo.com",
            "password": "teste",
            "administrador": "true",
            "_id": "lJIrn5sPrQLyAkK5"
        },
        {
            "nome": "Reta",
            "email": "Tyrique.Powlowski@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "s71esl94uVJDURVD"
        }
    ]
} 
 </msg>
<msg timestamp="20230418 14:25:20.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:19.693" endtime="20230418 14:25:20.045"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 14:25:20.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:20.045" endtime="20230418 14:25:20.045"/>
</kw>
<status status="PASS" starttime="20230418 14:25:19.693" endtime="20230418 14:25:20.045"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 14:25:20.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 14:25:20.045" endtime="20230418 14:25:20.046"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 14:25:20.046" endtime="20230418 14:25:20.046"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.045" endtime="20230418 14:25:20.046"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 14:25:20.048" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 14:25:20.047" endtime="20230418 14:25:20.048"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.047" endtime="20230418 14:25:20.048"/>
</kw>
<status status="PASS" starttime="20230418 14:25:19.691" endtime="20230418 14:25:20.048"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 14:25:20.050" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 14:25:20.050" endtime="20230418 14:25:20.050"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.050" endtime="20230418 14:25:20.050"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230418 14:25:20.051" level="INFO">${name} = Trevor Caldwell</msg>
<status status="PASS" starttime="20230418 14:25:20.051" endtime="20230418 14:25:20.051"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230418 14:25:20.052" level="INFO">${email} = burnettcesar@example.net</msg>
<status status="PASS" starttime="20230418 14:25:20.051" endtime="20230418 14:25:20.052"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230418 14:25:20.052" level="INFO">${password} = N92t4UMp(D</msg>
<status status="PASS" starttime="20230418 14:25:20.052" endtime="20230418 14:25:20.052"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 14:25:20.052" level="INFO">${name} = Trevor Caldwell</msg>
<status status="PASS" starttime="20230418 14:25:20.052" endtime="20230418 14:25:20.052"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 14:25:20.052" level="INFO">${email} = burnettcesar@example.net</msg>
<status status="PASS" starttime="20230418 14:25:20.052" endtime="20230418 14:25:20.053"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 14:25:20.053" level="INFO">${password} = N92t4UMp(D</msg>
<status status="PASS" starttime="20230418 14:25:20.053" endtime="20230418 14:25:20.053"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.051" endtime="20230418 14:25:20.053"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 14:25:20.054" level="INFO">${payload} = {'nome': 'Trevor Caldwell', 'email': 'burnettcesar@example.net', 'password': 'N92t4UMp(D', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 14:25:20.053" endtime="20230418 14:25:20.054"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 14:25:20.054" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 14:25:20.054" endtime="20230418 14:25:20.054"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 14:25:20.374" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"nome": "Trevor Caldwell", "email": "burnettcesar@example.net", "password": "N92t4UMp(D", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 14:25:20.375" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e601f5ba-cc29-4319-bc91-7e2f7527f50a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '708218f6f2405e27378445917fcf23b3', 'Date': 'Tue, 18 Apr 2023 17:25:18 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "efneIAWdiVSt8Bwy"
} 
 </msg>
<msg timestamp="20230418 14:25:20.375" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:20.054" endtime="20230418 14:25:20.375"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230418 14:25:20.378" level="INFO">${user_id} = efneIAWdiVSt8Bwy</msg>
<status status="PASS" starttime="20230418 14:25:20.375" endtime="20230418 14:25:20.378"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230418 14:25:20.379" level="INFO">${USER_ID} = efneIAWdiVSt8Bwy</msg>
<status status="PASS" starttime="20230418 14:25:20.378" endtime="20230418 14:25:20.379"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 14:25:20.380" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:20.379" endtime="20230418 14:25:20.380"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.053" endtime="20230418 14:25:20.381"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 14:25:20.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 14:25:20.383" endtime="20230418 14:25:20.386"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 14:25:20.386" endtime="20230418 14:25:20.388"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.383" endtime="20230418 14:25:20.388"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 14:25:20.392" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 14:25:20.390" endtime="20230418 14:25:20.392"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.389" endtime="20230418 14:25:20.393"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.049" endtime="20230418 14:25:20.394"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 14:25:20.401" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 14:25:20.400" endtime="20230418 14:25:20.402"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.399" endtime="20230418 14:25:20.402"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 14:25:20.718" level="INFO">GET Request : url=https://serverest.dev/usuarios/efneIAWdiVSt8Bwy 
 path_url=/usuarios/efneIAWdiVSt8Bwy 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 14:25:20.718" level="INFO">GET Response : url=https://serverest.dev/usuarios/efneIAWdiVSt8Bwy 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd6c46c7d-6a60-40ce-8c9d-49a7225d52cc', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '50b44034d17b2a575701152fde083262', 'Date': 'Tue, 18 Apr 2023 17:25:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '165'} 
 body={
    "nome": "Trevor Caldwell",
    "email": "burnettcesar@example.net",
    "password": "N92t4UMp(D",
    "administrador": "false",
    "_id": "efneIAWdiVSt8Bwy"
} 
 </msg>
<msg timestamp="20230418 14:25:20.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:20.403" endtime="20230418 14:25:20.719"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 14:25:20.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:20.719" endtime="20230418 14:25:20.720"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.402" endtime="20230418 14:25:20.721"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 14:25:20.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 14:25:20.723" endtime="20230418 14:25:20.725"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 14:25:20.725" endtime="20230418 14:25:20.727"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.722" endtime="20230418 14:25:20.727"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 14:25:20.728" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230418 14:25:20.728" endtime="20230418 14:25:20.728"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.728" endtime="20230418 14:25:20.728"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.398" endtime="20230418 14:25:20.729"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 14:25:20.731" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 14:25:20.731" endtime="20230418 14:25:20.731"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.730" endtime="20230418 14:25:20.731"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 14:25:20.732" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 14:25:20.731" endtime="20230418 14:25:20.732"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 14:25:20.732" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 14:25:20.732" endtime="20230418 14:25:20.732"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 14:25:21.061" level="INFO">PUT Request : url=https://serverest.dev/usuarios/efneIAWdiVSt8Bwy 
 path_url=/usuarios/efneIAWdiVSt8Bwy 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 14:25:21.061" level="INFO">PUT Response : url=https://serverest.dev/usuarios/efneIAWdiVSt8Bwy 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'faab4608-b83c-4b24-b2b9-315ac7b93349', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e08d619cd90a380a700e626faa70006e', 'Date': 'Tue, 18 Apr 2023 17:25:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230418 14:25:21.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:20.732" endtime="20230418 14:25:21.061"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 14:25:21.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:21.061" endtime="20230418 14:25:21.062"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.731" endtime="20230418 14:25:21.062"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 14:25:21.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 14:25:21.063" endtime="20230418 14:25:21.063"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 14:25:21.063" endtime="20230418 14:25:21.064"/>
</kw>
<status status="PASS" starttime="20230418 14:25:21.062" endtime="20230418 14:25:21.064"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 14:25:21.065" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 14:25:21.064" endtime="20230418 14:25:21.065"/>
</kw>
<status status="PASS" starttime="20230418 14:25:21.064" endtime="20230418 14:25:21.065"/>
</kw>
<status status="PASS" starttime="20230418 14:25:20.730" endtime="20230418 14:25:21.065"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 14:25:21.067" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 14:25:21.067" endtime="20230418 14:25:21.068"/>
</kw>
<status status="PASS" starttime="20230418 14:25:21.067" endtime="20230418 14:25:21.068"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 14:25:21.379" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/efneIAWdiVSt8Bwy 
 path_url=/usuarios/efneIAWdiVSt8Bwy 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230418 14:25:21.379" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/efneIAWdiVSt8Bwy 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2ea5a77c-d2b9-4aab-9a10-074a30dda0de', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '02a245abea0c224724613b0a3034af77', 'Date': 'Tue, 18 Apr 2023 17:25:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230418 14:25:21.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:21.068" endtime="20230418 14:25:21.379"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 14:25:21.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 14:25:21.379" endtime="20230418 14:25:21.379"/>
</kw>
<status status="PASS" starttime="20230418 14:25:21.068" endtime="20230418 14:25:21.379"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 14:25:21.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 14:25:21.380" endtime="20230418 14:25:21.380"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 14:25:21.381" endtime="20230418 14:25:21.381"/>
</kw>
<status status="PASS" starttime="20230418 14:25:21.380" endtime="20230418 14:25:21.381"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 14:25:21.382" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 14:25:21.382" endtime="20230418 14:25:21.382"/>
</kw>
<status status="PASS" starttime="20230418 14:25:21.381" endtime="20230418 14:25:21.382"/>
</kw>
<status status="PASS" starttime="20230418 14:25:21.067" endtime="20230418 14:25:21.382"/>
</test>
<status status="PASS" starttime="20230418 14:25:19.038" endtime="20230418 14:25:21.383"/>
</suite>
<status status="PASS" starttime="20230418 14:25:19.036" endtime="20230418 14:25:21.385"/>
</suite>
<status status="PASS" starttime="20230418 14:25:19.033" endtime="20230418 14:25:21.386"/>
</suite>
<suite id="s1-s2" name="Ui" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui">
<suite id="s1-s2-s1" name="Login" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui\login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui\login\test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 14:25:21.405" level="INFO">Opening browser ' Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 14:25:21.405" endtime="20230418 14:25:22.877"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 14:25:22.877" endtime="20230418 14:25:22.999"/>
</kw>
<status status="PASS" starttime="20230418 14:25:21.404" endtime="20230418 14:25:22.999"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 14:25:22.999" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 14:25:22.999" endtime="20230418 14:25:23.044"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 14:25:23.049" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 14:25:23.044" endtime="20230418 14:25:23.050"/>
</kw>
<status status="PASS" starttime="20230418 14:25:22.999" endtime="20230418 14:25:23.050"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:23.051" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 14:25:23.051" endtime="20230418 14:25:23.127"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:23.127" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 14:25:23.127" endtime="20230418 14:25:23.199"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:23.199" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 14:25:23.199" endtime="20230418 14:25:23.289"/>
</kw>
<status status="PASS" starttime="20230418 14:25:23.051" endtime="20230418 14:25:23.289"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 14:25:23.294" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 14:25:23.290" endtime="20230418 14:25:23.294"/>
</kw>
<status status="PASS" starttime="20230418 14:25:23.290" endtime="20230418 14:25:23.294"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 14:25:23.309" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 14:25:23.295" endtime="20230418 14:25:23.309"/>
</kw>
<status status="PASS" starttime="20230418 14:25:23.295" endtime="20230418 14:25:23.309"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 14:25:23.310" endtime="20230418 14:25:25.427"/>
</kw>
<status status="PASS" starttime="20230418 14:25:23.309" endtime="20230418 14:25:25.427"/>
</kw>
<status status="PASS" starttime="20230418 14:25:21.404" endtime="20230418 14:25:25.427"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 14:25:25.429" level="INFO">Opening browser ' Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 14:25:25.429" endtime="20230418 14:25:26.868"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 14:25:26.868" endtime="20230418 14:25:26.986"/>
</kw>
<status status="PASS" starttime="20230418 14:25:25.429" endtime="20230418 14:25:26.986"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 14:25:26.987" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 14:25:26.987" endtime="20230418 14:25:27.037"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 14:25:27.041" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 14:25:27.037" endtime="20230418 14:25:27.041"/>
</kw>
<status status="PASS" starttime="20230418 14:25:26.986" endtime="20230418 14:25:27.041"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:27.042" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 14:25:27.042" endtime="20230418 14:25:27.119"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:27.120" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 14:25:27.119" endtime="20230418 14:25:27.187"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:27.187" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 14:25:27.187" endtime="20230418 14:25:27.234"/>
</kw>
<status status="PASS" starttime="20230418 14:25:27.041" endtime="20230418 14:25:27.234"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230418 14:25:27.255" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230418 14:25:27.235" endtime="20230418 14:25:27.255"/>
</kw>
<status status="PASS" starttime="20230418 14:25:27.234" endtime="20230418 14:25:27.255"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 14:25:27.255" endtime="20230418 14:25:29.334"/>
</kw>
<status status="PASS" starttime="20230418 14:25:27.255" endtime="20230418 14:25:29.334"/>
</kw>
<status status="PASS" starttime="20230418 14:25:25.428" endtime="20230418 14:25:29.334"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 14:25:29.337" level="INFO">Opening browser ' Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 14:25:29.337" endtime="20230418 14:25:30.791"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 14:25:30.792" endtime="20230418 14:25:30.906"/>
</kw>
<status status="PASS" starttime="20230418 14:25:29.336" endtime="20230418 14:25:30.906"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 14:25:30.907" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 14:25:30.907" endtime="20230418 14:25:30.956"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 14:25:30.960" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 14:25:30.957" endtime="20230418 14:25:30.960"/>
</kw>
<status status="PASS" starttime="20230418 14:25:30.906" endtime="20230418 14:25:30.961"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:30.962" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 14:25:30.961" endtime="20230418 14:25:31.047"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:31.048" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 14:25:31.047" endtime="20230418 14:25:31.110"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:31.110" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 14:25:31.110" endtime="20230418 14:25:31.184"/>
</kw>
<status status="PASS" starttime="20230418 14:25:30.961" endtime="20230418 14:25:31.184"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 14:25:31.191" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 14:25:31.185" endtime="20230418 14:25:31.191"/>
</kw>
<status status="PASS" starttime="20230418 14:25:31.184" endtime="20230418 14:25:31.191"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 14:25:31.206" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 14:25:31.192" endtime="20230418 14:25:31.206"/>
</kw>
<status status="PASS" starttime="20230418 14:25:31.192" endtime="20230418 14:25:31.206"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 14:25:31.206" endtime="20230418 14:25:33.271"/>
</kw>
<status status="PASS" starttime="20230418 14:25:31.206" endtime="20230418 14:25:33.271"/>
</kw>
<status status="PASS" starttime="20230418 14:25:29.336" endtime="20230418 14:25:33.272"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="27">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 14:25:33.274" level="INFO">Opening browser ' Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 14:25:33.273" endtime="20230418 14:25:34.759"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 14:25:34.759" endtime="20230418 14:25:34.883"/>
</kw>
<status status="PASS" starttime="20230418 14:25:33.273" endtime="20230418 14:25:34.884"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 14:25:34.884" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 14:25:34.884" endtime="20230418 14:25:34.933"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 14:25:34.938" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 14:25:34.933" endtime="20230418 14:25:34.938"/>
</kw>
<status status="PASS" starttime="20230418 14:25:34.884" endtime="20230418 14:25:34.938"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:34.939" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 14:25:34.938" endtime="20230418 14:25:35.023"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:35.023" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 14:25:35.023" endtime="20230418 14:25:35.089"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 14:25:35.089" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 14:25:35.089" endtime="20230418 14:25:40.164"/>
</kw>
<status status="PASS" starttime="20230418 14:25:34.938" endtime="20230418 14:25:40.164"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 14:25:40.175" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 14:25:40.164" endtime="20230418 14:25:40.176"/>
</kw>
<status status="PASS" starttime="20230418 14:25:40.164" endtime="20230418 14:25:40.176"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 14:25:40.191" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 14:25:40.176" endtime="20230418 14:25:40.191"/>
</kw>
<status status="PASS" starttime="20230418 14:25:40.176" endtime="20230418 14:25:40.191"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 14:25:40.192" endtime="20230418 14:25:42.264"/>
</kw>
<status status="PASS" starttime="20230418 14:25:40.191" endtime="20230418 14:25:42.264"/>
</kw>
<status status="PASS" starttime="20230418 14:25:33.273" endtime="20230418 14:25:42.265"/>
</test>
<status status="PASS" starttime="20230418 14:25:21.392" endtime="20230418 14:25:42.267"/>
</suite>
<status status="PASS" starttime="20230418 14:25:21.390" endtime="20230418 14:25:42.269"/>
</suite>
<status status="PASS" starttime="20230418 14:25:21.387" endtime="20230418 14:25:42.271"/>
</suite>
<status status="PASS" starttime="20230418 14:25:19.012" endtime="20230418 14:25:42.273"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
