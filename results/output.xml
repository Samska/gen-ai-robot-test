<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230418 13:18:07.702" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests">
<suite id="s1-s1" name="Api" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api">
<suite id="s1-s1-s1" name="Users" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api\users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api\users\test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:18:08.383" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:18:08.382" endtime="20230418 13:18:08.383"/>
</kw>
<status status="PASS" starttime="20230418 13:18:08.382" endtime="20230418 13:18:08.383"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:18:08.708" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 13:18:08.708" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b92bf111-a463-4081-ae02-ecd8ae62da1e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'edef204812e518d29adbdf867924fac2;o=1', 'Date': 'Tue, 18 Apr 2023 16:18:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230418 13:18:08.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:08.383" endtime="20230418 13:18:08.708"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:18:08.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:08.709" endtime="20230418 13:18:08.709"/>
</kw>
<status status="PASS" starttime="20230418 13:18:08.383" endtime="20230418 13:18:08.709"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:18:08.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:18:08.710" endtime="20230418 13:18:08.710"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:18:08.710" endtime="20230418 13:18:08.711"/>
</kw>
<status status="PASS" starttime="20230418 13:18:08.709" endtime="20230418 13:18:08.711"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:18:08.712" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 13:18:08.711" endtime="20230418 13:18:08.712"/>
</kw>
<status status="PASS" starttime="20230418 13:18:08.711" endtime="20230418 13:18:08.712"/>
</kw>
<status status="PASS" starttime="20230418 13:18:08.382" endtime="20230418 13:18:08.712"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:18:08.714" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:18:08.714" endtime="20230418 13:18:08.714"/>
</kw>
<status status="PASS" starttime="20230418 13:18:08.713" endtime="20230418 13:18:08.714"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230418 13:18:08.715" level="INFO">${name} = Joseph Perkins</msg>
<status status="PASS" starttime="20230418 13:18:08.715" endtime="20230418 13:18:08.715"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230418 13:18:08.716" level="INFO">${email} = alexandrariley@example.org</msg>
<status status="PASS" starttime="20230418 13:18:08.715" endtime="20230418 13:18:08.716"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230418 13:18:08.716" level="INFO">${password} = )4Z0GcxsN8</msg>
<status status="PASS" starttime="20230418 13:18:08.716" endtime="20230418 13:18:08.716"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 13:18:08.716" level="INFO">${name} = Joseph Perkins</msg>
<status status="PASS" starttime="20230418 13:18:08.716" endtime="20230418 13:18:08.716"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 13:18:08.717" level="INFO">${email} = alexandrariley@example.org</msg>
<status status="PASS" starttime="20230418 13:18:08.717" endtime="20230418 13:18:08.717"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 13:18:08.717" level="INFO">${password} = )4Z0GcxsN8</msg>
<status status="PASS" starttime="20230418 13:18:08.717" endtime="20230418 13:18:08.717"/>
</kw>
<status status="PASS" starttime="20230418 13:18:08.715" endtime="20230418 13:18:08.717"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 13:18:08.718" level="INFO">${payload} = {'nome': 'Joseph Perkins', 'email': 'alexandrariley@example.org', 'password': ')4Z0GcxsN8', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 13:18:08.718" endtime="20230418 13:18:08.718"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 13:18:08.718" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 13:18:08.718" endtime="20230418 13:18:08.718"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:18:09.035" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"nome": "Joseph Perkins", "email": "alexandrariley@example.org", "password": ")4Z0GcxsN8", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 13:18:09.035" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '431e34d7-95d6-4976-93d8-73d63bd9e1c4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5f1b55494550151c4e71a69f4241effd', 'Date': 'Tue, 18 Apr 2023 16:18:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "onKU19OvXlPJMrjB"
} 
 </msg>
<msg timestamp="20230418 13:18:09.036" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:08.719" endtime="20230418 13:18:09.036"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230418 13:18:09.039" level="INFO">${user_id} = onKU19OvXlPJMrjB</msg>
<status status="PASS" starttime="20230418 13:18:09.036" endtime="20230418 13:18:09.039"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230418 13:18:09.041" level="INFO">${USER_ID} = onKU19OvXlPJMrjB</msg>
<status status="PASS" starttime="20230418 13:18:09.040" endtime="20230418 13:18:09.041"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:18:09.041" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:09.041" endtime="20230418 13:18:09.042"/>
</kw>
<status status="PASS" starttime="20230418 13:18:08.717" endtime="20230418 13:18:09.042"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:18:09.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:18:09.044" endtime="20230418 13:18:09.045"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:18:09.045" endtime="20230418 13:18:09.046"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.043" endtime="20230418 13:18:09.047"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:18:09.049" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 13:18:09.048" endtime="20230418 13:18:09.049"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.047" endtime="20230418 13:18:09.049"/>
</kw>
<status status="PASS" starttime="20230418 13:18:08.713" endtime="20230418 13:18:09.050"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:18:09.054" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:18:09.054" endtime="20230418 13:18:09.055"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.053" endtime="20230418 13:18:09.055"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:18:09.377" level="INFO">GET Request : url=https://serverest.dev/usuarios/onKU19OvXlPJMrjB 
 path_url=/usuarios/onKU19OvXlPJMrjB 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 13:18:09.377" level="INFO">GET Response : url=https://serverest.dev/usuarios/onKU19OvXlPJMrjB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b257ee21-8245-481b-b49b-e18c5b7c897f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b74fdc4fec5ea1718804a756c11572a1', 'Date': 'Tue, 18 Apr 2023 16:18:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '166'} 
 body={
    "nome": "Joseph Perkins",
    "email": "alexandrariley@example.org",
    "password": ")4Z0GcxsN8",
    "administrador": "false",
    "_id": "onKU19OvXlPJMrjB"
} 
 </msg>
<msg timestamp="20230418 13:18:09.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:09.056" endtime="20230418 13:18:09.378"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:18:09.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:09.378" endtime="20230418 13:18:09.378"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.056" endtime="20230418 13:18:09.378"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:18:09.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:18:09.380" endtime="20230418 13:18:09.381"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:18:09.381" endtime="20230418 13:18:09.383"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.379" endtime="20230418 13:18:09.383"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:18:09.385" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230418 13:18:09.384" endtime="20230418 13:18:09.385"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.384" endtime="20230418 13:18:09.385"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.052" endtime="20230418 13:18:09.386"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:18:09.391" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:18:09.390" endtime="20230418 13:18:09.391"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.390" endtime="20230418 13:18:09.392"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 13:18:09.392" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 13:18:09.392" endtime="20230418 13:18:09.392"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 13:18:09.393" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 13:18:09.392" endtime="20230418 13:18:09.393"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:18:09.705" level="INFO">PUT Request : url=https://serverest.dev/usuarios/onKU19OvXlPJMrjB 
 path_url=/usuarios/onKU19OvXlPJMrjB 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 13:18:09.705" level="INFO">PUT Response : url=https://serverest.dev/usuarios/onKU19OvXlPJMrjB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cb7c9ef6-e8f8-456b-8a36-3c0bb7be351f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6a78e73567b36fbc5a85a93291e47201', 'Date': 'Tue, 18 Apr 2023 16:18:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230418 13:18:09.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:09.393" endtime="20230418 13:18:09.706"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:18:09.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:09.706" endtime="20230418 13:18:09.706"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.392" endtime="20230418 13:18:09.706"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:18:09.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:18:09.707" endtime="20230418 13:18:09.707"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:18:09.707" endtime="20230418 13:18:09.708"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.706" endtime="20230418 13:18:09.708"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:18:09.709" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 13:18:09.708" endtime="20230418 13:18:09.709"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.708" endtime="20230418 13:18:09.709"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.389" endtime="20230418 13:18:09.709"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:18:09.710" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:18:09.710" endtime="20230418 13:18:09.710"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.710" endtime="20230418 13:18:09.711"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:18:10.014" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/onKU19OvXlPJMrjB 
 path_url=/usuarios/onKU19OvXlPJMrjB 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230418 13:18:10.015" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/onKU19OvXlPJMrjB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3996e110-5764-433a-a449-b073659b5708', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '025a55e6ab52aa54278734f754a093fe', 'Date': 'Tue, 18 Apr 2023 16:18:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230418 13:18:10.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:09.711" endtime="20230418 13:18:10.016"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:18:10.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:18:10.016" endtime="20230418 13:18:10.017"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.711" endtime="20230418 13:18:10.018"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:18:10.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:18:10.020" endtime="20230418 13:18:10.022"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:18:10.022" endtime="20230418 13:18:10.024"/>
</kw>
<status status="PASS" starttime="20230418 13:18:10.019" endtime="20230418 13:18:10.025"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:18:10.029" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 13:18:10.027" endtime="20230418 13:18:10.029"/>
</kw>
<status status="PASS" starttime="20230418 13:18:10.026" endtime="20230418 13:18:10.029"/>
</kw>
<status status="PASS" starttime="20230418 13:18:09.710" endtime="20230418 13:18:10.029"/>
</test>
<status status="PASS" starttime="20230418 13:18:07.730" endtime="20230418 13:18:10.031"/>
</suite>
<status status="PASS" starttime="20230418 13:18:07.727" endtime="20230418 13:18:10.033"/>
</suite>
<status status="PASS" starttime="20230418 13:18:07.724" endtime="20230418 13:18:10.035"/>
</suite>
<suite id="s1-s2" name="Ui" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui">
<suite id="s1-s2-s1" name="Login" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui\login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui\login\test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log In to Sauce Demo" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>headless ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 13:18:10.052" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 13:18:10.051" endtime="20230418 13:18:11.563"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 13:18:11.563" endtime="20230418 13:18:11.676"/>
</kw>
<status status="PASS" starttime="20230418 13:18:10.051" endtime="20230418 13:18:11.676"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>standard_user</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 13:18:11.677" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 13:18:11.677" endtime="20230418 13:18:11.752"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>secret_sauce</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 13:18:11.753" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 13:18:11.752" endtime="20230418 13:18:11.819"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 13:18:11.820" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 13:18:11.819" endtime="20230418 13:18:11.896"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 13:18:11.897" endtime="20230418 13:18:13.936"/>
</kw>
<status status="PASS" starttime="20230418 13:18:11.897" endtime="20230418 13:18:13.936"/>
</kw>
<status status="PASS" starttime="20230418 13:18:10.050" endtime="20230418 13:18:13.938"/>
</test>
<status status="PASS" starttime="20230418 13:18:10.042" endtime="20230418 13:18:13.940"/>
</suite>
<status status="PASS" starttime="20230418 13:18:10.039" endtime="20230418 13:18:13.944"/>
</suite>
<status status="PASS" starttime="20230418 13:18:10.036" endtime="20230418 13:18:13.947"/>
</suite>
<status status="PASS" starttime="20230418 13:18:07.703" endtime="20230418 13:18:13.948"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
