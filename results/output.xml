<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230418 13:10:13.640" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests">
<suite id="s1-s1" name="Api" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api">
<suite id="s1-s1-s1" name="Users" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api\users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api\users\test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:10:14.335" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:10:14.335" endtime="20230418 13:10:14.335"/>
</kw>
<status status="PASS" starttime="20230418 13:10:14.334" endtime="20230418 13:10:14.335"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:10:14.669" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 13:10:14.669" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '75b9edc8-94f1-4b74-8ed7-773d891eaa05', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '020941accedf4ec5bfaac2e8d91faf36;o=1', 'Date': 'Tue, 18 Apr 2023 16:10:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '468'} 
 body={
    "quantidade": 2,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Rogers78@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "OTZRAc7HmFTFsr1r"
        }
    ]
} 
 </msg>
<msg timestamp="20230418 13:10:14.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:14.336" endtime="20230418 13:10:14.669"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:10:14.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:14.670" endtime="20230418 13:10:14.670"/>
</kw>
<status status="PASS" starttime="20230418 13:10:14.336" endtime="20230418 13:10:14.670"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:10:14.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:10:14.672" endtime="20230418 13:10:14.673"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:10:14.673" endtime="20230418 13:10:14.674"/>
</kw>
<status status="PASS" starttime="20230418 13:10:14.671" endtime="20230418 13:10:14.674"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:10:14.676" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 13:10:14.675" endtime="20230418 13:10:14.676"/>
</kw>
<status status="PASS" starttime="20230418 13:10:14.675" endtime="20230418 13:10:14.676"/>
</kw>
<status status="PASS" starttime="20230418 13:10:14.334" endtime="20230418 13:10:14.677"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:10:14.679" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:10:14.679" endtime="20230418 13:10:14.679"/>
</kw>
<status status="PASS" starttime="20230418 13:10:14.678" endtime="20230418 13:10:14.679"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230418 13:10:14.680" level="INFO">${name} = Thomas Thompson</msg>
<status status="PASS" starttime="20230418 13:10:14.680" endtime="20230418 13:10:14.680"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230418 13:10:14.681" level="INFO">${email} = griffinclaudia@example.com</msg>
<status status="PASS" starttime="20230418 13:10:14.680" endtime="20230418 13:10:14.681"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230418 13:10:14.681" level="INFO">${password} = ZS4(3%osv^</msg>
<status status="PASS" starttime="20230418 13:10:14.681" endtime="20230418 13:10:14.681"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 13:10:14.681" level="INFO">${name} = Thomas Thompson</msg>
<status status="PASS" starttime="20230418 13:10:14.681" endtime="20230418 13:10:14.681"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 13:10:14.682" level="INFO">${email} = griffinclaudia@example.com</msg>
<status status="PASS" starttime="20230418 13:10:14.681" endtime="20230418 13:10:14.682"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 13:10:14.682" level="INFO">${password} = ZS4(3%osv^</msg>
<status status="PASS" starttime="20230418 13:10:14.682" endtime="20230418 13:10:14.682"/>
</kw>
<status status="PASS" starttime="20230418 13:10:14.680" endtime="20230418 13:10:14.682"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 13:10:14.683" level="INFO">${payload} = {'nome': 'Thomas Thompson', 'email': 'griffinclaudia@example.com', 'password': 'ZS4(3%osv^', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 13:10:14.682" endtime="20230418 13:10:14.683"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 13:10:14.683" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 13:10:14.683" endtime="20230418 13:10:14.683"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:10:15.001" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '118'} 
 body=b'{"nome": "Thomas Thompson", "email": "griffinclaudia@example.com", "password": "ZS4(3%osv^", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 13:10:15.002" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '964fe9a9-23f0-47ba-8862-e32abc462012', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1f4a65592e694132aca074a19bed140e', 'Date': 'Tue, 18 Apr 2023 16:10:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "xObcGJDUXFC1gWpZ"
} 
 </msg>
<msg timestamp="20230418 13:10:15.002" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:14.683" endtime="20230418 13:10:15.002"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230418 13:10:15.005" level="INFO">${user_id} = xObcGJDUXFC1gWpZ</msg>
<status status="PASS" starttime="20230418 13:10:15.003" endtime="20230418 13:10:15.005"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230418 13:10:15.006" level="INFO">${USER_ID} = xObcGJDUXFC1gWpZ</msg>
<status status="PASS" starttime="20230418 13:10:15.005" endtime="20230418 13:10:15.006"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:10:15.006" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.006" endtime="20230418 13:10:15.006"/>
</kw>
<status status="PASS" starttime="20230418 13:10:14.682" endtime="20230418 13:10:15.006"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:10:15.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.007" endtime="20230418 13:10:15.007"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:10:15.007" endtime="20230418 13:10:15.008"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.006" endtime="20230418 13:10:15.008"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:10:15.009" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 13:10:15.008" endtime="20230418 13:10:15.009"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.008" endtime="20230418 13:10:15.009"/>
</kw>
<status status="PASS" starttime="20230418 13:10:14.678" endtime="20230418 13:10:15.009"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:10:15.012" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:10:15.012" endtime="20230418 13:10:15.012"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.011" endtime="20230418 13:10:15.012"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:10:15.334" level="INFO">GET Request : url=https://serverest.dev/usuarios/xObcGJDUXFC1gWpZ 
 path_url=/usuarios/xObcGJDUXFC1gWpZ 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 13:10:15.334" level="INFO">GET Response : url=https://serverest.dev/usuarios/xObcGJDUXFC1gWpZ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cd3ab69b-484a-477c-b81a-8e1a36ebe6ef', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bda7f53da7f007a70822d89c7358c05c', 'Date': 'Tue, 18 Apr 2023 16:10:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '167'} 
 body={
    "nome": "Thomas Thompson",
    "email": "griffinclaudia@example.com",
    "password": "ZS4(3%osv^",
    "administrador": "false",
    "_id": "xObcGJDUXFC1gWpZ"
} 
 </msg>
<msg timestamp="20230418 13:10:15.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.013" endtime="20230418 13:10:15.335"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:10:15.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.335" endtime="20230418 13:10:15.337"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.012" endtime="20230418 13:10:15.337"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:10:15.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.339" endtime="20230418 13:10:15.342"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:10:15.342" endtime="20230418 13:10:15.344"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.338" endtime="20230418 13:10:15.344"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:10:15.348" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230418 13:10:15.346" endtime="20230418 13:10:15.348"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.345" endtime="20230418 13:10:15.349"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.011" endtime="20230418 13:10:15.350"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:10:15.353" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:10:15.353" endtime="20230418 13:10:15.353"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.353" endtime="20230418 13:10:15.353"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 13:10:15.354" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 13:10:15.354" endtime="20230418 13:10:15.354"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 13:10:15.354" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 13:10:15.354" endtime="20230418 13:10:15.354"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:10:15.670" level="INFO">PUT Request : url=https://serverest.dev/usuarios/xObcGJDUXFC1gWpZ 
 path_url=/usuarios/xObcGJDUXFC1gWpZ 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 13:10:15.670" level="INFO">PUT Response : url=https://serverest.dev/usuarios/xObcGJDUXFC1gWpZ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b6ea11c-bdcb-4a34-9c32-1ab95c938d95', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bbc846facb6b5e6afe05138fd29f0508', 'Date': 'Tue, 18 Apr 2023 16:10:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230418 13:10:15.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.354" endtime="20230418 13:10:15.670"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:10:15.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.670" endtime="20230418 13:10:15.671"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.354" endtime="20230418 13:10:15.671"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:10:15.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.672" endtime="20230418 13:10:15.672"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:10:15.672" endtime="20230418 13:10:15.673"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.671" endtime="20230418 13:10:15.673"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:10:15.674" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 13:10:15.673" endtime="20230418 13:10:15.674"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.673" endtime="20230418 13:10:15.674"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.352" endtime="20230418 13:10:15.674"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 13:10:15.676" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 13:10:15.676" endtime="20230418 13:10:15.676"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.675" endtime="20230418 13:10:15.676"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 13:10:15.986" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/xObcGJDUXFC1gWpZ 
 path_url=/usuarios/xObcGJDUXFC1gWpZ 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230418 13:10:15.986" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/xObcGJDUXFC1gWpZ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1bf5068c-a789-4ccf-a719-bdf066b4a363', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '81c88eee2a1014a93af291afcaa619ce', 'Date': 'Tue, 18 Apr 2023 16:10:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230418 13:10:15.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.677" endtime="20230418 13:10:15.986"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 13:10:15.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.987" endtime="20230418 13:10:15.987"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.677" endtime="20230418 13:10:15.987"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 13:10:15.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 13:10:15.988" endtime="20230418 13:10:15.989"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 13:10:15.990" endtime="20230418 13:10:15.991"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.988" endtime="20230418 13:10:15.991"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 13:10:15.993" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 13:10:15.992" endtime="20230418 13:10:15.993"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.992" endtime="20230418 13:10:15.994"/>
</kw>
<status status="PASS" starttime="20230418 13:10:15.675" endtime="20230418 13:10:15.994"/>
</test>
<status status="PASS" starttime="20230418 13:10:13.669" endtime="20230418 13:10:15.998"/>
</suite>
<status status="PASS" starttime="20230418 13:10:13.666" endtime="20230418 13:10:16.002"/>
</suite>
<status status="PASS" starttime="20230418 13:10:13.664" endtime="20230418 13:10:16.006"/>
</suite>
<suite id="s1-s2" name="Ui" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui">
<suite id="s1-s2-s1" name="Login" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui\login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui\login\test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log In to Sauce Demo" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 13:10:16.024" level="INFO">Opening browser 'Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 13:10:16.024" endtime="20230418 13:10:17.552"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 13:10:17.553" endtime="20230418 13:10:17.674"/>
</kw>
<status status="PASS" starttime="20230418 13:10:16.023" endtime="20230418 13:10:17.674"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>standard_user</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 13:10:17.675" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 13:10:17.675" endtime="20230418 13:10:17.755"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>secret_sauce</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 13:10:17.755" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 13:10:17.755" endtime="20230418 13:10:17.824"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 13:10:17.825" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 13:10:17.825" endtime="20230418 13:10:17.902"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 13:10:17.903" endtime="20230418 13:10:20.031"/>
</kw>
<status status="PASS" starttime="20230418 13:10:17.903" endtime="20230418 13:10:20.032"/>
</kw>
<status status="PASS" starttime="20230418 13:10:16.023" endtime="20230418 13:10:20.033"/>
</test>
<status status="PASS" starttime="20230418 13:10:16.015" endtime="20230418 13:10:20.036"/>
</suite>
<status status="PASS" starttime="20230418 13:10:16.012" endtime="20230418 13:10:20.041"/>
</suite>
<status status="PASS" starttime="20230418 13:10:16.009" endtime="20230418 13:10:20.045"/>
</suite>
<status status="PASS" starttime="20230418 13:10:13.642" endtime="20230418 13:10:20.047"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
