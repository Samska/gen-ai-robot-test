<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230521 20:39:29.396" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests">
<suite id="s1-s1" name="Ui" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui">
<suite id="s1-s1-s1" name="Test Ui Login" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui\test_ui_login.robot">
<test id="s1-s1-s1-t1" name="Scenario: Login successfully / registered user via API" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 20:39:30.142" level="INFO">Opening browser ' Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 20:39:30.142" endtime="20230521 20:39:32.928"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 20:39:32.928" endtime="20230521 20:39:33.142"/>
</kw>
<status status="PASS" starttime="20230521 20:39:30.142" endtime="20230521 20:39:33.142"/>
</kw>
<kw name="Given I have a registered user via API" library="test_keywords_login">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 20:39:33.144" level="INFO">${name} = Jillian Adkins</msg>
<status status="PASS" starttime="20230521 20:39:33.143" endtime="20230521 20:39:33.144"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 20:39:33.144" level="INFO">${email} = martinlori@example.net</msg>
<status status="PASS" starttime="20230521 20:39:33.144" endtime="20230521 20:39:33.144"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 20:39:33.144" level="INFO">${password} = (L8v3Ydpq_</msg>
<status status="PASS" starttime="20230521 20:39:33.144" endtime="20230521 20:39:33.144"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 20:39:33.145" level="INFO">${name} = Jillian Adkins</msg>
<status status="PASS" starttime="20230521 20:39:33.145" endtime="20230521 20:39:33.145"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 20:39:33.145" level="INFO">${email} = martinlori@example.net</msg>
<status status="PASS" starttime="20230521 20:39:33.145" endtime="20230521 20:39:33.145"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 20:39:33.145" level="INFO">${password} = (L8v3Ydpq_</msg>
<status status="PASS" starttime="20230521 20:39:33.145" endtime="20230521 20:39:33.145"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 20:39:33.146" level="INFO">${payload} = {'nome': 'Jillian Adkins', 'email': 'martinlori@example.net', 'password': '(L8v3Ydpq_', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 20:39:33.145" endtime="20230521 20:39:33.146"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 20:39:33.146" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 20:39:33.146" endtime="20230521 20:39:33.146"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 20:39:33.147" level="FAIL">Variable '${USERS_API_ENDPOINT}' not found.</msg>
<status status="FAIL" starttime="20230521 20:39:33.146" endtime="20230521 20:39:33.147"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" starttime="20230521 20:39:33.148" endtime="20230521 20:39:33.148"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20230521 20:39:33.148" endtime="20230521 20:39:33.148"/>
</kw>
<status status="FAIL" starttime="20230521 20:39:33.143" endtime="20230521 20:39:33.148"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 20:39:33.149" endtime="20230521 20:39:35.230"/>
</kw>
<status status="PASS" starttime="20230521 20:39:33.149" endtime="20230521 20:39:35.230"/>
</kw>
<tag>login</tag>
<status status="FAIL" starttime="20230521 20:39:30.141" endtime="20230521 20:39:35.231">Variable '${USERS_API_ENDPOINT}' not found.</status>
</test>
<status status="FAIL" starttime="20230521 20:39:29.422" endtime="20230521 20:39:35.234"/>
</suite>
<status status="FAIL" starttime="20230521 20:39:29.419" endtime="20230521 20:39:35.237"/>
</suite>
<status status="FAIL" starttime="20230521 20:39:29.398" endtime="20230521 20:39:35.238"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">login</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Ui">Tests.Ui</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1" name="Test Ui Login">Tests.Ui.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
