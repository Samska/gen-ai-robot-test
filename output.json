{
  "_declaration": {
    "_attributes": {
      "version": "1.0",
      "encoding": "UTF-8"
    }
  },
  "robot": {
    "_attributes": {
      "generator": "Robot 6.1.1 (Python 3.8.18 on linux)",
      "generated": "20231107 00:10:28.606",
      "rpa": "false",
      "schemaversion": "4"
    },
    "suite": {
      "_attributes": {
        "id": "s1",
        "name": "Tests",
        "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests"
      },
      "suite": [
        {
          "_attributes": {
            "id": "s1-s1",
            "name": "Api",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s1-s1",
              "name": "Test Api Users",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s1-s1-t1",
                  "name": "Scenario: Get all registered users",
                  "line": "9"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.375",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.374",
                          "endtime": "20231107 00:10:29.375"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.374",
                        "endtime": "20231107 00:10:29.375"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the list of all registered users",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.519",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.519",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b6f87c7f71176d65379b5a3eb0918a5e', 'Date': 'Tue, 07 Nov 2023 00:10:29 GMT', 'Server': 'Google Frontend', 'Content-Length': '13707'} \n body={\n    \"quantidade\": 63,\n    \"usuarios\": [\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"zwpa@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"2KDRVqZpg1J8doyg\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"rateste@qa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"2Th8vSj240L8uZ7Q\"\n        },\n        {\n            \"nome\": \"Vince.Lind12\",\n            \"email\": \"Charlene.Lowe@hotmail.com\",\n            \"password\": \"213329378\",\n            \"administrador\": \"true\",\n            \"_id\": \"3nl8K9mMzglksUTJ\"\n        },\n        {\n            \"nome\": \"Margie_Steuber72\",\n            \"email\": \"Camron4@hotmail.com\",\n            \"password\": \"222229259\",\n            \"administrador\": \"true\",\n            \"_id\": \"7ydNUhmC8MztW3FG\"\n        },\n        {\n            \"nome\": \"com.github.javafaker.Name@48a38a12\",\n            \"email\": \"trevor.sauer@yahoo.com\",\n            \"password\": \"flb4yr2n1\",\n            \"administrador\": \"true\",\n            \"_id\": \"7zMp6RNhGT1LgeRD\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"iifq@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"9HHexvssYyLY3KqY\"\n        },\n        {\n            \"nome\": \"Vitor Oliveira\",\n            \"email\": \"alberto.pollich@qa.com\",\n            \"password\": \"teste@123\",\n            \"administrador\": \"true\",\n            \"_id\": \"B1bJWRUwM4YRbDU6\"\n        },\n        {\n            \"nome\": \"Vitor Oliveira\",\n            \"email\": \"raymond.kemmer@qa.com\",\n            \"password\": \"teste@123\",\n            \"administrador\": \"true\",\n            \"_id\": \"BaZDyFqGYQydA36l\"\n        },\n        {\n            \"nome\": \"Morris Bogan PhD\",\n            \"email\": \"bronwyn.hartmann@gmail.com\",\n            \"password\": \"75f3kn7ve0g2zb\",\n            \"administrador\": \"true\",\n            \"_id\": \"CHD3ChkqJVTPTxWf\"\n        },\n        {\n            \"nome\": \"Miguel\",\n            \"email\": \"miguel.hoffman@example.com\",\n            \"password\": \"browns\",\n            \"administrador\": \"false\",\n            \"_id\": \"CtfItrpSgjQ7JnNp\"\n        },\n        {\n            \"nome\": \"Hector.Satterfield\",\n            \"email\": \"Evans84@hotmail.com\",\n            \"password\": \"412722504\",\n            \"administrador\": \"true\",\n            \"_id\": \"EmI8wkJuQwatqmhT\"\n        },\n        {\n            \"nome\": \"Williams Bins Sr.\",\n            \"email\": \"stevie.roberts@hotmail.com\",\n            \"password\": \"b0mo3s4g61k\",\n            \"administrador\": \"false\",\n            \"_id\": \"F1MXfe5kLezjTFYg\"\n        },\n        {\n            \"nome\": \"Ila_Pfeffer\",\n            \"email\": \"Diego.Welch83@yahoo.com\",\n            \"password\": \"868380406\",\n            \"administrador\": \"true\",\n            \"_id\": \"FkXC6tKFhCDRRPFj\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"beltrano@qa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"Fwzcv7Kba4Ivz9BH\"\n        },\n        {\n            \"nome\": \"com.github.javafaker.Name@2aa65672\",\n            \"email\": \"nathaniel.ruecker@gmail.com\",\n            \"password\": \"d2j7v1dvbnbodgt\",\n            \"administrador\": \"true\",\n            \"_id\": \"I0PsMlb0LJ4XZduF\"\n        },\n        {\n            \"nome\": \"Brittany_Bartoletti\",\n            \"email\": \"Autumn49@hotmail.com\",\n            \"password\": \"025544945\",\n            \"administrador\": \"true\",\n            \"_id\": \"IWUBsnGtfsIX1RZo\"\n        },\n        {\n            \"nome\": \"Fulano1 da Silva\",\n            \"email\": \"beltrano123@qa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"IpAexdAvBKFWn8jy\"\n        },\n        {\n            \"nome\": \"Peao \",\n            \"email\": \"felecia.hegmann@qa.com\",\n            \"password\": \"teste@123\",\n            \"administrador\": \"true\",\n            \"_id\": \"JRVYyoZhVhF4G4Gh\"\n        },\n        {\n            \"nome\": \"Jonas Neto\",\n            \"email\": \"melissakane@example.org\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"K7xQlxBeWzihzxdK\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"mklq@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"LzI8BUKytvSDzE7X\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"djib@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"MowSmO3Ou2AFoO0V\"\n        },\n        {\n            \"nome\": \"com.github.javafaker.Name@2aa65672\",\n            \"email\": \"eli.denesik@gmail.com\",\n            \"password\": \"zdi0z415tk9\",\n            \"administrador\": \"true\",\n            \"_id\": \"NqzXBdcYE8oMTV8w\"\n        },\n        {\n            \"nome\": \"Jonas Neto\",\n            \"email\": \"jonesmatthew@example.net\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"NrToEORi4MnvgHHk\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"nxxc@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"PCD64aCO8Oe6ywis\"\n        },\n        {\n            \"nome\": \"Peao \",\n            \"email\": \"norman.paucek@qa.com\",\n            \"password\": \"teste@123\",\n            \"administrador\": \"true\",\n            \"_id\": \"Pd5dSY7KhV0PPD71\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"zxvb@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"QbFCBOssRcreQumm\"\n        },\n        {\n            \"nome\": \"com.github.javafaker.Name@5e25085\",\n            \"email\": \"juan.conn@gmail.com\",\n            \"password\": \"0h3o79t61o\",\n            \"administrador\": \"true\",\n            \"_id\": \"SsITYyLwZrQW9hTi\"\n        },\n        {\n            \"nome\": \"Emerald 9876f35c-ec39-4983-9c3e-101462399400\",\n            \"email\": \"automation-postUser5acec589-093d-4544-bd8d-60a0f387ca0f@moviautomation.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"TlnktmgumSecGvxR\"\n        },\n        {\n            \"nome\": \"Tara34\",\n            \"email\": \"Hope91@gmail.com\",\n            \"password\": \"067866486\",\n            \"administrador\": \"true\",\n            \"_id\": \"Tn4otB035Upmx4A6\"\n        },\n        {\n            \"nome\": \"Miss Georgann Johns\",\n            \"email\": \"rolf.mcdermott@yahoo.com\",\n            \"password\": \"i5ln459ifqeyt\",\n            \"administrador\": \"true\",\n            \"_id\": \"U2V84Ag95b9SsL6R\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"ghlu@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"U33zFZQ6FT3JPfb2\"\n        },\n        {\n            \"nome\": \"Dr. Santo Daugherty\",\n            \"email\": \"henry.balistreri@yahoo.com\",\n            \"password\": \"qvanjy8ecptood7\",\n            \"administrador\": \"false\",\n            \"_id\": \"W22fBlcn4w4K5eVg\"\n        },\n        {\n            \"nome\": \"Bryce21\",\n            \"email\": \"Mark56@yahoo.com\",\n            \"password\": \"830294141\",\n            \"administrador\": \"true\",\n            \"_id\": \"WKJFf3Gkio558cv9\"\n        },\n        {\n            \"nome\": \"Vitor Oliveira\",\n            \"email\": \"ella.morissette@qa.com\",\n            \"password\": \"teste@123\",\n            \"administrador\": \"true\",\n            \"_id\": \"XLhsnU6QXoAQKckl\"\n        },\n        {\n            \"nome\": \"Hiram Wolff\",\n            \"email\": \"perry.langworth@yahoo.com\",\n            \"password\": \"y4w5944zx\",\n            \"administrador\": \"true\",\n            \"_id\": \"Y4YD2LKR51RiryWO\"\n        },\n        {\n            \"nome\": \"Maiya41\",\n            \"email\": \"Mekhi_Towne57@hotmail.com\",\n            \"password\": \"313245031\",\n            \"administrador\": \"true\",\n            \"_id\": \"YJFFIOpqwO0SZbva\"\n        },\n        {\n            \"nome\": \"Peao\",\n            \"email\": \"hilaria.kreiger@qa.com\",\n            \"password\": \"teste@123\",\n            \"administrador\": \"true\",\n            \"_id\": \"YXAICgpEu2Rr1TGB\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"mtiq@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"YwCAUg8OOZqWisoL\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"bnbk@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"agsV7lcBn1P8kn32\"\n        },\n        {\n            \"nome\": \"Alan_Stoltenberg57\",\n            \"email\": \"Curt.Wunsch@gmail.com\",\n            \"password\": \"261183373\",\n            \"administrador\": \"true\",\n            \"_id\": \"aqfZNDB5cQqby82A\"\n        },\n        {\n            \"nome\": \"Peao \",\n            \"email\": \"max.deckow@qa.com\",\n            \"password\": \"teste@123\",\n            \"administrador\": \"true\",\n            \"_id\": \"b7S9n7WDzIPz0RY4\"\n        },\n        {\n            \"nome\": \"Curt69\",\n            \"email\": \"Alphonso18@hotmail.com\",\n            \"password\": \"369883927\",\n            \"administrador\": \"true\",\n            \"_id\": \"bjOoTin3PubTWqSi\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"qknl@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"cosfxgNLwfg6pTec\"\n        },\n        {\n            \"nome\": \"Jonas Neto\",\n            \"email\": \"eboyle@example.net\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"daebC7F25uehRho3\"\n        },\n        {\n            \"nome\": \"Logan_Stanton75\",\n            \"email\": \"Solon_Stanton@gmail.com\",\n            \"password\": \"790738877\",\n       ... (set the log level to DEBUG or TRACE to see the full content) \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.520",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.376",
                            "endtime": "20231107 00:10:29.520"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.520",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.520",
                            "endtime": "20231107 00:10:29.520"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.375",
                        "endtime": "20231107 00:10:29.521"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.522",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.521",
                            "endtime": "20231107 00:10:29.522"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.522",
                            "endtime": "20231107 00:10:29.523"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.521",
                        "endtime": "20231107 00:10:29.523"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.525",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.524",
                          "endtime": "20231107 00:10:29.525"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.524",
                        "endtime": "20231107 00:10:29.525"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231107 00:10:29.372",
                    "endtime": "20231107 00:10:29.526"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t2",
                  "name": "Scenario: Create a new user",
                  "line": "15"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.528",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.527",
                          "endtime": "20231107 00:10:29.528"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.527",
                        "endtime": "20231107 00:10:29.528"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given I have a valid user data",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Name",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": ":example: 'John Doe'"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.529",
                            "level": "INFO"
                          },
                          "_text": "${name} = Benjamin Whitaker"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.529",
                            "endtime": "20231107 00:10:29.530"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Email",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${email}"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.530",
                            "level": "INFO"
                          },
                          "_text": "${email} = ggonzales@example.net"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.530",
                            "endtime": "20231107 00:10:29.530"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Password",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${password}"
                        },
                        "arg": [
                          {
                            "_text": "length=12"
                          },
                          {
                            "_text": "special_chars=False"
                          }
                        ],
                        "doc": {
                          "_text": "Generate a random password of the specified ``length``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.531",
                            "level": "INFO"
                          },
                          "_text": "${password} = wB8AVbys5z8d"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.530",
                            "endtime": "20231107 00:10:29.531"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.531",
                            "level": "INFO"
                          },
                          "_text": "${name} = Benjamin Whitaker"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.531",
                            "endtime": "20231107 00:10:29.531"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${email}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.532",
                            "level": "INFO"
                          },
                          "_text": "${email} = ggonzales@example.net"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.532",
                            "endtime": "20231107 00:10:29.532"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${password}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.532",
                            "level": "INFO"
                          },
                          "_text": "${password} = wB8AVbys5z8d"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.532",
                            "endtime": "20231107 00:10:29.532"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.528",
                        "endtime": "20231107 00:10:29.533"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I create the user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=${name}"
                          },
                          {
                            "_text": "email=${email}"
                          },
                          {
                            "_text": "password=${password}"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.534",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'Benjamin Whitaker', 'email': 'ggonzales@example.net', 'password': 'wB8AVbys5z8d', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.533",
                            "endtime": "20231107 00:10:29.534"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.534",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.534",
                            "endtime": "20231107 00:10:29.534"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "POST On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a POST request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.597",
                              "level": "INFO"
                            },
                            "_text": "POST Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} \n body=b'{\"nome\": \"Benjamin Whitaker\", \"email\": \"ggonzales@example.net\", \"password\": \"wB8AVbys5z8d\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.598",
                              "level": "INFO"
                            },
                            "_text": "POST Response : url=https://serverest.dev/usuarios \n status=201, reason=Created \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4db72691145ccf66a2112de8e96bd5b1', 'Date': 'Tue, 07 Nov 2023 00:10:29 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} \n body={\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"59H3MIYGD166fQ20\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.598",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [201]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.534",
                            "endtime": "20231107 00:10:29.598"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Variable",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${user_id}"
                        },
                        "arg": {
                          "_text": "${response.json()['_id']}"
                        },
                        "doc": {
                          "_text": "Returns the given values which can then be assigned to a variables."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.599",
                            "level": "INFO"
                          },
                          "_text": "${user_id} = 59H3MIYGD166fQ20"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.598",
                            "endtime": "20231107 00:10:29.599"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Global Variable",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${USER_ID}"
                          },
                          {
                            "_text": "${user_id}"
                          }
                        ],
                        "doc": {
                          "_text": "Makes a variable available globally in all tests and suites."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.600",
                            "level": "INFO"
                          },
                          "_text": "${USER_ID} = 59H3MIYGD166fQ20"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.599",
                            "endtime": "20231107 00:10:29.600"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.601",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [201]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.600",
                            "endtime": "20231107 00:10:29.601"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.533",
                        "endtime": "20231107 00:10:29.601"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 201",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.602",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.602",
                            "endtime": "20231107 00:10:29.602"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.603",
                            "endtime": "20231107 00:10:29.603"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.601",
                        "endtime": "20231107 00:10:29.603"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.605",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.604",
                          "endtime": "20231107 00:10:29.605"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.604",
                        "endtime": "20231107 00:10:29.605"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231107 00:10:29.527",
                    "endtime": "20231107 00:10:29.605"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t3",
                  "name": "Scenario: Get a specific user informations",
                  "line": "22"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.607",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.607",
                          "endtime": "20231107 00:10:29.608"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.607",
                        "endtime": "20231107 00:10:29.608"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.712",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios/59H3MIYGD166fQ20 \n path_url=/usuarios/59H3MIYGD166fQ20 \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.712",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios/59H3MIYGD166fQ20 \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a2a36338e126fa207819ccecc1298c80', 'Date': 'Tue, 07 Nov 2023 00:10:29 GMT', 'Server': 'Google Frontend', 'Content-Length': '166'} \n body={\n    \"nome\": \"Benjamin Whitaker\",\n    \"email\": \"ggonzales@example.net\",\n    \"password\": \"wB8AVbys5z8d\",\n    \"administrador\": \"false\",\n    \"_id\": \"59H3MIYGD166fQ20\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.712",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.608",
                            "endtime": "20231107 00:10:29.712"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.713",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.712",
                            "endtime": "20231107 00:10:29.713"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.608",
                        "endtime": "20231107 00:10:29.713"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.715",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.714",
                            "endtime": "20231107 00:10:29.715"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.715",
                            "endtime": "20231107 00:10:29.716"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.713",
                        "endtime": "20231107 00:10:29.716"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.717",
                          "level": "INFO"
                        },
                        "_text": "Length is 5"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.717",
                          "endtime": "20231107 00:10:29.717"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.716",
                        "endtime": "20231107 00:10:29.718"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231107 00:10:29.606",
                    "endtime": "20231107 00:10:29.718"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t4",
                  "name": "Scenario: Update the created user",
                  "line": "28"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.720",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.720",
                          "endtime": "20231107 00:10:29.720"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.719",
                        "endtime": "20231107 00:10:29.720"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I update the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=John Smith"
                          },
                          {
                            "_text": "email=john.smith@example.com"
                          },
                          {
                            "_text": "password=P@ssw0rd123"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.721",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.721",
                            "endtime": "20231107 00:10:29.721"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.723",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.722",
                            "endtime": "20231107 00:10:29.723"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "PUT On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a PUT request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.796",
                              "level": "INFO"
                            },
                            "_text": "PUT Request : url=https://serverest.dev/usuarios/59H3MIYGD166fQ20 \n path_url=/usuarios/59H3MIYGD166fQ20 \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} \n body=b'{\"nome\": \"John Smith\", \"email\": \"john.smith@example.com\", \"password\": \"P@ssw0rd123\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.796",
                              "level": "INFO"
                            },
                            "_text": "PUT Response : url=https://serverest.dev/usuarios/59H3MIYGD166fQ20 \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '237a0c76eec0c282aea132a82bc65aea', 'Date': 'Tue, 07 Nov 2023 00:10:29 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} \n body={\n    \"message\": \"Registro alterado com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.796",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.723",
                            "endtime": "20231107 00:10:29.796"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.797",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.797",
                            "endtime": "20231107 00:10:29.797"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.721",
                        "endtime": "20231107 00:10:29.797"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.799",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.798",
                            "endtime": "20231107 00:10:29.799"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.799",
                            "endtime": "20231107 00:10:29.800"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.798",
                        "endtime": "20231107 00:10:29.800"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.801",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.801",
                          "endtime": "20231107 00:10:29.801"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.800",
                        "endtime": "20231107 00:10:29.802"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231107 00:10:29.719",
                    "endtime": "20231107 00:10:29.802"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t5",
                  "name": "Scenario: Delete the created user",
                  "line": "34"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.804",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.804",
                          "endtime": "20231107 00:10:29.804"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.803",
                        "endtime": "20231107 00:10:29.804"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I delete the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "DELETE On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a DELETE request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.867",
                              "level": "INFO"
                            },
                            "_text": "DELETE Request : url=https://serverest.dev/usuarios/59H3MIYGD166fQ20 \n path_url=/usuarios/59H3MIYGD166fQ20 \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.867",
                              "level": "INFO"
                            },
                            "_text": "DELETE Response : url=https://serverest.dev/usuarios/59H3MIYGD166fQ20 \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cd499f65d343ce7cf56890df316b201b', 'Date': 'Tue, 07 Nov 2023 00:10:29 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} \n body={\n    \"message\": \"Registro excluído com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.867",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.805",
                            "endtime": "20231107 00:10:29.867"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.868",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.868",
                            "endtime": "20231107 00:10:29.868"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.805",
                        "endtime": "20231107 00:10:29.868"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231107 00:10:29.870",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.869",
                            "endtime": "20231107 00:10:29.870"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231107 00:10:29.870",
                            "endtime": "20231107 00:10:29.871"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.868",
                        "endtime": "20231107 00:10:29.871"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231107 00:10:29.872",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:29.872",
                          "endtime": "20231107 00:10:29.872"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:29.871",
                        "endtime": "20231107 00:10:29.872"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231107 00:10:29.803",
                    "endtime": "20231107 00:10:29.873"
                  }
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "PASS",
                "starttime": "20231107 00:10:28.637",
                "endtime": "20231107 00:10:29.874"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "PASS",
              "starttime": "20231107 00:10:28.634",
              "endtime": "20231107 00:10:29.876"
            }
          }
        },
        {
          "_attributes": {
            "id": "s1-s2",
            "name": "E2E",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s2-s1",
              "name": "Test Ui Signup",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s2-s1-t1",
                  "name": "Scenario: Signup with empty fields",
                  "line": "10"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:29.893",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:37.103",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:37.104",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55baf494bfb3 <unknown>\n#1 0x55baf461f4a7 <unknown>\n#2 0x55baf4652c93 <unknown>\n#3 0x55baf464f10c <unknown>\n#4 0x55baf4691ac6 <unknown>\n#5 0x55baf4688713 <unknown>\n#6 0x55baf465b18b <unknown>\n#7 0x55baf465bf7e <unknown>\n#8 0x55baf49118d8 <unknown>\n#9 0x55baf4915800 <unknown>\n#10 0x55baf491fcfc <unknown>\n#11 0x55baf4916418 <unknown>\n#12 0x55baf48e342f <unknown>\n#13 0x55baf493a4e8 <unknown>\n#14 0x55baf493a6b4 <unknown>\n#15 0x55baf494b143 <unknown>\n#16 0x7f8807a94ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231107 00:10:29.892",
                            "endtime": "20231107 00:10:37.106"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231107 00:10:37.106",
                            "endtime": "20231107 00:10:37.106"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231107 00:10:29.892",
                        "endtime": "20231107 00:10:37.107"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:37.108",
                          "endtime": "20231107 00:10:37.108"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:37.107",
                        "endtime": "20231107 00:10:37.109"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231107 00:10:29.891",
                    "endtime": "20231107 00:10:37.109"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55baf494bfb3 <unknown>\n#1 0x55baf461f4a7 <unknown>\n#2 0x55baf4652c93 <unknown>\n#3 0x55baf464f10c <unknown>\n#4 0x55baf4691ac6 <unknown>\n#5 0x55baf4688713 <unknown>\n#6 0x55baf465b18b <unknown>\n#7 0x55baf465bf7e <unknown>\n#8 0x55baf49118d8 <unknown>\n#9 0x55baf4915800 <unknown>\n#10 0x55baf491fcfc <unknown>\n#11 0x55baf4916418 <unknown>\n#12 0x55baf48e342f <unknown>\n#13 0x55baf493a4e8 <unknown>\n#14 0x55baf493a6b4 <unknown>\n#15 0x55baf494b143 <unknown>\n#16 0x7f8807a94ac3 <unknown>\n"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t2",
                  "name": "Scenario: Signup done successfully",
                  "line": "16"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:37.112",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:37.854",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:37.855",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x559c1d945fb3 <unknown>\n#1 0x559c1d6194a7 <unknown>\n#2 0x559c1d64cc93 <unknown>\n#3 0x559c1d64910c <unknown>\n#4 0x559c1d68bac6 <unknown>\n#5 0x559c1d682713 <unknown>\n#6 0x559c1d65518b <unknown>\n#7 0x559c1d655f7e <unknown>\n#8 0x559c1d90b8d8 <unknown>\n#9 0x559c1d90f800 <unknown>\n#10 0x559c1d919cfc <unknown>\n#11 0x559c1d910418 <unknown>\n#12 0x559c1d8dd42f <unknown>\n#13 0x559c1d9344e8 <unknown>\n#14 0x559c1d9346b4 <unknown>\n#15 0x559c1d945143 <unknown>\n#16 0x7f5aafc94ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231107 00:10:37.111",
                            "endtime": "20231107 00:10:37.855"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231107 00:10:37.856",
                            "endtime": "20231107 00:10:37.856"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231107 00:10:37.110",
                        "endtime": "20231107 00:10:37.856"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:37.857",
                          "endtime": "20231107 00:10:37.858"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:37.857",
                        "endtime": "20231107 00:10:37.858"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231107 00:10:37.109",
                    "endtime": "20231107 00:10:37.858"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x559c1d945fb3 <unknown>\n#1 0x559c1d6194a7 <unknown>\n#2 0x559c1d64cc93 <unknown>\n#3 0x559c1d64910c <unknown>\n#4 0x559c1d68bac6 <unknown>\n#5 0x559c1d682713 <unknown>\n#6 0x559c1d65518b <unknown>\n#7 0x559c1d655f7e <unknown>\n#8 0x559c1d90b8d8 <unknown>\n#9 0x559c1d90f800 <unknown>\n#10 0x559c1d919cfc <unknown>\n#11 0x559c1d910418 <unknown>\n#12 0x559c1d8dd42f <unknown>\n#13 0x559c1d9344e8 <unknown>\n#14 0x559c1d9346b4 <unknown>\n#15 0x559c1d945143 <unknown>\n#16 0x7f5aafc94ac3 <unknown>\n"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t3",
                  "name": "Scenario: Signup with already used email",
                  "line": "23"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:37.861",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:38.607",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231107 00:10:38.607",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55ca81c12fb3 <unknown>\n#1 0x55ca818e64a7 <unknown>\n#2 0x55ca81919c93 <unknown>\n#3 0x55ca8191610c <unknown>\n#4 0x55ca81958ac6 <unknown>\n#5 0x55ca8194f713 <unknown>\n#6 0x55ca8192218b <unknown>\n#7 0x55ca81922f7e <unknown>\n#8 0x55ca81bd88d8 <unknown>\n#9 0x55ca81bdc800 <unknown>\n#10 0x55ca81be6cfc <unknown>\n#11 0x55ca81bdd418 <unknown>\n#12 0x55ca81baa42f <unknown>\n#13 0x55ca81c014e8 <unknown>\n#14 0x55ca81c016b4 <unknown>\n#15 0x55ca81c12143 <unknown>\n#16 0x7f7eb6e94ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231107 00:10:37.860",
                            "endtime": "20231107 00:10:38.608"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231107 00:10:38.608",
                            "endtime": "20231107 00:10:38.608"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231107 00:10:37.860",
                        "endtime": "20231107 00:10:38.608"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231107 00:10:38.610",
                          "endtime": "20231107 00:10:38.610"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231107 00:10:38.609",
                        "endtime": "20231107 00:10:38.610"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231107 00:10:37.858",
                    "endtime": "20231107 00:10:38.610"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55ca81c12fb3 <unknown>\n#1 0x55ca818e64a7 <unknown>\n#2 0x55ca81919c93 <unknown>\n#3 0x55ca8191610c <unknown>\n#4 0x55ca81958ac6 <unknown>\n#5 0x55ca8194f713 <unknown>\n#6 0x55ca8192218b <unknown>\n#7 0x55ca81922f7e <unknown>\n#8 0x55ca81bd88d8 <unknown>\n#9 0x55ca81bdc800 <unknown>\n#10 0x55ca81be6cfc <unknown>\n#11 0x55ca81bdd418 <unknown>\n#12 0x55ca81baa42f <unknown>\n#13 0x55ca81c014e8 <unknown>\n#14 0x55ca81c016b4 <unknown>\n#15 0x55ca81c12143 <unknown>\n#16 0x7f7eb6e94ac3 <unknown>\n"
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "FAIL",
                "starttime": "20231107 00:10:29.880",
                "endtime": "20231107 00:10:38.613"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "FAIL",
              "starttime": "20231107 00:10:29.877",
              "endtime": "20231107 00:10:38.615"
            }
          }
        }
      ],
      "status": {
        "_attributes": {
          "status": "FAIL",
          "starttime": "20231107 00:10:28.607",
          "endtime": "20231107 00:10:38.616"
        }
      }
    },
    "statistics": {
      "total": {
        "stat": {
          "_attributes": {
            "pass": "5",
            "fail": "3",
            "skip": "0"
          },
          "_text": "All Tests"
        }
      },
      "tag": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0"
            },
            "_text": "api"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0"
            },
            "_text": "e2e"
          }
        ]
      },
      "suite": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "3",
              "skip": "0",
              "id": "s1",
              "name": "Tests"
            },
            "_text": "Tests"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1",
              "name": "Api"
            },
            "_text": "Tests.Api"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1-s1",
              "name": "Test Api Users"
            },
            "_text": "Tests.Api.Test Api Users"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2",
              "name": "E2E"
            },
            "_text": "Tests.E2E"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2-s1",
              "name": "Test Ui Signup"
            },
            "_text": "Tests.E2E.Test Ui Signup"
          }
        ]
      }
    },
    "errors": {}
  }
}