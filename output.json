{
  "_declaration": {
    "_attributes": {
      "version": "1.0",
      "encoding": "UTF-8"
    }
  },
  "robot": {
    "_attributes": {
      "generator": "Robot 6.1.1 (Python 3.8.18 on linux)",
      "generated": "20231121 00:10:41.534",
      "rpa": "false",
      "schemaversion": "4"
    },
    "suite": {
      "_attributes": {
        "id": "s1",
        "name": "Tests",
        "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests"
      },
      "suite": [
        {
          "_attributes": {
            "id": "s1-s1",
            "name": "Api",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s1-s1",
              "name": "Test Api Users",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s1-s1-t1",
                  "name": "Scenario: Get all registered users",
                  "line": "9"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:41.937",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:41.937",
                          "endtime": "20231121 00:10:41.937"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:41.937",
                        "endtime": "20231121 00:10:41.938"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the list of all registered users",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.049",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.049",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0f096a909f35c960e367c4eb7bc2426b;o=1', 'Date': 'Tue, 21 Nov 2023 00:10:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '2329'} \n body={\n    \"quantidade\": 10,\n    \"usuarios\": [\n        {\n            \"nome\": \"com.github.javafaker.Name@74e2cfc5\",\n            \"email\": \"jc.schultz@hotmail.com\",\n            \"password\": \"pssfn7zi\",\n            \"administrador\": \"true\",\n            \"_id\": \"0bXsoJzMxfOyypwC\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"rateste@qa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"377XfzIYec1WtgfH\"\n        },\n        {\n            \"nome\": \"com.github.javafaker.Name@47ae6c18\",\n            \"email\": \"sherwood.pollich@yahoo.com\",\n            \"password\": \"70soosf5indj6\",\n            \"administrador\": \"true\",\n            \"_id\": \"9GkCNGLFplsSbIm1\"\n        },\n        {\n            \"nome\": \"com.github.javafaker.Name@78d61f17\",\n            \"email\": \"jarrett.lakin@gmail.com\",\n            \"password\": \"11zpb4qyic\",\n            \"administrador\": \"true\",\n            \"_id\": \"MqTtQ44h4Eed4wsm\"\n        },\n        {\n            \"nome\": \"com.github.javafaker.Name@74e2cfc5\",\n            \"email\": \"asuncion.walker@hotmail.com\",\n            \"password\": \"orrdjbus\",\n            \"administrador\": \"true\",\n            \"_id\": \"VrtEL9zmq9F5yTd2\"\n        },\n        {\n            \"nome\": \"com.github.javafaker.Name@4c5e4bfa\",\n            \"email\": \"wynona.ullrich@yahoo.com\",\n            \"password\": \"gbrf3pgc7w2y\",\n            \"administrador\": \"true\",\n            \"_id\": \"YmwYA0gj7AOSmJCR\"\n        },\n        {\n            \"nome\": \"John Doe\",\n            \"email\": \"johndoe@example.com\",\n            \"password\": \"senha\",\n            \"administrador\": \"false\",\n            \"_id\": \"buCE9H37kTzUNOIQ\"\n        },\n        {\n            \"nome\": \"com.github.javafaker.Name@74e2cfc5\",\n            \"email\": \"nenita.walsh@gmail.com\",\n            \"password\": \"ecj9di6pxx0\",\n            \"administrador\": \"true\",\n            \"_id\": \"oKlLK4rb01FbhRXe\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"beltrano@qa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"poFXQoNgOwV5V2Xe\"\n        }\n    ]\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.049",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:41.938",
                            "endtime": "20231121 00:10:42.049"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.049",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.049",
                            "endtime": "20231121 00:10:42.049"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:41.938",
                        "endtime": "20231121 00:10:42.049"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.050",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.050",
                            "endtime": "20231121 00:10:42.050"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.050",
                            "endtime": "20231121 00:10:42.051"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.050",
                        "endtime": "20231121 00:10:42.051"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:42.052",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:42.051",
                          "endtime": "20231121 00:10:42.052"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.051",
                        "endtime": "20231121 00:10:42.052"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231121 00:10:41.936",
                    "endtime": "20231121 00:10:42.052"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t2",
                  "name": "Scenario: Create a new user",
                  "line": "15"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:42.053",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:42.053",
                          "endtime": "20231121 00:10:42.053"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.053",
                        "endtime": "20231121 00:10:42.053"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given I have a valid user data",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Name",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": ":example: 'John Doe'"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.054",
                            "level": "INFO"
                          },
                          "_text": "${name} = Tammy Sanchez"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.054",
                            "endtime": "20231121 00:10:42.054"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Email",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${email}"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.055",
                            "level": "INFO"
                          },
                          "_text": "${email} = richardsonjulie@example.org"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.054",
                            "endtime": "20231121 00:10:42.055"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Password",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${password}"
                        },
                        "arg": [
                          {
                            "_text": "length=12"
                          },
                          {
                            "_text": "special_chars=False"
                          }
                        ],
                        "doc": {
                          "_text": "Generate a random password of the specified ``length``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.055",
                            "level": "INFO"
                          },
                          "_text": "${password} = gI5uTYQk8NZc"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.055",
                            "endtime": "20231121 00:10:42.055"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.055",
                            "level": "INFO"
                          },
                          "_text": "${name} = Tammy Sanchez"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.055",
                            "endtime": "20231121 00:10:42.055"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${email}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.056",
                            "level": "INFO"
                          },
                          "_text": "${email} = richardsonjulie@example.org"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.056",
                            "endtime": "20231121 00:10:42.056"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${password}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.056",
                            "level": "INFO"
                          },
                          "_text": "${password} = gI5uTYQk8NZc"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.056",
                            "endtime": "20231121 00:10:42.056"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.054",
                        "endtime": "20231121 00:10:42.056"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I create the user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=${name}"
                          },
                          {
                            "_text": "email=${email}"
                          },
                          {
                            "_text": "password=${password}"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.057",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'Tammy Sanchez', 'email': 'richardsonjulie@example.org', 'password': 'gI5uTYQk8NZc', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.056",
                            "endtime": "20231121 00:10:42.057"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.057",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.057",
                            "endtime": "20231121 00:10:42.057"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "POST On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a POST request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.106",
                              "level": "INFO"
                            },
                            "_text": "POST Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '119'} \n body=b'{\"nome\": \"Tammy Sanchez\", \"email\": \"richardsonjulie@example.org\", \"password\": \"gI5uTYQk8NZc\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.106",
                              "level": "INFO"
                            },
                            "_text": "POST Response : url=https://serverest.dev/usuarios \n status=201, reason=Created \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4f3a36fc739e2ad7aa8349bbf83fc689', 'Date': 'Tue, 21 Nov 2023 00:10:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} \n body={\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"csUmW2ed3Dx9KE0e\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.106",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [201]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.057",
                            "endtime": "20231121 00:10:42.106"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Variable",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${user_id}"
                        },
                        "arg": {
                          "_text": "${response.json()['_id']}"
                        },
                        "doc": {
                          "_text": "Returns the given values which can then be assigned to a variables."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.107",
                            "level": "INFO"
                          },
                          "_text": "${user_id} = csUmW2ed3Dx9KE0e"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.107",
                            "endtime": "20231121 00:10:42.107"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Global Variable",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${USER_ID}"
                          },
                          {
                            "_text": "${user_id}"
                          }
                        ],
                        "doc": {
                          "_text": "Makes a variable available globally in all tests and suites."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.108",
                            "level": "INFO"
                          },
                          "_text": "${USER_ID} = csUmW2ed3Dx9KE0e"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.107",
                            "endtime": "20231121 00:10:42.108"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.108",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [201]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.108",
                            "endtime": "20231121 00:10:42.108"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.056",
                        "endtime": "20231121 00:10:42.108"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 201",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.109",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.108",
                            "endtime": "20231121 00:10:42.109"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.109",
                            "endtime": "20231121 00:10:42.109"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.108",
                        "endtime": "20231121 00:10:42.109"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:42.110",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:42.110",
                          "endtime": "20231121 00:10:42.110"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.110",
                        "endtime": "20231121 00:10:42.110"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231121 00:10:42.052",
                    "endtime": "20231121 00:10:42.110"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t3",
                  "name": "Scenario: Get a specific user informations",
                  "line": "22"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:42.112",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:42.111",
                          "endtime": "20231121 00:10:42.112"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.111",
                        "endtime": "20231121 00:10:42.112"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.166",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios/csUmW2ed3Dx9KE0e \n path_url=/usuarios/csUmW2ed3Dx9KE0e \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.167",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios/csUmW2ed3Dx9KE0e \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '41fa7eadd54d88a79ba38f4660368c1d', 'Date': 'Tue, 21 Nov 2023 00:10:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '168'} \n body={\n    \"nome\": \"Tammy Sanchez\",\n    \"email\": \"richardsonjulie@example.org\",\n    \"password\": \"gI5uTYQk8NZc\",\n    \"administrador\": \"false\",\n    \"_id\": \"csUmW2ed3Dx9KE0e\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.167",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.112",
                            "endtime": "20231121 00:10:42.167"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.167",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.167",
                            "endtime": "20231121 00:10:42.167"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.112",
                        "endtime": "20231121 00:10:42.167"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.168",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.168",
                            "endtime": "20231121 00:10:42.168"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.168",
                            "endtime": "20231121 00:10:42.169"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.167",
                        "endtime": "20231121 00:10:42.169"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:42.169",
                          "level": "INFO"
                        },
                        "_text": "Length is 5"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:42.169",
                          "endtime": "20231121 00:10:42.169"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.169",
                        "endtime": "20231121 00:10:42.170"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231121 00:10:42.111",
                    "endtime": "20231121 00:10:42.170"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t4",
                  "name": "Scenario: Update the created user",
                  "line": "28"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:42.171",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:42.171",
                          "endtime": "20231121 00:10:42.171"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.170",
                        "endtime": "20231121 00:10:42.171"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I update the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=John Smith"
                          },
                          {
                            "_text": "email=john.smith@example.com"
                          },
                          {
                            "_text": "password=P@ssw0rd123"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.172",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.171",
                            "endtime": "20231121 00:10:42.172"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.172",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.172",
                            "endtime": "20231121 00:10:42.172"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "PUT On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a PUT request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.232",
                              "level": "INFO"
                            },
                            "_text": "PUT Request : url=https://serverest.dev/usuarios/csUmW2ed3Dx9KE0e \n path_url=/usuarios/csUmW2ed3Dx9KE0e \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} \n body=b'{\"nome\": \"John Smith\", \"email\": \"john.smith@example.com\", \"password\": \"P@ssw0rd123\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.232",
                              "level": "INFO"
                            },
                            "_text": "PUT Response : url=https://serverest.dev/usuarios/csUmW2ed3Dx9KE0e \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4b9b5134df9eb89d47126a3aeff1f04c', 'Date': 'Tue, 21 Nov 2023 00:10:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} \n body={\n    \"message\": \"Registro alterado com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.232",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.172",
                            "endtime": "20231121 00:10:42.232"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.232",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.232",
                            "endtime": "20231121 00:10:42.232"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.171",
                        "endtime": "20231121 00:10:42.232"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.233",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.233",
                            "endtime": "20231121 00:10:42.233"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.233",
                            "endtime": "20231121 00:10:42.234"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.232",
                        "endtime": "20231121 00:10:42.234"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:42.235",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:42.234",
                          "endtime": "20231121 00:10:42.235"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.234",
                        "endtime": "20231121 00:10:42.235"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231121 00:10:42.170",
                    "endtime": "20231121 00:10:42.235"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t5",
                  "name": "Scenario: Delete the created user",
                  "line": "34"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:42.236",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:42.236",
                          "endtime": "20231121 00:10:42.236"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.236",
                        "endtime": "20231121 00:10:42.236"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I delete the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "DELETE On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a DELETE request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.286",
                              "level": "INFO"
                            },
                            "_text": "DELETE Request : url=https://serverest.dev/usuarios/csUmW2ed3Dx9KE0e \n path_url=/usuarios/csUmW2ed3Dx9KE0e \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.286",
                              "level": "INFO"
                            },
                            "_text": "DELETE Response : url=https://serverest.dev/usuarios/csUmW2ed3Dx9KE0e \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1c7631b66754fff7e0bb50eb9ccfedf6', 'Date': 'Tue, 21 Nov 2023 00:10:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} \n body={\n    \"message\": \"Registro excluído com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.286",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.237",
                            "endtime": "20231121 00:10:42.286"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.287",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.287",
                            "endtime": "20231121 00:10:42.287"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.236",
                        "endtime": "20231121 00:10:42.287"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231121 00:10:42.288",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.287",
                            "endtime": "20231121 00:10:42.288"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231121 00:10:42.288",
                            "endtime": "20231121 00:10:42.288"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.287",
                        "endtime": "20231121 00:10:42.288"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231121 00:10:42.289",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:42.289",
                          "endtime": "20231121 00:10:42.289"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:42.289",
                        "endtime": "20231121 00:10:42.289"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231121 00:10:42.235",
                    "endtime": "20231121 00:10:42.289"
                  }
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "PASS",
                "starttime": "20231121 00:10:41.553",
                "endtime": "20231121 00:10:42.290"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "PASS",
              "starttime": "20231121 00:10:41.551",
              "endtime": "20231121 00:10:42.291"
            }
          }
        },
        {
          "_attributes": {
            "id": "s1-s2",
            "name": "E2E",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s2-s1",
              "name": "Test Ui Signup",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s2-s1-t1",
                  "name": "Scenario: Signup with empty fields",
                  "line": "10"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:42.301",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:43.234",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:43.234",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55f986e225e3 <unknown>\n#1 0x55f986ae50b7 <unknown>\n#2 0x55f986b1be55 <unknown>\n#3 0x55f986b18b81 <unknown>\n#4 0x55f986b6347f <unknown>\n#5 0x55f986b59cc3 <unknown>\n#6 0x55f986b250e4 <unknown>\n#7 0x55f986b260ae <unknown>\n#8 0x55f986de8ce1 <unknown>\n#9 0x55f986decb7e <unknown>\n#10 0x55f986dd64b5 <unknown>\n#11 0x55f986ded7d6 <unknown>\n#12 0x55f986db9dbf <unknown>\n#13 0x55f986e10748 <unknown>\n#14 0x55f986e10917 <unknown>\n#15 0x55f986e21773 <unknown>\n#16 0x7f3def294ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231121 00:10:42.300",
                            "endtime": "20231121 00:10:43.235"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231121 00:10:43.236",
                            "endtime": "20231121 00:10:43.236"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231121 00:10:42.300",
                        "endtime": "20231121 00:10:43.236"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:43.237",
                          "endtime": "20231121 00:10:43.237"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:43.236",
                        "endtime": "20231121 00:10:43.237"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231121 00:10:42.299",
                    "endtime": "20231121 00:10:43.237"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55f986e225e3 <unknown>\n#1 0x55f986ae50b7 <unknown>\n#2 0x55f986b1be55 <unknown>\n#3 0x55f986b18b81 <unknown>\n#4 0x55f986b6347f <unknown>\n#5 0x55f986b59cc3 <unknown>\n#6 0x55f986b250e4 <unknown>\n#7 0x55f986b260ae <unknown>\n#8 0x55f986de8ce1 <unknown>\n#9 0x55f986decb7e <unknown>\n#10 0x55f986dd64b5 <unknown>\n#11 0x55f986ded7d6 <unknown>\n#12 0x55f986db9dbf <unknown>\n#13 0x55f986e10748 <unknown>\n#14 0x55f986e10917 <unknown>\n#15 0x55f986e21773 <unknown>\n#16 0x7f3def294ac3 <unknown>\n"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t2",
                  "name": "Scenario: Signup done successfully",
                  "line": "16"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:43.239",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:43.907",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:43.908",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c7d508e5e3 <unknown>\n#1 0x55c7d4d510b7 <unknown>\n#2 0x55c7d4d87e55 <unknown>\n#3 0x55c7d4d84b81 <unknown>\n#4 0x55c7d4dcf47f <unknown>\n#5 0x55c7d4dc5cc3 <unknown>\n#6 0x55c7d4d910e4 <unknown>\n#7 0x55c7d4d920ae <unknown>\n#8 0x55c7d5054ce1 <unknown>\n#9 0x55c7d5058b7e <unknown>\n#10 0x55c7d50424b5 <unknown>\n#11 0x55c7d50597d6 <unknown>\n#12 0x55c7d5025dbf <unknown>\n#13 0x55c7d507c748 <unknown>\n#14 0x55c7d507c917 <unknown>\n#15 0x55c7d508d773 <unknown>\n#16 0x7f21aac94ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231121 00:10:43.239",
                            "endtime": "20231121 00:10:43.908"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231121 00:10:43.908",
                            "endtime": "20231121 00:10:43.908"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231121 00:10:43.238",
                        "endtime": "20231121 00:10:43.909"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:43.909",
                          "endtime": "20231121 00:10:43.909"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:43.909",
                        "endtime": "20231121 00:10:43.909"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231121 00:10:43.237",
                    "endtime": "20231121 00:10:43.909"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c7d508e5e3 <unknown>\n#1 0x55c7d4d510b7 <unknown>\n#2 0x55c7d4d87e55 <unknown>\n#3 0x55c7d4d84b81 <unknown>\n#4 0x55c7d4dcf47f <unknown>\n#5 0x55c7d4dc5cc3 <unknown>\n#6 0x55c7d4d910e4 <unknown>\n#7 0x55c7d4d920ae <unknown>\n#8 0x55c7d5054ce1 <unknown>\n#9 0x55c7d5058b7e <unknown>\n#10 0x55c7d50424b5 <unknown>\n#11 0x55c7d50597d6 <unknown>\n#12 0x55c7d5025dbf <unknown>\n#13 0x55c7d507c748 <unknown>\n#14 0x55c7d507c917 <unknown>\n#15 0x55c7d508d773 <unknown>\n#16 0x7f21aac94ac3 <unknown>\n"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t3",
                  "name": "Scenario: Signup with already used email",
                  "line": "23"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:43.911",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:44.579",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231121 00:10:44.579",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x556d333545e3 <unknown>\n#1 0x556d330170b7 <unknown>\n#2 0x556d3304de55 <unknown>\n#3 0x556d3304ab81 <unknown>\n#4 0x556d3309547f <unknown>\n#5 0x556d3308bcc3 <unknown>\n#6 0x556d330570e4 <unknown>\n#7 0x556d330580ae <unknown>\n#8 0x556d3331ace1 <unknown>\n#9 0x556d3331eb7e <unknown>\n#10 0x556d333084b5 <unknown>\n#11 0x556d3331f7d6 <unknown>\n#12 0x556d332ebdbf <unknown>\n#13 0x556d33342748 <unknown>\n#14 0x556d33342917 <unknown>\n#15 0x556d33353773 <unknown>\n#16 0x7f102d294ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231121 00:10:43.911",
                            "endtime": "20231121 00:10:44.579"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231121 00:10:44.580",
                            "endtime": "20231121 00:10:44.580"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231121 00:10:43.910",
                        "endtime": "20231121 00:10:44.580"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231121 00:10:44.580",
                          "endtime": "20231121 00:10:44.581"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231121 00:10:44.580",
                        "endtime": "20231121 00:10:44.581"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231121 00:10:43.910",
                    "endtime": "20231121 00:10:44.581"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x556d333545e3 <unknown>\n#1 0x556d330170b7 <unknown>\n#2 0x556d3304de55 <unknown>\n#3 0x556d3304ab81 <unknown>\n#4 0x556d3309547f <unknown>\n#5 0x556d3308bcc3 <unknown>\n#6 0x556d330570e4 <unknown>\n#7 0x556d330580ae <unknown>\n#8 0x556d3331ace1 <unknown>\n#9 0x556d3331eb7e <unknown>\n#10 0x556d333084b5 <unknown>\n#11 0x556d3331f7d6 <unknown>\n#12 0x556d332ebdbf <unknown>\n#13 0x556d33342748 <unknown>\n#14 0x556d33342917 <unknown>\n#15 0x556d33353773 <unknown>\n#16 0x7f102d294ac3 <unknown>\n"
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "FAIL",
                "starttime": "20231121 00:10:42.293",
                "endtime": "20231121 00:10:44.581"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "FAIL",
              "starttime": "20231121 00:10:42.292",
              "endtime": "20231121 00:10:44.582"
            }
          }
        }
      ],
      "status": {
        "_attributes": {
          "status": "FAIL",
          "starttime": "20231121 00:10:41.535",
          "endtime": "20231121 00:10:44.583"
        }
      }
    },
    "statistics": {
      "total": {
        "stat": {
          "_attributes": {
            "pass": "5",
            "fail": "3",
            "skip": "0"
          },
          "_text": "All Tests"
        }
      },
      "tag": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0"
            },
            "_text": "api"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0"
            },
            "_text": "e2e"
          }
        ]
      },
      "suite": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "3",
              "skip": "0",
              "id": "s1",
              "name": "Tests"
            },
            "_text": "Tests"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1",
              "name": "Api"
            },
            "_text": "Tests.Api"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1-s1",
              "name": "Test Api Users"
            },
            "_text": "Tests.Api.Test Api Users"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2",
              "name": "E2E"
            },
            "_text": "Tests.E2E"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2-s1",
              "name": "Test Ui Signup"
            },
            "_text": "Tests.E2E.Test Ui Signup"
          }
        ]
      }
    },
    "errors": {}
  }
}