{
  "_declaration": {
    "_attributes": {
      "version": "1.0",
      "encoding": "UTF-8"
    }
  },
  "robot": {
    "_attributes": {
      "generator": "Robot 6.0.2 (Python 3.8.16 on linux)",
      "generated": "20230609 01:13:51.734",
      "rpa": "false",
      "schemaversion": "3"
    },
    "suite": {
      "_attributes": {
        "id": "s1",
        "name": "Tests",
        "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests"
      },
      "suite": [
        {
          "_attributes": {
            "id": "s1-s1",
            "name": "Api",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s1-s1",
              "name": "Test Api Users",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s1-s1-t1",
                  "name": "Scenario: Get all registered users",
                  "line": "9"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:52.693",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:52.693",
                          "endtime": "20230609 01:13:52.693"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.692",
                        "endtime": "20230609 01:13:52.694"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the list of all registered users",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:52.857",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:52.857",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c4d8e447-6305-4dfb-9200-f2f6d6d0335e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dc4aef975ac1186f1db14ac98148b57d;o=1', 'Date': 'Fri, 09 Jun 2023 01:13:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '81521'} \n body={\n    \"quantidade\": 369,\n    \"usuarios\": [\n        {\n            \"nome\": \"Miranda Schneider\",\n            \"email\": \"Erich_Bergstrom@gmail.com\",\n            \"password\": \"cafyf8BIPCcAgyn\",\n            \"administrador\": \"true\",\n            \"_id\": \"0DJZ8XeG2lXIyWII\"\n        },\n        {\n            \"nome\": \"Geoffrey Nitzsche Sr.\",\n            \"email\": \"Casimir.Pfannerstill57@hotmail.com\",\n            \"password\": \"jZcxqWf1mkBd5Fm\",\n            \"administrador\": \"true\",\n            \"_id\": \"0H6vKZ6Z1EnTecmt\"\n        },\n        {\n            \"nome\": \"Rick Bruen\",\n            \"email\": \"Geovany_Shanahan87@hotmail.com\",\n            \"password\": \"42hnL35_hln3EGM\",\n            \"administrador\": \"true\",\n            \"_id\": \"0MpUsddPaiomYslk\"\n        },\n        {\n            \"nome\": \"Ricky Bechtelar\",\n            \"email\": \"Stuart.Ryan@yahoo.com\",\n            \"password\": \"Lky7bMzCeZ6YQzm\",\n            \"administrador\": \"true\",\n            \"_id\": \"0myeJPDwuUSUOvlT\"\n        },\n        {\n            \"nome\": \"Estelle Hamill\",\n            \"email\": \"Giovanni.Klein@hotmail.com\",\n            \"password\": \"VF7Wyb7chCDswwq\",\n            \"administrador\": \"true\",\n            \"_id\": \"1BhfUsXBZtCihebQ\"\n        },\n        {\n            \"nome\": \"Lewis Feil\",\n            \"email\": \"Elta_Walker97@hotmail.com\",\n            \"password\": \"Jd7zNORyPKMHDmw\",\n            \"administrador\": \"true\",\n            \"_id\": \"1JFVnsmi195fM72g\"\n        },\n        {\n            \"nome\": \"Terence Barrows\",\n            \"email\": \"Shaun.Volkman@example.com\",\n            \"password\": \"gl4nwQWPW6PHenK\",\n            \"administrador\": \"true\",\n            \"_id\": \"1RhqgGRwyEUJnUb2\"\n        },\n        {\n            \"nome\": \"Minnie Altenwerth\",\n            \"email\": \"Vicenta1@yahoo.com\",\n            \"password\": \"URRT1dIBS_eWqRH\",\n            \"administrador\": \"true\",\n            \"_id\": \"1UWkn9e2n2bT7G4v\"\n        },\n        {\n            \"nome\": \"Sabrina Swift\",\n            \"email\": \"Karson_Sporer@gmail.com\",\n            \"password\": \"apZRDXlC5VZ7Mrx\",\n            \"administrador\": \"true\",\n            \"_id\": \"1hMm7F7OUuRFuURt\"\n        },\n        {\n            \"nome\": \"Grant Effertz\",\n            \"email\": \"Dina2@example.net\",\n            \"password\": \"7BnWy6Ajcrdrpk9\",\n            \"administrador\": \"true\",\n            \"_id\": \"1wZ8evpFA2laX3uh\"\n        },\n        {\n            \"nome\": \"Cristiano Mothe\",\n            \"email\": \"michael18@example.org\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"2Jdbt7ojLQEP5zFA\"\n        },\n        {\n            \"nome\": \"Velma McDermott\",\n            \"email\": \"Sherman.Kling58@example.com\",\n            \"password\": \"TX5LH9sMMlCen2B\",\n            \"administrador\": \"true\",\n            \"_id\": \"2nsOhxcCo1iwvvcw\"\n        },\n        {\n            \"nome\": \"Nelson Lynch\",\n            \"email\": \"Kailee54@gmail.com\",\n            \"password\": \"ok9y8JUuU4CJrhG\",\n            \"administrador\": \"false\",\n            \"_id\": \"330oYNqLifO2DHzU\"\n        },\n        {\n            \"nome\": \"Dr. Amy Nienow\",\n            \"email\": \"Cletus28@yahoo.com\",\n            \"password\": \"MS7L4GoYVkt9J5B\",\n            \"administrador\": \"true\",\n            \"_id\": \"3Eq533KSUAmr6PZx\"\n        },\n        {\n            \"nome\": \"Myra Raynor\",\n            \"email\": \"Roselyn37@gmail.com\",\n            \"password\": \"kFBwS6LwRu1itWD\",\n            \"administrador\": \"true\",\n            \"_id\": \"3XGRC2IY1fiHeqC0\"\n        },\n        {\n            \"nome\": \"Annette Hoeger\",\n            \"email\": \"Heloise.Turcotte41@example.org\",\n            \"password\": \"jybfHGVj8uZFu0N\",\n            \"administrador\": \"true\",\n            \"_id\": \"401uSa4609jydVfO\"\n        },\n        {\n            \"nome\": \"Terrence Luettgen\",\n            \"email\": \"Dorian_Satterfield@yahoo.com\",\n            \"password\": \"N4Tl_6ogKcwAmNM\",\n            \"administrador\": \"true\",\n            \"_id\": \"45Zs21POtpnGedV7\"\n        },\n        {\n            \"nome\": \"Karen Bailey\",\n            \"email\": \"Brent.Oberbrunner95@gmail.com\",\n            \"password\": \"1NRvriMCOBFQXxa\",\n            \"administrador\": \"true\",\n            \"_id\": \"45ossMrGBrmvx5Ex\"\n        },\n        {\n            \"nome\": \"Nelson Murazik\",\n            \"email\": \"Diamond_Kirlin@example.org\",\n            \"password\": \"Ymr4rMs4PqWI6gg\",\n            \"administrador\": \"true\",\n            \"_id\": \"4EIhyPZ40LhpsYwC\"\n        },\n        {\n            \"nome\": \"Andy Klein\",\n            \"email\": \"Tina70@hotmail.com\",\n            \"password\": \"89haJRioph4BRxs\",\n            \"administrador\": \"true\",\n            \"_id\": \"4FFn8TKQVgWJ7Xo4\"\n        },\n        {\n            \"nome\": \"Veronica Corkery\",\n            \"email\": \"Shaniya.Lueilwitz@example.com\",\n            \"password\": \"u3nSmMNxJsBTnkZ\",\n            \"administrador\": \"true\",\n            \"_id\": \"4TKMr9d3IkGEEf6n\"\n        },\n        {\n            \"nome\": \"Faith Lockman\",\n            \"email\": \"Carlo_DuBuque82@hotmail.com\",\n            \"password\": \"9eDYovx3jN0qH7J\",\n            \"administrador\": \"true\",\n            \"_id\": \"4XTctOG6XtEYCgfX\"\n        },\n        {\n            \"nome\": \"Micheal Daniel\",\n            \"email\": \"Kellen_Swift@gmail.com\",\n            \"password\": \"39eIQCnOuuX_5FM\",\n            \"administrador\": \"true\",\n            \"_id\": \"4a5sCNd3IvEs1vEo\"\n        },\n        {\n            \"nome\": \"Rachael Renner Jr.\",\n            \"email\": \"Leonora96@hotmail.com\",\n            \"password\": \"qS9CR5gyaBVRCnX\",\n            \"administrador\": \"true\",\n            \"_id\": \"4m8UWd14nuTowC4Z\"\n        },\n        {\n            \"nome\": \"Benny Zieme-Ryan\",\n            \"email\": \"Barney.Funk21@hotmail.com\",\n            \"password\": \"1wbAoh0H1K1mjsb\",\n            \"administrador\": \"true\",\n            \"_id\": \"5EnSO3nTanyPAydz\"\n        },\n        {\n            \"nome\": \"Gretchen Price\",\n            \"email\": \"Ramiro15@example.net\",\n            \"password\": \"EK56FaRNd6i_oR9\",\n            \"administrador\": \"true\",\n            \"_id\": \"5IKkCOLrj1vhuKxY\"\n        },\n        {\n            \"nome\": \"Myles Reichel\",\n            \"email\": \"myles.reichel@email.com\",\n            \"password\": \"zIUWGUY7Nr0VAIf\",\n            \"administrador\": \"true\",\n            \"_id\": \"5MhRHtWfj7FV0Q2G\"\n        },\n        {\n            \"nome\": \"Sherry Mills\",\n            \"email\": \"Isabell7@example.net\",\n            \"password\": \"hwPiORUDT0tlOV7\",\n            \"administrador\": \"true\",\n            \"_id\": \"5ZWrlP47cvBLfEcZ\"\n        },\n        {\n            \"nome\": \"Jackie Breitenberg Jr.\",\n            \"email\": \"Taya_Kiehn@gmail.com\",\n            \"password\": \"iiLqRrBAuwvIWUv\",\n            \"administrador\": \"true\",\n            \"_id\": \"5dqxJ4E2i4Qwebgo\"\n        },\n        {\n            \"nome\": \"Rachel Witting\",\n            \"email\": \"Tia_Nicolas21@hotmail.com\",\n            \"password\": \"VETxCh6uzfAuZJm\",\n            \"administrador\": \"false\",\n            \"_id\": \"6KGOc3ISPwokSFuF\"\n        },\n        {\n            \"nome\": \"Marty Jakubowski\",\n            \"email\": \"Andreanne88@gmail.com\",\n            \"password\": \"uxHOzgiYFYZJMa5\",\n            \"administrador\": \"true\",\n            \"_id\": \"6dSywwhoNY8x2Z5N\"\n        },\n        {\n            \"nome\": \"William Schultz MD\",\n            \"email\": \"Alaina.Harber@hotmail.com\",\n            \"password\": \"b0RY_0Wev1OFK0u\",\n            \"administrador\": \"true\",\n            \"_id\": \"6j3esFcVZrBG8XDC\"\n        },\n        {\n            \"nome\": \"Ralph Reichert\",\n            \"email\": \"Wilma28@example.org\",\n            \"password\": \"ZJ2QqqunJywWMvi\",\n            \"administrador\": \"true\",\n            \"_id\": \"71RmfeYi0gQNlRHD\"\n        },\n        {\n            \"nome\": \"Jarrell Graham\",\n            \"email\": \"jarrell.graham@email.com\",\n            \"password\": \"OPwGCZ1abHJ7Cjh\",\n            \"administrador\": \"true\",\n            \"_id\": \"7PTsYi0VY9MkF7KA\"\n        },\n        {\n            \"nome\": \"Cristiano Mothe\",\n            \"email\": \"stewartgloria@example.org\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"7a863qAs6QPmsDW5\"\n        },\n        {\n            \"nome\": \"Cristiano Mothe\",\n            \"email\": \"matthew28@example.com\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"85YzCtFMVSiYnNkM\"\n        },\n        {\n            \"nome\": \"Roderick Howell\",\n            \"email\": \"Reginald_Adams97@example.com\",\n            \"password\": \"hu8Z0xz6262P_cu\",\n            \"administrador\": \"true\",\n            \"_id\": \"8EAHojidmq44iVgn\"\n        },\n        {\n            \"nome\": \"Dr. Sabrina Wehner\",\n            \"email\": \"Alisha.Baumbach@gmail.com\",\n            \"password\": \"nGh8LfuCpFrvagK\",\n            \"administrador\": \"false\",\n            \"_id\": \"8mYxXIyAuSCXjTDO\"\n        },\n        {\n            \"nome\": \"Jorge McGlynn\",\n            \"email\": \"Hipolito.Hills43@gmail.com\",\n            \"password\": \"jmCmUlOjl9BFNh2\",\n            \"administrador\": \"true\",\n            \"_id\": \"8uilhx23ncMM2N3f\"\n        },\n        {\n            \"nome\": \"Colin Leannon\",\n            \"email\": \"Hayden_Mraz65@gmail.com\",\n            \"password\": \"hnF6qUysb_PX9fO\",\n            \"administrador\": \"false\",\n            \"_id\": \"8uqIHb3DDqmoUPqd\"\n        },\n        {\n            \"nome\": \"Zena\",\n            \"email\": \"ixin@mailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"902g21haK605ucus\"\n        },\n        {\n            \"nome\": \"Kelly O'Conner\",\n            \"email\": \"Durward_Bashirian@hotmail.com\",\n            \"password\": \"95_AsDWTruo3Mbc\",\n            \"administrador\": \"true\",\n            \"_id\": \"90Noz3C62IEniplS\"\n        },\n        {\n            \"nome\": \"Zena\",\n            \"email\": \"tlgh@mailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"92V8vZ6dGESZmQOY\"\n        },\n        {\n            \"nome\": \"Mayara Fernandes\",\n            \"email\": \"shortbarbara@example.net\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"95dXwqJ1dh63I6N4\"\n        },\n        {\n            \"nome\": \"Patsy Bernhard PhD\",\n            \"email\": \"Jayda.Wil... (set the log level to DEBUG or TRACE to see the full content) \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:52.858",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.694",
                            "endtime": "20230609 01:13:52.858"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.859",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.858",
                            "endtime": "20230609 01:13:52.859"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.694",
                        "endtime": "20230609 01:13:52.859"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.860",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.859",
                            "endtime": "20230609 01:13:52.860"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.860",
                            "endtime": "20230609 01:13:52.862"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.859",
                        "endtime": "20230609 01:13:52.862"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:52.864",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:52.863",
                          "endtime": "20230609 01:13:52.864"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.862",
                        "endtime": "20230609 01:13:52.864"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 01:13:52.691",
                    "endtime": "20230609 01:13:52.864"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t2",
                  "name": "Scenario: Create a new user",
                  "line": "15"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:52.866",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:52.866",
                          "endtime": "20230609 01:13:52.866"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.865",
                        "endtime": "20230609 01:13:52.866"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given I have a valid user data",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Name",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": ":example 'John Doe'"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.867",
                            "level": "INFO"
                          },
                          "_text": "${name} = Sean Brown"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.867",
                            "endtime": "20230609 01:13:52.867"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Email",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${email}"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.868",
                            "level": "INFO"
                          },
                          "_text": "${email} = watkinschristy@example.com"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.867",
                            "endtime": "20230609 01:13:52.868"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Password",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${password}"
                        },
                        "arg": [
                          {
                            "_text": "length=12"
                          },
                          {
                            "_text": "special_chars=False"
                          }
                        ],
                        "doc": {
                          "_text": "Generate a random password of the specified ``length``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.868",
                            "level": "INFO"
                          },
                          "_text": "${password} = RjNxBKJgB925"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.868",
                            "endtime": "20230609 01:13:52.868"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.869",
                            "level": "INFO"
                          },
                          "_text": "${name} = Sean Brown"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.869",
                            "endtime": "20230609 01:13:52.869"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${email}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.869",
                            "level": "INFO"
                          },
                          "_text": "${email} = watkinschristy@example.com"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.869",
                            "endtime": "20230609 01:13:52.869"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${password}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.870",
                            "level": "INFO"
                          },
                          "_text": "${password} = RjNxBKJgB925"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.870",
                            "endtime": "20230609 01:13:52.870"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.866",
                        "endtime": "20230609 01:13:52.870"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I create the user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=${name}"
                          },
                          {
                            "_text": "email=${email}"
                          },
                          {
                            "_text": "password=${password}"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.871",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'Sean Brown', 'email': 'watkinschristy@example.com', 'password': 'RjNxBKJgB925', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.870",
                            "endtime": "20230609 01:13:52.871"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.871",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.871",
                            "endtime": "20230609 01:13:52.871"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "POST On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a POST request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:52.943",
                              "level": "INFO"
                            },
                            "_text": "POST Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} \n body=b'{\"nome\": \"Sean Brown\", \"email\": \"watkinschristy@example.com\", \"password\": \"RjNxBKJgB925\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:52.944",
                              "level": "INFO"
                            },
                            "_text": "POST Response : url=https://serverest.dev/usuarios \n status=201, reason=Created \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5af2503d-c0d7-45ae-b566-38e8f08f164a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f0c3cf9a7ebae101da6173c3dc64056d', 'Date': 'Fri, 09 Jun 2023 01:13:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} \n body={\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"mJ81K2zdAigDQEJs\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:52.944",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [201]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.871",
                            "endtime": "20230609 01:13:52.944"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Variable",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${user_id}"
                        },
                        "arg": {
                          "_text": "${response.json()['_id']}"
                        },
                        "doc": {
                          "_text": "Returns the given values which can then be assigned to a variables."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.945",
                            "level": "INFO"
                          },
                          "_text": "${user_id} = mJ81K2zdAigDQEJs"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.944",
                            "endtime": "20230609 01:13:52.945"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Global Variable",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${USER_ID}"
                          },
                          {
                            "_text": "${user_id}"
                          }
                        ],
                        "doc": {
                          "_text": "Makes a variable available globally in all tests and suites."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.946",
                            "level": "INFO"
                          },
                          "_text": "${USER_ID} = mJ81K2zdAigDQEJs"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.945",
                            "endtime": "20230609 01:13:52.946"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.946",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [201]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.946",
                            "endtime": "20230609 01:13:52.946"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.870",
                        "endtime": "20230609 01:13:52.946"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 201",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:52.948",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.947",
                            "endtime": "20230609 01:13:52.948"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.948",
                            "endtime": "20230609 01:13:52.949"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.946",
                        "endtime": "20230609 01:13:52.949"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:52.950",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:52.949",
                          "endtime": "20230609 01:13:52.950"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.949",
                        "endtime": "20230609 01:13:52.950"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 01:13:52.865",
                    "endtime": "20230609 01:13:52.950"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t3",
                  "name": "Scenario: Get a specific user informations",
                  "line": "22"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:52.952",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:52.952",
                          "endtime": "20230609 01:13:52.952"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.951",
                        "endtime": "20230609 01:13:52.952"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.031",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios/mJ81K2zdAigDQEJs \n path_url=/usuarios/mJ81K2zdAigDQEJs \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.031",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios/mJ81K2zdAigDQEJs \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f781ff62-aaee-482c-97a4-09456f749cb9', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a5112a59e34b04cb2d2c777c1362be09', 'Date': 'Fri, 09 Jun 2023 01:13:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} \n body={\n    \"nome\": \"Sean Brown\",\n    \"email\": \"watkinschristy@example.com\",\n    \"password\": \"RjNxBKJgB925\",\n    \"administrador\": \"false\",\n    \"_id\": \"mJ81K2zdAigDQEJs\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.031",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:52.954",
                            "endtime": "20230609 01:13:53.031"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:53.032",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.031",
                            "endtime": "20230609 01:13:53.032"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:52.953",
                        "endtime": "20230609 01:13:53.032"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:53.033",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.033",
                            "endtime": "20230609 01:13:53.033"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.033",
                            "endtime": "20230609 01:13:53.034"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.032",
                        "endtime": "20230609 01:13:53.034"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:53.036",
                          "level": "INFO"
                        },
                        "_text": "Length is 5"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:53.035",
                          "endtime": "20230609 01:13:53.036"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.035",
                        "endtime": "20230609 01:13:53.036"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 01:13:52.951",
                    "endtime": "20230609 01:13:53.036"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t4",
                  "name": "Scenario: Update the created user",
                  "line": "28"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:53.038",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:53.037",
                          "endtime": "20230609 01:13:53.038"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.037",
                        "endtime": "20230609 01:13:53.038"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I update the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=John Smith"
                          },
                          {
                            "_text": "email=john.smith@example.com"
                          },
                          {
                            "_text": "password=P@ssw0rd123"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:53.039",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.039",
                            "endtime": "20230609 01:13:53.039"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:53.040",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.039",
                            "endtime": "20230609 01:13:53.040"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "PUT On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a PUT request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.116",
                              "level": "INFO"
                            },
                            "_text": "PUT Request : url=https://serverest.dev/usuarios/mJ81K2zdAigDQEJs \n path_url=/usuarios/mJ81K2zdAigDQEJs \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} \n body=b'{\"nome\": \"John Smith\", \"email\": \"john.smith@example.com\", \"password\": \"P@ssw0rd123\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.116",
                              "level": "INFO"
                            },
                            "_text": "PUT Response : url=https://serverest.dev/usuarios/mJ81K2zdAigDQEJs \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b6de7462-5e46-4324-b4e0-31385095abb2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0f8256a207809a44a8a5eabaa77c6135', 'Date': 'Fri, 09 Jun 2023 01:13:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} \n body={\n    \"message\": \"Registro alterado com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.116",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.040",
                            "endtime": "20230609 01:13:53.116"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:53.117",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.116",
                            "endtime": "20230609 01:13:53.117"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.038",
                        "endtime": "20230609 01:13:53.117"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:53.118",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.118",
                            "endtime": "20230609 01:13:53.119"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.119",
                            "endtime": "20230609 01:13:53.119"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.117",
                        "endtime": "20230609 01:13:53.120"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:53.121",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:53.120",
                          "endtime": "20230609 01:13:53.121"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.120",
                        "endtime": "20230609 01:13:53.121"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 01:13:53.037",
                    "endtime": "20230609 01:13:53.122"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t5",
                  "name": "Scenario: Delete the created user",
                  "line": "34"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:53.124",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:53.123",
                          "endtime": "20230609 01:13:53.124"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.123",
                        "endtime": "20230609 01:13:53.124"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I delete the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "DELETE On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a DELETE request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.203",
                              "level": "INFO"
                            },
                            "_text": "DELETE Request : url=https://serverest.dev/usuarios/mJ81K2zdAigDQEJs \n path_url=/usuarios/mJ81K2zdAigDQEJs \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.203",
                              "level": "INFO"
                            },
                            "_text": "DELETE Response : url=https://serverest.dev/usuarios/mJ81K2zdAigDQEJs \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '75b7cac4-fc59-4028-893e-31d88e19c3a8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8e856e6db4b91d465d9d1dcc4465a5f1', 'Date': 'Fri, 09 Jun 2023 01:13:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} \n body={\n    \"message\": \"Registro excluído com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.204",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.125",
                            "endtime": "20230609 01:13:53.204"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:53.205",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.204",
                            "endtime": "20230609 01:13:53.205"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.124",
                        "endtime": "20230609 01:13:53.205"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 01:13:53.207",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.206",
                            "endtime": "20230609 01:13:53.208"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 01:13:53.208",
                            "endtime": "20230609 01:13:53.208"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.205",
                        "endtime": "20230609 01:13:53.209"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 01:13:53.210",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:53.209",
                          "endtime": "20230609 01:13:53.210"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.209",
                        "endtime": "20230609 01:13:53.210"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 01:13:53.122",
                    "endtime": "20230609 01:13:53.210"
                  }
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "PASS",
                "starttime": "20230609 01:13:51.759",
                "endtime": "20230609 01:13:53.211"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "PASS",
              "starttime": "20230609 01:13:51.757",
              "endtime": "20230609 01:13:53.213"
            }
          }
        },
        {
          "_attributes": {
            "id": "s1-s2",
            "name": "E2E",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s2-s1",
              "name": "Test Ui Signup",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s2-s1-t1",
                  "name": "Scenario: Signup with empty fields",
                  "line": "10"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.226",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.226",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.226",
                              "level": "FAIL"
                            },
                            "_text": "TypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20230609 01:13:53.225",
                            "endtime": "20230609 01:13:53.227"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20230609 01:13:53.227",
                            "endtime": "20230609 01:13:53.227"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20230609 01:13:53.224",
                        "endtime": "20230609 01:13:53.228"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:53.228",
                          "endtime": "20230609 01:13:53.229"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.228",
                        "endtime": "20230609 01:13:53.229"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20230609 01:13:53.224",
                    "endtime": "20230609 01:13:53.229"
                  },
                  "_text": "Setup failed:\nTypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t2",
                  "name": "Scenario: Signup done successfully",
                  "line": "16"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.232",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.232",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.232",
                              "level": "FAIL"
                            },
                            "_text": "TypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20230609 01:13:53.231",
                            "endtime": "20230609 01:13:53.232"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20230609 01:13:53.232",
                            "endtime": "20230609 01:13:53.232"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20230609 01:13:53.230",
                        "endtime": "20230609 01:13:53.233"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:53.233",
                          "endtime": "20230609 01:13:53.233"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.233",
                        "endtime": "20230609 01:13:53.233"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20230609 01:13:53.229",
                    "endtime": "20230609 01:13:53.233"
                  },
                  "_text": "Setup failed:\nTypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t3",
                  "name": "Scenario: Signup with already used email",
                  "line": "23"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.235",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.235",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 01:13:53.236",
                              "level": "FAIL"
                            },
                            "_text": "TypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20230609 01:13:53.235",
                            "endtime": "20230609 01:13:53.236"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20230609 01:13:53.236",
                            "endtime": "20230609 01:13:53.236"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20230609 01:13:53.234",
                        "endtime": "20230609 01:13:53.236"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 01:13:53.237",
                          "endtime": "20230609 01:13:53.237"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 01:13:53.236",
                        "endtime": "20230609 01:13:53.237"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20230609 01:13:53.234",
                    "endtime": "20230609 01:13:53.237"
                  },
                  "_text": "Setup failed:\nTypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "FAIL",
                "starttime": "20230609 01:13:53.215",
                "endtime": "20230609 01:13:53.237"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "FAIL",
              "starttime": "20230609 01:13:53.213",
              "endtime": "20230609 01:13:53.238"
            }
          }
        }
      ],
      "status": {
        "_attributes": {
          "status": "FAIL",
          "starttime": "20230609 01:13:51.735",
          "endtime": "20230609 01:13:53.239"
        }
      }
    },
    "statistics": {
      "total": {
        "stat": {
          "_attributes": {
            "pass": "5",
            "fail": "3",
            "skip": "0"
          },
          "_text": "All Tests"
        }
      },
      "tag": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0"
            },
            "_text": "api"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0"
            },
            "_text": "e2e"
          }
        ]
      },
      "suite": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "3",
              "skip": "0",
              "id": "s1",
              "name": "Tests"
            },
            "_text": "Tests"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1",
              "name": "Api"
            },
            "_text": "Tests.Api"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1-s1",
              "name": "Test Api Users"
            },
            "_text": "Tests.Api.Test Api Users"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2",
              "name": "E2E"
            },
            "_text": "Tests.E2E"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2-s1",
              "name": "Test Ui Signup"
            },
            "_text": "Tests.E2E.Test Ui Signup"
          }
        ]
      }
    },
    "errors": {}
  }
}