{
  "_declaration": {
    "_attributes": {
      "version": "1.0",
      "encoding": "UTF-8"
    }
  },
  "robot": {
    "_attributes": {
      "generator": "Robot 6.0.2 (Python 3.8.16 on linux)",
      "generated": "20230601 02:11:48.929",
      "rpa": "false",
      "schemaversion": "3"
    },
    "suite": {
      "_attributes": {
        "id": "s1",
        "name": "Tests",
        "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests"
      },
      "suite": [
        {
          "_attributes": {
            "id": "s1-s1",
            "name": "Api",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s1-s1",
              "name": "Test Api Users",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s1-s1-t1",
                  "name": "Scenario: Get all registered users",
                  "line": "9"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:49.591",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:49.590",
                          "endtime": "20230601 02:11:49.591"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.590",
                        "endtime": "20230601 02:11:49.591"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the list of all registered users",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:49.878",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:49.878",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2d71571f-63e2-49bd-b706-99286a7b10e4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a284936a3d3a57e0ad7c33f383785c2c;o=1', 'Date': 'Thu, 01 Jun 2023 02:11:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '6759'} \n body={\n    \"quantidade\": 32,\n    \"usuarios\": [\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"ffej@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"0SgPTAOkAqyJOD1E\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Lugburz Durbatuluk\",\n            \"email\": \"beps@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"1lvfJcI28VMY8sCm\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"xzlb@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"46S9nWqH5BO0Jd2t\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"jzjr@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"5lWMEFevdZy7oLoU\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"cevy@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"7zo9VR2RMwwFYGrG\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"rzkn@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"8QqAdNMHCvfch8vP\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"aexg@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"92ATb6pT0YtY5Xi0\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"ddru@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"Aw8f49GeCaHvyFy1\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"suhl@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"DUkE7ra415XUhjWq\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"mhzr@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"EzaKfbc8qhangVWx\"\n        },\n        {\n            \"nome\": \"Lugburz Durbatuluk\",\n            \"email\": \"pgob@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"IEsxK4hJMjnpvefc\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"htza@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"Itn17QD1l9foBRDc\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"zlpu@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"LYFiMtcztVl1yIgG\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"dgas@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"Nz6phHZL5CoXfVoe\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"uiaf@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"Pc4RVzZlGNt3aRjV\"\n        },\n        {\n            \"nome\": \"Lugburz Durbatuluk\",\n            \"email\": \"lvab@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"Q8OoYgxuucMdtdyY\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fveh@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"RXkSiVGB79VTwTDy\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"niie@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"SyU2tJ12rgQvpr4f\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"adjo@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"X3eTsPnYYEoC7PP6\"\n        },\n        {\n            \"nome\": \"{{nome}}\",\n            \"email\": \"Kara@qa.com.br\",\n            \"password\": \"20ldVEFlk5ewCvI\",\n            \"administrador\": \"true\",\n            \"_id\": \"XQu0f9cKB0k5eBr6\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"mkvy@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"YihIkQnyFxIBQBX4\"\n        },\n        {\n            \"nome\": \"Lugburz Durbatuluk\",\n            \"email\": \"euzd@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"dq6MIK2yLfrA7nri\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"xkvp@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"iJcpQ5WBgmB5C0mI\"\n        },\n        {\n            \"nome\": \"Lugburz Durbatuluk\",\n            \"email\": \"cdvy@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"jPmQPA8YrVyG2GXz\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"omkn@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"jwgvd9szSXbmEJdP\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"yyes@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"mFeaeLjw71U2hENb\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"pmrf@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"oJH2PrQ0tlercMQZ\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"ctxt@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"r7Igw75339KWkfwg\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"ozwi@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"sIrwcPYuSwFEQSJf\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"rmon@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"sr0LBaUVUJXF6b0c\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"nrqz@teste.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"t9sbLjKJ3554I15B\"\n        }\n    ]\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:49.879",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.592",
                            "endtime": "20230601 02:11:49.879"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.880",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.879",
                            "endtime": "20230601 02:11:49.880"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.591",
                        "endtime": "20230601 02:11:49.880"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.882",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.881",
                            "endtime": "20230601 02:11:49.882"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.882",
                            "endtime": "20230601 02:11:49.883"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.880",
                        "endtime": "20230601 02:11:49.883"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:49.884",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:49.884",
                          "endtime": "20230601 02:11:49.884"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.883",
                        "endtime": "20230601 02:11:49.884"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230601 02:11:49.589",
                    "endtime": "20230601 02:11:49.885"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t2",
                  "name": "Scenario: Create a new user",
                  "line": "15"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:49.887",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:49.886",
                          "endtime": "20230601 02:11:49.887"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.886",
                        "endtime": "20230601 02:11:49.887"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given I have a valid user data",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Name",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": ":example 'John Doe'"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.888",
                            "level": "INFO"
                          },
                          "_text": "${name} = Katrina Avery"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.887",
                            "endtime": "20230601 02:11:49.888"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Email",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${email}"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.889",
                            "level": "INFO"
                          },
                          "_text": "${email} = derrickross@example.net"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.888",
                            "endtime": "20230601 02:11:49.889"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Password",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${password}"
                        },
                        "arg": [
                          {
                            "_text": "length=12"
                          },
                          {
                            "_text": "special_chars=False"
                          }
                        ],
                        "doc": {
                          "_text": "Generate a random password of the specified ``length``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.889",
                            "level": "INFO"
                          },
                          "_text": "${password} = 4xxFiSBo01wE"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.889",
                            "endtime": "20230601 02:11:49.889"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.890",
                            "level": "INFO"
                          },
                          "_text": "${name} = Katrina Avery"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.889",
                            "endtime": "20230601 02:11:49.890"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${email}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.890",
                            "level": "INFO"
                          },
                          "_text": "${email} = derrickross@example.net"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.890",
                            "endtime": "20230601 02:11:49.890"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${password}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.891",
                            "level": "INFO"
                          },
                          "_text": "${password} = 4xxFiSBo01wE"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.890",
                            "endtime": "20230601 02:11:49.891"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.887",
                        "endtime": "20230601 02:11:49.891"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I create the user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=${name}"
                          },
                          {
                            "_text": "email=${email}"
                          },
                          {
                            "_text": "password=${password}"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.892",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'Katrina Avery', 'email': 'derrickross@example.net', 'password': '4xxFiSBo01wE', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.891",
                            "endtime": "20230601 02:11:49.892"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.892",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.892",
                            "endtime": "20230601 02:11:49.892"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "POST On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a POST request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:49.991",
                              "level": "INFO"
                            },
                            "_text": "POST Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} \n body=b'{\"nome\": \"Katrina Avery\", \"email\": \"derrickross@example.net\", \"password\": \"4xxFiSBo01wE\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:49.991",
                              "level": "INFO"
                            },
                            "_text": "POST Response : url=https://serverest.dev/usuarios \n status=201, reason=Created \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a5803763-3ce2-47d5-ac8e-486b8f75ba52', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '88b363381d8810518754ddc26f4ce453', 'Date': 'Thu, 01 Jun 2023 02:11:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} \n body={\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"pSOtB932D5Nq0T5h\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:49.991",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [201]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.892",
                            "endtime": "20230601 02:11:49.991"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Variable",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${user_id}"
                        },
                        "arg": {
                          "_text": "${response.json()['_id']}"
                        },
                        "doc": {
                          "_text": "Returns the given values which can then be assigned to a variables."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.993",
                            "level": "INFO"
                          },
                          "_text": "${user_id} = pSOtB932D5Nq0T5h"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.992",
                            "endtime": "20230601 02:11:49.993"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Global Variable",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${USER_ID}"
                          },
                          {
                            "_text": "${user_id}"
                          }
                        ],
                        "doc": {
                          "_text": "Makes a variable available globally in all tests and suites."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.993",
                            "level": "INFO"
                          },
                          "_text": "${USER_ID} = pSOtB932D5Nq0T5h"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.993",
                            "endtime": "20230601 02:11:49.993"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.994",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [201]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.994",
                            "endtime": "20230601 02:11:49.994"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.891",
                        "endtime": "20230601 02:11:49.994"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 201",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:49.995",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.995",
                            "endtime": "20230601 02:11:49.995"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:49.995",
                            "endtime": "20230601 02:11:49.996"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.994",
                        "endtime": "20230601 02:11:49.996"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:49.997",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:49.997",
                          "endtime": "20230601 02:11:49.997"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.996",
                        "endtime": "20230601 02:11:49.997"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230601 02:11:49.885",
                    "endtime": "20230601 02:11:49.998"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t3",
                  "name": "Scenario: Get a specific user informations",
                  "line": "22"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:49.999",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:49.999",
                          "endtime": "20230601 02:11:50.000"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:49.999",
                        "endtime": "20230601 02:11:50.000"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:50.098",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h \n path_url=/usuarios/pSOtB932D5Nq0T5h \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:50.098",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '638ff464-1bd0-4f56-b7fa-f6f2f5548530', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '835a94b178ab342ff0be03119f1d1458', 'Date': 'Thu, 01 Jun 2023 02:11:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} \n body={\n    \"nome\": \"Katrina Avery\",\n    \"email\": \"derrickross@example.net\",\n    \"password\": \"4xxFiSBo01wE\",\n    \"administrador\": \"false\",\n    \"_id\": \"pSOtB932D5Nq0T5h\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:50.098",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.000",
                            "endtime": "20230601 02:11:50.098"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:50.099",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.098",
                            "endtime": "20230601 02:11:50.099"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.000",
                        "endtime": "20230601 02:11:50.099"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:50.100",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.099",
                            "endtime": "20230601 02:11:50.100"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.100",
                            "endtime": "20230601 02:11:50.101"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.099",
                        "endtime": "20230601 02:11:50.101"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:50.103",
                          "level": "INFO"
                        },
                        "_text": "Length is 5"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:50.102",
                          "endtime": "20230601 02:11:50.103"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.101",
                        "endtime": "20230601 02:11:50.103"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230601 02:11:49.998",
                    "endtime": "20230601 02:11:50.103"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t4",
                  "name": "Scenario: Update the created user",
                  "line": "28"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:50.105",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:50.104",
                          "endtime": "20230601 02:11:50.105"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.104",
                        "endtime": "20230601 02:11:50.105"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I update the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=John Smith"
                          },
                          {
                            "_text": "email=john.smith@example.com"
                          },
                          {
                            "_text": "password=P@ssw0rd123"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:50.106",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.105",
                            "endtime": "20230601 02:11:50.106"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:50.106",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.106",
                            "endtime": "20230601 02:11:50.106"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "PUT On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a PUT request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:50.207",
                              "level": "INFO"
                            },
                            "_text": "PUT Request : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h \n path_url=/usuarios/pSOtB932D5Nq0T5h \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} \n body=b'{\"nome\": \"John Smith\", \"email\": \"john.smith@example.com\", \"password\": \"P@ssw0rd123\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:50.208",
                              "level": "INFO"
                            },
                            "_text": "PUT Response : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd98afc41-51f7-439a-9728-bb59dc7dfe54', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a4897fee88172e63ca3b8ee490ed4273', 'Date': 'Thu, 01 Jun 2023 02:11:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} \n body={\n    \"message\": \"Registro alterado com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:50.208",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.106",
                            "endtime": "20230601 02:11:50.208"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:50.209",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.208",
                            "endtime": "20230601 02:11:50.209"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.105",
                        "endtime": "20230601 02:11:50.209"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:50.211",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.210",
                            "endtime": "20230601 02:11:50.211"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.211",
                            "endtime": "20230601 02:11:50.213"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.209",
                        "endtime": "20230601 02:11:50.213"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:50.215",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:50.214",
                          "endtime": "20230601 02:11:50.215"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.213",
                        "endtime": "20230601 02:11:50.215"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230601 02:11:50.103",
                    "endtime": "20230601 02:11:50.215"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t5",
                  "name": "Scenario: Delete the created user",
                  "line": "34"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:50.217",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:50.217",
                          "endtime": "20230601 02:11:50.218"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.216",
                        "endtime": "20230601 02:11:50.218"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I delete the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "DELETE On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a DELETE request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:50.317",
                              "level": "INFO"
                            },
                            "_text": "DELETE Request : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h \n path_url=/usuarios/pSOtB932D5Nq0T5h \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:50.317",
                              "level": "INFO"
                            },
                            "_text": "DELETE Response : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4d69bc7c-243d-4092-bac3-1763a0faa4d1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '28f892a2ccdf7aabeca1bb8725790cd6', 'Date': 'Thu, 01 Jun 2023 02:11:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} \n body={\n    \"message\": \"Registro excluído com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230601 02:11:50.317",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.218",
                            "endtime": "20230601 02:11:50.318"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:50.318",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.318",
                            "endtime": "20230601 02:11:50.318"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.218",
                        "endtime": "20230601 02:11:50.319"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:50.320",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.319",
                            "endtime": "20230601 02:11:50.321"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.321",
                            "endtime": "20230601 02:11:50.322"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.319",
                        "endtime": "20230601 02:11:50.322"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:50.324",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:50.323",
                          "endtime": "20230601 02:11:50.324"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.322",
                        "endtime": "20230601 02:11:50.324"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230601 02:11:50.216",
                    "endtime": "20230601 02:11:50.324"
                  }
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "PASS",
                "starttime": "20230601 02:11:48.952",
                "endtime": "20230601 02:11:50.325"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "PASS",
              "starttime": "20230601 02:11:48.951",
              "endtime": "20230601 02:11:50.327"
            }
          }
        },
        {
          "_attributes": {
            "id": "s1-s2",
            "name": "Ui",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s2-s1",
              "name": "Test Ui Signup",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s2-s1-t1",
                  "name": "Scenario: Signup with empty fields",
                  "line": "10"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:50.339",
                            "level": "INFO"
                          },
                          "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:50.339",
                            "endtime": "20230601 02:11:53.734"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:53.734",
                            "endtime": "20230601 02:11:53.841"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:50.338",
                        "endtime": "20230601 02:11:53.841"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given Im on the signup page",
                      "library": "test_keywords_signup"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Location Should Be",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "https://front.serverest.dev/login"
                        },
                        "doc": {
                          "_text": "Verifies that the current URL is exactly ``url``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:53.848",
                            "level": "INFO"
                          },
                          "_text": "Current location is 'https://front.serverest.dev/login'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:53.842",
                            "endtime": "20230601 02:11:53.848"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Click Element",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "css=a.btn.btn-link"
                        },
                        "doc": {
                          "_text": "Click the element identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:53.849",
                            "level": "INFO"
                          },
                          "_text": "Clicking element 'css=a.btn.btn-link'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:53.848",
                            "endtime": "20230601 02:11:53.959"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:53.842",
                        "endtime": "20230601 02:11:53.959"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I click in signup",
                      "library": "test_keywords_signup"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Click Button",
                        "library": "SeleniumLibrary"
                      },
                      "arg": {
                        "_text": "css=.btn.btn-primary"
                      },
                      "doc": {
                        "_text": "Clicks the button identified by ``locator``."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:53.961",
                          "level": "INFO"
                        },
                        "_text": "Clicking button 'css=.btn.btn-primary'."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:53.960",
                          "endtime": "20230601 02:11:54.034"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:53.960",
                        "endtime": "20230601 02:11:54.035"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then required field messages should be displayed",
                      "library": "test_keywords_signup"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Wait Until Element Is Visible",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "css=.alert-dismissible"
                          },
                          {
                            "_text": "timeout=10s"
                          }
                        ],
                        "doc": {
                          "_text": "Waits until the element ``locator`` is visible."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:54.035",
                            "endtime": "20230601 02:11:54.279"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Element Should Be Visible",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "css=.alert-dismissible"
                        },
                        "doc": {
                          "_text": "Verifies that the element identified by ``locator`` is visible."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:54.300",
                            "level": "INFO"
                          },
                          "_text": "Element 'css=.alert-dismissible' is displayed."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:54.279",
                            "endtime": "20230601 02:11:54.300"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Page Should Contain",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "Nome é obrigatório"
                        },
                        "doc": {
                          "_text": "Verifies that current page contains ``text``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:54.317",
                            "level": "INFO"
                          },
                          "_text": "Current page contains text 'Nome é obrigatório'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:54.300",
                            "endtime": "20230601 02:11:54.318"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Page Should Contain",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "Email é obrigatório"
                        },
                        "doc": {
                          "_text": "Verifies that current page contains ``text``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:54.332",
                            "level": "INFO"
                          },
                          "_text": "Current page contains text 'Email é obrigatório'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:54.318",
                            "endtime": "20230601 02:11:54.332"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Page Should Contain",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "Password é obrigatório"
                        },
                        "doc": {
                          "_text": "Verifies that current page contains ``text``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:54.346",
                            "level": "INFO"
                          },
                          "_text": "Current page contains text 'Password é obrigatório'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:54.332",
                            "endtime": "20230601 02:11:54.347"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:54.035",
                        "endtime": "20230601 02:11:54.347"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:54.347",
                          "endtime": "20230601 02:11:54.403"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:54.347",
                        "endtime": "20230601 02:11:54.403"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "ui"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230601 02:11:50.338",
                    "endtime": "20230601 02:11:54.403"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t2",
                  "name": "Scenario: Signup done successfully",
                  "line": "16"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:54.406",
                            "level": "INFO"
                          },
                          "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:54.405",
                            "endtime": "20230601 02:11:55.399"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.400",
                            "endtime": "20230601 02:11:55.508"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:54.404",
                        "endtime": "20230601 02:11:55.508"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given Im on the signup page",
                      "library": "test_keywords_signup"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Location Should Be",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "https://front.serverest.dev/login"
                        },
                        "doc": {
                          "_text": "Verifies that the current URL is exactly ``url``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:55.515",
                            "level": "INFO"
                          },
                          "_text": "Current location is 'https://front.serverest.dev/login'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.509",
                            "endtime": "20230601 02:11:55.515"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Click Element",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "css=a.btn.btn-link"
                        },
                        "doc": {
                          "_text": "Click the element identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:55.516",
                            "level": "INFO"
                          },
                          "_text": "Clicking element 'css=a.btn.btn-link'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.515",
                            "endtime": "20230601 02:11:55.623"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:55.508",
                        "endtime": "20230601 02:11:55.623"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And I fill in the signup fields with valid data",
                      "library": "test_keywords_signup"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Name",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": ":example 'John Doe'"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:55.625",
                            "level": "INFO"
                          },
                          "_text": "${name} = Kevin Burns"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.624",
                            "endtime": "20230601 02:11:55.625"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Email",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${email}"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:55.625",
                            "level": "INFO"
                          },
                          "_text": "${email} = zochoa@example.com"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.625",
                            "endtime": "20230601 02:11:55.625"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Password",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${password}"
                        },
                        "arg": [
                          {
                            "_text": "length=12"
                          },
                          {
                            "_text": "special_chars=False"
                          }
                        ],
                        "doc": {
                          "_text": "Generate a random password of the specified ``length``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:55.626",
                            "level": "INFO"
                          },
                          "_text": "${password} = 8XIQ0uUQR2M1"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.625",
                            "endtime": "20230601 02:11:55.626"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Input Text",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "id:nome"
                          },
                          {
                            "_text": "${name}"
                          }
                        ],
                        "doc": {
                          "_text": "Types the given ``text`` into the text field identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:55.627",
                            "level": "INFO"
                          },
                          "_text": "Typing text 'Kevin Burns' into text field 'id:nome'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.626",
                            "endtime": "20230601 02:11:55.760"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Input Text",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "id:email"
                          },
                          {
                            "_text": "${email}"
                          }
                        ],
                        "doc": {
                          "_text": "Types the given ``text`` into the text field identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:55.761",
                            "level": "INFO"
                          },
                          "_text": "Typing text 'zochoa@example.com' into text field 'id:email'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.761",
                            "endtime": "20230601 02:11:55.885"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Input Text",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "id:password"
                          },
                          {
                            "_text": "${password}"
                          }
                        ],
                        "doc": {
                          "_text": "Types the given ``text`` into the text field identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:55.886",
                            "level": "INFO"
                          },
                          "_text": "Typing text '8XIQ0uUQR2M1' into text field 'id:password'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.885",
                            "endtime": "20230601 02:11:55.994"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Select Checkbox",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "id=administrador"
                        },
                        "doc": {
                          "_text": "Selects the checkbox identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:55.994",
                            "level": "INFO"
                          },
                          "_text": "Selecting checkbox 'id=administrador'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:55.994",
                            "endtime": "20230601 02:11:56.080"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:56.081",
                            "level": "INFO"
                          },
                          "_text": "${name} = Kevin Burns"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:56.081",
                            "endtime": "20230601 02:11:56.081"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${email}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:56.082",
                            "level": "INFO"
                          },
                          "_text": "${email} = zochoa@example.com"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:56.081",
                            "endtime": "20230601 02:11:56.082"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${password}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:56.082",
                            "level": "INFO"
                          },
                          "_text": "${password} = 8XIQ0uUQR2M1"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:56.082",
                            "endtime": "20230601 02:11:56.082"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:55.623",
                        "endtime": "20230601 02:11:56.082"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I click in signup",
                      "library": "test_keywords_signup"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Click Button",
                        "library": "SeleniumLibrary"
                      },
                      "arg": {
                        "_text": "css=.btn.btn-primary"
                      },
                      "doc": {
                        "_text": "Clicks the button identified by ``locator``."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:56.083",
                          "level": "INFO"
                        },
                        "_text": "Clicking button 'css=.btn.btn-primary'."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:56.083",
                          "endtime": "20230601 02:11:56.153"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:56.082",
                        "endtime": "20230601 02:11:56.153"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the page should contain the text \"Cadastro realizado com sucesso\"",
                      "library": "test_keywords_signup",
                      "sourcename": "Then the page should contain the text \"${expected_text}\""
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Wait Until Element Is Visible",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "css=.alert-dismissible"
                          },
                          {
                            "_text": "timeout=10s"
                          }
                        ],
                        "doc": {
                          "_text": "Waits until the element ``locator`` is visible."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:56.154",
                            "endtime": "20230601 02:11:56.394"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Element Should Be Visible",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "css=.alert-dismissible"
                        },
                        "doc": {
                          "_text": "Verifies that the element identified by ``locator`` is visible."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:56.415",
                            "level": "INFO"
                          },
                          "_text": "Element 'css=.alert-dismissible' is displayed."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:56.394",
                            "endtime": "20230601 02:11:56.415"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Page Should Contain",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "${expected_text}"
                        },
                        "doc": {
                          "_text": "Verifies that current page contains ``text``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:56.430",
                            "level": "INFO"
                          },
                          "_text": "Current page contains text 'Cadastro realizado com sucesso'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:56.415",
                            "endtime": "20230601 02:11:56.430"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:56.153",
                        "endtime": "20230601 02:11:56.430"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:56.431",
                          "endtime": "20230601 02:11:56.486"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:56.430",
                        "endtime": "20230601 02:11:56.486"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "ui"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230601 02:11:54.404",
                    "endtime": "20230601 02:11:56.486"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t3",
                  "name": "Scenario: Signup with already used email",
                  "line": "23"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:56.488",
                            "level": "INFO"
                          },
                          "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:56.488",
                            "endtime": "20230601 02:11:57.479"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:57.479",
                            "endtime": "20230601 02:11:57.583"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:56.487",
                        "endtime": "20230601 02:11:57.584"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given Im on the signup page",
                      "library": "test_keywords_signup"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Location Should Be",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "https://front.serverest.dev/login"
                        },
                        "doc": {
                          "_text": "Verifies that the current URL is exactly ``url``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:57.590",
                            "level": "INFO"
                          },
                          "_text": "Current location is 'https://front.serverest.dev/login'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:57.584",
                            "endtime": "20230601 02:11:57.590"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Click Element",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "css=a.btn.btn-link"
                        },
                        "doc": {
                          "_text": "Click the element identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:57.591",
                            "level": "INFO"
                          },
                          "_text": "Clicking element 'css=a.btn.btn-link'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:57.591",
                            "endtime": "20230601 02:11:57.696"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:57.584",
                        "endtime": "20230601 02:11:57.696"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And I fill in the signup fields with an email already registered",
                      "library": "test_keywords_signup"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Input Text",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "id:nome"
                          },
                          {
                            "_text": "${name}"
                          }
                        ],
                        "doc": {
                          "_text": "Types the given ``text`` into the text field identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:57.697",
                            "level": "INFO"
                          },
                          "_text": "Typing text 'Kevin Burns' into text field 'id:nome'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:57.696",
                            "endtime": "20230601 02:11:57.828"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Input Text",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "id:email"
                          },
                          {
                            "_text": "${email}"
                          }
                        ],
                        "doc": {
                          "_text": "Types the given ``text`` into the text field identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:57.829",
                            "level": "INFO"
                          },
                          "_text": "Typing text 'zochoa@example.com' into text field 'id:email'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:57.829",
                            "endtime": "20230601 02:11:57.959"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Input Text",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "id:password"
                          },
                          {
                            "_text": "${password}"
                          }
                        ],
                        "doc": {
                          "_text": "Types the given ``text`` into the text field identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:57.960",
                            "level": "INFO"
                          },
                          "_text": "Typing text '8XIQ0uUQR2M1' into text field 'id:password'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:57.959",
                            "endtime": "20230601 02:11:58.068"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Select Checkbox",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "id=administrador"
                        },
                        "doc": {
                          "_text": "Selects the checkbox identified by ``locator``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:58.069",
                            "level": "INFO"
                          },
                          "_text": "Selecting checkbox 'id=administrador'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:58.068",
                            "endtime": "20230601 02:11:58.156"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:57.696",
                        "endtime": "20230601 02:11:58.156"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I click in signup",
                      "library": "test_keywords_signup"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Click Button",
                        "library": "SeleniumLibrary"
                      },
                      "arg": {
                        "_text": "css=.btn.btn-primary"
                      },
                      "doc": {
                        "_text": "Clicks the button identified by ``locator``."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230601 02:11:58.157",
                          "level": "INFO"
                        },
                        "_text": "Clicking button 'css=.btn.btn-primary'."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:58.156",
                          "endtime": "20230601 02:11:58.225"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:58.156",
                        "endtime": "20230601 02:11:58.226"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the page should contain the text \"Este email já está sendo usado\"",
                      "library": "test_keywords_signup",
                      "sourcename": "Then the page should contain the text \"${expected_text}\""
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Wait Until Element Is Visible",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "css=.alert-dismissible"
                          },
                          {
                            "_text": "timeout=10s"
                          }
                        ],
                        "doc": {
                          "_text": "Waits until the element ``locator`` is visible."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:58.226",
                            "endtime": "20230601 02:11:58.474"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Element Should Be Visible",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "css=.alert-dismissible"
                        },
                        "doc": {
                          "_text": "Verifies that the element identified by ``locator`` is visible."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:58.496",
                            "level": "INFO"
                          },
                          "_text": "Element 'css=.alert-dismissible' is displayed."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:58.474",
                            "endtime": "20230601 02:11:58.496"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Page Should Contain",
                          "library": "SeleniumLibrary"
                        },
                        "arg": {
                          "_text": "${expected_text}"
                        },
                        "doc": {
                          "_text": "Verifies that current page contains ``text``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230601 02:11:58.512",
                            "level": "INFO"
                          },
                          "_text": "Current page contains text 'Este email já está sendo usado'."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230601 02:11:58.496",
                            "endtime": "20230601 02:11:58.512"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:58.226",
                        "endtime": "20230601 02:11:58.512"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230601 02:11:58.513",
                          "endtime": "20230601 02:11:58.569"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230601 02:11:58.512",
                        "endtime": "20230601 02:11:58.569"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "ui"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230601 02:11:56.487",
                    "endtime": "20230601 02:11:58.569"
                  }
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "PASS",
                "starttime": "20230601 02:11:50.330",
                "endtime": "20230601 02:11:58.570"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "PASS",
              "starttime": "20230601 02:11:50.328",
              "endtime": "20230601 02:11:58.572"
            }
          }
        }
      ],
      "status": {
        "_attributes": {
          "status": "PASS",
          "starttime": "20230601 02:11:48.930",
          "endtime": "20230601 02:11:58.574"
        }
      }
    },
    "statistics": {
      "total": {
        "stat": {
          "_attributes": {
            "pass": "8",
            "fail": "0",
            "skip": "0"
          },
          "_text": "All Tests"
        }
      },
      "tag": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0"
            },
            "_text": "api"
          },
          {
            "_attributes": {
              "pass": "3",
              "fail": "0",
              "skip": "0"
            },
            "_text": "ui"
          }
        ]
      },
      "suite": {
        "stat": [
          {
            "_attributes": {
              "pass": "8",
              "fail": "0",
              "skip": "0",
              "id": "s1",
              "name": "Tests"
            },
            "_text": "Tests"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1",
              "name": "Api"
            },
            "_text": "Tests.Api"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1-s1",
              "name": "Test Api Users"
            },
            "_text": "Tests.Api.Test Api Users"
          },
          {
            "_attributes": {
              "pass": "3",
              "fail": "0",
              "skip": "0",
              "id": "s1-s2",
              "name": "Ui"
            },
            "_text": "Tests.Ui"
          },
          {
            "_attributes": {
              "pass": "3",
              "fail": "0",
              "skip": "0",
              "id": "s1-s2-s1",
              "name": "Test Ui Signup"
            },
            "_text": "Tests.Ui.Test Ui Signup"
          }
        ]
      }
    },
    "errors": {}
  }
}