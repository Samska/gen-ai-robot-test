{
  "_declaration": {
    "_attributes": {
      "version": "1.0",
      "encoding": "UTF-8"
    }
  },
  "robot": {
    "_attributes": {
      "generator": "Robot 6.1.1 (Python 3.8.18 on linux)",
      "generated": "20231114 00:10:12.902",
      "rpa": "false",
      "schemaversion": "4"
    },
    "suite": {
      "_attributes": {
        "id": "s1",
        "name": "Tests",
        "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests"
      },
      "suite": [
        {
          "_attributes": {
            "id": "s1-s1",
            "name": "Api",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s1-s1",
              "name": "Test Api Users",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s1-s1-t1",
                  "name": "Scenario: Get all registered users",
                  "line": "9"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:13.644",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:13.644",
                          "endtime": "20231114 00:10:13.644"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:13.643",
                        "endtime": "20231114 00:10:13.644"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the list of all registered users",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:13.983",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:13.983",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '34617b683b0e78acac13adf143644b17;o=1', 'Date': 'Tue, 14 Nov 2023 00:10:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '81237'} \n body={\n    \"quantidade\": 381,\n    \"usuarios\": [\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"ffal@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"00HaJwxCwkMQahe5\"\n        },\n        {\n            \"nome\": \"Hunter Kuphal DVM\",\n            \"email\": \"raymond.veum@yahoo.com\",\n            \"password\": \"21rf7nyg\",\n            \"administrador\": \"true\",\n            \"_id\": \"01JSHnmKzJQtuSLV\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"harriskyle@example.com\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"0Pv6okASsje5fqvN\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"kugs@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"0l2GBpIC1BJzXWKm\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"fqfo@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"0l3pyfV71AbLN64N\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Julie Melo\",\n            \"email\": \"Valmira12@yahoo.com\",\n            \"password\": \"koRm2z613e0QhmE\",\n            \"administrador\": \"true\",\n            \"_id\": \"11TSscVXHwb8h3kg\"\n        },\n        {\n            \"nome\": \"Christopher Davis\",\n            \"email\": \"johnherrera@example.com\",\n            \"password\": \"+Q3Nedb^*r\",\n            \"administrador\": \"true\",\n            \"_id\": \"1Uo7WUDxPGrPZZs3\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"ycampbell@example.net\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"1o9aPRJm3Kgzt7ei\"\n        },\n        {\n            \"nome\": \"Jesenia Daniel\",\n            \"email\": \"horace.hane@hotmail.com\",\n            \"password\": \"vgxz085qija9\",\n            \"administrador\": \"true\",\n            \"_id\": \"1vwobqcbe7spV8rJ\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"brandonlewis@example.net\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"1xbljM6Xet0CrMGS\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"velasquezlindsey@example.net\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"26rWISuQXWVyxNfv\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"wgkc@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"2DkVnwsE0JIcMD4J\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"uolq@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"2JDxEIziBDvLFidp\"\n        },\n        {\n            \"nome\": \"Jessie Block\",\n            \"email\": \"fernando.kshlerin@gmail.com\",\n            \"password\": \"5gzpv306\",\n            \"administrador\": \"false\",\n            \"_id\": \"2UrFU2cBR8TUqJX8\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"ywpp@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"2cQY8q9RSspXGZQ0\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"christina06@example.org\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"2opkFyPF5vtjNCVo\"\n        },\n        {\n            \"nome\": \"Gerald.Runolfsson67\",\n            \"email\": \"Julia.Rempel@hotmail.com\",\n            \"password\": \"848468539\",\n            \"administrador\": \"true\",\n            \"_id\": \"3CyI2ifJJhdJdawy\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"jennifer52@example.com\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"3FJUAUeHP0ATFXNE\"\n        },\n        {\n            \"nome\": \"Renata Martins\",\n            \"email\": \"Viviana.Macedo99@hotmail.com\",\n            \"password\": \"aAB1cjb8GLgGNDy\",\n            \"administrador\": \"true\",\n            \"_id\": \"3lPoTqtnk00ThDqT\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"phed@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"3mLljgxtC0CQCvSl\"\n        },\n        {\n            \"nome\": \"Esta Lebsack\",\n            \"email\": \"bao.nikolaus@yahoo.com\",\n            \"password\": \"mjic10q61e\",\n            \"administrador\": \"true\",\n            \"_id\": \"3r5E8usSAhdf0GEF\"\n        },\n        {\n            \"nome\": \"Miss Devin Langworth\",\n            \"email\": \"cletus.okon@yahoo.com\",\n            \"password\": \"02f8s041mcqm2tc\",\n            \"administrador\": \"true\",\n            \"_id\": \"42vdfTcl1cAqwNME\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"fdaf@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"48Sp4OcggkGOt4GR\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"fxih@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"4WpQItEHPirUO52K\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"sray@example.net\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"4XJPhORB9qFPtwG5\"\n        },\n        {\n            \"nome\": \"Geazi Costa\",\n            \"email\": \"Regina35@hotmail.com\",\n            \"password\": \"FlAw0d1W2Qv6MnS\",\n            \"administrador\": \"true\",\n            \"_id\": \"4azREy54znLq438u\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"aharrington@example.com\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"4eCBEkplODaiL9z5\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"angelafrazier@example.net\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"4j9dAsdToIjJjYyW\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"cuhw@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"4qo5umE0GXH02ZoG\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"fscl@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"4xzpTYXhr1lctZuM\"\n        },\n        {\n            \"nome\": \"Otoniel Santos\",\n            \"email\": \"Jacimar1@yahoo.com\",\n            \"password\": \"XhOzSIhM61pEfsL\",\n            \"administrador\": \"true\",\n            \"_id\": \"55lvVTtQ5G9KNdeQ\"\n        },\n        {\n            \"nome\": \"Meridith Reinger\",\n            \"email\": \"johnathan.franecki@yahoo.com\",\n            \"password\": \"fmqzbbq6\",\n            \"administrador\": \"true\",\n            \"_id\": \"5DAkF3BUMYq073wM\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"vdiaz@example.org\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"5Dm3BdRTgUPv2DPO\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"stacy40@example.com\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"5LuONtgejXVMdpX0\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"finj@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"5WYcVaknj9n1YD78\"\n        },\n        {\n            \"nome\": \"Fulano de Tall\",\n            \"email\": \"amy47@example.org\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"5aB4mUT3EKNUwH4M\"\n        },\n        {\n            \"nome\": \"Elva\",\n            \"email\": \"sharon.goldner@yahoo.com\",\n            \"password\": \"a45w639k1irmp\",\n            \"administrador\": \"true\",\n            \"_id\": \"5nosBuXPGl3Z6KHH\"\n        },\n        {\n            \"nome\": \"Rosely Nogueira\",\n            \"email\": \"Manuela_Reis@hotmail.com\",\n            \"password\": \"AApCq0Nte6nvDWs\",\n            \"administrador\": \"true\",\n            \"_id\": \"5seApQWGnW7gePr6\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"cwwe@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"6ToKkhnNQmp0UipH\"\n        },\n        {\n            \"nome\": \"Carlo Feeney\",\n            \"email\": \"augustina.konopelski@yahoo.com\",\n            \"password\": \"qt1r2qfichceed\",\n            \"administrador\": \"true\",\n            \"_id\": \"6USNs9w3LmXELbw2\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"yarn@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"6WlATpcsXopGjvYt\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"esqn@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"6v1AVyXLpUKpSdbx\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"kujb@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"72zzlhrj47l1h7PY\"\n        },\n        {\n            \"nome\": \"Harry Potter\",\n            \"email\": \"bguo@emailqa.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"74VbDOxheMoEaJph\"\n        },\n        {\n            \"nome\": \"Ms. Virgen Cronin\",\n            \"email\": \"brooks.leannon@gmail.com\",\n            \"password\": \"vrf6qd3rblnoc8\",\n            \"administrador\": \"true\",\n            \"_id\": \"7XC3VdXwPBDleywc\"\n        },\n        {\n            \"nome\": \"Margaret Pereira\",\n            \"email\": \"June_Silva@hotmail.com\",\n            \"password\": \"63np8... (set the log level to DEBUG or TRACE to see the full content) \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:13.984",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.645",
                            "endtime": "20231114 00:10:13.984"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.984",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.984",
                            "endtime": "20231114 00:10:13.984"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:13.644",
                        "endtime": "20231114 00:10:13.984"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.985",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.985",
                            "endtime": "20231114 00:10:13.985"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.985",
                            "endtime": "20231114 00:10:13.986"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:13.984",
                        "endtime": "20231114 00:10:13.986"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:13.988",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:13.987",
                          "endtime": "20231114 00:10:13.988"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:13.987",
                        "endtime": "20231114 00:10:13.988"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231114 00:10:13.643",
                    "endtime": "20231114 00:10:13.988"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t2",
                  "name": "Scenario: Create a new user",
                  "line": "15"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:13.989",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:13.989",
                          "endtime": "20231114 00:10:13.989"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:13.988",
                        "endtime": "20231114 00:10:13.989"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given I have a valid user data",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Name",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": ":example: 'John Doe'"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.990",
                            "level": "INFO"
                          },
                          "_text": "${name} = Scott Rice"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.989",
                            "endtime": "20231114 00:10:13.990"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Email",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${email}"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.990",
                            "level": "INFO"
                          },
                          "_text": "${email} = sanchezjessica@example.org"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.990",
                            "endtime": "20231114 00:10:13.990"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Password",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${password}"
                        },
                        "arg": [
                          {
                            "_text": "length=12"
                          },
                          {
                            "_text": "special_chars=False"
                          }
                        ],
                        "doc": {
                          "_text": "Generate a random password of the specified ``length``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.991",
                            "level": "INFO"
                          },
                          "_text": "${password} = uNyZRAWnFT0d"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.990",
                            "endtime": "20231114 00:10:13.991"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.991",
                            "level": "INFO"
                          },
                          "_text": "${name} = Scott Rice"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.991",
                            "endtime": "20231114 00:10:13.991"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${email}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.991",
                            "level": "INFO"
                          },
                          "_text": "${email} = sanchezjessica@example.org"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.991",
                            "endtime": "20231114 00:10:13.991"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${password}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.991",
                            "level": "INFO"
                          },
                          "_text": "${password} = uNyZRAWnFT0d"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.991",
                            "endtime": "20231114 00:10:13.992"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:13.989",
                        "endtime": "20231114 00:10:13.992"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I create the user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=${name}"
                          },
                          {
                            "_text": "email=${email}"
                          },
                          {
                            "_text": "password=${password}"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.992",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'Scott Rice', 'email': 'sanchezjessica@example.org', 'password': 'uNyZRAWnFT0d', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.992",
                            "endtime": "20231114 00:10:13.992"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:13.993",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.992",
                            "endtime": "20231114 00:10:13.993"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "POST On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a POST request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.079",
                              "level": "INFO"
                            },
                            "_text": "POST Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} \n body=b'{\"nome\": \"Scott Rice\", \"email\": \"sanchezjessica@example.org\", \"password\": \"uNyZRAWnFT0d\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.079",
                              "level": "INFO"
                            },
                            "_text": "POST Response : url=https://serverest.dev/usuarios \n status=201, reason=Created \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8cf58a0a56d148ce71f725c926106ace', 'Date': 'Tue, 14 Nov 2023 00:10:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} \n body={\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"llA58PC82HxY4f7G\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.079",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [201]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:13.993",
                            "endtime": "20231114 00:10:14.079"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Variable",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${user_id}"
                        },
                        "arg": {
                          "_text": "${response.json()['_id']}"
                        },
                        "doc": {
                          "_text": "Returns the given values which can then be assigned to a variables."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.080",
                            "level": "INFO"
                          },
                          "_text": "${user_id} = llA58PC82HxY4f7G"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.080",
                            "endtime": "20231114 00:10:14.080"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Global Variable",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${USER_ID}"
                          },
                          {
                            "_text": "${user_id}"
                          }
                        ],
                        "doc": {
                          "_text": "Makes a variable available globally in all tests and suites."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.081",
                            "level": "INFO"
                          },
                          "_text": "${USER_ID} = llA58PC82HxY4f7G"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.080",
                            "endtime": "20231114 00:10:14.081"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.081",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [201]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.081",
                            "endtime": "20231114 00:10:14.081"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:13.992",
                        "endtime": "20231114 00:10:14.081"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 201",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.082",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.082",
                            "endtime": "20231114 00:10:14.082"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.082",
                            "endtime": "20231114 00:10:14.083"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.081",
                        "endtime": "20231114 00:10:14.083"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:14.084",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:14.083",
                          "endtime": "20231114 00:10:14.084"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.083",
                        "endtime": "20231114 00:10:14.084"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231114 00:10:13.988",
                    "endtime": "20231114 00:10:14.084"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t3",
                  "name": "Scenario: Get a specific user informations",
                  "line": "22"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:14.085",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:14.085",
                          "endtime": "20231114 00:10:14.085"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.085",
                        "endtime": "20231114 00:10:14.085"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.168",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios/llA58PC82HxY4f7G \n path_url=/usuarios/llA58PC82HxY4f7G \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.169",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios/llA58PC82HxY4f7G \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd3c6d5ac8acb3ff8ed0816d4e52c8e03', 'Date': 'Tue, 14 Nov 2023 00:10:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} \n body={\n    \"nome\": \"Scott Rice\",\n    \"email\": \"sanchezjessica@example.org\",\n    \"password\": \"uNyZRAWnFT0d\",\n    \"administrador\": \"false\",\n    \"_id\": \"llA58PC82HxY4f7G\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.169",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.086",
                            "endtime": "20231114 00:10:14.169"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.169",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.169",
                            "endtime": "20231114 00:10:14.169"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.086",
                        "endtime": "20231114 00:10:14.169"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.170",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.170",
                            "endtime": "20231114 00:10:14.170"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.170",
                            "endtime": "20231114 00:10:14.171"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.169",
                        "endtime": "20231114 00:10:14.171"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:14.171",
                          "level": "INFO"
                        },
                        "_text": "Length is 5"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:14.171",
                          "endtime": "20231114 00:10:14.171"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.171",
                        "endtime": "20231114 00:10:14.172"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231114 00:10:14.084",
                    "endtime": "20231114 00:10:14.172"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t4",
                  "name": "Scenario: Update the created user",
                  "line": "28"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:14.173",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:14.172",
                          "endtime": "20231114 00:10:14.173"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.172",
                        "endtime": "20231114 00:10:14.173"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I update the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=John Smith"
                          },
                          {
                            "_text": "email=john.smith@example.com"
                          },
                          {
                            "_text": "password=P@ssw0rd123"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.173",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.173",
                            "endtime": "20231114 00:10:14.173"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.174",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.174",
                            "endtime": "20231114 00:10:14.174"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "PUT On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a PUT request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.264",
                              "level": "INFO"
                            },
                            "_text": "PUT Request : url=https://serverest.dev/usuarios/llA58PC82HxY4f7G \n path_url=/usuarios/llA58PC82HxY4f7G \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} \n body=b'{\"nome\": \"John Smith\", \"email\": \"john.smith@example.com\", \"password\": \"P@ssw0rd123\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.264",
                              "level": "INFO"
                            },
                            "_text": "PUT Response : url=https://serverest.dev/usuarios/llA58PC82HxY4f7G \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e1ab0e117dca8e9463ccd833783da6e8', 'Date': 'Tue, 14 Nov 2023 00:10:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} \n body={\n    \"message\": \"Registro alterado com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.264",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.174",
                            "endtime": "20231114 00:10:14.264"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.264",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.264",
                            "endtime": "20231114 00:10:14.265"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.173",
                        "endtime": "20231114 00:10:14.265"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.266",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.265",
                            "endtime": "20231114 00:10:14.266"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.266",
                            "endtime": "20231114 00:10:14.266"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.265",
                        "endtime": "20231114 00:10:14.266"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:14.267",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:14.267",
                          "endtime": "20231114 00:10:14.267"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.266",
                        "endtime": "20231114 00:10:14.267"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231114 00:10:14.172",
                    "endtime": "20231114 00:10:14.267"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t5",
                  "name": "Scenario: Delete the created user",
                  "line": "34"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:14.268",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:14.268",
                          "endtime": "20231114 00:10:14.269"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.268",
                        "endtime": "20231114 00:10:14.269"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I delete the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "DELETE On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a DELETE request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.369",
                              "level": "INFO"
                            },
                            "_text": "DELETE Request : url=https://serverest.dev/usuarios/llA58PC82HxY4f7G \n path_url=/usuarios/llA58PC82HxY4f7G \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.369",
                              "level": "INFO"
                            },
                            "_text": "DELETE Response : url=https://serverest.dev/usuarios/llA58PC82HxY4f7G \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e7c6f388672b49943a9eb966333507bb', 'Date': 'Tue, 14 Nov 2023 00:10:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} \n body={\n    \"message\": \"Registro excluído com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.369",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.269",
                            "endtime": "20231114 00:10:14.369"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.370",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.369",
                            "endtime": "20231114 00:10:14.370"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.269",
                        "endtime": "20231114 00:10:14.370"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231114 00:10:14.370",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.370",
                            "endtime": "20231114 00:10:14.371"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231114 00:10:14.371",
                            "endtime": "20231114 00:10:14.371"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.370",
                        "endtime": "20231114 00:10:14.371"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231114 00:10:14.372",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:14.371",
                          "endtime": "20231114 00:10:14.372"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:14.371",
                        "endtime": "20231114 00:10:14.372"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231114 00:10:14.268",
                    "endtime": "20231114 00:10:14.372"
                  }
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "PASS",
                "starttime": "20231114 00:10:12.920",
                "endtime": "20231114 00:10:14.373"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "PASS",
              "starttime": "20231114 00:10:12.919",
              "endtime": "20231114 00:10:14.374"
            }
          }
        },
        {
          "_attributes": {
            "id": "s1-s2",
            "name": "E2E",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s2-s1",
              "name": "Test Ui Signup",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s2-s1-t1",
                  "name": "Scenario: Signup with empty fields",
                  "line": "10"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:14.383",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:17.021",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:17.021",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x561f027fafb3 <unknown>\n#1 0x561f024ce4a7 <unknown>\n#2 0x561f02501c93 <unknown>\n#3 0x561f024fe10c <unknown>\n#4 0x561f02540ac6 <unknown>\n#5 0x561f02537713 <unknown>\n#6 0x561f0250a18b <unknown>\n#7 0x561f0250af7e <unknown>\n#8 0x561f027c08d8 <unknown>\n#9 0x561f027c4800 <unknown>\n#10 0x561f027cecfc <unknown>\n#11 0x561f027c5418 <unknown>\n#12 0x561f0279242f <unknown>\n#13 0x561f027e94e8 <unknown>\n#14 0x561f027e96b4 <unknown>\n#15 0x561f027fa143 <unknown>\n#16 0x7f89d2094ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231114 00:10:14.383",
                            "endtime": "20231114 00:10:17.022"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231114 00:10:17.023",
                            "endtime": "20231114 00:10:17.023"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231114 00:10:14.382",
                        "endtime": "20231114 00:10:17.023"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:17.023",
                          "endtime": "20231114 00:10:17.024"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:17.023",
                        "endtime": "20231114 00:10:17.024"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231114 00:10:14.382",
                    "endtime": "20231114 00:10:17.024"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x561f027fafb3 <unknown>\n#1 0x561f024ce4a7 <unknown>\n#2 0x561f02501c93 <unknown>\n#3 0x561f024fe10c <unknown>\n#4 0x561f02540ac6 <unknown>\n#5 0x561f02537713 <unknown>\n#6 0x561f0250a18b <unknown>\n#7 0x561f0250af7e <unknown>\n#8 0x561f027c08d8 <unknown>\n#9 0x561f027c4800 <unknown>\n#10 0x561f027cecfc <unknown>\n#11 0x561f027c5418 <unknown>\n#12 0x561f0279242f <unknown>\n#13 0x561f027e94e8 <unknown>\n#14 0x561f027e96b4 <unknown>\n#15 0x561f027fa143 <unknown>\n#16 0x7f89d2094ac3 <unknown>\n"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t2",
                  "name": "Scenario: Signup done successfully",
                  "line": "16"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:17.025",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:17.694",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:17.694",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55bd51aa1fb3 <unknown>\n#1 0x55bd517754a7 <unknown>\n#2 0x55bd517a8c93 <unknown>\n#3 0x55bd517a510c <unknown>\n#4 0x55bd517e7ac6 <unknown>\n#5 0x55bd517de713 <unknown>\n#6 0x55bd517b118b <unknown>\n#7 0x55bd517b1f7e <unknown>\n#8 0x55bd51a678d8 <unknown>\n#9 0x55bd51a6b800 <unknown>\n#10 0x55bd51a75cfc <unknown>\n#11 0x55bd51a6c418 <unknown>\n#12 0x55bd51a3942f <unknown>\n#13 0x55bd51a904e8 <unknown>\n#14 0x55bd51a906b4 <unknown>\n#15 0x55bd51aa1143 <unknown>\n#16 0x7fc6f1a94ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231114 00:10:17.025",
                            "endtime": "20231114 00:10:17.695"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231114 00:10:17.695",
                            "endtime": "20231114 00:10:17.695"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231114 00:10:17.025",
                        "endtime": "20231114 00:10:17.695"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:17.696",
                          "endtime": "20231114 00:10:17.696"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:17.695",
                        "endtime": "20231114 00:10:17.696"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231114 00:10:17.024",
                    "endtime": "20231114 00:10:17.696"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55bd51aa1fb3 <unknown>\n#1 0x55bd517754a7 <unknown>\n#2 0x55bd517a8c93 <unknown>\n#3 0x55bd517a510c <unknown>\n#4 0x55bd517e7ac6 <unknown>\n#5 0x55bd517de713 <unknown>\n#6 0x55bd517b118b <unknown>\n#7 0x55bd517b1f7e <unknown>\n#8 0x55bd51a678d8 <unknown>\n#9 0x55bd51a6b800 <unknown>\n#10 0x55bd51a75cfc <unknown>\n#11 0x55bd51a6c418 <unknown>\n#12 0x55bd51a3942f <unknown>\n#13 0x55bd51a904e8 <unknown>\n#14 0x55bd51a906b4 <unknown>\n#15 0x55bd51aa1143 <unknown>\n#16 0x7fc6f1a94ac3 <unknown>\n"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t3",
                  "name": "Scenario: Signup with already used email",
                  "line": "23"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:17.698",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:18.366",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231114 00:10:18.366",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55e5a9321fb3 <unknown>\n#1 0x55e5a8ff54a7 <unknown>\n#2 0x55e5a9028c93 <unknown>\n#3 0x55e5a902510c <unknown>\n#4 0x55e5a9067ac6 <unknown>\n#5 0x55e5a905e713 <unknown>\n#6 0x55e5a903118b <unknown>\n#7 0x55e5a9031f7e <unknown>\n#8 0x55e5a92e78d8 <unknown>\n#9 0x55e5a92eb800 <unknown>\n#10 0x55e5a92f5cfc <unknown>\n#11 0x55e5a92ec418 <unknown>\n#12 0x55e5a92b942f <unknown>\n#13 0x55e5a93104e8 <unknown>\n#14 0x55e5a93106b4 <unknown>\n#15 0x55e5a9321143 <unknown>\n#16 0x7ffb53694ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231114 00:10:17.697",
                            "endtime": "20231114 00:10:18.366"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231114 00:10:18.367",
                            "endtime": "20231114 00:10:18.367"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231114 00:10:17.697",
                        "endtime": "20231114 00:10:18.367"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231114 00:10:18.370",
                          "endtime": "20231114 00:10:18.370"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231114 00:10:18.367",
                        "endtime": "20231114 00:10:18.370"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231114 00:10:17.696",
                    "endtime": "20231114 00:10:18.370"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55e5a9321fb3 <unknown>\n#1 0x55e5a8ff54a7 <unknown>\n#2 0x55e5a9028c93 <unknown>\n#3 0x55e5a902510c <unknown>\n#4 0x55e5a9067ac6 <unknown>\n#5 0x55e5a905e713 <unknown>\n#6 0x55e5a903118b <unknown>\n#7 0x55e5a9031f7e <unknown>\n#8 0x55e5a92e78d8 <unknown>\n#9 0x55e5a92eb800 <unknown>\n#10 0x55e5a92f5cfc <unknown>\n#11 0x55e5a92ec418 <unknown>\n#12 0x55e5a92b942f <unknown>\n#13 0x55e5a93104e8 <unknown>\n#14 0x55e5a93106b4 <unknown>\n#15 0x55e5a9321143 <unknown>\n#16 0x7ffb53694ac3 <unknown>\n"
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "FAIL",
                "starttime": "20231114 00:10:14.376",
                "endtime": "20231114 00:10:18.371"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "FAIL",
              "starttime": "20231114 00:10:14.374",
              "endtime": "20231114 00:10:18.372"
            }
          }
        }
      ],
      "status": {
        "_attributes": {
          "status": "FAIL",
          "starttime": "20231114 00:10:12.902",
          "endtime": "20231114 00:10:18.373"
        }
      }
    },
    "statistics": {
      "total": {
        "stat": {
          "_attributes": {
            "pass": "5",
            "fail": "3",
            "skip": "0"
          },
          "_text": "All Tests"
        }
      },
      "tag": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0"
            },
            "_text": "api"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0"
            },
            "_text": "e2e"
          }
        ]
      },
      "suite": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "3",
              "skip": "0",
              "id": "s1",
              "name": "Tests"
            },
            "_text": "Tests"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1",
              "name": "Api"
            },
            "_text": "Tests.Api"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1-s1",
              "name": "Test Api Users"
            },
            "_text": "Tests.Api.Test Api Users"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2",
              "name": "E2E"
            },
            "_text": "Tests.E2E"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2-s1",
              "name": "Test Ui Signup"
            },
            "_text": "Tests.E2E.Test Ui Signup"
          }
        ]
      }
    },
    "errors": {}
  }
}