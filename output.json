{
  "_declaration": {
    "_attributes": {
      "version": "1.0",
      "encoding": "UTF-8"
    }
  },
  "robot": {
    "_attributes": {
      "generator": "Robot 6.0.2 (Python 3.8.16 on linux)",
      "generated": "20230609 19:09:01.569",
      "rpa": "false",
      "schemaversion": "3"
    },
    "suite": {
      "_attributes": {
        "id": "s1",
        "name": "Tests",
        "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests"
      },
      "suite": [
        {
          "_attributes": {
            "id": "s1-s1",
            "name": "Api",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s1-s1",
              "name": "Test Api Users",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s1-s1-t1",
                  "name": "Scenario: Get all registered users",
                  "line": "9"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.390",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.390",
                          "endtime": "20230609 19:09:02.391"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.390",
                        "endtime": "20230609 19:09:02.391"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the list of all registered users",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.539",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.539",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4d68de9f-c907-4456-be8a-7f811690cc14', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '26fccc2460a9f01334d66a32a61ef899;o=1', 'Date': 'Fri, 09 Jun 2023 19:09:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '40269'} \n body={\n    \"quantidade\": 184,\n    \"usuarios\": [\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"ttdq@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"02DQkHSzXSqpcIka\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"beltrano55@qa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0F1dhHbEeX2mrwft\"\n        },\n        {\n            \"nome\": \"Drew Gerhold\",\n            \"email\": \"almamosciski@test.com\",\n            \"password\": \"9rJt1UcYQcnYJ7S\",\n            \"administrador\": \"true\",\n            \"_id\": \"0bnETEAn1Bj6PNeB\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"tlji@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"0v9qTX5aeOtCF1sZ\"\n        },\n        {\n            \"nome\": \"Christie Murazik\",\n            \"email\": \"Eleazar.Hand25@yahoo.com\",\n            \"password\": \"RZu8J4l1RolHVA9\",\n            \"administrador\": \"true\",\n            \"_id\": \"0zJJLyoiAC4LDuvK\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"beltr23123213ano@qa.com.br\",\n            \"password\": \"te21312321321321321321312312\",\n            \"administrador\": \"true\",\n            \"_id\": \"19qYwOl1yhTmb9BG\"\n        },\n        {\n            \"nome\": \"Tanya Larson\",\n            \"email\": \"Evelyn.Greenholt-Farrell45@gmail.com\",\n            \"password\": \"xhsyXupps0dhUhd\",\n            \"administrador\": \"true\",\n            \"_id\": \"1roUnulKv3v1koBe\"\n        },\n        {\n            \"nome\": \"Cristiano Mothe\",\n            \"email\": \"todd42@example.com\",\n            \"password\": \"Abc@123\",\n            \"administrador\": \"true\",\n            \"_id\": \"1sgIbfnuiyiNZqrg\"\n        },\n        {\n            \"nome\": \"Antonio Funk III\",\n            \"email\": \"Dan1@hotmail.com\",\n            \"password\": \"DRpPX1z2ZECGMOi\",\n            \"administrador\": \"true\",\n            \"_id\": \"24Gamt7XRlANtwIj\"\n        },\n        {\n            \"nome\": \"Weber 40\",\n            \"email\": \"wsdesgtbvxyers1235w@mail.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"3IrhmbechR9pI7eS\"\n        },\n        {\n            \"nome\": \"Alfred Jaskolski\",\n            \"email\": \"Marquise37@gmail.com\",\n            \"password\": \"nqaFgugOOBVDLgZ\",\n            \"administrador\": \"false\",\n            \"_id\": \"3jE9j1N3PRSGSKXE\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"umzg@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"3pmr3d11mOjXcw48\"\n        },\n        {\n            \"nome\": \"Tyler Oberbrunner\",\n            \"email\": \"Ralph.Kuhic77@gmail.com\",\n            \"password\": \"jtnofzT612n3Xwf\",\n            \"administrador\": \"true\",\n            \"_id\": \"3qdUSEh1LherGOxK\"\n        },\n        {\n            \"nome\": \"Candice Zieme\",\n            \"email\": \"Karelle.Davis33@hotmail.com\",\n            \"password\": \"6gFuBILhb53G5Dd\",\n            \"administrador\": \"true\",\n            \"_id\": \"3v0ICd9RA3lOxu95\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"wecr@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"4hcofxmM4X9ChELr\"\n        },\n        {\n            \"nome\": \"Juanita Champlin-Barrows\",\n            \"email\": \"Kristofer.Koss91@yahoo.com\",\n            \"password\": \"QTFqy_lAXaVN4Or\",\n            \"administrador\": \"true\",\n            \"_id\": \"59WU4Oi0SqCvoAfR\"\n        },\n        {\n            \"nome\": \"Cristiano Mothe\",\n            \"email\": \"sanderson@example.net\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"5BGAG7FQWpC8XanE\"\n        },\n        {\n            \"nome\": \"Ruty\",\n            \"email\": \"rutysa@hotmail.com\",\n            \"password\": \"abc123\",\n            \"administrador\": \"true\",\n            \"_id\": \"5NnUe3903HAV4j0X\"\n        },\n        {\n            \"nome\": \"Olivia Jast\",\n            \"email\": \"Tamara84@gmail.com\",\n            \"password\": \"YHIi4p7y5BotON_\",\n            \"administrador\": \"false\",\n            \"_id\": \"5bh5PuewiWA7sbyL\"\n        },\n        {\n            \"nome\": \"Dr. Genevieve Abbott\",\n            \"email\": \"Thelma.Johns99@hotmail.com\",\n            \"password\": \"STu4AA3MMHDAnvo\",\n            \"administrador\": \"true\",\n            \"_id\": \"5l70IkKnpYUhr79n\"\n        },\n        {\n            \"nome\": \"Dr. Antonio Collins\",\n            \"email\": \"Demond91@hotmail.com\",\n            \"password\": \"NqGDrB7bBw9VIwF\",\n            \"administrador\": \"true\",\n            \"_id\": \"6TAOnbRy0UrP9Ove\"\n        },\n        {\n            \"nome\": \"Ms. Sophie Carter\",\n            \"email\": \"Alysha18@yahoo.com\",\n            \"password\": \"WvUzLByxSI_c8mN\",\n            \"administrador\": \"true\",\n            \"_id\": \"6lJRxOuN7m67apKs\"\n        },\n        {\n            \"nome\": \"teste\",\n            \"email\": \"teste@hotmail.br\",\n            \"password\": \"1\",\n            \"administrador\": \"true\",\n            \"_id\": \"72dcS17y72QsiCjf\"\n        },\n        {\n            \"nome\": \"Antonia Metz\",\n            \"email\": \"Frederic_Reinger74@hotmail.com\",\n            \"password\": \"bnmLvoWV21UGlkH\",\n            \"administrador\": \"true\",\n            \"_id\": \"7Un0DB88ipdaWPMM\"\n        },\n        {\n            \"nome\": \"Brenda Waelchi\",\n            \"email\": \"Trey_Wiegand81@hotmail.com\",\n            \"password\": \"nA6gyxKUUqaA26D\",\n            \"administrador\": \"true\",\n            \"_id\": \"8CtP2qA9OnaIAnYp\"\n        },\n        {\n            \"nome\": \"Jacsonsm\",\n            \"email\": \"whodge@example.com\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"8SvBtCnNTB4cCSCJ\"\n        },\n        {\n            \"nome\": \"Joanne Hintz\",\n            \"email\": \"Ladarius_Champlin@yahoo.com\",\n            \"password\": \"y190q3go3p0VrZY\",\n            \"administrador\": \"true\",\n            \"_id\": \"9LxF0vW4m0Bc7Rtu\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"qliw@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"A0XW4CgHSmYnnlUf\"\n        },\n        {\n            \"nome\": \"Weber 40\",\n            \"email\": \"wsdesgtbvxye@mail.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"A6qpZQHP1DLgZmVZ\"\n        },\n        {\n            \"nome\": \"Brandon Jakubowski\",\n            \"email\": \"Maritza45@hotmail.com\",\n            \"password\": \"yKsneR_sw2NT8Un\",\n            \"administrador\": \"true\",\n            \"_id\": \"ASGTkKRr0F1f7ATG\"\n        },\n        {\n            \"nome\": \"Margie Koch-Stehr\",\n            \"email\": \"Brennon_Littel81@hotmail.com\",\n            \"password\": \"fQl5qQkd6xHbYVo\",\n            \"administrador\": \"false\",\n            \"_id\": \"AZzE7UeEwSBdI11l\"\n        },\n        {\n            \"nome\": \"Leslie Ondricka I\",\n            \"email\": \"Jackie83@yahoo.com\",\n            \"password\": \"4nyqqgA0c8nDc6A\",\n            \"administrador\": \"true\",\n            \"_id\": \"Ak1Wh4evPpp7z2bN\"\n        },\n        {\n            \"nome\": \"Teste Eduardo edite\",\n            \"email\": \"testeeduardo222@qa.com\",\n            \"password\": \"12345789\",\n            \"administrador\": \"true\",\n            \"_id\": \"Axldi78KNMfO1ShP\"\n        },\n        {\n            \"nome\": \"Christina Beer IV\",\n            \"email\": \"Jacinthe1@hotmail.com\",\n            \"password\": \"rY3BqzIHSdUQS5Z\",\n            \"administrador\": \"true\",\n            \"_id\": \"ByIp6wYmfcU36L3Z\"\n        },\n        {\n            \"nome\": \"Bryan Reynolds\",\n            \"email\": \"agreen@example.org\",\n            \"password\": \"E9ClRZZvx4Th\",\n            \"administrador\": \"true\",\n            \"_id\": \"C7OvK06XohCWgFIU\"\n        },\n        {\n            \"nome\": \"Kimberly Reinger\",\n            \"email\": \"Maritza50@yahoo.com\",\n            \"password\": \"XTsbHkKBFM45RIO\",\n            \"administrador\": \"true\",\n            \"_id\": \"CY9EWrxoytmjxUDJ\"\n        },\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"xgnp@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"Cbr6oAFoAWyLzhhX\"\n        },\n        {\n            \"nome\": \"Weber 40\",\n            \"email\": \"wsdesgtbvxyer@mail.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"D86LS7Qx6Rl3wHLu\"\n        },\n        {\n            \"nome\": \"Evan Schmitt\",\n            \"email\": \"Florida_Beier-Mitchell@hotmail.com\",\n            \"password\": \"Bu0y6HVKVrADVdp\",\n            \"administrador\": \"true\",\n            \"_id\": \"Dc4eLDemlemniGXq\"\n        },\n        {\n            \"nome\": \"Catherine Stark IV\",\n            \"email\": \"Max97@yahoo.com\",\n            \"password\": \"6_wmElvxgWu5D_r\",\n            \"administrador\": \"true\",\n            \"_id\": \"DjlloxVdhp1ROguN\"\n        },\n        {\n            \"nome\": \"Cris\",\n            \"email\": \"testeqa@teste.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"E0oPC5p9YIuYLekG\"\n        },\n        {\n            \"nome\": \"oooo\",\n            \"email\": \"0@email.com\",\n            \"password\": \"000\",\n            \"administrador\": \"true\",\n            \"_id\": \"EYmjNQ4OIhVVksEl\"\n        },\n        {\n            \"nome\": \"Ms. Tonya Shields\",\n            \"email\": \"Brionna_Reilly22@yahoo.com\",\n            \"password\": \"Pwk9g00GyMuU0AB\",\n            \"administrador\": \"true\",\n            \"_id\": \"Effb9VyPoEfW9Vxe\"\n        },\n        {\n            \"nome\": \"Candace Swaniawski\",\n            \"email\": \"Durward_Brown@hotmail.com\",\n            \"password\": \"BCcvoP3EtLi8PQW\",\n            \"administrador\": \"false\",\n            \"_id\": \"FQD5HyjaIVhaqLTV\"\n        },\n        {\n            \"nome\": \"Rolando Heaney\",\n            \"email\": \"Keaton_Stamm@hotmail.com\",\n            \"password\": \"Zke9Wn9MtK1pMAS\",\n            \"administrador\": \"true\",\n            \"_id\": \"G0nIzUm3mwIfVdyd\"\n        },\n        {\n            \"nome\": \"Stacy Doyle-Carter\",\n      ... (set the log level to DEBUG or TRACE to see the full content) \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.540",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.391",
                            "endtime": "20230609 19:09:02.540"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.540",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.540",
                            "endtime": "20230609 19:09:02.540"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.391",
                        "endtime": "20230609 19:09:02.540"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.542",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.541",
                            "endtime": "20230609 19:09:02.542"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.542",
                            "endtime": "20230609 19:09:02.543"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.541",
                        "endtime": "20230609 19:09:02.543"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.544",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.544",
                          "endtime": "20230609 19:09:02.544"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.543",
                        "endtime": "20230609 19:09:02.545"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 19:09:02.389",
                    "endtime": "20230609 19:09:02.545"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t2",
                  "name": "Scenario: Create a new user",
                  "line": "15"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.546",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.546",
                          "endtime": "20230609 19:09:02.546"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.546",
                        "endtime": "20230609 19:09:02.547"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given I have a valid user data",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Name",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": ":example 'John Doe'"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.547",
                            "level": "INFO"
                          },
                          "_text": "${name} = Michael Wolfe"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.547",
                            "endtime": "20230609 19:09:02.547"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Email",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${email}"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.548",
                            "level": "INFO"
                          },
                          "_text": "${email} = johntrujillo@example.org"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.548",
                            "endtime": "20230609 19:09:02.548"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Password",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${password}"
                        },
                        "arg": [
                          {
                            "_text": "length=12"
                          },
                          {
                            "_text": "special_chars=False"
                          }
                        ],
                        "doc": {
                          "_text": "Generate a random password of the specified ``length``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.549",
                            "level": "INFO"
                          },
                          "_text": "${password} = 89vjKvwbN8Gp"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.548",
                            "endtime": "20230609 19:09:02.549"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.549",
                            "level": "INFO"
                          },
                          "_text": "${name} = Michael Wolfe"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.549",
                            "endtime": "20230609 19:09:02.549"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${email}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.549",
                            "level": "INFO"
                          },
                          "_text": "${email} = johntrujillo@example.org"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.549",
                            "endtime": "20230609 19:09:02.549"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${password}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.550",
                            "level": "INFO"
                          },
                          "_text": "${password} = 89vjKvwbN8Gp"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.549",
                            "endtime": "20230609 19:09:02.550"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.547",
                        "endtime": "20230609 19:09:02.550"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I create the user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=${name}"
                          },
                          {
                            "_text": "email=${email}"
                          },
                          {
                            "_text": "password=${password}"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.551",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'Michael Wolfe', 'email': 'johntrujillo@example.org', 'password': '89vjKvwbN8Gp', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.550",
                            "endtime": "20230609 19:09:02.551"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.551",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.551",
                            "endtime": "20230609 19:09:02.551"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "POST On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a POST request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.621",
                              "level": "INFO"
                            },
                            "_text": "POST Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} \n body=b'{\"nome\": \"Michael Wolfe\", \"email\": \"johntrujillo@example.org\", \"password\": \"89vjKvwbN8Gp\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.622",
                              "level": "INFO"
                            },
                            "_text": "POST Response : url=https://serverest.dev/usuarios \n status=201, reason=Created \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8fa5613e-f208-4900-8b17-6621b10bc1ca', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6ccaf8c923226f1f29094a93be22eb5c', 'Date': 'Fri, 09 Jun 2023 19:09:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} \n body={\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"Oqm8XOLMJ3kLV6fu\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.622",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [201]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.551",
                            "endtime": "20230609 19:09:02.622"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Variable",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${user_id}"
                        },
                        "arg": {
                          "_text": "${response.json()['_id']}"
                        },
                        "doc": {
                          "_text": "Returns the given values which can then be assigned to a variables."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.623",
                            "level": "INFO"
                          },
                          "_text": "${user_id} = Oqm8XOLMJ3kLV6fu"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.622",
                            "endtime": "20230609 19:09:02.623"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Global Variable",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${USER_ID}"
                          },
                          {
                            "_text": "${user_id}"
                          }
                        ],
                        "doc": {
                          "_text": "Makes a variable available globally in all tests and suites."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.624",
                            "level": "INFO"
                          },
                          "_text": "${USER_ID} = Oqm8XOLMJ3kLV6fu"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.623",
                            "endtime": "20230609 19:09:02.624"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.624",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [201]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.624",
                            "endtime": "20230609 19:09:02.624"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.550",
                        "endtime": "20230609 19:09:02.624"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 201",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.626",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.625",
                            "endtime": "20230609 19:09:02.626"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.626",
                            "endtime": "20230609 19:09:02.626"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.625",
                        "endtime": "20230609 19:09:02.627"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.627",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.627",
                          "endtime": "20230609 19:09:02.628"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.627",
                        "endtime": "20230609 19:09:02.628"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 19:09:02.545",
                    "endtime": "20230609 19:09:02.628"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t3",
                  "name": "Scenario: Get a specific user informations",
                  "line": "22"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.629",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.629",
                          "endtime": "20230609 19:09:02.629"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.629",
                        "endtime": "20230609 19:09:02.630"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.702",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios/Oqm8XOLMJ3kLV6fu \n path_url=/usuarios/Oqm8XOLMJ3kLV6fu \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.703",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios/Oqm8XOLMJ3kLV6fu \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3a0f9fe1-3283-4d0a-afe1-ccf4ec32a64c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1428e87e8135e73c3f11688e57e352d7', 'Date': 'Fri, 09 Jun 2023 19:09:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '165'} \n body={\n    \"nome\": \"Michael Wolfe\",\n    \"email\": \"johntrujillo@example.org\",\n    \"password\": \"89vjKvwbN8Gp\",\n    \"administrador\": \"false\",\n    \"_id\": \"Oqm8XOLMJ3kLV6fu\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.703",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.630",
                            "endtime": "20230609 19:09:02.703"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.704",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.703",
                            "endtime": "20230609 19:09:02.704"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.630",
                        "endtime": "20230609 19:09:02.704"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.705",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.704",
                            "endtime": "20230609 19:09:02.705"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.705",
                            "endtime": "20230609 19:09:02.706"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.704",
                        "endtime": "20230609 19:09:02.706"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.707",
                          "level": "INFO"
                        },
                        "_text": "Length is 5"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.707",
                          "endtime": "20230609 19:09:02.707"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.706",
                        "endtime": "20230609 19:09:02.707"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 19:09:02.628",
                    "endtime": "20230609 19:09:02.707"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t4",
                  "name": "Scenario: Update the created user",
                  "line": "28"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.709",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.709",
                          "endtime": "20230609 19:09:02.709"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.708",
                        "endtime": "20230609 19:09:02.709"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I update the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=John Smith"
                          },
                          {
                            "_text": "email=john.smith@example.com"
                          },
                          {
                            "_text": "password=P@ssw0rd123"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.710",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.710",
                            "endtime": "20230609 19:09:02.710"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.710",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.710",
                            "endtime": "20230609 19:09:02.711"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "PUT On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a PUT request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.783",
                              "level": "INFO"
                            },
                            "_text": "PUT Request : url=https://serverest.dev/usuarios/Oqm8XOLMJ3kLV6fu \n path_url=/usuarios/Oqm8XOLMJ3kLV6fu \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} \n body=b'{\"nome\": \"John Smith\", \"email\": \"john.smith@example.com\", \"password\": \"P@ssw0rd123\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.784",
                              "level": "INFO"
                            },
                            "_text": "PUT Response : url=https://serverest.dev/usuarios/Oqm8XOLMJ3kLV6fu \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '25f46953-292e-402b-bf95-035c2b2515c7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c0dc32d67ecd1ca8786b9c8ef71c4731', 'Date': 'Fri, 09 Jun 2023 19:09:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} \n body={\n    \"message\": \"Registro alterado com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.784",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.711",
                            "endtime": "20230609 19:09:02.784"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.784",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.784",
                            "endtime": "20230609 19:09:02.785"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.709",
                        "endtime": "20230609 19:09:02.785"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.786",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.785",
                            "endtime": "20230609 19:09:02.786"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.786",
                            "endtime": "20230609 19:09:02.787"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.785",
                        "endtime": "20230609 19:09:02.787"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.788",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.788",
                          "endtime": "20230609 19:09:02.788"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.787",
                        "endtime": "20230609 19:09:02.788"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 19:09:02.708",
                    "endtime": "20230609 19:09:02.789"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t5",
                  "name": "Scenario: Delete the created user",
                  "line": "34"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.790",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.790",
                          "endtime": "20230609 19:09:02.790"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.789",
                        "endtime": "20230609 19:09:02.790"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I delete the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "DELETE On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a DELETE request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.863",
                              "level": "INFO"
                            },
                            "_text": "DELETE Request : url=https://serverest.dev/usuarios/Oqm8XOLMJ3kLV6fu \n path_url=/usuarios/Oqm8XOLMJ3kLV6fu \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.863",
                              "level": "INFO"
                            },
                            "_text": "DELETE Response : url=https://serverest.dev/usuarios/Oqm8XOLMJ3kLV6fu \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '246ae93a-5cea-4fbb-b26f-3159cdaf618e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '034ec97cf651c46996d9d0a00b8de7e6', 'Date': 'Fri, 09 Jun 2023 19:09:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} \n body={\n    \"message\": \"Registro excluído com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.863",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.791",
                            "endtime": "20230609 19:09:02.863"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.864",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.863",
                            "endtime": "20230609 19:09:02.864"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.790",
                        "endtime": "20230609 19:09:02.864"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20230609 19:09:02.865",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.864",
                            "endtime": "20230609 19:09:02.865"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20230609 19:09:02.865",
                            "endtime": "20230609 19:09:02.866"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.864",
                        "endtime": "20230609 19:09:02.866"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20230609 19:09:02.867",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.867",
                          "endtime": "20230609 19:09:02.867"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.866",
                        "endtime": "20230609 19:09:02.867"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20230609 19:09:02.789",
                    "endtime": "20230609 19:09:02.868"
                  }
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "PASS",
                "starttime": "20230609 19:09:01.593",
                "endtime": "20230609 19:09:02.868"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "PASS",
              "starttime": "20230609 19:09:01.590",
              "endtime": "20230609 19:09:02.870"
            }
          }
        },
        {
          "_attributes": {
            "id": "s1-s2",
            "name": "E2E",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s2-s1",
              "name": "Test Ui Signup",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s2-s1-t1",
                  "name": "Scenario: Signup with empty fields",
                  "line": "10"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.881",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.881",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.881",
                              "level": "FAIL"
                            },
                            "_text": "TypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20230609 19:09:02.880",
                            "endtime": "20230609 19:09:02.882"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20230609 19:09:02.882",
                            "endtime": "20230609 19:09:02.882"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20230609 19:09:02.880",
                        "endtime": "20230609 19:09:02.882"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.883",
                          "endtime": "20230609 19:09:02.883"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.883",
                        "endtime": "20230609 19:09:02.883"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20230609 19:09:02.879",
                    "endtime": "20230609 19:09:02.883"
                  },
                  "_text": "Setup failed:\nTypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t2",
                  "name": "Scenario: Signup done successfully",
                  "line": "16"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.886",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.886",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.886",
                              "level": "FAIL"
                            },
                            "_text": "TypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20230609 19:09:02.885",
                            "endtime": "20230609 19:09:02.886"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20230609 19:09:02.886",
                            "endtime": "20230609 19:09:02.886"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20230609 19:09:02.884",
                        "endtime": "20230609 19:09:02.886"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.887",
                          "endtime": "20230609 19:09:02.887"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.887",
                        "endtime": "20230609 19:09:02.887"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20230609 19:09:02.883",
                    "endtime": "20230609 19:09:02.887"
                  },
                  "_text": "Setup failed:\nTypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t3",
                  "name": "Scenario: Signup with already used email",
                  "line": "23"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.889",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.889",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20230609 19:09:02.889",
                              "level": "FAIL"
                            },
                            "_text": "TypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20230609 19:09:02.888",
                            "endtime": "20230609 19:09:02.889"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20230609 19:09:02.889",
                            "endtime": "20230609 19:09:02.889"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20230609 19:09:02.888",
                        "endtime": "20230609 19:09:02.889"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20230609 19:09:02.890",
                          "endtime": "20230609 19:09:02.890"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20230609 19:09:02.890",
                        "endtime": "20230609 19:09:02.890"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20230609 19:09:02.888",
                    "endtime": "20230609 19:09:02.890"
                  },
                  "_text": "Setup failed:\nTypeError: __init__() got an unexpected keyword argument 'service_log_path'"
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "FAIL",
                "starttime": "20230609 19:09:02.872",
                "endtime": "20230609 19:09:02.891"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "FAIL",
              "starttime": "20230609 19:09:02.870",
              "endtime": "20230609 19:09:02.891"
            }
          }
        }
      ],
      "status": {
        "_attributes": {
          "status": "FAIL",
          "starttime": "20230609 19:09:01.570",
          "endtime": "20230609 19:09:02.892"
        }
      }
    },
    "statistics": {
      "total": {
        "stat": {
          "_attributes": {
            "pass": "5",
            "fail": "3",
            "skip": "0"
          },
          "_text": "All Tests"
        }
      },
      "tag": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0"
            },
            "_text": "api"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0"
            },
            "_text": "e2e"
          }
        ]
      },
      "suite": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "3",
              "skip": "0",
              "id": "s1",
              "name": "Tests"
            },
            "_text": "Tests"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1",
              "name": "Api"
            },
            "_text": "Tests.Api"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1-s1",
              "name": "Test Api Users"
            },
            "_text": "Tests.Api.Test Api Users"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2",
              "name": "E2E"
            },
            "_text": "Tests.E2E"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2-s1",
              "name": "Test Ui Signup"
            },
            "_text": "Tests.E2E.Test Ui Signup"
          }
        ]
      }
    },
    "errors": {}
  }
}