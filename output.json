{
  "_declaration": {
    "_attributes": {
      "version": "1.0",
      "encoding": "UTF-8"
    }
  },
  "robot": {
    "_attributes": {
      "generator": "Robot 6.1.1 (Python 3.8.18 on linux)",
      "generated": "20231031 00:10:15.354",
      "rpa": "false",
      "schemaversion": "4"
    },
    "suite": {
      "_attributes": {
        "id": "s1",
        "name": "Tests",
        "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests"
      },
      "suite": [
        {
          "_attributes": {
            "id": "s1-s1",
            "name": "Api",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s1-s1",
              "name": "Test Api Users",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s1-s1-t1",
                  "name": "Scenario: Get all registered users",
                  "line": "9"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.123",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.122",
                          "endtime": "20231031 00:10:16.123"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.122",
                        "endtime": "20231031 00:10:16.123"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the list of all registered users",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.387",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.387",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a3dca431c15d58d84e2a8b3096e385b5;o=1', 'Date': 'Tue, 31 Oct 2023 00:10:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '35460'} \n body={\n    \"quantidade\": 165,\n    \"usuarios\": [\n        {\n            \"nome\": \"Vergie\",\n            \"email\": \"Katherine.Cruickshank52@hotmail.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"03JOloYqhuHrg8oJ\"\n        },\n        {\n            \"nome\": \"Jo√£o\",\n            \"email\": \"annab608_9a58f9cd-a92e-4382-ab9e-c5795eb5c4bd@email.com\",\n            \"password\": \"Senha123@\",\n            \"administrador\": \"true\",\n            \"_id\": \"0fh1zXckxsmG6Jv1\"\n        },\n        {\n            \"nome\": \"Esther Kovacek\",\n            \"email\": \"Linnea_Jenkins@yahoo.com\",\n            \"password\": \"PRZX2Llo_xjhqAh\",\n            \"administrador\": \"false\",\n            \"_id\": \"0yOr8IXvGEvKAVbz\"\n        },\n        {\n            \"nome\": \"Doyle Stehr DDS\",\n            \"email\": \"Alda62@yahoo.com\",\n            \"password\": \"RHCCMn2QUNPrgpQ\",\n            \"administrador\": \"false\",\n            \"_id\": \"141ylWI8zRWd8EO0\"\n        },\n        {\n            \"nome\": \"Nicolas\",\n            \"email\": \"Myrtie_Nolan@gmail.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"19YT9ww87QP5hRyl\"\n        },\n        {\n            \"nome\": \"Johanna Bailey\",\n            \"email\": \"Roscoe_Hauck@gmail.com\",\n            \"password\": \"c3izAczNl3HGdAh\",\n            \"administrador\": \"false\",\n            \"_id\": \"2ypzGJo2l7GOKpVv\"\n        },\n        {\n            \"nome\": \"Ernest Nolan\",\n            \"email\": \"Vilma_Schamberger64@hotmail.com\",\n            \"password\": \"TNcfuNVlfW4dgbQ\",\n            \"administrador\": \"false\",\n            \"_id\": \"3895OQ04VpGUXTlu\"\n        },\n        {\n            \"nome\": \"Teste1\",\n            \"email\": \"mbsz@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"3aOwN01CEsqHU0KI\"\n        },\n        {\n            \"nome\": \"Jody Johnston\",\n            \"email\": \"Mara.Grimes@hotmail.com\",\n            \"password\": \"Xa8CUk53GSSNfcn\",\n            \"administrador\": \"false\",\n            \"_id\": \"3tYjULi5Yv1W1prC\"\n        },\n        {\n            \"nome\": \"Alexandre Rezende\",\n            \"email\": \"kamilly55@example.com\",\n            \"password\": \"@j!WY*xQ5k\",\n            \"administrador\": \"true\",\n            \"_id\": \"44qBQK3gNefjXE60\"\n        },\n        {\n            \"nome\": \"Revail\",\n            \"email\": \"Claudete_Pereira@bol.com.br\",\n            \"password\": \"1234\",\n            \"administrador\": \"false\",\n            \"_id\": \"49qoEvEOXRHSuGht\"\n        },\n        {\n            \"nome\": \"Joana\",\n            \"email\": \"annab608_9f0b99c2-7084-49cf-aec5-62fe1fc99598@email.com\",\n            \"password\": \"SenhaDaJoana123@\",\n            \"administrador\": \"true\",\n            \"_id\": \"4FI66sPVe4LnQKw5\"\n        },\n        {\n            \"nome\": \"Teste1\",\n            \"email\": \"xfaj@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"4hRnZeJEjqzZZ83v\"\n        },\n        {\n            \"nome\": \"Bobbie Abbott\",\n            \"email\": \"Claude_Waters59@gmail.com\",\n            \"password\": \"UclWjOfqXmpLtRE\",\n            \"administrador\": \"false\",\n            \"_id\": \"4v39ErzjoiYGW4tt\"\n        },\n        {\n            \"nome\": \"Alejandrin\",\n            \"email\": \"testeapi@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"5O4ZJy0TFlYf4pG9\"\n        },\n        {\n            \"nome\": \"Teste1\",\n            \"email\": \"ylbb@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"5WDAVlWLbkqE2jwD\"\n        },\n        {\n            \"nome\": \"Nadine Bailey\",\n            \"email\": \"Ashleigh_Hayes75@gmail.com\",\n            \"password\": \"T9vsLmgkgfWAg8K\",\n            \"administrador\": \"false\",\n            \"_id\": \"5kZTwUBxBpnw1icc\"\n        },\n        {\n            \"nome\": \"Marty Schamberger\",\n            \"email\": \"Lindsey.Leffler@yahoo.com\",\n            \"password\": \"gf72t_GdVQlMpty\",\n            \"administrador\": \"false\",\n            \"_id\": \"5v8hJUlIP89dhhkp\"\n        },\n        {\n            \"nome\": \"Garrett White\",\n            \"email\": \"Marcella.Lang@yahoo.com\",\n            \"password\": \"PRZX2Llo_xjhqAh\",\n            \"administrador\": \"false\",\n            \"_id\": \"6IafPwkgAYJHneie\"\n        },\n        {\n            \"nome\": \"Douglas\",\n            \"email\": \"Ivah61@gmail.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"6UUGH4zqbAtZqdyW\"\n        },\n        {\n            \"nome\": \"Catarina Silva\",\n            \"email\": \"noah07@example.org\",\n            \"password\": \"#4NKxuh!A3\",\n            \"administrador\": \"true\",\n            \"_id\": \"6rbiXdJ9tVSiOXdb\"\n        },\n        {\n            \"nome\": \"Vini Moura\",\n            \"email\": \"QAxovGL@gmail.com\",\n            \"password\": \"senha dificil\",\n            \"administrador\": \"true\",\n            \"_id\": \"7IEzMlnxYc0oSCwK\"\n        },\n        {\n            \"nome\": \"Teresa Gutmann\",\n            \"email\": \"Cecil_Bins@gmail.com\",\n            \"password\": \"1XHeBUHp2GQIFVc\",\n            \"administrador\": \"false\",\n            \"_id\": \"7LL9neZ5XFJ1Hish\"\n        },\n        {\n            \"nome\": \"Teste1\",\n            \"email\": \"qfje@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"8KF78Thmr2exKF0X\"\n        },\n        {\n            \"nome\": \"Molly Schoen\",\n            \"email\": \"Willie.MacGyver@gmail.com\",\n            \"password\": \"wTZpoXGGVbMkczB\",\n            \"administrador\": \"false\",\n            \"_id\": \"8MTNotAq2MxFMfhy\"\n        },\n        {\n            \"nome\": \"Harriet Durgan\",\n            \"email\": \"Theresia.Treutel@gmail.com\",\n            \"password\": \"lehkHsseGDFYkB0\",\n            \"administrador\": \"false\",\n            \"_id\": \"8iL7kegHBUisnEif\"\n        },\n        {\n            \"nome\": \"Teste1\",\n            \"email\": \"uaqo@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"93ZSYl52E3Ebc8gQ\"\n        },\n        {\n            \"nome\": \"Teste1\",\n            \"email\": \"ugbo@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"9fAPQrzPbCKWr4pI\"\n        },\n        {\n            \"nome\": \"Teste1\",\n            \"email\": \"gmjy@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"BCq4ISPeaBtFOkyM\"\n        },\n        {\n            \"nome\": \"Teste1\",\n            \"email\": \"uyym@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"C93HuN10znhZTjfw\"\n        },\n        {\n            \"administrador\": \"false\",\n            \"email\": \"Gail_Lueilwitz18@yahoo.com\",\n            \"nome\": \"Leon Dickinson\",\n            \"password\": \"B6rWuloX6dt23Lv\",\n            \"_id\": \"CeV0Mcpexy2qtYaX\"\n        },\n        {\n            \"nome\": \"Galego silva\",\n            \"email\": \"galego.silva@hotmail.com\",\n            \"password\": \"123456\",\n            \"administrador\": \"true\",\n            \"_id\": \"D9c3UGhcEPjpRv7U\"\n        },\n        {\n            \"nome\": \"Laurie Borer\",\n            \"email\": \"Jayce.Cole-Carter48@hotmail.com\",\n            \"password\": \"V_ymioivSVTDcYv\",\n            \"administrador\": \"false\",\n            \"_id\": \"DePdsvH6NpAmpAAC\"\n        },\n        {\n            \"nome\": \"Conrad Ritchie\",\n            \"email\": \"Calista28@gmail.com\",\n            \"password\": \"tAqCTaQboWsByue\",\n            \"administrador\": \"false\",\n            \"_id\": \"DgsCpULkAFanND1J\"\n        },\n        {\n            \"nome\": \"Harriet Durgan\",\n            \"email\": \"Adrien_Hane87@hotmail.com\",\n            \"password\": \"lehkHsseGDFYkB0\",\n            \"administrador\": \"false\",\n            \"_id\": \"EB64OKN3ZlbMfM8c\"\n        },\n        {\n            \"nome\": \"Krystal Bashirian\",\n            \"email\": \"Bruce.Botsford-Jerde38@gmail.com\",\n            \"password\": \"vNpFN2WJZJ_OAbM\",\n            \"administrador\": \"false\",\n            \"_id\": \"EHnJcyQI4iEkBaGv\"\n        },\n        {\n            \"nome\": \"Rebeca Cardoso\",\n            \"email\": \"gcardoso@example.com\",\n            \"password\": \"+7jfFIr^(1\",\n            \"administrador\": \"true\",\n            \"_id\": \"ELoPTCmiWdTdEo2u\"\n        },\n        {\n            \"nome\": \"Maria\",\n            \"email\": \"maria@email.com\",\n            \"password\": \"SenhaDaMaria123@\",\n            \"administrador\": \"true\",\n            \"_id\": \"EwKzmMLWtHDGo2IL\"\n        },\n        {\n            \"nome\": \"Teste1\",\n            \"email\": \"mtwg@emailteste.com\",\n            \"password\": \"1234\",\n            \"administrador\": \"true\",\n            \"_id\": \"F3kodTCGZHAsgyr1\"\n        },\n        {\n            \"nome\": \"Berta\",\n            \"email\": \"Yolanda.Murphy@yahoo.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"F6cYoZUFKBDCpMrv\"\n        },\n        {\n            \"nome\": \"Chelsie\",\n            \"email\": \"Kenton.Homenick@hotmail.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"FBgCRpnrAknzljSS\"\n        },\n        {\n            \"nome\": \"Pat Dickens\",\n            \"email\": \"Marcus58@gmail.com\",\n            \"password\": \"MEONSu6M2o1kwhm\",\n            \"administrador\": \"false\",\n            \"_id\": \"FzUOLSsOG4cIZIBz\"\n        },\n        {\n            \"nome\": \"Teresa Gutmann\",\n            \"email\": \"Claire_Mann@yahoo.com\",\n            \"password\": \"1XHeBUHp2GQIFVc\",\n            \"administrador\": \"false\",\n            \"_id\": \"GC153s5douyY5dXG\"\n        },\n        {\n            \"nome\": \"Jo√£o\",\n            \"email\": \"annab608_47dab23e-1c05-47b3-a612-0ce466484b1d@email.com\",\n            \"password\": \"Senha123@\",\n            \"administrador\": \"true\",\n            \"_id\": \"Gg535wJD4k94HFhi\"\n        },\n        {\n            \"nome\": \"Usuario 1\",\n            \"email\": \"duarteluiz-gustavo@example.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"Ha74scJDzmvrPYBU\"\n        },\n        {\n            \"nome\": \"Floyd Rau\",\n            \"email\": \"Stanford_Macejkovic69@gmail.com\",\n            \"password\": \"2UfRyPTP... (set the log level to DEBUG or TRACE to see the full content) \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.388",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.124",
                            "endtime": "20231031 00:10:16.388"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.389",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.388",
                            "endtime": "20231031 00:10:16.389"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.124",
                        "endtime": "20231031 00:10:16.389"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.390",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.389",
                            "endtime": "20231031 00:10:16.390"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.390",
                            "endtime": "20231031 00:10:16.392"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.389",
                        "endtime": "20231031 00:10:16.392"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.393",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.392",
                          "endtime": "20231031 00:10:16.393"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.392",
                        "endtime": "20231031 00:10:16.393"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231031 00:10:16.121",
                    "endtime": "20231031 00:10:16.393"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t2",
                  "name": "Scenario: Create a new user",
                  "line": "15"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.395",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.395",
                          "endtime": "20231031 00:10:16.396"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.395",
                        "endtime": "20231031 00:10:16.396"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Given I have a valid user data",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Name",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": ":example: 'John Doe'"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.397",
                            "level": "INFO"
                          },
                          "_text": "${name} = Dr. Amber Parsons"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.396",
                            "endtime": "20231031 00:10:16.397"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Email",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${email}"
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.397",
                            "level": "INFO"
                          },
                          "_text": "${email} = david74@example.org"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.397",
                            "endtime": "20231031 00:10:16.397"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Password",
                          "library": "FakerLibrary"
                        },
                        "var": {
                          "_text": "${password}"
                        },
                        "arg": [
                          {
                            "_text": "length=12"
                          },
                          {
                            "_text": "special_chars=False"
                          }
                        ],
                        "doc": {
                          "_text": "Generate a random password of the specified ``length``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.398",
                            "level": "INFO"
                          },
                          "_text": "${password} = LPGyCK0hPWw0"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.397",
                            "endtime": "20231031 00:10:16.398"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${name}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.399",
                            "level": "INFO"
                          },
                          "_text": "${name} = Dr. Amber Parsons"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.398",
                            "endtime": "20231031 00:10:16.399"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${email}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.399",
                            "level": "INFO"
                          },
                          "_text": "${email} = david74@example.org"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.399",
                            "endtime": "20231031 00:10:16.399"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Suite Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${password}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current suite."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.399",
                            "level": "INFO"
                          },
                          "_text": "${password} = LPGyCK0hPWw0"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.399",
                            "endtime": "20231031 00:10:16.399"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.396",
                        "endtime": "20231031 00:10:16.400"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I create the user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=${name}"
                          },
                          {
                            "_text": "email=${email}"
                          },
                          {
                            "_text": "password=${password}"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.401",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'Dr. Amber Parsons', 'email': 'david74@example.org', 'password': 'LPGyCK0hPWw0', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.400",
                            "endtime": "20231031 00:10:16.401"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.401",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.401",
                            "endtime": "20231031 00:10:16.401"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "POST On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a POST request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.505",
                              "level": "INFO"
                            },
                            "_text": "POST Request : url=https://serverest.dev/usuarios \n path_url=/usuarios \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} \n body=b'{\"nome\": \"Dr. Amber Parsons\", \"email\": \"david74@example.org\", \"password\": \"LPGyCK0hPWw0\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.505",
                              "level": "INFO"
                            },
                            "_text": "POST Response : url=https://serverest.dev/usuarios \n status=201, reason=Created \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'db8a839894335c7a9c9c4cc7d13e8b6c', 'Date': 'Tue, 31 Oct 2023 00:10:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} \n body={\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"QyAk4oZf1I2OqFDc\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.505",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [201]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.401",
                            "endtime": "20231031 00:10:16.505"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Variable",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${user_id}"
                        },
                        "arg": {
                          "_text": "${response.json()['_id']}"
                        },
                        "doc": {
                          "_text": "Returns the given values which can then be assigned to a variables."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.506",
                            "level": "INFO"
                          },
                          "_text": "${user_id} = QyAk4oZf1I2OqFDc"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.505",
                            "endtime": "20231031 00:10:16.506"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Global Variable",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${USER_ID}"
                          },
                          {
                            "_text": "${user_id}"
                          }
                        ],
                        "doc": {
                          "_text": "Makes a variable available globally in all tests and suites."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.507",
                            "level": "INFO"
                          },
                          "_text": "${USER_ID} = QyAk4oZf1I2OqFDc"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.507",
                            "endtime": "20231031 00:10:16.507"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.508",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [201]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.507",
                            "endtime": "20231031 00:10:16.508"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.400",
                        "endtime": "20231031 00:10:16.508"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 201",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.509",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.509",
                            "endtime": "20231031 00:10:16.509"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.510",
                            "endtime": "20231031 00:10:16.510"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.508",
                        "endtime": "20231031 00:10:16.510"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.511",
                          "level": "INFO"
                        },
                        "_text": "Length is 2"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.511",
                          "endtime": "20231031 00:10:16.511"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.510",
                        "endtime": "20231031 00:10:16.512"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231031 00:10:16.394",
                    "endtime": "20231031 00:10:16.512"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t3",
                  "name": "Scenario: Get a specific user informations",
                  "line": "22"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.513",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.513",
                          "endtime": "20231031 00:10:16.514"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.513",
                        "endtime": "20231031 00:10:16.514"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I request the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "GET On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a GET request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.625",
                              "level": "INFO"
                            },
                            "_text": "GET Request : url=https://serverest.dev/usuarios/QyAk4oZf1I2OqFDc \n path_url=/usuarios/QyAk4oZf1I2OqFDc \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.626",
                              "level": "INFO"
                            },
                            "_text": "GET Response : url=https://serverest.dev/usuarios/QyAk4oZf1I2OqFDc \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd3d7ddcbef638a093247a285de51b9f5', 'Date': 'Tue, 31 Oct 2023 00:10:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} \n body={\n    \"nome\": \"Dr. Amber Parsons\",\n    \"email\": \"david74@example.org\",\n    \"password\": \"LPGyCK0hPWw0\",\n    \"administrador\": \"false\",\n    \"_id\": \"QyAk4oZf1I2OqFDc\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.626",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.514",
                            "endtime": "20231031 00:10:16.626"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.627",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.626",
                            "endtime": "20231031 00:10:16.627"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.514",
                        "endtime": "20231031 00:10:16.627"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.629",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.628",
                            "endtime": "20231031 00:10:16.629"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.629",
                            "endtime": "20231031 00:10:16.630"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.627",
                        "endtime": "20231031 00:10:16.630"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.632",
                          "level": "INFO"
                        },
                        "_text": "Length is 5"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.631",
                          "endtime": "20231031 00:10:16.632"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.630",
                        "endtime": "20231031 00:10:16.632"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231031 00:10:16.512",
                    "endtime": "20231031 00:10:16.632"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t4",
                  "name": "Scenario: Update the created user",
                  "line": "28"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.634",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.634",
                          "endtime": "20231031 00:10:16.635"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.633",
                        "endtime": "20231031 00:10:16.635"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I update the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${payload}"
                        },
                        "arg": [
                          {
                            "_text": "nome=John Smith"
                          },
                          {
                            "_text": "email=john.smith@example.com"
                          },
                          {
                            "_text": "password=P@ssw0rd123"
                          },
                          {
                            "_text": "administrador=false"
                          }
                        ],
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.636",
                            "level": "INFO"
                          },
                          "_text": "${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.636",
                            "endtime": "20231031 00:10:16.636"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Create Dictionary",
                          "library": "BuiltIn"
                        },
                        "var": {
                          "_text": "${headers}"
                        },
                        "arg": {
                          "_text": "Content-Type=application/json"
                        },
                        "doc": {
                          "_text": "Creates and returns a dictionary based on the given ``items``."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.637",
                            "level": "INFO"
                          },
                          "_text": "${headers} = {'Content-Type': 'application/json'}"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.637",
                            "endtime": "20231031 00:10:16.637"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "PUT On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          },
                          {
                            "_text": "json=${payload}"
                          },
                          {
                            "_text": "headers=${headers}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a PUT request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.741",
                              "level": "INFO"
                            },
                            "_text": "PUT Request : url=https://serverest.dev/usuarios/QyAk4oZf1I2OqFDc \n path_url=/usuarios/QyAk4oZf1I2OqFDc \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} \n body=b'{\"nome\": \"John Smith\", \"email\": \"john.smith@example.com\", \"password\": \"P@ssw0rd123\", \"administrador\": \"false\"}' \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.741",
                              "level": "INFO"
                            },
                            "_text": "PUT Response : url=https://serverest.dev/usuarios/QyAk4oZf1I2OqFDc \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '63d7fe740492db7211d9ef526993d7ce', 'Date': 'Tue, 31 Oct 2023 00:10:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} \n body={\n    \"message\": \"Registro alterado com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.741",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.638",
                            "endtime": "20231031 00:10:16.741"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.742",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.742",
                            "endtime": "20231031 00:10:16.742"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.635",
                        "endtime": "20231031 00:10:16.743"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.746",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.744",
                            "endtime": "20231031 00:10:16.746"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.746",
                            "endtime": "20231031 00:10:16.747"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.743",
                        "endtime": "20231031 00:10:16.747"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.748",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.748",
                          "endtime": "20231031 00:10:16.748"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.747",
                        "endtime": "20231031 00:10:16.749"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231031 00:10:16.633",
                    "endtime": "20231031 00:10:16.749"
                  }
                }
              },
              {
                "_attributes": {
                  "id": "s1-s1-s1-t5",
                  "name": "Scenario: Delete the created user",
                  "line": "34"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Create Session",
                        "library": "RequestsLibrary"
                      },
                      "arg": [
                        {
                          "_text": "serverest"
                        },
                        {
                          "_text": "${SERVER_BASE_URL}"
                        },
                        {
                          "_text": "disable_warnings=True"
                        }
                      ],
                      "doc": {
                        "_text": "Create Session: create a HTTP session to a server"
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.751",
                          "level": "INFO"
                        },
                        "_text": "Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 "
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.750",
                          "endtime": "20231031 00:10:16.751"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.750",
                        "endtime": "20231031 00:10:16.751"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "When I delete the created user",
                      "library": "test_keywords_users"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "DELETE On Session",
                          "library": "RequestsLibrary"
                        },
                        "var": {
                          "_text": "${response}"
                        },
                        "arg": [
                          {
                            "_text": "serverest"
                          },
                          {
                            "_text": "${USERS_API_ENDPOINT}/${USER_ID}"
                          }
                        ],
                        "doc": {
                          "_text": "Sends a DELETE request on a previously created HTTP Session."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.852",
                              "level": "INFO"
                            },
                            "_text": "DELETE Request : url=https://serverest.dev/usuarios/QyAk4oZf1I2OqFDc \n path_url=/usuarios/QyAk4oZf1I2OqFDc \n headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} \n body=None \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.852",
                              "level": "INFO"
                            },
                            "_text": "DELETE Response : url=https://serverest.dev/usuarios/QyAk4oZf1I2OqFDc \n status=200, reason=OK \n headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a6019ae2e80e6508354e0fce29aa50e8', 'Date': 'Tue, 31 Oct 2023 00:10:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} \n body={\n    \"message\": \"Registro exclu√≠do com sucesso\"\n} \n "
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.852",
                              "level": "INFO"
                            },
                            "_text": "${response} = <Response [200]>"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.751",
                            "endtime": "20231031 00:10:16.852"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Set Test Variable",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response}"
                        },
                        "doc": {
                          "_text": "Makes a variable available everywhere within the scope of the current test."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.853",
                            "level": "INFO"
                          },
                          "_text": "${response} = <Response [200]>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.853",
                            "endtime": "20231031 00:10:16.853"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.751",
                        "endtime": "20231031 00:10:16.853"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "Then the response status code should be 200",
                      "library": "test_keywords_users",
                      "sourcename": "Then the response status code should be ${status_code}"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Should Be Equal As Numbers",
                          "library": "BuiltIn"
                        },
                        "arg": [
                          {
                            "_text": "${response.status_code}"
                          },
                          {
                            "_text": "${status_code}"
                          }
                        ],
                        "doc": {
                          "_text": "Fails if objects are unequal after converting them to real numbers."
                        },
                        "msg": {
                          "_attributes": {
                            "timestamp": "20231031 00:10:16.855",
                            "level": "INFO"
                          },
                          "_text": "Argument types are:\n<class 'int'>\n<class 'str'>"
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.854",
                            "endtime": "20231031 00:10:16.855"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Should Be True",
                          "library": "BuiltIn"
                        },
                        "arg": {
                          "_text": "${response.json()}"
                        },
                        "doc": {
                          "_text": "Fails if the given condition is not true."
                        },
                        "status": {
                          "_attributes": {
                            "status": "PASS",
                            "starttime": "20231031 00:10:16.855",
                            "endtime": "20231031 00:10:16.856"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.853",
                        "endtime": "20231031 00:10:16.856"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "And the response body should not be empty",
                      "library": "test_keywords_users"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Should Not Be Empty",
                        "library": "BuiltIn"
                      },
                      "arg": {
                        "_text": "${response.json()}"
                      },
                      "doc": {
                        "_text": "Verifies that the given item is not empty."
                      },
                      "msg": {
                        "_attributes": {
                          "timestamp": "20231031 00:10:16.857",
                          "level": "INFO"
                        },
                        "_text": "Length is 1"
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:16.856",
                          "endtime": "20231031 00:10:16.857"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:16.856",
                        "endtime": "20231031 00:10:16.857"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "api"
                },
                "status": {
                  "_attributes": {
                    "status": "PASS",
                    "starttime": "20231031 00:10:16.749",
                    "endtime": "20231031 00:10:16.857"
                  }
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "PASS",
                "starttime": "20231031 00:10:15.381",
                "endtime": "20231031 00:10:16.858"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "PASS",
              "starttime": "20231031 00:10:15.379",
              "endtime": "20231031 00:10:16.859"
            }
          }
        },
        {
          "_attributes": {
            "id": "s1-s2",
            "name": "E2E",
            "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e"
          },
          "suite": {
            "_attributes": {
              "id": "s1-s2-s1",
              "name": "Test Ui Signup",
              "source": "/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot"
            },
            "test": [
              {
                "_attributes": {
                  "id": "s1-s2-s1-t1",
                  "name": "Scenario: Signup with empty fields",
                  "line": "10"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:16.873",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:18.224",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:18.225",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5600fea65fb3 <unknown>\n#1 0x5600fe7394a7 <unknown>\n#2 0x5600fe76cc93 <unknown>\n#3 0x5600fe76910c <unknown>\n#4 0x5600fe7abac6 <unknown>\n#5 0x5600fe7a2713 <unknown>\n#6 0x5600fe77518b <unknown>\n#7 0x5600fe775f7e <unknown>\n#8 0x5600fea2b8d8 <unknown>\n#9 0x5600fea2f800 <unknown>\n#10 0x5600fea39cfc <unknown>\n#11 0x5600fea30418 <unknown>\n#12 0x5600fe9fd42f <unknown>\n#13 0x5600fea544e8 <unknown>\n#14 0x5600fea546b4 <unknown>\n#15 0x5600fea65143 <unknown>\n#16 0x7f0dfd494ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231031 00:10:16.873",
                            "endtime": "20231031 00:10:18.227"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231031 00:10:18.228",
                            "endtime": "20231031 00:10:18.228"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231031 00:10:16.872",
                        "endtime": "20231031 00:10:18.228"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:18.229",
                          "endtime": "20231031 00:10:18.229"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:18.228",
                        "endtime": "20231031 00:10:18.229"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231031 00:10:16.872",
                    "endtime": "20231031 00:10:18.230"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5600fea65fb3 <unknown>\n#1 0x5600fe7394a7 <unknown>\n#2 0x5600fe76cc93 <unknown>\n#3 0x5600fe76910c <unknown>\n#4 0x5600fe7abac6 <unknown>\n#5 0x5600fe7a2713 <unknown>\n#6 0x5600fe77518b <unknown>\n#7 0x5600fe775f7e <unknown>\n#8 0x5600fea2b8d8 <unknown>\n#9 0x5600fea2f800 <unknown>\n#10 0x5600fea39cfc <unknown>\n#11 0x5600fea30418 <unknown>\n#12 0x5600fe9fd42f <unknown>\n#13 0x5600fea544e8 <unknown>\n#14 0x5600fea546b4 <unknown>\n#15 0x5600fea65143 <unknown>\n#16 0x7f0dfd494ac3 <unknown>\n"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t2",
                  "name": "Scenario: Signup done successfully",
                  "line": "16"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:18.234",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:18.919",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:18.920",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564a9242dfb3 <unknown>\n#1 0x564a921014a7 <unknown>\n#2 0x564a92134c93 <unknown>\n#3 0x564a9213110c <unknown>\n#4 0x564a92173ac6 <unknown>\n#5 0x564a9216a713 <unknown>\n#6 0x564a9213d18b <unknown>\n#7 0x564a9213df7e <unknown>\n#8 0x564a923f38d8 <unknown>\n#9 0x564a923f7800 <unknown>\n#10 0x564a92401cfc <unknown>\n#11 0x564a923f8418 <unknown>\n#12 0x564a923c542f <unknown>\n#13 0x564a9241c4e8 <unknown>\n#14 0x564a9241c6b4 <unknown>\n#15 0x564a9242d143 <unknown>\n#16 0x7f624b294ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231031 00:10:18.233",
                            "endtime": "20231031 00:10:18.920"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231031 00:10:18.921",
                            "endtime": "20231031 00:10:18.921"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231031 00:10:18.232",
                        "endtime": "20231031 00:10:18.921"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:18.922",
                          "endtime": "20231031 00:10:18.922"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:18.922",
                        "endtime": "20231031 00:10:18.922"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231031 00:10:18.230",
                    "endtime": "20231031 00:10:18.923"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564a9242dfb3 <unknown>\n#1 0x564a921014a7 <unknown>\n#2 0x564a92134c93 <unknown>\n#3 0x564a9213110c <unknown>\n#4 0x564a92173ac6 <unknown>\n#5 0x564a9216a713 <unknown>\n#6 0x564a9213d18b <unknown>\n#7 0x564a9213df7e <unknown>\n#8 0x564a923f38d8 <unknown>\n#9 0x564a923f7800 <unknown>\n#10 0x564a92401cfc <unknown>\n#11 0x564a923f8418 <unknown>\n#12 0x564a923c542f <unknown>\n#13 0x564a9241c4e8 <unknown>\n#14 0x564a9241c6b4 <unknown>\n#15 0x564a9242d143 <unknown>\n#16 0x7f624b294ac3 <unknown>\n"
                }
              },
              {
                "_attributes": {
                  "id": "s1-s2-s1-t3",
                  "name": "Scenario: Signup with already used email",
                  "line": "23"
                },
                "kw": [
                  {
                    "_attributes": {
                      "name": "Before Tests",
                      "library": "test_keywords_common",
                      "type": "SETUP"
                    },
                    "kw": [
                      {
                        "_attributes": {
                          "name": "Open Browser",
                          "library": "SeleniumLibrary"
                        },
                        "arg": [
                          {
                            "_text": "${SERVER_BASE_URL}"
                          },
                          {
                            "_text": "${HEADLESS} ${BROWSER}"
                          }
                        ],
                        "doc": {
                          "_text": "Opens a new browser instance to the optional ``url``."
                        },
                        "msg": [
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:18.928",
                              "level": "INFO"
                            },
                            "_text": "Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:19.663",
                              "level": "INFO"
                            },
                            "_text": "Cannot capture screenshot because no browser is open."
                          },
                          {
                            "_attributes": {
                              "timestamp": "20231031 00:10:19.663",
                              "level": "FAIL"
                            },
                            "_text": "SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564a794f6fb3 <unknown>\n#1 0x564a791ca4a7 <unknown>\n#2 0x564a791fdc93 <unknown>\n#3 0x564a791fa10c <unknown>\n#4 0x564a7923cac6 <unknown>\n#5 0x564a79233713 <unknown>\n#6 0x564a7920618b <unknown>\n#7 0x564a79206f7e <unknown>\n#8 0x564a794bc8d8 <unknown>\n#9 0x564a794c0800 <unknown>\n#10 0x564a794cacfc <unknown>\n#11 0x564a794c1418 <unknown>\n#12 0x564a7948e42f <unknown>\n#13 0x564a794e54e8 <unknown>\n#14 0x564a794e56b4 <unknown>\n#15 0x564a794f6143 <unknown>\n#16 0x7fa334e94ac3 <unknown>\n"
                          }
                        ],
                        "status": {
                          "_attributes": {
                            "status": "FAIL",
                            "starttime": "20231031 00:10:18.927",
                            "endtime": "20231031 00:10:19.664"
                          }
                        }
                      },
                      {
                        "_attributes": {
                          "name": "Maximize Browser Window",
                          "library": "SeleniumLibrary"
                        },
                        "doc": {
                          "_text": "Maximizes current browser window."
                        },
                        "status": {
                          "_attributes": {
                            "status": "NOT RUN",
                            "starttime": "20231031 00:10:19.664",
                            "endtime": "20231031 00:10:19.664"
                          }
                        }
                      }
                    ],
                    "status": {
                      "_attributes": {
                        "status": "FAIL",
                        "starttime": "20231031 00:10:18.926",
                        "endtime": "20231031 00:10:19.664"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "name": "After Tests",
                      "library": "test_keywords_common",
                      "type": "TEARDOWN"
                    },
                    "kw": {
                      "_attributes": {
                        "name": "Close Browser",
                        "library": "SeleniumLibrary"
                      },
                      "doc": {
                        "_text": "Closes the current browser."
                      },
                      "status": {
                        "_attributes": {
                          "status": "PASS",
                          "starttime": "20231031 00:10:19.665",
                          "endtime": "20231031 00:10:19.666"
                        }
                      }
                    },
                    "status": {
                      "_attributes": {
                        "status": "PASS",
                        "starttime": "20231031 00:10:19.665",
                        "endtime": "20231031 00:10:19.666"
                      }
                    }
                  }
                ],
                "tag": {
                  "_text": "e2e"
                },
                "status": {
                  "_attributes": {
                    "status": "FAIL",
                    "starttime": "20231031 00:10:18.923",
                    "endtime": "20231031 00:10:19.666"
                  },
                  "_text": "Setup failed:\nSessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564a794f6fb3 <unknown>\n#1 0x564a791ca4a7 <unknown>\n#2 0x564a791fdc93 <unknown>\n#3 0x564a791fa10c <unknown>\n#4 0x564a7923cac6 <unknown>\n#5 0x564a79233713 <unknown>\n#6 0x564a7920618b <unknown>\n#7 0x564a79206f7e <unknown>\n#8 0x564a794bc8d8 <unknown>\n#9 0x564a794c0800 <unknown>\n#10 0x564a794cacfc <unknown>\n#11 0x564a794c1418 <unknown>\n#12 0x564a7948e42f <unknown>\n#13 0x564a794e54e8 <unknown>\n#14 0x564a794e56b4 <unknown>\n#15 0x564a794f6143 <unknown>\n#16 0x7fa334e94ac3 <unknown>\n"
                }
              }
            ],
            "status": {
              "_attributes": {
                "status": "FAIL",
                "starttime": "20231031 00:10:16.862",
                "endtime": "20231031 00:10:19.668"
              }
            }
          },
          "status": {
            "_attributes": {
              "status": "FAIL",
              "starttime": "20231031 00:10:16.860",
              "endtime": "20231031 00:10:19.669"
            }
          }
        }
      ],
      "status": {
        "_attributes": {
          "status": "FAIL",
          "starttime": "20231031 00:10:15.355",
          "endtime": "20231031 00:10:19.670"
        }
      }
    },
    "statistics": {
      "total": {
        "stat": {
          "_attributes": {
            "pass": "5",
            "fail": "3",
            "skip": "0"
          },
          "_text": "All Tests"
        }
      },
      "tag": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0"
            },
            "_text": "api"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0"
            },
            "_text": "e2e"
          }
        ]
      },
      "suite": {
        "stat": [
          {
            "_attributes": {
              "pass": "5",
              "fail": "3",
              "skip": "0",
              "id": "s1",
              "name": "Tests"
            },
            "_text": "Tests"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1",
              "name": "Api"
            },
            "_text": "Tests.Api"
          },
          {
            "_attributes": {
              "pass": "5",
              "fail": "0",
              "skip": "0",
              "id": "s1-s1-s1",
              "name": "Test Api Users"
            },
            "_text": "Tests.Api.Test Api Users"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2",
              "name": "E2E"
            },
            "_text": "Tests.E2E"
          },
          {
            "_attributes": {
              "pass": "0",
              "fail": "3",
              "skip": "0",
              "id": "s1-s2-s1",
              "name": "Test Ui Signup"
            },
            "_text": "Tests.E2E.Test Ui Signup"
          }
        ]
      }
    },
    "errors": {}
  }
}