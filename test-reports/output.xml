<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230424 09:11:06.837" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests">
<suite id="s1-s1" name="Api" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api">
<suite id="s1-s1-s1" name="Users" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api\users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\api\users\test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 09:11:08.849" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 09:11:08.849" endtime="20230424 09:11:08.849"/>
</kw>
<status status="PASS" starttime="20230424 09:11:08.848" endtime="20230424 09:11:08.849"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 09:11:09.654" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230424 09:11:09.655" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a4c67b23-80e9-43d8-a499-0697f504f430', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0ee7ddcbad0089cd984d59e23a2606fa;o=1', 'Date': 'Mon, 24 Apr 2023 12:11:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '1580'} 
 body={
    "quantidade": 7,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Usuario 74790",
            "email": "usuario74790@example.com",
            "password": "senha36916",
            "administrador": "true",
            "_id": "3oJpU776D6YdgcPG"
        },
        {
            "nome": "Wilbur Fadel",
            "email": "wilburfadel@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "8Qet9wxmM6HIdh6C"
        },
        {
            "nome": "Gary Ruecker",
            "email": "garyruecker@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "95uY2ynbNMCIMxu1"
        },
        {
            "nome": "Rafael Bercam",
            "email": "rafaelbercam@qa.com",
            "password": "1497f87adf5b352abd0360de96c041409a4ce521",
            "administrador": "true",
            "_id": "S0g84ueUf0q2ij7d"
        },
        {
            "nome": "Penny Lockman",
            "email": "pennylockman@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "VSx60sYXT0PMRzKR"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Collin_Bradtke@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "WUB1HZZUdXqpmkz2"
        }
    ]
} 
 </msg>
<msg timestamp="20230424 09:11:09.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:08.858" endtime="20230424 09:11:09.655"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 09:11:09.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:09.655" endtime="20230424 09:11:09.655"/>
</kw>
<status status="PASS" starttime="20230424 09:11:08.858" endtime="20230424 09:11:09.656"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 09:11:09.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 09:11:09.658" endtime="20230424 09:11:09.658"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 09:11:09.658" endtime="20230424 09:11:09.659"/>
</kw>
<status status="PASS" starttime="20230424 09:11:09.658" endtime="20230424 09:11:09.659"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 09:11:09.662" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230424 09:11:09.662" endtime="20230424 09:11:09.662"/>
</kw>
<status status="PASS" starttime="20230424 09:11:09.661" endtime="20230424 09:11:09.662"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 09:11:08.847" endtime="20230424 09:11:09.662"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 09:11:09.664" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 09:11:09.664" endtime="20230424 09:11:09.664"/>
</kw>
<status status="PASS" starttime="20230424 09:11:09.664" endtime="20230424 09:11:09.665"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230424 09:11:09.666" level="INFO">${name} = Jacob Palmer</msg>
<status status="PASS" starttime="20230424 09:11:09.665" endtime="20230424 09:11:09.666"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230424 09:11:09.666" level="INFO">${email} = sheila35@example.org</msg>
<status status="PASS" starttime="20230424 09:11:09.666" endtime="20230424 09:11:09.666"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230424 09:11:09.666" level="INFO">${password} = i6DurfPw)%</msg>
<status status="PASS" starttime="20230424 09:11:09.666" endtime="20230424 09:11:09.666"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230424 09:11:09.667" level="INFO">${name} = Jacob Palmer</msg>
<status status="PASS" starttime="20230424 09:11:09.666" endtime="20230424 09:11:09.667"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230424 09:11:09.667" level="INFO">${email} = sheila35@example.org</msg>
<status status="PASS" starttime="20230424 09:11:09.667" endtime="20230424 09:11:09.667"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230424 09:11:09.668" level="INFO">${password} = i6DurfPw)%</msg>
<status status="PASS" starttime="20230424 09:11:09.668" endtime="20230424 09:11:09.668"/>
</kw>
<status status="PASS" starttime="20230424 09:11:09.665" endtime="20230424 09:11:09.668"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 09:11:09.668" level="INFO">${payload} = {'nome': 'Jacob Palmer', 'email': 'sheila35@example.org', 'password': 'i6DurfPw)%', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230424 09:11:09.668" endtime="20230424 09:11:09.668"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 09:11:09.669" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230424 09:11:09.668" endtime="20230424 09:11:09.669"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 09:11:10.028" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"nome": "Jacob Palmer", "email": "sheila35@example.org", "password": "i6DurfPw)%", "administrador": "false"}' 
 </msg>
<msg timestamp="20230424 09:11:10.028" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '52192374-22bd-46ba-8c17-d18abf652be8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6e598f0746896de22a5c3f115e55b33a', 'Date': 'Mon, 24 Apr 2023 12:11:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "HYHD0kK3E6RbY1gN"
} 
 </msg>
<msg timestamp="20230424 09:11:10.028" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:09.669" endtime="20230424 09:11:10.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230424 09:11:10.028" level="INFO">${user_id} = HYHD0kK3E6RbY1gN</msg>
<status status="PASS" starttime="20230424 09:11:10.028" endtime="20230424 09:11:10.028"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230424 09:11:10.028" level="INFO">${USER_ID} = HYHD0kK3E6RbY1gN</msg>
<status status="PASS" starttime="20230424 09:11:10.028" endtime="20230424 09:11:10.028"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 09:11:10.029" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:10.029" endtime="20230424 09:11:10.029"/>
</kw>
<status status="PASS" starttime="20230424 09:11:09.668" endtime="20230424 09:11:10.029"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 09:11:10.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 09:11:10.030" endtime="20230424 09:11:10.031"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 09:11:10.031" endtime="20230424 09:11:10.031"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.030" endtime="20230424 09:11:10.031"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 09:11:10.032" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230424 09:11:10.032" endtime="20230424 09:11:10.032"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.031" endtime="20230424 09:11:10.033"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 09:11:09.663" endtime="20230424 09:11:10.033"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 09:11:10.039" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 09:11:10.039" endtime="20230424 09:11:10.039"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.038" endtime="20230424 09:11:10.039"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 09:11:10.364" level="INFO">GET Request : url=https://serverest.dev/usuarios/HYHD0kK3E6RbY1gN 
 path_url=/usuarios/HYHD0kK3E6RbY1gN 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230424 09:11:10.365" level="INFO">GET Response : url=https://serverest.dev/usuarios/HYHD0kK3E6RbY1gN 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4ab3fa37-5608-4459-8e1d-64e40e5de418', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8381ff30df93a68d7ab618ed75aca043', 'Date': 'Mon, 24 Apr 2023 12:11:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '158'} 
 body={
    "nome": "Jacob Palmer",
    "email": "sheila35@example.org",
    "password": "i6DurfPw)%",
    "administrador": "false",
    "_id": "HYHD0kK3E6RbY1gN"
} 
 </msg>
<msg timestamp="20230424 09:11:10.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:10.040" endtime="20230424 09:11:10.365"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 09:11:10.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:10.365" endtime="20230424 09:11:10.365"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.040" endtime="20230424 09:11:10.365"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 09:11:10.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 09:11:10.368" endtime="20230424 09:11:10.369"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 09:11:10.369" endtime="20230424 09:11:10.369"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.368" endtime="20230424 09:11:10.369"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 09:11:10.372" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230424 09:11:10.371" endtime="20230424 09:11:10.372"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.371" endtime="20230424 09:11:10.372"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 09:11:10.038" endtime="20230424 09:11:10.378"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 09:11:10.380" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 09:11:10.379" endtime="20230424 09:11:10.380"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.379" endtime="20230424 09:11:10.380"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 09:11:10.381" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230424 09:11:10.380" endtime="20230424 09:11:10.381"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 09:11:10.381" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230424 09:11:10.381" endtime="20230424 09:11:10.381"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 09:11:10.711" level="INFO">PUT Request : url=https://serverest.dev/usuarios/HYHD0kK3E6RbY1gN 
 path_url=/usuarios/HYHD0kK3E6RbY1gN 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230424 09:11:10.712" level="INFO">PUT Response : url=https://serverest.dev/usuarios/HYHD0kK3E6RbY1gN 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3e8610ec-af83-4236-85cf-02756c51dfae', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fe3026eebc8d3798d37eec6a8bc61262', 'Date': 'Mon, 24 Apr 2023 12:11:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230424 09:11:10.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:10.381" endtime="20230424 09:11:10.712"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 09:11:10.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:10.712" endtime="20230424 09:11:10.712"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.380" endtime="20230424 09:11:10.712"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 09:11:10.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 09:11:10.715" endtime="20230424 09:11:10.716"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 09:11:10.716" endtime="20230424 09:11:10.716"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.715" endtime="20230424 09:11:10.716"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 09:11:10.719" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230424 09:11:10.718" endtime="20230424 09:11:10.719"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.717" endtime="20230424 09:11:10.719"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 09:11:10.379" endtime="20230424 09:11:10.719"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 09:11:10.727" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 09:11:10.726" endtime="20230424 09:11:10.727"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.726" endtime="20230424 09:11:10.727"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 09:11:11.058" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/HYHD0kK3E6RbY1gN 
 path_url=/usuarios/HYHD0kK3E6RbY1gN 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230424 09:11:11.058" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/HYHD0kK3E6RbY1gN 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5af42731-7fb3-4173-8c9e-ee19ccaaaa1d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7fae489e0e63b972524c2909be055339', 'Date': 'Mon, 24 Apr 2023 12:11:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230424 09:11:11.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:10.727" endtime="20230424 09:11:11.058"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 09:11:11.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 09:11:11.058" endtime="20230424 09:11:11.058"/>
</kw>
<status status="PASS" starttime="20230424 09:11:10.727" endtime="20230424 09:11:11.058"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 09:11:11.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 09:11:11.059" endtime="20230424 09:11:11.060"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 09:11:11.060" endtime="20230424 09:11:11.060"/>
</kw>
<status status="PASS" starttime="20230424 09:11:11.059" endtime="20230424 09:11:11.060"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 09:11:11.062" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230424 09:11:11.062" endtime="20230424 09:11:11.062"/>
</kw>
<status status="PASS" starttime="20230424 09:11:11.061" endtime="20230424 09:11:11.062"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 09:11:10.726" endtime="20230424 09:11:11.065"/>
</test>
<status status="PASS" starttime="20230424 09:11:06.916" endtime="20230424 09:11:11.068"/>
</suite>
<status status="PASS" starttime="20230424 09:11:06.900" endtime="20230424 09:11:11.070"/>
</suite>
<status status="PASS" starttime="20230424 09:11:06.891" endtime="20230424 09:11:11.071"/>
</suite>
<suite id="s1-s2" name="Ui" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui">
<suite id="s1-s2-s1" name="Login" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui\login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="C:\Users\samue\OneDrive\Área de Trabalho\gen-ai-robot-test\tests\ui\login\test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 09:11:11.093" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 09:11:11.092" endtime="20230424 09:11:17.427"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 09:11:17.427" endtime="20230424 09:11:17.546"/>
</kw>
<status status="PASS" starttime="20230424 09:11:11.092" endtime="20230424 09:11:17.546"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 09:11:17.547" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 09:11:17.547" endtime="20230424 09:11:17.595"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 09:11:17.601" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 09:11:17.595" endtime="20230424 09:11:17.601"/>
</kw>
<status status="PASS" starttime="20230424 09:11:17.547" endtime="20230424 09:11:17.601"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:17.602" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 09:11:17.602" endtime="20230424 09:11:17.766"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:17.767" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 09:11:17.767" endtime="20230424 09:11:17.863"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:17.864" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 09:11:17.863" endtime="20230424 09:11:17.963"/>
</kw>
<status status="PASS" starttime="20230424 09:11:17.602" endtime="20230424 09:11:17.963"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 09:11:17.975" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230424 09:11:17.964" endtime="20230424 09:11:17.975"/>
</kw>
<status status="PASS" starttime="20230424 09:11:17.963" endtime="20230424 09:11:17.975"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230424 09:11:17.997" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230424 09:11:17.976" endtime="20230424 09:11:17.998"/>
</kw>
<status status="PASS" starttime="20230424 09:11:17.975" endtime="20230424 09:11:17.998"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 09:11:18.000" endtime="20230424 09:11:20.074"/>
</kw>
<status status="PASS" starttime="20230424 09:11:18.000" endtime="20230424 09:11:20.074"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 09:11:11.092" endtime="20230424 09:11:20.079"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 09:11:20.082" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 09:11:20.082" endtime="20230424 09:11:21.904"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 09:11:21.904" endtime="20230424 09:11:22.025"/>
</kw>
<status status="PASS" starttime="20230424 09:11:20.081" endtime="20230424 09:11:22.025"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 09:11:22.026" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 09:11:22.025" endtime="20230424 09:11:22.076"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 09:11:22.084" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 09:11:22.076" endtime="20230424 09:11:22.085"/>
</kw>
<status status="PASS" starttime="20230424 09:11:22.025" endtime="20230424 09:11:22.085"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:22.097" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 09:11:22.097" endtime="20230424 09:11:22.232"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:22.233" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 09:11:22.232" endtime="20230424 09:11:22.334"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:22.335" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 09:11:22.335" endtime="20230424 09:11:22.417"/>
</kw>
<status status="PASS" starttime="20230424 09:11:22.096" endtime="20230424 09:11:22.417"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230424 09:11:22.521" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230424 09:11:22.418" endtime="20230424 09:11:22.521"/>
</kw>
<status status="PASS" starttime="20230424 09:11:22.418" endtime="20230424 09:11:22.521"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 09:11:22.522" endtime="20230424 09:11:24.610"/>
</kw>
<status status="PASS" starttime="20230424 09:11:22.522" endtime="20230424 09:11:24.610"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 09:11:20.081" endtime="20230424 09:11:24.610"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 09:11:24.613" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 09:11:24.613" endtime="20230424 09:11:26.416"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 09:11:26.416" endtime="20230424 09:11:26.537"/>
</kw>
<status status="PASS" starttime="20230424 09:11:24.612" endtime="20230424 09:11:26.537"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 09:11:26.546" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 09:11:26.546" endtime="20230424 09:11:26.604"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 09:11:26.635" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 09:11:26.604" endtime="20230424 09:11:26.635"/>
</kw>
<status status="PASS" starttime="20230424 09:11:26.546" endtime="20230424 09:11:26.635"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:26.637" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 09:11:26.636" endtime="20230424 09:11:26.801"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:26.802" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 09:11:26.802" endtime="20230424 09:11:26.898"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:26.899" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 09:11:26.898" endtime="20230424 09:11:27.012"/>
</kw>
<status status="PASS" starttime="20230424 09:11:26.636" endtime="20230424 09:11:27.013"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 09:11:27.028" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230424 09:11:27.015" endtime="20230424 09:11:27.028"/>
</kw>
<status status="PASS" starttime="20230424 09:11:27.014" endtime="20230424 09:11:27.028"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230424 09:11:27.042" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230424 09:11:27.029" endtime="20230424 09:11:27.042"/>
</kw>
<status status="PASS" starttime="20230424 09:11:27.029" endtime="20230424 09:11:27.042"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 09:11:27.042" endtime="20230424 09:11:29.141"/>
</kw>
<status status="PASS" starttime="20230424 09:11:27.042" endtime="20230424 09:11:29.141"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 09:11:24.612" endtime="20230424 09:11:29.142"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 09:11:29.144" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 09:11:29.143" endtime="20230424 09:11:30.986"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 09:11:30.986" endtime="20230424 09:11:31.098"/>
</kw>
<status status="PASS" starttime="20230424 09:11:29.143" endtime="20230424 09:11:31.098"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 09:11:31.100" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 09:11:31.100" endtime="20230424 09:11:31.153"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 09:11:31.161" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 09:11:31.153" endtime="20230424 09:11:31.161"/>
</kw>
<status status="PASS" starttime="20230424 09:11:31.099" endtime="20230424 09:11:31.161"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:31.163" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 09:11:31.162" endtime="20230424 09:11:31.290"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:31.291" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 09:11:31.290" endtime="20230424 09:11:31.376"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 09:11:31.376" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 09:11:31.376" endtime="20230424 09:11:36.474"/>
</kw>
<status status="PASS" starttime="20230424 09:11:31.162" endtime="20230424 09:11:36.474"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 09:11:36.487" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230424 09:11:36.476" endtime="20230424 09:11:36.487"/>
</kw>
<status status="PASS" starttime="20230424 09:11:36.476" endtime="20230424 09:11:36.488"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230424 09:11:36.503" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230424 09:11:36.489" endtime="20230424 09:11:36.503"/>
</kw>
<status status="PASS" starttime="20230424 09:11:36.488" endtime="20230424 09:11:36.503"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 09:11:36.504" endtime="20230424 09:11:38.626"/>
</kw>
<status status="PASS" starttime="20230424 09:11:36.503" endtime="20230424 09:11:38.626"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 09:11:29.143" endtime="20230424 09:11:38.629"/>
</test>
<status status="PASS" starttime="20230424 09:11:11.080" endtime="20230424 09:11:38.630"/>
</suite>
<status status="PASS" starttime="20230424 09:11:11.076" endtime="20230424 09:11:38.631"/>
</suite>
<status status="PASS" starttime="20230424 09:11:11.072" endtime="20230424 09:11:38.633"/>
</suite>
<status status="PASS" starttime="20230424 09:11:06.842" endtime="20230424 09:11:38.634"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
