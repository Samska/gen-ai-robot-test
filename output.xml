<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230510 01:01:06.778" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230510 01:01:07.430" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230510 01:01:07.430" endtime="20230510 01:01:07.431"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.429" endtime="20230510 01:01:07.431"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230510 01:01:07.586" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230510 01:01:07.586" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4b011449-ce8f-4f11-a7bb-960ae07af087', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4692d441c12f487602a57e45308e1e41;o=1', 'Date': 'Wed, 10 May 2023 01:01:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '1945'} 
 body={
    "quantidade": 9,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Marcus Rios 2",
            "email": "carolyn15@example.org",
            "password": "1234567",
            "administrador": "true",
            "_id": "4nHLZ5IKHyVDpxps"
        },
        {
            "nome": "test2",
            "email": "test2@test.com",
            "password": "test2",
            "administrador": "true",
            "_id": "7z5jGEUW9utxyY9h"
        },
        {
            "nome": "test3",
            "email": "test3@test3.com",
            "password": "test3",
            "administrador": "true",
            "_id": "AcqEI7ntZ1pKF7l0"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "Moiu7v9KG5V4a1qm"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Chloe.Block@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "UsEhIoB1lJLiOcnc"
        },
        {
            "nome": "Marcus Rios 2",
            "email": "dennisgabriel@example.net",
            "password": "1234567",
            "administrador": "true",
            "_id": "aWjhvMCFCOeloNPD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rqyy@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "ivSSPn30XbBCH3dJ"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Jennie.Schneider95@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "jdx2DwZpf7OtoGDr"
        }
    ]
} 
 </msg>
<msg timestamp="20230510 01:01:07.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.431" endtime="20230510 01:01:07.587"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230510 01:01:07.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.587" endtime="20230510 01:01:07.587"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.431" endtime="20230510 01:01:07.588"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230510 01:01:07.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.588" endtime="20230510 01:01:07.589"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230510 01:01:07.589" endtime="20230510 01:01:07.590"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.588" endtime="20230510 01:01:07.590"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230510 01:01:07.591" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230510 01:01:07.590" endtime="20230510 01:01:07.591"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.590" endtime="20230510 01:01:07.591"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230510 01:01:07.429" endtime="20230510 01:01:07.591"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230510 01:01:07.593" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230510 01:01:07.593" endtime="20230510 01:01:07.593"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.592" endtime="20230510 01:01:07.593"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230510 01:01:07.594" level="INFO">${name} = Donna Koch</msg>
<status status="PASS" starttime="20230510 01:01:07.594" endtime="20230510 01:01:07.595"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230510 01:01:07.595" level="INFO">${email} = lucasmyers@example.com</msg>
<status status="PASS" starttime="20230510 01:01:07.595" endtime="20230510 01:01:07.595"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230510 01:01:07.596" level="INFO">${password} = !tYYBLu7u8</msg>
<status status="PASS" starttime="20230510 01:01:07.595" endtime="20230510 01:01:07.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230510 01:01:07.596" level="INFO">${name} = Donna Koch</msg>
<status status="PASS" starttime="20230510 01:01:07.596" endtime="20230510 01:01:07.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230510 01:01:07.596" level="INFO">${email} = lucasmyers@example.com</msg>
<status status="PASS" starttime="20230510 01:01:07.596" endtime="20230510 01:01:07.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230510 01:01:07.597" level="INFO">${password} = !tYYBLu7u8</msg>
<status status="PASS" starttime="20230510 01:01:07.596" endtime="20230510 01:01:07.597"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.594" endtime="20230510 01:01:07.597"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230510 01:01:07.598" level="INFO">${payload} = {'nome': 'Donna Koch', 'email': 'lucasmyers@example.com', 'password': '!tYYBLu7u8', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230510 01:01:07.597" endtime="20230510 01:01:07.598"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230510 01:01:07.598" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230510 01:01:07.598" endtime="20230510 01:01:07.598"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230510 01:01:07.668" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"nome": "Donna Koch", "email": "lucasmyers@example.com", "password": "!tYYBLu7u8", "administrador": "false"}' 
 </msg>
<msg timestamp="20230510 01:01:07.668" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '201b3cbc-d495-4880-812a-10d2223062e9', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2076ca266a5cdf20bc4cb30a6fe5997e', 'Date': 'Wed, 10 May 2023 01:01:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ellkJt42TAQShW2Q"
} 
 </msg>
<msg timestamp="20230510 01:01:07.669" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.598" endtime="20230510 01:01:07.669"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230510 01:01:07.670" level="INFO">${user_id} = ellkJt42TAQShW2Q</msg>
<status status="PASS" starttime="20230510 01:01:07.669" endtime="20230510 01:01:07.670"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230510 01:01:07.670" level="INFO">${USER_ID} = ellkJt42TAQShW2Q</msg>
<status status="PASS" starttime="20230510 01:01:07.670" endtime="20230510 01:01:07.670"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230510 01:01:07.671" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.670" endtime="20230510 01:01:07.671"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.597" endtime="20230510 01:01:07.671"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230510 01:01:07.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.671" endtime="20230510 01:01:07.672"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230510 01:01:07.672" endtime="20230510 01:01:07.673"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.671" endtime="20230510 01:01:07.673"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230510 01:01:07.674" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230510 01:01:07.673" endtime="20230510 01:01:07.674"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.673" endtime="20230510 01:01:07.674"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230510 01:01:07.592" endtime="20230510 01:01:07.674"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230510 01:01:07.676" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230510 01:01:07.676" endtime="20230510 01:01:07.677"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.676" endtime="20230510 01:01:07.677"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230510 01:01:07.750" level="INFO">GET Request : url=https://serverest.dev/usuarios/ellkJt42TAQShW2Q 
 path_url=/usuarios/ellkJt42TAQShW2Q 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230510 01:01:07.750" level="INFO">GET Response : url=https://serverest.dev/usuarios/ellkJt42TAQShW2Q 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1cffc4a7-d2c4-40cc-a614-5afa66e7548e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '33fb0c6abd873421e44c1b14c8b2d2c6', 'Date': 'Wed, 10 May 2023 01:01:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '158'} 
 body={
    "nome": "Donna Koch",
    "email": "lucasmyers@example.com",
    "password": "!tYYBLu7u8",
    "administrador": "false",
    "_id": "ellkJt42TAQShW2Q"
} 
 </msg>
<msg timestamp="20230510 01:01:07.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.677" endtime="20230510 01:01:07.750"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230510 01:01:07.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.750" endtime="20230510 01:01:07.751"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.677" endtime="20230510 01:01:07.751"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230510 01:01:07.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.751" endtime="20230510 01:01:07.752"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230510 01:01:07.752" endtime="20230510 01:01:07.753"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.751" endtime="20230510 01:01:07.753"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230510 01:01:07.754" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230510 01:01:07.753" endtime="20230510 01:01:07.754"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.753" endtime="20230510 01:01:07.754"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230510 01:01:07.675" endtime="20230510 01:01:07.754"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230510 01:01:07.756" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230510 01:01:07.756" endtime="20230510 01:01:07.756"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.755" endtime="20230510 01:01:07.756"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230510 01:01:07.757" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230510 01:01:07.757" endtime="20230510 01:01:07.757"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230510 01:01:07.757" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230510 01:01:07.757" endtime="20230510 01:01:07.757"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230510 01:01:07.836" level="INFO">PUT Request : url=https://serverest.dev/usuarios/ellkJt42TAQShW2Q 
 path_url=/usuarios/ellkJt42TAQShW2Q 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230510 01:01:07.836" level="INFO">PUT Response : url=https://serverest.dev/usuarios/ellkJt42TAQShW2Q 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ceb52f5c-565c-45db-85e7-9b2e4bc80980', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '98e85b53ed653bfe1ab64abb63acc9dd', 'Date': 'Wed, 10 May 2023 01:01:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230510 01:01:07.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.758" endtime="20230510 01:01:07.836"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230510 01:01:07.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.837" endtime="20230510 01:01:07.837"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.756" endtime="20230510 01:01:07.837"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230510 01:01:07.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.838" endtime="20230510 01:01:07.838"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230510 01:01:07.839" endtime="20230510 01:01:07.839"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.837" endtime="20230510 01:01:07.839"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230510 01:01:07.840" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230510 01:01:07.840" endtime="20230510 01:01:07.840"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.839" endtime="20230510 01:01:07.840"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230510 01:01:07.755" endtime="20230510 01:01:07.841"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230510 01:01:07.842" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230510 01:01:07.842" endtime="20230510 01:01:07.842"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.841" endtime="20230510 01:01:07.842"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230510 01:01:07.906" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/ellkJt42TAQShW2Q 
 path_url=/usuarios/ellkJt42TAQShW2Q 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230510 01:01:07.906" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/ellkJt42TAQShW2Q 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cfe6aceb-be8e-4455-ae43-c6a418fa0e94', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '13c74f9e19e9ebc52e8a103faa30f311', 'Date': 'Wed, 10 May 2023 01:01:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230510 01:01:07.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.843" endtime="20230510 01:01:07.906"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230510 01:01:07.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.907" endtime="20230510 01:01:07.907"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.843" endtime="20230510 01:01:07.907"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230510 01:01:07.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230510 01:01:07.908" endtime="20230510 01:01:07.908"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230510 01:01:07.908" endtime="20230510 01:01:07.909"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.907" endtime="20230510 01:01:07.909"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230510 01:01:07.910" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230510 01:01:07.910" endtime="20230510 01:01:07.910"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.909" endtime="20230510 01:01:07.910"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230510 01:01:07.841" endtime="20230510 01:01:07.911"/>
</test>
<status status="PASS" starttime="20230510 01:01:06.800" endtime="20230510 01:01:07.911"/>
</suite>
<status status="PASS" starttime="20230510 01:01:06.798" endtime="20230510 01:01:07.912"/>
</suite>
<status status="PASS" starttime="20230510 01:01:06.797" endtime="20230510 01:01:07.913"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230510 01:01:07.924" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230510 01:01:07.923" endtime="20230510 01:01:17.440"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230510 01:01:17.440" endtime="20230510 01:01:17.565"/>
</kw>
<status status="PASS" starttime="20230510 01:01:07.923" endtime="20230510 01:01:17.566"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230510 01:01:17.567" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230510 01:01:17.566" endtime="20230510 01:01:17.678"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230510 01:01:17.682" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230510 01:01:17.678" endtime="20230510 01:01:17.682"/>
</kw>
<status status="PASS" starttime="20230510 01:01:17.566" endtime="20230510 01:01:17.682"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:17.685" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230510 01:01:17.683" endtime="20230510 01:01:17.947"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:17.948" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230510 01:01:17.947" endtime="20230510 01:01:18.160"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:18.160" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230510 01:01:18.160" endtime="20230510 01:01:18.457"/>
</kw>
<status status="PASS" starttime="20230510 01:01:17.682" endtime="20230510 01:01:18.457"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230510 01:01:18.463" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230510 01:01:18.458" endtime="20230510 01:01:18.464"/>
</kw>
<status status="PASS" starttime="20230510 01:01:18.457" endtime="20230510 01:01:18.464"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230510 01:01:18.494" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230510 01:01:18.465" endtime="20230510 01:01:18.494"/>
</kw>
<status status="PASS" starttime="20230510 01:01:18.464" endtime="20230510 01:01:18.494"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230510 01:01:18.495" endtime="20230510 01:01:18.552"/>
</kw>
<status status="PASS" starttime="20230510 01:01:18.495" endtime="20230510 01:01:18.553"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230510 01:01:07.923" endtime="20230510 01:01:18.553"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230510 01:01:18.556" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230510 01:01:18.555" endtime="20230510 01:01:19.476"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230510 01:01:19.477" endtime="20230510 01:01:19.581"/>
</kw>
<status status="PASS" starttime="20230510 01:01:18.554" endtime="20230510 01:01:19.581"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230510 01:01:19.582" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230510 01:01:19.582" endtime="20230510 01:01:19.669"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230510 01:01:19.673" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230510 01:01:19.669" endtime="20230510 01:01:19.673"/>
</kw>
<status status="PASS" starttime="20230510 01:01:19.582" endtime="20230510 01:01:19.674"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:19.675" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230510 01:01:19.674" endtime="20230510 01:01:19.771"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:19.772" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230510 01:01:19.771" endtime="20230510 01:01:19.853"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:19.854" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230510 01:01:19.854" endtime="20230510 01:01:19.910"/>
</kw>
<status status="PASS" starttime="20230510 01:01:19.674" endtime="20230510 01:01:19.910"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230510 01:01:19.941" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230510 01:01:19.911" endtime="20230510 01:01:19.941"/>
</kw>
<status status="PASS" starttime="20230510 01:01:19.910" endtime="20230510 01:01:19.941"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230510 01:01:19.942" endtime="20230510 01:01:19.999"/>
</kw>
<status status="PASS" starttime="20230510 01:01:19.942" endtime="20230510 01:01:20.000"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230510 01:01:18.554" endtime="20230510 01:01:20.000"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230510 01:01:20.002" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230510 01:01:20.002" endtime="20230510 01:01:20.887"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230510 01:01:20.887" endtime="20230510 01:01:20.993"/>
</kw>
<status status="PASS" starttime="20230510 01:01:20.001" endtime="20230510 01:01:20.993"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230510 01:01:20.994" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230510 01:01:20.994" endtime="20230510 01:01:21.057"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230510 01:01:21.062" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230510 01:01:21.058" endtime="20230510 01:01:21.062"/>
</kw>
<status status="PASS" starttime="20230510 01:01:20.993" endtime="20230510 01:01:21.062"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:21.063" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230510 01:01:21.063" endtime="20230510 01:01:21.157"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:21.158" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230510 01:01:21.157" endtime="20230510 01:01:21.244"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:21.245" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230510 01:01:21.244" endtime="20230510 01:01:21.333"/>
</kw>
<status status="PASS" starttime="20230510 01:01:21.062" endtime="20230510 01:01:21.333"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230510 01:01:21.343" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230510 01:01:21.333" endtime="20230510 01:01:21.343"/>
</kw>
<status status="PASS" starttime="20230510 01:01:21.333" endtime="20230510 01:01:21.343"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230510 01:01:21.357" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230510 01:01:21.344" endtime="20230510 01:01:21.357"/>
</kw>
<status status="PASS" starttime="20230510 01:01:21.343" endtime="20230510 01:01:21.358"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230510 01:01:21.358" endtime="20230510 01:01:21.415"/>
</kw>
<status status="PASS" starttime="20230510 01:01:21.358" endtime="20230510 01:01:21.415"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230510 01:01:20.001" endtime="20230510 01:01:21.415"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230510 01:01:21.417" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230510 01:01:21.417" endtime="20230510 01:01:22.304"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230510 01:01:22.305" endtime="20230510 01:01:22.417"/>
</kw>
<status status="PASS" starttime="20230510 01:01:21.416" endtime="20230510 01:01:22.417"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230510 01:01:22.418" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230510 01:01:22.418" endtime="20230510 01:01:22.492"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230510 01:01:22.498" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230510 01:01:22.492" endtime="20230510 01:01:22.498"/>
</kw>
<status status="PASS" starttime="20230510 01:01:22.417" endtime="20230510 01:01:22.498"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:22.501" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230510 01:01:22.500" endtime="20230510 01:01:22.620"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:22.621" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230510 01:01:22.620" endtime="20230510 01:01:22.724"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230510 01:01:22.725" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230510 01:01:22.725" endtime="20230510 01:01:27.829"/>
</kw>
<status status="PASS" starttime="20230510 01:01:22.500" endtime="20230510 01:01:27.830"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230510 01:01:27.846" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230510 01:01:27.830" endtime="20230510 01:01:27.846"/>
</kw>
<status status="PASS" starttime="20230510 01:01:27.830" endtime="20230510 01:01:27.846"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230510 01:01:27.860" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230510 01:01:27.847" endtime="20230510 01:01:27.860"/>
</kw>
<status status="PASS" starttime="20230510 01:01:27.846" endtime="20230510 01:01:27.860"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230510 01:01:27.861" endtime="20230510 01:01:27.918"/>
</kw>
<status status="PASS" starttime="20230510 01:01:27.860" endtime="20230510 01:01:27.918"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230510 01:01:21.416" endtime="20230510 01:01:27.918"/>
</test>
<status status="PASS" starttime="20230510 01:01:07.917" endtime="20230510 01:01:27.920"/>
</suite>
<status status="PASS" starttime="20230510 01:01:07.915" endtime="20230510 01:01:27.922"/>
</suite>
<status status="PASS" starttime="20230510 01:01:07.914" endtime="20230510 01:01:27.923"/>
</suite>
<status status="PASS" starttime="20230510 01:01:06.778" endtime="20230510 01:01:27.925"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
