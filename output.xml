<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230425 01:03:19.844" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230425 01:03:20.349" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230425 01:03:20.348" endtime="20230425 01:03:20.349"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.348" endtime="20230425 01:03:20.349"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230425 01:03:20.642" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230425 01:03:20.642" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c15bc33a-5103-467a-a2da-8553c7c4460f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f56f4810cbd507b87efc9113adaa86a0;o=1', 'Date': 'Tue, 25 Apr 2023 01:03:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '3017'} 
 body={
    "quantidade": 14,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Fulano da silva",
            "email": "fgdt@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "4oYmeRcJjF6iNprJ"
        },
        {
            "nome": "Felipe Ribeiro",
            "email": "james70@example.org",
            "password": "123456",
            "administrador": "true",
            "_id": "9EwBly4oSKNVH5Lh"
        },
        {
            "nome": "Felipe Ribeiro",
            "email": "brownjessica@example.org",
            "password": "123456",
            "administrador": "true",
            "_id": "DKSlGaOacxNiEXn1"
        },
        {
            "nome": "Fulano da silva",
            "email": "yems@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "J1XDqn0i0nKTPp1D"
        },
        {
            "nome": "Fulano da silva",
            "email": "dmqd@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "JpXR9pcUqK3E0o46"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Brandy32@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Kta3epetLclXWylT"
        },
        {
            "nome": "Felipe Ribeiro",
            "email": "stephenwilson@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "PO6WmEuMJBnZJacj"
        },
        {
            "nome": "Fulano da silva",
            "email": "zjoz@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "T36Og2RjwqB3gfXA"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "Wqa845a5gLsIWYf4"
        },
        {
            "nome": "Felipe Ribeiro",
            "email": "dylan59@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "hY9qrRfKh81eMJEJ"
        },
        {
            "nome": "Fulano da silva",
            "email": "vpjl@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "hrO3XksNEuLqNFyB"
        },
        {
            "nome": "Felipe Ribeiro",
            "email": "brett26@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "mXQrlO2XCjNZkK76"
        },
        {
            "nome": "Fulano da silva",
            "email": "bjyb@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "xjO7iXhQDsV8yqfh"
        }
    ]
} 
 </msg>
<msg timestamp="20230425 01:03:20.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.350" endtime="20230425 01:03:20.642"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230425 01:03:20.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.643" endtime="20230425 01:03:20.643"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.349" endtime="20230425 01:03:20.643"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230425 01:03:20.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.644" endtime="20230425 01:03:20.645"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230425 01:03:20.645" endtime="20230425 01:03:20.646"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.643" endtime="20230425 01:03:20.646"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230425 01:03:20.647" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230425 01:03:20.646" endtime="20230425 01:03:20.647"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.646" endtime="20230425 01:03:20.647"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230425 01:03:20.347" endtime="20230425 01:03:20.647"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230425 01:03:20.648" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230425 01:03:20.648" endtime="20230425 01:03:20.649"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.648" endtime="20230425 01:03:20.649"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230425 01:03:20.651" level="INFO">${name} = Don Simmons</msg>
<status status="PASS" starttime="20230425 01:03:20.650" endtime="20230425 01:03:20.651"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230425 01:03:20.651" level="INFO">${email} = nicolas13@example.net</msg>
<status status="PASS" starttime="20230425 01:03:20.651" endtime="20230425 01:03:20.651"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230425 01:03:20.651" level="INFO">${password} = !0e7)WsMqb</msg>
<status status="PASS" starttime="20230425 01:03:20.651" endtime="20230425 01:03:20.651"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230425 01:03:20.652" level="INFO">${name} = Don Simmons</msg>
<status status="PASS" starttime="20230425 01:03:20.652" endtime="20230425 01:03:20.652"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230425 01:03:20.652" level="INFO">${email} = nicolas13@example.net</msg>
<status status="PASS" starttime="20230425 01:03:20.652" endtime="20230425 01:03:20.652"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230425 01:03:20.653" level="INFO">${password} = !0e7)WsMqb</msg>
<status status="PASS" starttime="20230425 01:03:20.652" endtime="20230425 01:03:20.653"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.650" endtime="20230425 01:03:20.653"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230425 01:03:20.654" level="INFO">${payload} = {'nome': 'Don Simmons', 'email': 'nicolas13@example.net', 'password': '!0e7)WsMqb', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230425 01:03:20.653" endtime="20230425 01:03:20.654"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230425 01:03:20.654" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230425 01:03:20.654" endtime="20230425 01:03:20.654"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230425 01:03:20.757" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"nome": "Don Simmons", "email": "nicolas13@example.net", "password": "!0e7)WsMqb", "administrador": "false"}' 
 </msg>
<msg timestamp="20230425 01:03:20.758" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1ae247ce-6d9b-40eb-a285-1f5a8ba49425', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3d2eefed496dcb3d5d21bbe69cf2c271', 'Date': 'Tue, 25 Apr 2023 01:03:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "SlV7TprlTRFRxD8n"
} 
 </msg>
<msg timestamp="20230425 01:03:20.758" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.654" endtime="20230425 01:03:20.758"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230425 01:03:20.759" level="INFO">${user_id} = SlV7TprlTRFRxD8n</msg>
<status status="PASS" starttime="20230425 01:03:20.758" endtime="20230425 01:03:20.759"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230425 01:03:20.759" level="INFO">${USER_ID} = SlV7TprlTRFRxD8n</msg>
<status status="PASS" starttime="20230425 01:03:20.759" endtime="20230425 01:03:20.760"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230425 01:03:20.760" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.760" endtime="20230425 01:03:20.760"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.653" endtime="20230425 01:03:20.760"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230425 01:03:20.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.760" endtime="20230425 01:03:20.761"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230425 01:03:20.761" endtime="20230425 01:03:20.762"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.760" endtime="20230425 01:03:20.762"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230425 01:03:20.763" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230425 01:03:20.762" endtime="20230425 01:03:20.763"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.762" endtime="20230425 01:03:20.763"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230425 01:03:20.647" endtime="20230425 01:03:20.763"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230425 01:03:20.765" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230425 01:03:20.764" endtime="20230425 01:03:20.765"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.764" endtime="20230425 01:03:20.765"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230425 01:03:20.867" level="INFO">GET Request : url=https://serverest.dev/usuarios/SlV7TprlTRFRxD8n 
 path_url=/usuarios/SlV7TprlTRFRxD8n 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230425 01:03:20.867" level="INFO">GET Response : url=https://serverest.dev/usuarios/SlV7TprlTRFRxD8n 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7cb1ecd0-a480-47cc-b484-c63841231352', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b2fe6c2e4ed4a80e430aae790fee76ea', 'Date': 'Tue, 25 Apr 2023 01:03:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '158'} 
 body={
    "nome": "Don Simmons",
    "email": "nicolas13@example.net",
    "password": "!0e7)WsMqb",
    "administrador": "false",
    "_id": "SlV7TprlTRFRxD8n"
} 
 </msg>
<msg timestamp="20230425 01:03:20.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.766" endtime="20230425 01:03:20.867"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230425 01:03:20.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.867" endtime="20230425 01:03:20.868"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.765" endtime="20230425 01:03:20.868"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230425 01:03:20.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.869" endtime="20230425 01:03:20.870"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230425 01:03:20.870" endtime="20230425 01:03:20.870"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.868" endtime="20230425 01:03:20.871"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230425 01:03:20.872" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230425 01:03:20.871" endtime="20230425 01:03:20.872"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.871" endtime="20230425 01:03:20.872"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230425 01:03:20.764" endtime="20230425 01:03:20.872"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230425 01:03:20.874" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230425 01:03:20.874" endtime="20230425 01:03:20.874"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.873" endtime="20230425 01:03:20.874"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230425 01:03:20.875" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230425 01:03:20.875" endtime="20230425 01:03:20.875"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230425 01:03:20.876" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230425 01:03:20.875" endtime="20230425 01:03:20.876"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230425 01:03:20.977" level="INFO">PUT Request : url=https://serverest.dev/usuarios/SlV7TprlTRFRxD8n 
 path_url=/usuarios/SlV7TprlTRFRxD8n 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230425 01:03:20.977" level="INFO">PUT Response : url=https://serverest.dev/usuarios/SlV7TprlTRFRxD8n 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '675ba465-056f-45b9-ad05-057fafb62984', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '208cfcb3fe247bf08227c71e7dec2d44', 'Date': 'Tue, 25 Apr 2023 01:03:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230425 01:03:20.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.876" endtime="20230425 01:03:20.977"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230425 01:03:20.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.978" endtime="20230425 01:03:20.978"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.875" endtime="20230425 01:03:20.978"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230425 01:03:20.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.979" endtime="20230425 01:03:20.980"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230425 01:03:20.980" endtime="20230425 01:03:20.981"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.978" endtime="20230425 01:03:20.981"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230425 01:03:20.982" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230425 01:03:20.981" endtime="20230425 01:03:20.982"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.981" endtime="20230425 01:03:20.982"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230425 01:03:20.873" endtime="20230425 01:03:20.982"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230425 01:03:20.984" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230425 01:03:20.983" endtime="20230425 01:03:20.984"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.983" endtime="20230425 01:03:20.984"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230425 01:03:21.086" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/SlV7TprlTRFRxD8n 
 path_url=/usuarios/SlV7TprlTRFRxD8n 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230425 01:03:21.087" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/SlV7TprlTRFRxD8n 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ee936506-cfd6-418e-8312-573b38081976', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7532cfc91a3abaf49b4b34f63993d264', 'Date': 'Tue, 25 Apr 2023 01:03:21 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230425 01:03:21.087" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:20.984" endtime="20230425 01:03:21.087"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230425 01:03:21.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230425 01:03:21.087" endtime="20230425 01:03:21.088"/>
</kw>
<status status="PASS" starttime="20230425 01:03:20.984" endtime="20230425 01:03:21.088"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230425 01:03:21.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230425 01:03:21.088" endtime="20230425 01:03:21.089"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230425 01:03:21.089" endtime="20230425 01:03:21.090"/>
</kw>
<status status="PASS" starttime="20230425 01:03:21.088" endtime="20230425 01:03:21.090"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230425 01:03:21.091" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230425 01:03:21.091" endtime="20230425 01:03:21.091"/>
</kw>
<status status="PASS" starttime="20230425 01:03:21.090" endtime="20230425 01:03:21.092"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230425 01:03:20.982" endtime="20230425 01:03:21.092"/>
</test>
<status status="PASS" starttime="20230425 01:03:19.867" endtime="20230425 01:03:21.093"/>
</suite>
<status status="PASS" starttime="20230425 01:03:19.866" endtime="20230425 01:03:21.094"/>
</suite>
<status status="PASS" starttime="20230425 01:03:19.864" endtime="20230425 01:03:21.095"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230425 01:03:21.107" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230425 01:03:21.106" endtime="20230425 01:03:22.646"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230425 01:03:22.646" endtime="20230425 01:03:22.759"/>
</kw>
<status status="PASS" starttime="20230425 01:03:21.106" endtime="20230425 01:03:22.759"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230425 01:03:22.760" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230425 01:03:22.760" endtime="20230425 01:03:22.840"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230425 01:03:22.846" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230425 01:03:22.841" endtime="20230425 01:03:22.846"/>
</kw>
<status status="PASS" starttime="20230425 01:03:22.760" endtime="20230425 01:03:22.846"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:22.853" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230425 01:03:22.847" endtime="20230425 01:03:22.963"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:22.963" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230425 01:03:22.963" endtime="20230425 01:03:23.057"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:23.057" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230425 01:03:23.057" endtime="20230425 01:03:23.166"/>
</kw>
<status status="PASS" starttime="20230425 01:03:22.846" endtime="20230425 01:03:23.166"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230425 01:03:23.179" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230425 01:03:23.167" endtime="20230425 01:03:23.179"/>
</kw>
<status status="PASS" starttime="20230425 01:03:23.166" endtime="20230425 01:03:23.179"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230425 01:03:23.195" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230425 01:03:23.180" endtime="20230425 01:03:23.195"/>
</kw>
<status status="PASS" starttime="20230425 01:03:23.179" endtime="20230425 01:03:23.195"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230425 01:03:23.196" endtime="20230425 01:03:23.253"/>
</kw>
<status status="PASS" starttime="20230425 01:03:23.195" endtime="20230425 01:03:23.253"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230425 01:03:21.105" endtime="20230425 01:03:23.253"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230425 01:03:23.255" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230425 01:03:23.255" endtime="20230425 01:03:24.171"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230425 01:03:24.172" endtime="20230425 01:03:24.276"/>
</kw>
<status status="PASS" starttime="20230425 01:03:23.254" endtime="20230425 01:03:24.276"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230425 01:03:24.277" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230425 01:03:24.277" endtime="20230425 01:03:24.343"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230425 01:03:24.348" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230425 01:03:24.344" endtime="20230425 01:03:24.348"/>
</kw>
<status status="PASS" starttime="20230425 01:03:24.277" endtime="20230425 01:03:24.349"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:24.350" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230425 01:03:24.349" endtime="20230425 01:03:24.456"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:24.457" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230425 01:03:24.456" endtime="20230425 01:03:24.544"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:24.544" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230425 01:03:24.544" endtime="20230425 01:03:24.603"/>
</kw>
<status status="PASS" starttime="20230425 01:03:24.349" endtime="20230425 01:03:24.603"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230425 01:03:24.628" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230425 01:03:24.604" endtime="20230425 01:03:24.628"/>
</kw>
<status status="PASS" starttime="20230425 01:03:24.603" endtime="20230425 01:03:24.628"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230425 01:03:24.629" endtime="20230425 01:03:24.686"/>
</kw>
<status status="PASS" starttime="20230425 01:03:24.628" endtime="20230425 01:03:24.686"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230425 01:03:23.254" endtime="20230425 01:03:24.686"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230425 01:03:24.689" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230425 01:03:24.688" endtime="20230425 01:03:25.612"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230425 01:03:25.613" endtime="20230425 01:03:25.717"/>
</kw>
<status status="PASS" starttime="20230425 01:03:24.687" endtime="20230425 01:03:25.717"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230425 01:03:25.718" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230425 01:03:25.718" endtime="20230425 01:03:25.776"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230425 01:03:25.783" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230425 01:03:25.777" endtime="20230425 01:03:25.783"/>
</kw>
<status status="PASS" starttime="20230425 01:03:25.718" endtime="20230425 01:03:25.783"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:25.784" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230425 01:03:25.784" endtime="20230425 01:03:25.887"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:25.888" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230425 01:03:25.887" endtime="20230425 01:03:25.971"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:25.972" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230425 01:03:25.971" endtime="20230425 01:03:26.059"/>
</kw>
<status status="PASS" starttime="20230425 01:03:25.783" endtime="20230425 01:03:26.059"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230425 01:03:26.072" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230425 01:03:26.060" endtime="20230425 01:03:26.072"/>
</kw>
<status status="PASS" starttime="20230425 01:03:26.059" endtime="20230425 01:03:26.072"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230425 01:03:26.088" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230425 01:03:26.073" endtime="20230425 01:03:26.088"/>
</kw>
<status status="PASS" starttime="20230425 01:03:26.073" endtime="20230425 01:03:26.088"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230425 01:03:26.089" endtime="20230425 01:03:26.146"/>
</kw>
<status status="PASS" starttime="20230425 01:03:26.088" endtime="20230425 01:03:26.146"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230425 01:03:24.687" endtime="20230425 01:03:26.146"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230425 01:03:26.149" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230425 01:03:26.148" endtime="20230425 01:03:27.054"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230425 01:03:27.054" endtime="20230425 01:03:27.158"/>
</kw>
<status status="PASS" starttime="20230425 01:03:26.148" endtime="20230425 01:03:27.158"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230425 01:03:27.160" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230425 01:03:27.159" endtime="20230425 01:03:27.222"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230425 01:03:27.230" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230425 01:03:27.222" endtime="20230425 01:03:27.231"/>
</kw>
<status status="PASS" starttime="20230425 01:03:27.159" endtime="20230425 01:03:27.231"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:27.233" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230425 01:03:27.232" endtime="20230425 01:03:27.339"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:27.340" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230425 01:03:27.339" endtime="20230425 01:03:27.426"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230425 01:03:27.427" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230425 01:03:27.426" endtime="20230425 01:03:32.519"/>
</kw>
<status status="PASS" starttime="20230425 01:03:27.232" endtime="20230425 01:03:32.519"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230425 01:03:32.537" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230425 01:03:32.520" endtime="20230425 01:03:32.537"/>
</kw>
<status status="PASS" starttime="20230425 01:03:32.520" endtime="20230425 01:03:32.537"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230425 01:03:32.553" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230425 01:03:32.538" endtime="20230425 01:03:32.553"/>
</kw>
<status status="PASS" starttime="20230425 01:03:32.538" endtime="20230425 01:03:32.553"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230425 01:03:32.554" endtime="20230425 01:03:32.611"/>
</kw>
<status status="PASS" starttime="20230425 01:03:32.553" endtime="20230425 01:03:32.612"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230425 01:03:26.147" endtime="20230425 01:03:32.612"/>
</test>
<status status="PASS" starttime="20230425 01:03:21.099" endtime="20230425 01:03:32.613"/>
</suite>
<status status="PASS" starttime="20230425 01:03:21.098" endtime="20230425 01:03:32.614"/>
</suite>
<status status="PASS" starttime="20230425 01:03:21.096" endtime="20230425 01:03:32.616"/>
</suite>
<status status="PASS" starttime="20230425 01:03:19.845" endtime="20230425 01:03:32.617"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
