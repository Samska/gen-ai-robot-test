<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230503 01:02:42.644" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230503 01:02:43.575" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230503 01:02:43.574" endtime="20230503 01:02:43.575"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.574" endtime="20230503 01:02:43.575"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230503 01:02:43.810" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230503 01:02:43.811" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e2e0a3eb-f364-4746-922a-e8a739b6fc28', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dcfa0742fcf23c230b2d44007b49dcff;o=1', 'Date': 'Wed, 03 May 2023 01:02:43 GMT', 'Server': 'Google Frontend', 'Content-Length': '1768'} 
 body={
    "quantidade": 8,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Felipe Ribeiro",
            "email": "seanschmitt@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "6SjQB091tFOSaYqg"
        },
        {
            "nome": "Mayara Fernandes",
            "email": "reyesrachel@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "8fiQiow9JzdR0oE7"
        },
        {
            "nome": "Felipe dos Reis Ribeiro",
            "email": "mitbulll@hotmail.com",
            "password": "101218",
            "administrador": "true",
            "_id": "HbL1qMV1OEXLIcwc"
        },
        {
            "nome": "Felipe Ribeiro",
            "email": "jacob19@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "SPJ4cOq5NzVgun9M"
        },
        {
            "nome": "Felipe Ribeiro",
            "email": "anthonybass@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "Yoqw6Q1RBQzjrPf9"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Nicola.Turner@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "tXoaH7cUkPp1C3Vg"
        },
        {
            "nome": "Felipe Ribeiro",
            "email": "dmoore@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "uXva8737of0YGxLb"
        }
    ]
} 
 </msg>
<msg timestamp="20230503 01:02:43.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:43.576" endtime="20230503 01:02:43.811"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230503 01:02:43.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:43.811" endtime="20230503 01:02:43.812"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.576" endtime="20230503 01:02:43.812"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230503 01:02:43.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230503 01:02:43.812" endtime="20230503 01:02:43.813"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230503 01:02:43.814" endtime="20230503 01:02:43.814"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.812" endtime="20230503 01:02:43.815"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230503 01:02:43.816" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230503 01:02:43.815" endtime="20230503 01:02:43.816"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.815" endtime="20230503 01:02:43.816"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230503 01:02:43.573" endtime="20230503 01:02:43.817"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230503 01:02:43.818" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230503 01:02:43.818" endtime="20230503 01:02:43.819"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.818" endtime="20230503 01:02:43.819"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230503 01:02:43.820" level="INFO">${name} = Brittany Chapman</msg>
<status status="PASS" starttime="20230503 01:02:43.819" endtime="20230503 01:02:43.820"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230503 01:02:43.821" level="INFO">${email} = vincent92@example.org</msg>
<status status="PASS" starttime="20230503 01:02:43.820" endtime="20230503 01:02:43.821"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230503 01:02:43.821" level="INFO">${password} = )#8bKIaQ76</msg>
<status status="PASS" starttime="20230503 01:02:43.821" endtime="20230503 01:02:43.821"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230503 01:02:43.822" level="INFO">${name} = Brittany Chapman</msg>
<status status="PASS" starttime="20230503 01:02:43.822" endtime="20230503 01:02:43.822"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230503 01:02:43.822" level="INFO">${email} = vincent92@example.org</msg>
<status status="PASS" starttime="20230503 01:02:43.822" endtime="20230503 01:02:43.822"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230503 01:02:43.823" level="INFO">${password} = )#8bKIaQ76</msg>
<status status="PASS" starttime="20230503 01:02:43.823" endtime="20230503 01:02:43.823"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.819" endtime="20230503 01:02:43.823"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230503 01:02:43.824" level="INFO">${payload} = {'nome': 'Brittany Chapman', 'email': 'vincent92@example.org', 'password': ')#8bKIaQ76', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230503 01:02:43.824" endtime="20230503 01:02:43.824"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230503 01:02:43.825" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230503 01:02:43.825" endtime="20230503 01:02:43.825"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230503 01:02:43.924" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "Brittany Chapman", "email": "vincent92@example.org", "password": ")#8bKIaQ76", "administrador": "false"}' 
 </msg>
<msg timestamp="20230503 01:02:43.924" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '83aff87f-f342-4f0f-af7f-92c00f2ffcd8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '912009480bb468ea8ebdf90560123405', 'Date': 'Wed, 03 May 2023 01:02:43 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "S7ESUWSivyIwcWKm"
} 
 </msg>
<msg timestamp="20230503 01:02:43.925" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:43.825" endtime="20230503 01:02:43.925"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230503 01:02:43.926" level="INFO">${user_id} = S7ESUWSivyIwcWKm</msg>
<status status="PASS" starttime="20230503 01:02:43.925" endtime="20230503 01:02:43.926"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230503 01:02:43.927" level="INFO">${USER_ID} = S7ESUWSivyIwcWKm</msg>
<status status="PASS" starttime="20230503 01:02:43.926" endtime="20230503 01:02:43.927"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230503 01:02:43.927" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:43.927" endtime="20230503 01:02:43.927"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.823" endtime="20230503 01:02:43.927"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230503 01:02:43.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230503 01:02:43.928" endtime="20230503 01:02:43.929"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230503 01:02:43.929" endtime="20230503 01:02:43.930"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.928" endtime="20230503 01:02:43.930"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230503 01:02:43.931" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230503 01:02:43.931" endtime="20230503 01:02:43.931"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.930" endtime="20230503 01:02:43.931"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230503 01:02:43.817" endtime="20230503 01:02:43.932"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230503 01:02:43.933" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230503 01:02:43.933" endtime="20230503 01:02:43.934"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.933" endtime="20230503 01:02:43.934"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230503 01:02:44.035" level="INFO">GET Request : url=https://serverest.dev/usuarios/S7ESUWSivyIwcWKm 
 path_url=/usuarios/S7ESUWSivyIwcWKm 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230503 01:02:44.036" level="INFO">GET Response : url=https://serverest.dev/usuarios/S7ESUWSivyIwcWKm 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd43bf9f0-7fec-444e-b03b-88c1f194a493', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dc3ec3cedff4ece69c2b66e269031117', 'Date': 'Wed, 03 May 2023 01:02:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "Brittany Chapman",
    "email": "vincent92@example.org",
    "password": ")#8bKIaQ76",
    "administrador": "false",
    "_id": "S7ESUWSivyIwcWKm"
} 
 </msg>
<msg timestamp="20230503 01:02:44.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:43.935" endtime="20230503 01:02:44.036"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230503 01:02:44.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:44.036" endtime="20230503 01:02:44.037"/>
</kw>
<status status="PASS" starttime="20230503 01:02:43.934" endtime="20230503 01:02:44.037"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230503 01:02:44.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230503 01:02:44.038" endtime="20230503 01:02:44.039"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230503 01:02:44.039" endtime="20230503 01:02:44.040"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.037" endtime="20230503 01:02:44.040"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230503 01:02:44.041" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230503 01:02:44.040" endtime="20230503 01:02:44.041"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.040" endtime="20230503 01:02:44.041"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230503 01:02:43.932" endtime="20230503 01:02:44.042"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230503 01:02:44.044" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230503 01:02:44.043" endtime="20230503 01:02:44.044"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.043" endtime="20230503 01:02:44.044"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230503 01:02:44.045" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230503 01:02:44.045" endtime="20230503 01:02:44.045"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230503 01:02:44.046" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230503 01:02:44.045" endtime="20230503 01:02:44.046"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230503 01:02:44.148" level="INFO">PUT Request : url=https://serverest.dev/usuarios/S7ESUWSivyIwcWKm 
 path_url=/usuarios/S7ESUWSivyIwcWKm 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230503 01:02:44.149" level="INFO">PUT Response : url=https://serverest.dev/usuarios/S7ESUWSivyIwcWKm 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1db7a405-bd0f-4385-87d1-ddff32242a5f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '698a4d43ff360259cb81a0133590bfc3', 'Date': 'Wed, 03 May 2023 01:02:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230503 01:02:44.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:44.046" endtime="20230503 01:02:44.149"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230503 01:02:44.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:44.149" endtime="20230503 01:02:44.150"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.044" endtime="20230503 01:02:44.150"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230503 01:02:44.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230503 01:02:44.150" endtime="20230503 01:02:44.151"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230503 01:02:44.152" endtime="20230503 01:02:44.152"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.150" endtime="20230503 01:02:44.152"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230503 01:02:44.154" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230503 01:02:44.153" endtime="20230503 01:02:44.154"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.153" endtime="20230503 01:02:44.154"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230503 01:02:44.042" endtime="20230503 01:02:44.154"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230503 01:02:44.156" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230503 01:02:44.156" endtime="20230503 01:02:44.156"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.155" endtime="20230503 01:02:44.157"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230503 01:02:44.258" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/S7ESUWSivyIwcWKm 
 path_url=/usuarios/S7ESUWSivyIwcWKm 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230503 01:02:44.258" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/S7ESUWSivyIwcWKm 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6eb197ab-db75-4440-85eb-8990f340236e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '02ff6c33bb71f95f7f2f5f58b292a638', 'Date': 'Wed, 03 May 2023 01:02:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230503 01:02:44.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:44.157" endtime="20230503 01:02:44.258"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230503 01:02:44.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230503 01:02:44.259" endtime="20230503 01:02:44.259"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.157" endtime="20230503 01:02:44.259"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230503 01:02:44.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230503 01:02:44.260" endtime="20230503 01:02:44.261"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230503 01:02:44.261" endtime="20230503 01:02:44.262"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.259" endtime="20230503 01:02:44.262"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230503 01:02:44.264" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230503 01:02:44.263" endtime="20230503 01:02:44.264"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.262" endtime="20230503 01:02:44.264"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230503 01:02:44.155" endtime="20230503 01:02:44.264"/>
</test>
<status status="PASS" starttime="20230503 01:02:42.677" endtime="20230503 01:02:44.266"/>
</suite>
<status status="PASS" starttime="20230503 01:02:42.675" endtime="20230503 01:02:44.268"/>
</suite>
<status status="PASS" starttime="20230503 01:02:42.673" endtime="20230503 01:02:44.271"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230503 01:02:44.287" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230503 01:02:44.286" endtime="20230503 01:02:53.984"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230503 01:02:53.985" endtime="20230503 01:02:54.162"/>
</kw>
<status status="PASS" starttime="20230503 01:02:44.285" endtime="20230503 01:02:54.163"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230503 01:02:54.164" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230503 01:02:54.164" endtime="20230503 01:02:54.276"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230503 01:02:54.281" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230503 01:02:54.276" endtime="20230503 01:02:54.281"/>
</kw>
<status status="PASS" starttime="20230503 01:02:54.163" endtime="20230503 01:02:54.282"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:54.285" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230503 01:02:54.282" endtime="20230503 01:02:54.531"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:54.532" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230503 01:02:54.531" endtime="20230503 01:02:54.793"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:54.794" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230503 01:02:54.793" endtime="20230503 01:02:55.223"/>
</kw>
<status status="PASS" starttime="20230503 01:02:54.282" endtime="20230503 01:02:55.223"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230503 01:02:55.231" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230503 01:02:55.224" endtime="20230503 01:02:55.231"/>
</kw>
<status status="PASS" starttime="20230503 01:02:55.223" endtime="20230503 01:02:55.232"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230503 01:02:55.276" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230503 01:02:55.232" endtime="20230503 01:02:55.276"/>
</kw>
<status status="PASS" starttime="20230503 01:02:55.232" endtime="20230503 01:02:55.276"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230503 01:02:55.277" endtime="20230503 01:02:55.336"/>
</kw>
<status status="PASS" starttime="20230503 01:02:55.277" endtime="20230503 01:02:55.336"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230503 01:02:44.285" endtime="20230503 01:02:55.336"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230503 01:02:55.339" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230503 01:02:55.339" endtime="20230503 01:02:56.298"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230503 01:02:56.300" endtime="20230503 01:02:56.408"/>
</kw>
<status status="PASS" starttime="20230503 01:02:55.338" endtime="20230503 01:02:56.409"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230503 01:02:56.410" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230503 01:02:56.410" endtime="20230503 01:02:56.506"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230503 01:02:56.511" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230503 01:02:56.506" endtime="20230503 01:02:56.512"/>
</kw>
<status status="PASS" starttime="20230503 01:02:56.409" endtime="20230503 01:02:56.512"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:56.513" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230503 01:02:56.513" endtime="20230503 01:02:56.644"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:56.645" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230503 01:02:56.644" endtime="20230503 01:02:56.754"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:56.755" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230503 01:02:56.755" endtime="20230503 01:02:56.837"/>
</kw>
<status status="PASS" starttime="20230503 01:02:56.512" endtime="20230503 01:02:56.837"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230503 01:02:56.867" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230503 01:02:56.838" endtime="20230503 01:02:56.868"/>
</kw>
<status status="PASS" starttime="20230503 01:02:56.837" endtime="20230503 01:02:56.868"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230503 01:02:56.869" endtime="20230503 01:02:56.928"/>
</kw>
<status status="PASS" starttime="20230503 01:02:56.868" endtime="20230503 01:02:56.928"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230503 01:02:55.337" endtime="20230503 01:02:56.929"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230503 01:02:56.931" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230503 01:02:56.931" endtime="20230503 01:02:57.857"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230503 01:02:57.857" endtime="20230503 01:02:57.969"/>
</kw>
<status status="PASS" starttime="20230503 01:02:56.930" endtime="20230503 01:02:57.970"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230503 01:02:57.971" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230503 01:02:57.971" endtime="20230503 01:02:58.069"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230503 01:02:58.078" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230503 01:02:58.069" endtime="20230503 01:02:58.078"/>
</kw>
<status status="PASS" starttime="20230503 01:02:57.970" endtime="20230503 01:02:58.078"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:58.080" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230503 01:02:58.079" endtime="20230503 01:02:58.203"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:58.204" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230503 01:02:58.203" endtime="20230503 01:02:58.320"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:58.321" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230503 01:02:58.320" endtime="20230503 01:02:58.447"/>
</kw>
<status status="PASS" starttime="20230503 01:02:58.079" endtime="20230503 01:02:58.447"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230503 01:02:58.462" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230503 01:02:58.448" endtime="20230503 01:02:58.462"/>
</kw>
<status status="PASS" starttime="20230503 01:02:58.447" endtime="20230503 01:02:58.463"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230503 01:02:58.481" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230503 01:02:58.464" endtime="20230503 01:02:58.481"/>
</kw>
<status status="PASS" starttime="20230503 01:02:58.463" endtime="20230503 01:02:58.482"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230503 01:02:58.482" endtime="20230503 01:02:58.545"/>
</kw>
<status status="PASS" starttime="20230503 01:02:58.482" endtime="20230503 01:02:58.545"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230503 01:02:56.929" endtime="20230503 01:02:58.545"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230503 01:02:58.554" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230503 01:02:58.548" endtime="20230503 01:02:59.500"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230503 01:02:59.500" endtime="20230503 01:02:59.606"/>
</kw>
<status status="PASS" starttime="20230503 01:02:58.547" endtime="20230503 01:02:59.606"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230503 01:02:59.607" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230503 01:02:59.607" endtime="20230503 01:02:59.713"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230503 01:02:59.719" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230503 01:02:59.714" endtime="20230503 01:02:59.719"/>
</kw>
<status status="PASS" starttime="20230503 01:02:59.606" endtime="20230503 01:02:59.719"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:59.721" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230503 01:02:59.720" endtime="20230503 01:02:59.865"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230503 01:02:59.866" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230503 01:02:59.865" endtime="20230503 01:03:00.011"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230503 01:03:00.012" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230503 01:03:00.011" endtime="20230503 01:03:05.154"/>
</kw>
<status status="PASS" starttime="20230503 01:02:59.720" endtime="20230503 01:03:05.154"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230503 01:03:05.166" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230503 01:03:05.155" endtime="20230503 01:03:05.167"/>
</kw>
<status status="PASS" starttime="20230503 01:03:05.155" endtime="20230503 01:03:05.167"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230503 01:03:05.187" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230503 01:03:05.168" endtime="20230503 01:03:05.187"/>
</kw>
<status status="PASS" starttime="20230503 01:03:05.168" endtime="20230503 01:03:05.187"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230503 01:03:05.188" endtime="20230503 01:03:05.248"/>
</kw>
<status status="PASS" starttime="20230503 01:03:05.188" endtime="20230503 01:03:05.249"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230503 01:02:58.546" endtime="20230503 01:03:05.249"/>
</test>
<status status="PASS" starttime="20230503 01:02:44.276" endtime="20230503 01:03:05.250"/>
</suite>
<status status="PASS" starttime="20230503 01:02:44.274" endtime="20230503 01:03:05.255"/>
</suite>
<status status="PASS" starttime="20230503 01:02:44.272" endtime="20230503 01:03:05.257"/>
</suite>
<status status="PASS" starttime="20230503 01:02:42.645" endtime="20230503 01:03:05.259"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
