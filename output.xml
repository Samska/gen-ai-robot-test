<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230513 00:59:52.854" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230513 00:59:53.412" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230513 00:59:53.412" endtime="20230513 00:59:53.412"/>
</kw>
<status status="PASS" starttime="20230513 00:59:53.411" endtime="20230513 00:59:53.413"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230513 00:59:57.239" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230513 00:59:57.239" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f40877f3-6fd6-4e05-b261-737ef3fb0985', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8813aa85d4e5dc1dc90a3b9f3d6855fe;o=1', 'Date': 'Sat, 13 May 2023 00:59:57 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230513 00:59:57.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:53.413" endtime="20230513 00:59:57.239"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230513 00:59:57.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.239" endtime="20230513 00:59:57.240"/>
</kw>
<status status="PASS" starttime="20230513 00:59:53.413" endtime="20230513 00:59:57.240"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230513 00:59:57.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.240" endtime="20230513 00:59:57.242"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230513 00:59:57.242" endtime="20230513 00:59:57.243"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.240" endtime="20230513 00:59:57.243"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230513 00:59:57.244" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230513 00:59:57.243" endtime="20230513 00:59:57.244"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.243" endtime="20230513 00:59:57.244"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230513 00:59:53.410" endtime="20230513 00:59:57.244"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230513 00:59:57.247" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230513 00:59:57.246" endtime="20230513 00:59:57.247"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.246" endtime="20230513 00:59:57.247"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230513 00:59:57.248" level="INFO">${name} = Brandi Chang</msg>
<status status="PASS" starttime="20230513 00:59:57.248" endtime="20230513 00:59:57.248"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230513 00:59:57.249" level="INFO">${email} = jonhernandez@example.net</msg>
<status status="PASS" starttime="20230513 00:59:57.248" endtime="20230513 00:59:57.249"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230513 00:59:57.249" level="INFO">${password} = )6WtiP)BDg</msg>
<status status="PASS" starttime="20230513 00:59:57.249" endtime="20230513 00:59:57.249"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230513 00:59:57.250" level="INFO">${name} = Brandi Chang</msg>
<status status="PASS" starttime="20230513 00:59:57.250" endtime="20230513 00:59:57.250"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230513 00:59:57.250" level="INFO">${email} = jonhernandez@example.net</msg>
<status status="PASS" starttime="20230513 00:59:57.250" endtime="20230513 00:59:57.251"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230513 00:59:57.251" level="INFO">${password} = )6WtiP)BDg</msg>
<status status="PASS" starttime="20230513 00:59:57.251" endtime="20230513 00:59:57.251"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.247" endtime="20230513 00:59:57.251"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230513 00:59:57.252" level="INFO">${payload} = {'nome': 'Brandi Chang', 'email': 'jonhernandez@example.net', 'password': ')6WtiP)BDg', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230513 00:59:57.252" endtime="20230513 00:59:57.252"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230513 00:59:57.253" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230513 00:59:57.252" endtime="20230513 00:59:57.253"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230513 00:59:57.349" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Brandi Chang", "email": "jonhernandez@example.net", "password": ")6WtiP)BDg", "administrador": "false"}' 
 </msg>
<msg timestamp="20230513 00:59:57.349" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f3aa665d-8138-472f-84fb-b326dbc42279', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dc290c945d0140045941a9d142c101a9', 'Date': 'Sat, 13 May 2023 00:59:57 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "tK40IgeG76Rrhjx9"
} 
 </msg>
<msg timestamp="20230513 00:59:57.350" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.253" endtime="20230513 00:59:57.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230513 00:59:57.351" level="INFO">${user_id} = tK40IgeG76Rrhjx9</msg>
<status status="PASS" starttime="20230513 00:59:57.350" endtime="20230513 00:59:57.351"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230513 00:59:57.351" level="INFO">${USER_ID} = tK40IgeG76Rrhjx9</msg>
<status status="PASS" starttime="20230513 00:59:57.351" endtime="20230513 00:59:57.351"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230513 00:59:57.352" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.351" endtime="20230513 00:59:57.352"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.251" endtime="20230513 00:59:57.352"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230513 00:59:57.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.352" endtime="20230513 00:59:57.353"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230513 00:59:57.353" endtime="20230513 00:59:57.354"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.352" endtime="20230513 00:59:57.354"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230513 00:59:57.355" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230513 00:59:57.355" endtime="20230513 00:59:57.355"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.354" endtime="20230513 00:59:57.356"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230513 00:59:57.245" endtime="20230513 00:59:57.356"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230513 00:59:57.357" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230513 00:59:57.357" endtime="20230513 00:59:57.359"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.357" endtime="20230513 00:59:57.359"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230513 00:59:57.435" level="INFO">GET Request : url=https://serverest.dev/usuarios/tK40IgeG76Rrhjx9 
 path_url=/usuarios/tK40IgeG76Rrhjx9 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230513 00:59:57.435" level="INFO">GET Response : url=https://serverest.dev/usuarios/tK40IgeG76Rrhjx9 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'eb0afbab-0203-4da5-949b-b8afc35f488c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ac85796885b9b13ad687dc5cce08f063', 'Date': 'Sat, 13 May 2023 00:59:57 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Brandi Chang",
    "email": "jonhernandez@example.net",
    "password": ")6WtiP)BDg",
    "administrador": "false",
    "_id": "tK40IgeG76Rrhjx9"
} 
 </msg>
<msg timestamp="20230513 00:59:57.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.362" endtime="20230513 00:59:57.435"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230513 00:59:57.436" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.435" endtime="20230513 00:59:57.436"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.359" endtime="20230513 00:59:57.436"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230513 00:59:57.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.437" endtime="20230513 00:59:57.438"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230513 00:59:57.438" endtime="20230513 00:59:57.439"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.436" endtime="20230513 00:59:57.439"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230513 00:59:57.440" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230513 00:59:57.440" endtime="20230513 00:59:57.441"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.439" endtime="20230513 00:59:57.441"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230513 00:59:57.356" endtime="20230513 00:59:57.441"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230513 00:59:57.443" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230513 00:59:57.443" endtime="20230513 00:59:57.443"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.442" endtime="20230513 00:59:57.444"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230513 00:59:57.445" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230513 00:59:57.444" endtime="20230513 00:59:57.445"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230513 00:59:57.445" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230513 00:59:57.445" endtime="20230513 00:59:57.445"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230513 00:59:57.522" level="INFO">PUT Request : url=https://serverest.dev/usuarios/tK40IgeG76Rrhjx9 
 path_url=/usuarios/tK40IgeG76Rrhjx9 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230513 00:59:57.522" level="INFO">PUT Response : url=https://serverest.dev/usuarios/tK40IgeG76Rrhjx9 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9b522992-88fd-4a63-9e75-418e2c6c097f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9b41376501b2fc4a73042d507ceb4ac4', 'Date': 'Sat, 13 May 2023 00:59:57 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230513 00:59:57.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.445" endtime="20230513 00:59:57.522"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230513 00:59:57.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.522" endtime="20230513 00:59:57.523"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.444" endtime="20230513 00:59:57.523"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230513 00:59:57.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.524" endtime="20230513 00:59:57.525"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230513 00:59:57.525" endtime="20230513 00:59:57.526"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.523" endtime="20230513 00:59:57.526"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230513 00:59:57.527" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230513 00:59:57.526" endtime="20230513 00:59:57.527"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.526" endtime="20230513 00:59:57.527"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230513 00:59:57.441" endtime="20230513 00:59:57.527"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230513 00:59:57.529" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230513 00:59:57.528" endtime="20230513 00:59:57.529"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.528" endtime="20230513 00:59:57.529"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230513 00:59:57.608" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/tK40IgeG76Rrhjx9 
 path_url=/usuarios/tK40IgeG76Rrhjx9 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230513 00:59:57.608" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/tK40IgeG76Rrhjx9 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'de601dd7-d9cf-4a9a-8068-49e6589083c4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9b03786e20c3405cf8d4a87dd72c9ee5', 'Date': 'Sat, 13 May 2023 00:59:57 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230513 00:59:57.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.530" endtime="20230513 00:59:57.608"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230513 00:59:57.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.608" endtime="20230513 00:59:57.609"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.529" endtime="20230513 00:59:57.609"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230513 00:59:57.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230513 00:59:57.610" endtime="20230513 00:59:57.611"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230513 00:59:57.611" endtime="20230513 00:59:57.612"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.609" endtime="20230513 00:59:57.612"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230513 00:59:57.613" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230513 00:59:57.612" endtime="20230513 00:59:57.613"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.612" endtime="20230513 00:59:57.613"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230513 00:59:57.527" endtime="20230513 00:59:57.613"/>
</test>
<status status="PASS" starttime="20230513 00:59:52.879" endtime="20230513 00:59:57.615"/>
</suite>
<status status="PASS" starttime="20230513 00:59:52.878" endtime="20230513 00:59:57.616"/>
</suite>
<status status="PASS" starttime="20230513 00:59:52.876" endtime="20230513 00:59:57.617"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230513 00:59:57.630" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230513 00:59:57.630" endtime="20230513 00:59:59.321"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230513 00:59:59.321" endtime="20230513 00:59:59.428"/>
</kw>
<status status="PASS" starttime="20230513 00:59:57.629" endtime="20230513 00:59:59.428"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230513 00:59:59.429" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230513 00:59:59.429" endtime="20230513 00:59:59.507"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230513 00:59:59.519" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230513 00:59:59.507" endtime="20230513 00:59:59.519"/>
</kw>
<status status="PASS" starttime="20230513 00:59:59.428" endtime="20230513 00:59:59.520"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230513 00:59:59.522" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230513 00:59:59.520" endtime="20230513 00:59:59.671"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230513 00:59:59.672" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230513 00:59:59.671" endtime="20230513 00:59:59.778"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230513 00:59:59.778" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230513 00:59:59.778" endtime="20230513 00:59:59.910"/>
</kw>
<status status="PASS" starttime="20230513 00:59:59.520" endtime="20230513 00:59:59.910"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230513 00:59:59.927" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230513 00:59:59.911" endtime="20230513 00:59:59.927"/>
</kw>
<status status="PASS" starttime="20230513 00:59:59.910" endtime="20230513 00:59:59.927"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230513 00:59:59.946" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230513 00:59:59.928" endtime="20230513 00:59:59.946"/>
</kw>
<status status="PASS" starttime="20230513 00:59:59.928" endtime="20230513 00:59:59.946"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230513 00:59:59.947" endtime="20230513 01:00:00.005"/>
</kw>
<status status="PASS" starttime="20230513 00:59:59.946" endtime="20230513 01:00:00.006"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230513 00:59:57.629" endtime="20230513 01:00:00.006"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230513 01:00:00.008" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230513 01:00:00.007" endtime="20230513 01:00:00.912"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230513 01:00:00.913" endtime="20230513 01:00:01.018"/>
</kw>
<status status="PASS" starttime="20230513 01:00:00.007" endtime="20230513 01:00:01.019"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230513 01:00:01.020" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230513 01:00:01.019" endtime="20230513 01:00:01.094"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230513 01:00:01.104" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230513 01:00:01.095" endtime="20230513 01:00:01.104"/>
</kw>
<status status="PASS" starttime="20230513 01:00:01.019" endtime="20230513 01:00:01.104"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230513 01:00:01.105" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230513 01:00:01.105" endtime="20230513 01:00:01.253"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230513 01:00:01.254" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230513 01:00:01.254" endtime="20230513 01:00:01.365"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230513 01:00:01.366" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230513 01:00:01.365" endtime="20230513 01:00:01.436"/>
</kw>
<status status="PASS" starttime="20230513 01:00:01.104" endtime="20230513 01:00:01.437"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230513 01:00:01.464" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230513 01:00:01.437" endtime="20230513 01:00:01.464"/>
</kw>
<status status="PASS" starttime="20230513 01:00:01.437" endtime="20230513 01:00:01.465"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230513 01:00:01.465" endtime="20230513 01:00:01.523"/>
</kw>
<status status="PASS" starttime="20230513 01:00:01.465" endtime="20230513 01:00:01.523"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230513 01:00:00.006" endtime="20230513 01:00:01.523"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230513 01:00:01.528" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230513 01:00:01.527" endtime="20230513 01:00:02.441"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230513 01:00:02.441" endtime="20230513 01:00:02.555"/>
</kw>
<status status="PASS" starttime="20230513 01:00:01.527" endtime="20230513 01:00:02.555"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230513 01:00:02.556" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230513 01:00:02.556" endtime="20230513 01:00:02.624"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230513 01:00:02.635" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230513 01:00:02.625" endtime="20230513 01:00:02.635"/>
</kw>
<status status="PASS" starttime="20230513 01:00:02.555" endtime="20230513 01:00:02.635"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230513 01:00:02.637" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230513 01:00:02.636" endtime="20230513 01:00:02.782"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230513 01:00:02.782" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230513 01:00:02.782" endtime="20230513 01:00:02.893"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230513 01:00:02.894" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230513 01:00:02.894" endtime="20230513 01:00:02.998"/>
</kw>
<status status="PASS" starttime="20230513 01:00:02.635" endtime="20230513 01:00:02.999"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230513 01:00:03.011" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230513 01:00:02.999" endtime="20230513 01:00:03.011"/>
</kw>
<status status="PASS" starttime="20230513 01:00:02.999" endtime="20230513 01:00:03.011"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230513 01:00:03.032" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230513 01:00:03.012" endtime="20230513 01:00:03.032"/>
</kw>
<status status="PASS" starttime="20230513 01:00:03.011" endtime="20230513 01:00:03.032"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230513 01:00:03.033" endtime="20230513 01:00:03.091"/>
</kw>
<status status="PASS" starttime="20230513 01:00:03.033" endtime="20230513 01:00:03.091"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230513 01:00:01.526" endtime="20230513 01:00:03.091"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230513 01:00:03.093" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230513 01:00:03.093" endtime="20230513 01:00:03.978"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230513 01:00:03.978" endtime="20230513 01:00:04.084"/>
</kw>
<status status="PASS" starttime="20230513 01:00:03.092" endtime="20230513 01:00:04.085"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230513 01:00:04.086" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230513 01:00:04.085" endtime="20230513 01:00:04.161"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230513 01:00:04.169" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230513 01:00:04.161" endtime="20230513 01:00:04.169"/>
</kw>
<status status="PASS" starttime="20230513 01:00:04.085" endtime="20230513 01:00:04.169"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230513 01:00:04.171" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230513 01:00:04.170" endtime="20230513 01:00:04.329"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230513 01:00:04.330" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230513 01:00:04.330" endtime="20230513 01:00:04.429"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230513 01:00:04.429" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230513 01:00:04.429" endtime="20230513 01:00:09.539"/>
</kw>
<status status="PASS" starttime="20230513 01:00:04.169" endtime="20230513 01:00:09.539"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230513 01:00:09.547" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230513 01:00:09.540" endtime="20230513 01:00:09.547"/>
</kw>
<status status="PASS" starttime="20230513 01:00:09.539" endtime="20230513 01:00:09.548"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230513 01:00:09.575" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230513 01:00:09.548" endtime="20230513 01:00:09.575"/>
</kw>
<status status="PASS" starttime="20230513 01:00:09.548" endtime="20230513 01:00:09.575"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230513 01:00:09.576" endtime="20230513 01:00:09.634"/>
</kw>
<status status="PASS" starttime="20230513 01:00:09.575" endtime="20230513 01:00:09.634"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230513 01:00:03.092" endtime="20230513 01:00:09.634"/>
</test>
<status status="PASS" starttime="20230513 00:59:57.622" endtime="20230513 01:00:09.636"/>
</suite>
<status status="PASS" starttime="20230513 00:59:57.620" endtime="20230513 01:00:09.639"/>
</suite>
<status status="PASS" starttime="20230513 00:59:57.618" endtime="20230513 01:00:09.642"/>
</suite>
<status status="PASS" starttime="20230513 00:59:52.855" endtime="20230513 01:00:09.644"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
