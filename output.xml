<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230521 23:12:40.152" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:12:40.614" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:12:40.614" endtime="20230521 23:12:40.615"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.614" endtime="20230521 23:12:40.615"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:12:40.819" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:12:40.819" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3753cc02-a3d8-4616-b4d2-d679905db2e1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6d40c5e1a6ff08d9d8818bc42583da78;o=1', 'Date': 'Sun, 21 May 2023 23:12:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '4148'} 
 body={
    "quantidade": 19,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "John Bell",
            "email": "ruizevan@example.org",
            "password": "*6OUOdmYrv",
            "administrador": "true",
            "_id": "2IKr7LeKuyL4FtC8"
        },
        {
            "nome": "Nicholas Pacheco",
            "email": "youngkayla@example.com",
            "password": "6)5EZOSrjn",
            "administrador": "true",
            "_id": "38Y0QxwG4PDRWCXi"
        },
        {
            "nome": "Teste",
            "email": "samska@gmail.com",
            "password": "Qw98ed74",
            "administrador": "false",
            "_id": "3Xr3T2ckzgNOAh1F"
        },
        {
            "nome": "Mr. James Peterson PhD",
            "email": "connierivera@example.net",
            "password": "NdU_3!LsKk",
            "administrador": "true",
            "_id": "4pI3IxxAgkZAtnue"
        },
        {
            "nome": "Juan Allen",
            "email": "justingomez@example.com",
            "password": "1(#X9ArRvD",
            "administrador": "true",
            "_id": "8tu4KvMVyoTeP4LJ"
        },
        {
            "nome": "Jessica Carter",
            "email": "ashley35@example.org",
            "password": "2o#CnmFC!x",
            "administrador": "true",
            "_id": "Cb7CzMJO3TAjHhNf"
        },
        {
            "nome": "Clifford Price",
            "email": "welchnicholas@example.net",
            "password": "1qY#Rh5L^4",
            "administrador": "true",
            "_id": "CeTenawvCCaAOcoP"
        },
        {
            "nome": "Amy Clark",
            "email": "stephanie62@example.org",
            "password": "g2bHN9v4@4",
            "administrador": "true",
            "_id": "GiHP7flmMy9cnO4x"
        },
        {
            "nome": "Donald Smith",
            "email": "samanthawells@example.com",
            "password": "+N9BWsoU_y",
            "administrador": "true",
            "_id": "Gv7cXeZoEeMSmJ4b"
        },
        {
            "nome": "Terri Campbell",
            "email": "afitzgerald@example.org",
            "password": "x$g8ZRbZ*8",
            "administrador": "true",
            "_id": "HYf8IxtoxgZTI2YN"
        },
        {
            "nome": "Aaron Wilson",
            "email": "ghughes@example.org",
            "password": "#5Ioppb^^!",
            "administrador": "true",
            "_id": "IPrmJNRK8nMHPC5g"
        },
        {
            "nome": "teste",
            "email": "testee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "PaihpGw8oseaf7q7"
        },
        {
            "nome": "David Sanders",
            "email": "christopher87@example.com",
            "password": "LNkI#4Ah@_",
            "administrador": "true",
            "_id": "SFEcefct8tA4iHXt"
        },
        {
            "nome": "Micheal Caldwell",
            "email": "wilsonphilip@example.org",
            "password": "+BtZAI*Rs9",
            "administrador": "true",
            "_id": "b6YFBA5wmoQHYZRW"
        },
        {
            "nome": "Heidi Downs",
            "email": "urodriguez@example.com",
            "password": "1HQp3Qp5G#",
            "administrador": "true",
            "_id": "kO3ZvqwVu4B467mM"
        },
        {
            "nome": "Erin Perkins",
            "email": "bowenmichael@example.com",
            "password": "^5@&amp;8Xg(u_",
            "administrador": "true",
            "_id": "rd8XVnMFbXai1o5T"
        },
        {
            "nome": "testeeee",
            "email": "testeee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "yedZQ0ohrtKKZHdP"
        },
        {
            "nome": "Shannon Harris",
            "email": "tarapatterson@example.org",
            "password": "46HqkYPe#V",
            "administrador": "true",
            "_id": "zW5jUFJLv4d4MDmN"
        }
    ]
} 
 </msg>
<msg timestamp="20230521 23:12:40.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:12:40.615" endtime="20230521 23:12:40.819"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:12:40.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:12:40.819" endtime="20230521 23:12:40.819"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.615" endtime="20230521 23:12:40.820"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:12:40.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:12:40.820" endtime="20230521 23:12:40.821"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:12:40.821" endtime="20230521 23:12:40.821"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.820" endtime="20230521 23:12:40.822"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:12:40.823" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:12:40.822" endtime="20230521 23:12:40.823"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.822" endtime="20230521 23:12:40.823"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:12:40.613" endtime="20230521 23:12:40.823"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:12:40.824" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:12:40.824" endtime="20230521 23:12:40.824"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.824" endtime="20230521 23:12:40.825"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:12:40.825" level="INFO">${name} = Shane Hoffman</msg>
<status status="PASS" starttime="20230521 23:12:40.825" endtime="20230521 23:12:40.825"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:12:40.826" level="INFO">${email} = keithbennett@example.org</msg>
<status status="PASS" starttime="20230521 23:12:40.825" endtime="20230521 23:12:40.826"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:12:40.826" level="INFO">${password} = &amp;CI#@LPpN9</msg>
<status status="PASS" starttime="20230521 23:12:40.826" endtime="20230521 23:12:40.826"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:12:40.827" level="INFO">${name} = Shane Hoffman</msg>
<status status="PASS" starttime="20230521 23:12:40.826" endtime="20230521 23:12:40.827"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:12:40.827" level="INFO">${email} = keithbennett@example.org</msg>
<status status="PASS" starttime="20230521 23:12:40.827" endtime="20230521 23:12:40.827"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:12:40.828" level="FAIL">Variable '${CI#@LPpN9}' not found.</msg>
<status status="FAIL" starttime="20230521 23:12:40.827" endtime="20230521 23:12:40.828"/>
</kw>
<status status="FAIL" starttime="20230521 23:12:40.825" endtime="20230521 23:12:40.828"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<status status="NOT RUN" starttime="20230521 23:12:40.828" endtime="20230521 23:12:40.828"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<status status="NOT RUN" starttime="20230521 23:12:40.828" endtime="20230521 23:12:40.828"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<status status="NOT RUN" starttime="20230521 23:12:40.828" endtime="20230521 23:12:40.828"/>
</kw>
<tag>api</tag>
<status status="FAIL" starttime="20230521 23:12:40.823" endtime="20230521 23:12:40.828">Variable '${CI#@LPpN9}' not found.</status>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:12:40.830" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:12:40.830" endtime="20230521 23:12:40.830"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.829" endtime="20230521 23:12:40.830"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:12:40.932" level="INFO">GET Request : url=https://serverest.dev/usuarios/ 
 path_url=/usuarios/ 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:12:40.932" level="INFO">GET Response : url=https://serverest.dev/usuarios/ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e42693ef-d2cc-4973-9b09-164c4b400aff', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '88004aebb47062801631ca49ee78c117', 'Date': 'Sun, 21 May 2023 23:12:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '4148'} 
 body={
    "quantidade": 19,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "John Bell",
            "email": "ruizevan@example.org",
            "password": "*6OUOdmYrv",
            "administrador": "true",
            "_id": "2IKr7LeKuyL4FtC8"
        },
        {
            "nome": "Nicholas Pacheco",
            "email": "youngkayla@example.com",
            "password": "6)5EZOSrjn",
            "administrador": "true",
            "_id": "38Y0QxwG4PDRWCXi"
        },
        {
            "nome": "Teste",
            "email": "samska@gmail.com",
            "password": "Qw98ed74",
            "administrador": "false",
            "_id": "3Xr3T2ckzgNOAh1F"
        },
        {
            "nome": "Mr. James Peterson PhD",
            "email": "connierivera@example.net",
            "password": "NdU_3!LsKk",
            "administrador": "true",
            "_id": "4pI3IxxAgkZAtnue"
        },
        {
            "nome": "Juan Allen",
            "email": "justingomez@example.com",
            "password": "1(#X9ArRvD",
            "administrador": "true",
            "_id": "8tu4KvMVyoTeP4LJ"
        },
        {
            "nome": "Jessica Carter",
            "email": "ashley35@example.org",
            "password": "2o#CnmFC!x",
            "administrador": "true",
            "_id": "Cb7CzMJO3TAjHhNf"
        },
        {
            "nome": "Clifford Price",
            "email": "welchnicholas@example.net",
            "password": "1qY#Rh5L^4",
            "administrador": "true",
            "_id": "CeTenawvCCaAOcoP"
        },
        {
            "nome": "Amy Clark",
            "email": "stephanie62@example.org",
            "password": "g2bHN9v4@4",
            "administrador": "true",
            "_id": "GiHP7flmMy9cnO4x"
        },
        {
            "nome": "Donald Smith",
            "email": "samanthawells@example.com",
            "password": "+N9BWsoU_y",
            "administrador": "true",
            "_id": "Gv7cXeZoEeMSmJ4b"
        },
        {
            "nome": "Terri Campbell",
            "email": "afitzgerald@example.org",
            "password": "x$g8ZRbZ*8",
            "administrador": "true",
            "_id": "HYf8IxtoxgZTI2YN"
        },
        {
            "nome": "Aaron Wilson",
            "email": "ghughes@example.org",
            "password": "#5Ioppb^^!",
            "administrador": "true",
            "_id": "IPrmJNRK8nMHPC5g"
        },
        {
            "nome": "teste",
            "email": "testee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "PaihpGw8oseaf7q7"
        },
        {
            "nome": "David Sanders",
            "email": "christopher87@example.com",
            "password": "LNkI#4Ah@_",
            "administrador": "true",
            "_id": "SFEcefct8tA4iHXt"
        },
        {
            "nome": "Micheal Caldwell",
            "email": "wilsonphilip@example.org",
            "password": "+BtZAI*Rs9",
            "administrador": "true",
            "_id": "b6YFBA5wmoQHYZRW"
        },
        {
            "nome": "Heidi Downs",
            "email": "urodriguez@example.com",
            "password": "1HQp3Qp5G#",
            "administrador": "true",
            "_id": "kO3ZvqwVu4B467mM"
        },
        {
            "nome": "Erin Perkins",
            "email": "bowenmichael@example.com",
            "password": "^5@&amp;8Xg(u_",
            "administrador": "true",
            "_id": "rd8XVnMFbXai1o5T"
        },
        {
            "nome": "testeeee",
            "email": "testeee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "yedZQ0ohrtKKZHdP"
        },
        {
            "nome": "Shannon Harris",
            "email": "tarapatterson@example.org",
            "password": "46HqkYPe#V",
            "administrador": "true",
            "_id": "zW5jUFJLv4d4MDmN"
        }
    ]
} 
 </msg>
<msg timestamp="20230521 23:12:40.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:12:40.831" endtime="20230521 23:12:40.932"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:12:40.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:12:40.932" endtime="20230521 23:12:40.933"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.830" endtime="20230521 23:12:40.933"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:12:40.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:12:40.933" endtime="20230521 23:12:40.934"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:12:40.934" endtime="20230521 23:12:40.935"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.933" endtime="20230521 23:12:40.935"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:12:40.936" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:12:40.935" endtime="20230521 23:12:40.936"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.935" endtime="20230521 23:12:40.936"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:12:40.829" endtime="20230521 23:12:40.936"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:12:40.937" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:12:40.937" endtime="20230521 23:12:40.937"/>
</kw>
<status status="PASS" starttime="20230521 23:12:40.937" endtime="20230521 23:12:40.938"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:12:40.938" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 23:12:40.938" endtime="20230521 23:12:40.938"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:12:40.939" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 23:12:40.938" endtime="20230521 23:12:40.939"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:12:41.036" level="INFO">PUT Request : url=https://serverest.dev/usuarios/ 
 path_url=/usuarios/ 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 23:12:41.036" level="INFO">PUT Response : url=https://serverest.dev/usuarios/ 
 status=405, reason=Method Not Allowed 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '869f5ca2-d811-43fc-aa3c-d526b97ddcce', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '793d7aa02bed19d0958812f79c80eec4', 'Date': 'Sun, 21 May 2023 23:12:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '147'} 
 body={
    "message": "Não é possível realizar PUT em /usuarios/. Acesse https://serverest.dev para ver as rotas disponíveis e como utilizá-las."
} 
 </msg>
<msg timestamp="20230521 23:12:41.036" level="FAIL">HTTPError: 405 Client Error: Method Not Allowed for url: https://serverest.dev/usuarios/</msg>
<status status="FAIL" starttime="20230521 23:12:40.939" endtime="20230521 23:12:41.037"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20230521 23:12:41.037" endtime="20230521 23:12:41.037"/>
</kw>
<status status="FAIL" starttime="20230521 23:12:40.938" endtime="20230521 23:12:41.037"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<status status="NOT RUN" starttime="20230521 23:12:41.037" endtime="20230521 23:12:41.037"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<status status="NOT RUN" starttime="20230521 23:12:41.037" endtime="20230521 23:12:41.037"/>
</kw>
<tag>api</tag>
<status status="FAIL" starttime="20230521 23:12:40.936" endtime="20230521 23:12:41.038">HTTPError: 405 Client Error: Method Not Allowed for url: https://serverest.dev/usuarios/</status>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:12:41.040" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:12:41.040" endtime="20230521 23:12:41.041"/>
</kw>
<status status="PASS" starttime="20230521 23:12:41.040" endtime="20230521 23:12:41.041"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:12:41.139" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/ 
 path_url=/usuarios/ 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:12:41.139" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/ 
 status=405, reason=Method Not Allowed 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cc1fc288-331a-4b4c-89f6-362ebd2fb926', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c6150ae3a308f846d0cf740f7ba06d81', 'Date': 'Sun, 21 May 2023 23:12:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '150'} 
 body={
    "message": "Não é possível realizar DELETE em /usuarios/. Acesse https://serverest.dev para ver as rotas disponíveis e como utilizá-las."
} 
 </msg>
<msg timestamp="20230521 23:12:41.140" level="FAIL">HTTPError: 405 Client Error: Method Not Allowed for url: https://serverest.dev/usuarios/</msg>
<status status="FAIL" starttime="20230521 23:12:41.041" endtime="20230521 23:12:41.140"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20230521 23:12:41.140" endtime="20230521 23:12:41.140"/>
</kw>
<status status="FAIL" starttime="20230521 23:12:41.041" endtime="20230521 23:12:41.140"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<status status="NOT RUN" starttime="20230521 23:12:41.140" endtime="20230521 23:12:41.141"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<status status="NOT RUN" starttime="20230521 23:12:41.141" endtime="20230521 23:12:41.141"/>
</kw>
<tag>api</tag>
<status status="FAIL" starttime="20230521 23:12:41.038" endtime="20230521 23:12:41.141">HTTPError: 405 Client Error: Method Not Allowed for url: https://serverest.dev/usuarios/</status>
</test>
<status status="FAIL" starttime="20230521 23:12:40.173" endtime="20230521 23:12:41.142"/>
</suite>
<status status="FAIL" starttime="20230521 23:12:40.171" endtime="20230521 23:12:41.143"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:12:41.153" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:12:41.153" endtime="20230521 23:12:42.725"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:12:42.725" endtime="20230521 23:12:42.829"/>
</kw>
<status status="PASS" starttime="20230521 23:12:41.152" endtime="20230521 23:12:42.829"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:12:42.834" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:12:42.830" endtime="20230521 23:12:42.835"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:42.836" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:12:42.835" endtime="20230521 23:12:42.919"/>
</kw>
<status status="PASS" starttime="20230521 23:12:42.830" endtime="20230521 23:12:42.919"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:42.920" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:12:42.920" endtime="20230521 23:12:42.980"/>
</kw>
<status status="PASS" starttime="20230521 23:12:42.920" endtime="20230521 23:12:42.980"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:12:42.980" endtime="20230521 23:12:43.214"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:12:43.232" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:12:43.214" endtime="20230521 23:12:43.232"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:12:43.246" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:12:43.232" endtime="20230521 23:12:43.246"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:12:43.259" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:12:43.247" endtime="20230521 23:12:43.259"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:12:43.272" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:12:43.259" endtime="20230521 23:12:43.272"/>
</kw>
<status status="PASS" starttime="20230521 23:12:42.980" endtime="20230521 23:12:43.272"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:12:43.272" endtime="20230521 23:12:43.327"/>
</kw>
<status status="PASS" starttime="20230521 23:12:43.272" endtime="20230521 23:12:43.328"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:12:41.152" endtime="20230521 23:12:43.328"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:12:43.330" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:12:43.329" endtime="20230521 23:12:44.418"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:12:44.419" endtime="20230521 23:12:44.529"/>
</kw>
<status status="PASS" starttime="20230521 23:12:43.329" endtime="20230521 23:12:44.529"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:12:44.534" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:12:44.530" endtime="20230521 23:12:44.535"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:44.535" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:12:44.535" endtime="20230521 23:12:44.616"/>
</kw>
<status status="PASS" starttime="20230521 23:12:44.529" endtime="20230521 23:12:44.617"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:12:44.618" level="INFO">${name} = Jamie Brown</msg>
<status status="PASS" starttime="20230521 23:12:44.617" endtime="20230521 23:12:44.618"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:12:44.618" level="INFO">${email} = herbert98@example.com</msg>
<status status="PASS" starttime="20230521 23:12:44.618" endtime="20230521 23:12:44.618"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:12:44.619" level="INFO">${password} = )XOI49rn5y</msg>
<status status="PASS" starttime="20230521 23:12:44.618" endtime="20230521 23:12:44.619"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:44.619" level="INFO">Typing text 'Jamie Brown' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:12:44.619" endtime="20230521 23:12:44.730"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:44.731" level="INFO">Typing text 'herbert98@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:12:44.731" endtime="20230521 23:12:44.840"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:44.841" level="INFO">Typing text ')XOI49rn5y' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:12:44.841" endtime="20230521 23:12:44.925"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:44.925" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:12:44.925" endtime="20230521 23:12:44.999"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:12:44.999" level="INFO">${name} = Jamie Brown</msg>
<status status="PASS" starttime="20230521 23:12:44.999" endtime="20230521 23:12:45.000"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:12:45.000" level="INFO">${email} = herbert98@example.com</msg>
<status status="PASS" starttime="20230521 23:12:45.000" endtime="20230521 23:12:45.000"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:12:45.000" level="INFO">${password} = )XOI49rn5y</msg>
<status status="PASS" starttime="20230521 23:12:45.000" endtime="20230521 23:12:45.000"/>
</kw>
<status status="PASS" starttime="20230521 23:12:44.617" endtime="20230521 23:12:45.001"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:45.001" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:12:45.001" endtime="20230521 23:12:45.063"/>
</kw>
<status status="PASS" starttime="20230521 23:12:45.001" endtime="20230521 23:12:45.063"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:12:45.064" endtime="20230521 23:12:45.298"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:12:45.316" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:12:45.298" endtime="20230521 23:12:45.316"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:12:45.328" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230521 23:12:45.316" endtime="20230521 23:12:45.328"/>
</kw>
<status status="PASS" starttime="20230521 23:12:45.064" endtime="20230521 23:12:45.328"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:12:45.329" endtime="20230521 23:12:45.384"/>
</kw>
<status status="PASS" starttime="20230521 23:12:45.329" endtime="20230521 23:12:45.384"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:12:43.328" endtime="20230521 23:12:45.384"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:12:45.386" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:12:45.386" endtime="20230521 23:12:46.478"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:12:46.479" endtime="20230521 23:12:46.582"/>
</kw>
<status status="PASS" starttime="20230521 23:12:45.385" endtime="20230521 23:12:46.582"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:12:46.587" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:12:46.583" endtime="20230521 23:12:46.587"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:46.588" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:12:46.588" endtime="20230521 23:12:46.670"/>
</kw>
<status status="PASS" starttime="20230521 23:12:46.582" endtime="20230521 23:12:46.670"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:46.671" level="INFO">Typing text 'Jamie Brown' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:12:46.671" endtime="20230521 23:12:46.776"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:46.776" level="INFO">Typing text 'herbert98@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:12:46.776" endtime="20230521 23:12:46.877"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:46.877" level="INFO">Typing text ')XOI49rn5y' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:12:46.877" endtime="20230521 23:12:46.958"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:46.958" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:12:46.958" endtime="20230521 23:12:47.030"/>
</kw>
<status status="PASS" starttime="20230521 23:12:46.670" endtime="20230521 23:12:47.030"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:12:47.031" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:12:47.030" endtime="20230521 23:12:47.092"/>
</kw>
<status status="PASS" starttime="20230521 23:12:47.030" endtime="20230521 23:12:47.092"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:12:47.092" endtime="20230521 23:12:47.325"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:12:47.344" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:12:47.325" endtime="20230521 23:12:47.344"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:12:47.359" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230521 23:12:47.344" endtime="20230521 23:12:47.359"/>
</kw>
<status status="PASS" starttime="20230521 23:12:47.092" endtime="20230521 23:12:47.359"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:12:47.359" endtime="20230521 23:12:47.416"/>
</kw>
<status status="PASS" starttime="20230521 23:12:47.359" endtime="20230521 23:12:47.416"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:12:45.385" endtime="20230521 23:12:47.416"/>
</test>
<status status="PASS" starttime="20230521 23:12:41.145" endtime="20230521 23:12:47.417"/>
</suite>
<status status="PASS" starttime="20230521 23:12:41.144" endtime="20230521 23:12:47.418"/>
</suite>
<status status="FAIL" starttime="20230521 23:12:40.153" endtime="20230521 23:12:47.419"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="3" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="5" fail="3" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="2" fail="3" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="2" fail="3" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
