<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 15:34:15.605" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:34:16.215" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:34:16.215" endtime="20230601 15:34:16.215"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.214" endtime="20230601 15:34:16.216"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:34:16.356" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 15:34:16.357" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a6d0aac5-8997-4fb5-b128-6252013fbfbd', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '56979f16dd569090a5eb69f60f5f55c8;o=1', 'Date': 'Thu, 01 Jun 2023 15:34:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '4817'} 
 body={
    "quantidade": 22,
    "usuarios": [
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "{{nome}}",
            "email": "Wade@qa.com.br",
            "password": "75sp8gpG4_cwEJL",
            "administrador": "true",
            "_id": "eiYlTXHzMuezZ3JP"
        },
        {
            "nome": "{{nome}}",
            "email": "Hadley@qa.com.br",
            "password": "cTFFNtgOYHKCveO",
            "administrador": "true",
            "_id": "gP4GN1H0ztPPVm4T"
        },
        {
            "nome": "Stephen Price",
            "email": "schaeferdylan@example.com",
            "password": "8O6ksSdDZp24",
            "administrador": "true",
            "_id": "hgBx9ALEJofc7VxJ"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano_teste@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "r4MkfwAxanGM2wV0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Troy Ray",
            "email": "debbie39@example.net",
            "password": "di5JjZtW5C2X",
            "administrador": "true",
            "_id": "w6qnBS2wGoSELmzN"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "wbGsZa5vMrOWAm7a"
        },
        {
            "nome": "julia",
            "email": "contatojuliasena2@gmail.com",
            "password": "07101995",
            "administrador": "false",
            "_id": "x5hhnzNB64soj1IS"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 15:34:16.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.216" endtime="20230601 15:34:16.357"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:34:16.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.357" endtime="20230601 15:34:16.357"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.216" endtime="20230601 15:34:16.358"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:34:16.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.358" endtime="20230601 15:34:16.359"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:34:16.359" endtime="20230601 15:34:16.360"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.358" endtime="20230601 15:34:16.360"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:34:16.361" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 15:34:16.360" endtime="20230601 15:34:16.361"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.360" endtime="20230601 15:34:16.361"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:34:16.214" endtime="20230601 15:34:16.361"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:34:16.362" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:34:16.362" endtime="20230601 15:34:16.362"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.362" endtime="20230601 15:34:16.363"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 15:34:16.363" level="INFO">${name} = Kara Dominguez</msg>
<status status="PASS" starttime="20230601 15:34:16.363" endtime="20230601 15:34:16.363"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 15:34:16.364" level="INFO">${email} = cfleming@example.net</msg>
<status status="PASS" starttime="20230601 15:34:16.363" endtime="20230601 15:34:16.364"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 15:34:16.364" level="INFO">${password} = eHcAjBFj8xkr</msg>
<status status="PASS" starttime="20230601 15:34:16.364" endtime="20230601 15:34:16.364"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:34:16.365" level="INFO">${name} = Kara Dominguez</msg>
<status status="PASS" starttime="20230601 15:34:16.364" endtime="20230601 15:34:16.365"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:34:16.365" level="INFO">${email} = cfleming@example.net</msg>
<status status="PASS" starttime="20230601 15:34:16.365" endtime="20230601 15:34:16.365"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:34:16.365" level="INFO">${password} = eHcAjBFj8xkr</msg>
<status status="PASS" starttime="20230601 15:34:16.365" endtime="20230601 15:34:16.365"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.363" endtime="20230601 15:34:16.365"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:34:16.366" level="INFO">${payload} = {'nome': 'Kara Dominguez', 'email': 'cfleming@example.net', 'password': 'eHcAjBFj8xkr', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 15:34:16.366" endtime="20230601 15:34:16.366"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:34:16.367" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 15:34:16.366" endtime="20230601 15:34:16.367"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:34:16.451" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Kara Dominguez", "email": "cfleming@example.net", "password": "eHcAjBFj8xkr", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 15:34:16.451" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a26dc3e1-0fa5-44f2-b7ed-16e0b85ae031', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2f57fc4748189cdc508224b3bae49815', 'Date': 'Thu, 01 Jun 2023 15:34:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "RFebLADI3DQ8bg0n"
} 
 </msg>
<msg timestamp="20230601 15:34:16.451" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.367" endtime="20230601 15:34:16.451"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 15:34:16.452" level="INFO">${user_id} = RFebLADI3DQ8bg0n</msg>
<status status="PASS" starttime="20230601 15:34:16.451" endtime="20230601 15:34:16.452"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 15:34:16.452" level="INFO">${USER_ID} = RFebLADI3DQ8bg0n</msg>
<status status="PASS" starttime="20230601 15:34:16.452" endtime="20230601 15:34:16.452"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:34:16.453" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.452" endtime="20230601 15:34:16.453"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.366" endtime="20230601 15:34:16.453"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:34:16.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.453" endtime="20230601 15:34:16.454"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:34:16.454" endtime="20230601 15:34:16.454"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.453" endtime="20230601 15:34:16.455"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:34:16.455" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 15:34:16.455" endtime="20230601 15:34:16.455"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.455" endtime="20230601 15:34:16.456"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:34:16.361" endtime="20230601 15:34:16.456"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:34:16.457" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:34:16.457" endtime="20230601 15:34:16.457"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.456" endtime="20230601 15:34:16.457"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:34:16.541" level="INFO">GET Request : url=https://serverest.dev/usuarios/RFebLADI3DQ8bg0n 
 path_url=/usuarios/RFebLADI3DQ8bg0n 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 15:34:16.542" level="INFO">GET Response : url=https://serverest.dev/usuarios/RFebLADI3DQ8bg0n 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f1199ab5-b06a-4828-907b-b43ce7c53c54', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1c834bd6b5fef8bcaccd0c1e8dcff6cf', 'Date': 'Thu, 01 Jun 2023 15:34:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Kara Dominguez",
    "email": "cfleming@example.net",
    "password": "eHcAjBFj8xkr",
    "administrador": "false",
    "_id": "RFebLADI3DQ8bg0n"
} 
 </msg>
<msg timestamp="20230601 15:34:16.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.458" endtime="20230601 15:34:16.542"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:34:16.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.542" endtime="20230601 15:34:16.542"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.458" endtime="20230601 15:34:16.542"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:34:16.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.543" endtime="20230601 15:34:16.544"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:34:16.544" endtime="20230601 15:34:16.544"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.542" endtime="20230601 15:34:16.544"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:34:16.545" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 15:34:16.545" endtime="20230601 15:34:16.545"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.544" endtime="20230601 15:34:16.545"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:34:16.456" endtime="20230601 15:34:16.545"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:34:16.547" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:34:16.546" endtime="20230601 15:34:16.547"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.546" endtime="20230601 15:34:16.547"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:34:16.548" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 15:34:16.547" endtime="20230601 15:34:16.548"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:34:16.548" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 15:34:16.548" endtime="20230601 15:34:16.548"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:34:16.629" level="INFO">PUT Request : url=https://serverest.dev/usuarios/RFebLADI3DQ8bg0n 
 path_url=/usuarios/RFebLADI3DQ8bg0n 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 15:34:16.630" level="INFO">PUT Response : url=https://serverest.dev/usuarios/RFebLADI3DQ8bg0n 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'afe6a636-46d2-43af-8ae4-f769c5b25a94', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '78ea84861946689a2c2373cb64280aa3', 'Date': 'Thu, 01 Jun 2023 15:34:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 15:34:16.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.548" endtime="20230601 15:34:16.630"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:34:16.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.630" endtime="20230601 15:34:16.630"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.547" endtime="20230601 15:34:16.630"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:34:16.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.631" endtime="20230601 15:34:16.632"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:34:16.632" endtime="20230601 15:34:16.632"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.631" endtime="20230601 15:34:16.632"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:34:16.633" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 15:34:16.633" endtime="20230601 15:34:16.633"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.632" endtime="20230601 15:34:16.633"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:34:16.546" endtime="20230601 15:34:16.634"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:34:16.635" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:34:16.635" endtime="20230601 15:34:16.635"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.634" endtime="20230601 15:34:16.635"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:34:16.726" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/RFebLADI3DQ8bg0n 
 path_url=/usuarios/RFebLADI3DQ8bg0n 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 15:34:16.727" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/RFebLADI3DQ8bg0n 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '90619bef-cba1-4cf9-9638-fa64986bf585', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '684567593d457c0c32ce306d4e7e5fa9', 'Date': 'Thu, 01 Jun 2023 15:34:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 15:34:16.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.636" endtime="20230601 15:34:16.727"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:34:16.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.727" endtime="20230601 15:34:16.727"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.635" endtime="20230601 15:34:16.727"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:34:16.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:34:16.728" endtime="20230601 15:34:16.729"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:34:16.729" endtime="20230601 15:34:16.729"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.727" endtime="20230601 15:34:16.729"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:34:16.730" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 15:34:16.730" endtime="20230601 15:34:16.730"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.729" endtime="20230601 15:34:16.730"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:34:16.634" endtime="20230601 15:34:16.730"/>
</test>
<status status="PASS" starttime="20230601 15:34:15.626" endtime="20230601 15:34:16.731"/>
</suite>
<status status="PASS" starttime="20230601 15:34:15.624" endtime="20230601 15:34:16.732"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 15:34:16.742" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 15:34:16.741" endtime="20230601 15:34:24.484"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 15:34:24.485" endtime="20230601 15:34:24.603"/>
</kw>
<status status="PASS" starttime="20230601 15:34:16.741" endtime="20230601 15:34:24.603"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 15:34:24.608" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 15:34:24.604" endtime="20230601 15:34:24.608"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:24.609" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 15:34:24.609" endtime="20230601 15:34:24.771"/>
</kw>
<status status="PASS" starttime="20230601 15:34:24.603" endtime="20230601 15:34:24.772"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:24.773" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 15:34:24.772" endtime="20230601 15:34:24.894"/>
</kw>
<status status="PASS" starttime="20230601 15:34:24.772" endtime="20230601 15:34:24.894"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 15:34:24.895" endtime="20230601 15:34:25.128"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 15:34:25.146" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 15:34:25.128" endtime="20230601 15:34:25.146"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:34:25.184" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 15:34:25.147" endtime="20230601 15:34:25.185"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:34:25.198" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 15:34:25.185" endtime="20230601 15:34:25.198"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:34:25.211" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 15:34:25.198" endtime="20230601 15:34:25.211"/>
</kw>
<status status="PASS" starttime="20230601 15:34:24.894" endtime="20230601 15:34:25.211"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 15:34:25.212" endtime="20230601 15:34:25.267"/>
</kw>
<status status="PASS" starttime="20230601 15:34:25.211" endtime="20230601 15:34:25.268"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 15:34:16.741" endtime="20230601 15:34:25.268"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 15:34:25.270" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 15:34:25.269" endtime="20230601 15:34:26.499"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 15:34:26.499" endtime="20230601 15:34:26.602"/>
</kw>
<status status="PASS" starttime="20230601 15:34:25.269" endtime="20230601 15:34:26.603"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 15:34:26.608" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 15:34:26.603" endtime="20230601 15:34:26.608"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:26.609" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 15:34:26.608" endtime="20230601 15:34:26.663"/>
</kw>
<status status="PASS" starttime="20230601 15:34:26.603" endtime="20230601 15:34:26.663"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 15:34:26.664" level="INFO">${name} = Jason Rodriguez</msg>
<status status="PASS" starttime="20230601 15:34:26.663" endtime="20230601 15:34:26.664"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 15:34:26.665" level="INFO">${email} = tracivang@example.com</msg>
<status status="PASS" starttime="20230601 15:34:26.664" endtime="20230601 15:34:26.665"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 15:34:26.665" level="INFO">${password} = tFOdqK1b4bdb</msg>
<status status="PASS" starttime="20230601 15:34:26.665" endtime="20230601 15:34:26.665"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:26.666" level="INFO">Typing text 'Jason Rodriguez' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 15:34:26.665" endtime="20230601 15:34:26.823"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:26.824" level="INFO">Typing text 'tracivang@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 15:34:26.823" endtime="20230601 15:34:26.945"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:26.946" level="INFO">Typing text 'tFOdqK1b4bdb' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 15:34:26.945" endtime="20230601 15:34:27.053"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:27.054" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 15:34:27.053" endtime="20230601 15:34:27.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:34:27.136" level="INFO">${name} = Jason Rodriguez</msg>
<status status="PASS" starttime="20230601 15:34:27.136" endtime="20230601 15:34:27.136"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:34:27.136" level="INFO">${email} = tracivang@example.com</msg>
<status status="PASS" starttime="20230601 15:34:27.136" endtime="20230601 15:34:27.136"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:34:27.137" level="INFO">${password} = tFOdqK1b4bdb</msg>
<status status="PASS" starttime="20230601 15:34:27.137" endtime="20230601 15:34:27.137"/>
</kw>
<status status="PASS" starttime="20230601 15:34:26.663" endtime="20230601 15:34:27.137"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:27.138" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 15:34:27.137" endtime="20230601 15:34:27.197"/>
</kw>
<status status="PASS" starttime="20230601 15:34:27.137" endtime="20230601 15:34:27.197"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 15:34:27.198" endtime="20230601 15:34:27.432"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 15:34:27.450" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 15:34:27.432" endtime="20230601 15:34:27.450"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:34:27.463" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 15:34:27.450" endtime="20230601 15:34:27.463"/>
</kw>
<status status="PASS" starttime="20230601 15:34:27.197" endtime="20230601 15:34:27.463"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 15:34:27.464" endtime="20230601 15:34:27.519"/>
</kw>
<status status="PASS" starttime="20230601 15:34:27.463" endtime="20230601 15:34:27.519"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 15:34:25.268" endtime="20230601 15:34:27.520"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 15:34:27.521" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 15:34:27.521" endtime="20230601 15:34:28.670"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 15:34:28.670" endtime="20230601 15:34:28.797"/>
</kw>
<status status="PASS" starttime="20230601 15:34:27.521" endtime="20230601 15:34:28.797"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 15:34:28.803" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 15:34:28.798" endtime="20230601 15:34:28.803"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:28.804" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 15:34:28.803" endtime="20230601 15:34:28.857"/>
</kw>
<status status="PASS" starttime="20230601 15:34:28.798" endtime="20230601 15:34:28.857"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:28.858" level="INFO">Typing text 'Jason Rodriguez' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 15:34:28.857" endtime="20230601 15:34:28.982"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:28.983" level="INFO">Typing text 'tracivang@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 15:34:28.983" endtime="20230601 15:34:29.094"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:29.095" level="INFO">Typing text 'tFOdqK1b4bdb' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 15:34:29.094" endtime="20230601 15:34:29.185"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:29.185" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 15:34:29.185" endtime="20230601 15:34:29.259"/>
</kw>
<status status="PASS" starttime="20230601 15:34:28.857" endtime="20230601 15:34:29.259"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 15:34:29.260" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 15:34:29.260" endtime="20230601 15:34:29.322"/>
</kw>
<status status="PASS" starttime="20230601 15:34:29.260" endtime="20230601 15:34:29.323"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 15:34:29.323" endtime="20230601 15:34:29.557"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 15:34:29.575" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 15:34:29.557" endtime="20230601 15:34:29.575"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:34:29.589" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 15:34:29.576" endtime="20230601 15:34:29.589"/>
</kw>
<status status="PASS" starttime="20230601 15:34:29.323" endtime="20230601 15:34:29.589"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 15:34:29.590" endtime="20230601 15:34:29.645"/>
</kw>
<status status="PASS" starttime="20230601 15:34:29.589" endtime="20230601 15:34:29.645"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 15:34:27.520" endtime="20230601 15:34:29.645"/>
</test>
<status status="PASS" starttime="20230601 15:34:16.734" endtime="20230601 15:34:29.647"/>
</suite>
<status status="PASS" starttime="20230601 15:34:16.733" endtime="20230601 15:34:29.648"/>
</suite>
<status status="PASS" starttime="20230601 15:34:15.606" endtime="20230601 15:34:29.649"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
