<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 19:01:01.703" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:01:02.353" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:01:02.353" endtime="20230601 19:01:02.353"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.352" endtime="20230601 19:01:02.353"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:01:02.538" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 19:01:02.538" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6af89c0e-2a17-4aff-b86e-84ea6ed0e0bf', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '03f242996f485267decb475c237bea53;o=1', 'Date': 'Thu, 01 Jun 2023 19:01:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '19776'} 
 body={
    "quantidade": 90,
    "usuarios": [
        {
            "nome": "Edward Jones",
            "email": "bphillips@example.org",
            "password": "g04o0dMkekzU",
            "administrador": "true",
            "_id": "0NF5phDpupxhrHxN"
        },
        {
            "nome": "Lyman Muller I",
            "email": "lymanmulleri_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "1Iz4EuY2IqGVVJfz"
        },
        {
            "nome": "Nicky Crist",
            "email": "nickycrist_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "1vz4kFeZ6nI0oetX"
        },
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Tonya Robinson MD",
            "email": "waltertracy@example.org",
            "password": "BVU6Qads5Idg",
            "administrador": "true",
            "_id": "5VNrB0GpqKXGQxsQ"
        },
        {
            "nome": "Leanora Lesch",
            "email": "leanoralesch_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "5rsfAHiqjU1j0OIe"
        },
        {
            "nome": "Riley Meadows",
            "email": "wardlindsay@example.com",
            "password": "21nem33sV3Wv",
            "administrador": "true",
            "_id": "6ZrbiguZb3H8xbz7"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulaninhodasilva@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "8GV85HRf3fvz3bA6"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9gstdMBMAIERTqbi"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Gertie Marvin IV",
            "email": "gertiemarviniv_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "BGj6VzTFs5OHYXz3"
        },
        {
            "nome": "Rep. Marcus Zulauf",
            "email": "repmarcuszulauf_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "C2oIa3elkZu8OgCh"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0104@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "CPotN3cJwU2ytcC0"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0318@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "Cjii886shOMAPasE"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Vickie Green",
            "email": "vickiegreen_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "FgPTX49i1n7EY9IK"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010601@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "FmAZHqMdTUASVy5E"
        },
        {
            "nome": "Michael Torres",
            "email": "sharonmoore@example.org",
            "password": "t4wu3WWhnqn7",
            "administrador": "true",
            "_id": "GZNbsNpQeHv7ISFa"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulaninhodasilv@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "GenOWVanmZjX7iNC"
        },
        {
            "nome": "Crystal Parks",
            "email": "oolson@example.com",
            "password": "1wdCfdPmvGs3",
            "administrador": "true",
            "_id": "HkeCIJyLaeKC4tfA"
        },
        {
            "nome": "Mohamed Hyatt",
            "email": "mohamedhyatt_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "HwZXX3KaO6cdeyb1"
        },
        {
            "nome": "Jacob Green",
            "email": "fishermichael@example.net",
            "password": "3PZDCPb9061P",
            "administrador": "true",
            "_id": "J9loLcyHGcTT4rpu"
        },
        {
            "nome": "Stephen Reynolds",
            "email": "stephenreynolds_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "JAwEFMxMJ1jzZxEs"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0114@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "MZEGk2tTLklplZrU"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0215@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "NfR9Vy9SIekHqpyG"
        },
        {
            "nome": "Ellis Cremin I",
            "email": "elliscremini_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "OagcOXL77fcQcJcl"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "Quinn Orn",
            "email": "quinnorn_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Q4uzpPanjVopwd6z"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010603@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "QGQCKYrf91pHsUXF"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Gleyciana Campelo",
            "email": "rkjur30mt1@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "TD5vVEbjmAoCuqIP"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Long Turner",
            "email": "longturner_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "UPJUP841x0xSyuFj"
        },
        {
            "nome": "Fulano da Silva",
            "email": "okns@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "UpSlcfVu8O5cbeOj"
        },
        {
            "nome": "Lindsey Berge",
            "email": "testeteste@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "UswUbgHnjznYal0u"
        },
        {
            "nome": "Sharon Larson",
            "email": "sharonlarson_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "V8M05NI0POHw0e7p"
        },
        {
            "nome": "Randolph Anderson",
            "email": "randolphanderson_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Ve8YZlGTMPqS9tor"
        },
        {
            "nome": "Miss Mohamed Brakus",
            "email": "missmohamedbrakus_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "VyMVbdglg5ieZjSf"
        },
        {
            "nome": "Donald Palmer",
            "email": "kshannon@example.net",
            "password": "MN61aKMyY2Zp",
            "administrador": "true",
            "_id": "WJLRKci7u4ThQVZi"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Shenika Hettinger",
            "email": "shenikahettinger_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Ym3pyIp54aDSMhMn"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0106@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "anTapQ16J1tEfpW3"
        },
        {
            "nome": "anderson",
            "email": "anders... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230601 19:01:02.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.354" endtime="20230601 19:01:02.538"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:01:02.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.538" endtime="20230601 19:01:02.539"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.353" endtime="20230601 19:01:02.539"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:01:02.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.539" endtime="20230601 19:01:02.540"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:01:02.540" endtime="20230601 19:01:02.541"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.539" endtime="20230601 19:01:02.542"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:01:02.543" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 19:01:02.542" endtime="20230601 19:01:02.543"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.542" endtime="20230601 19:01:02.543"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:01:02.351" endtime="20230601 19:01:02.543"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:01:02.545" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:01:02.544" endtime="20230601 19:01:02.545"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.544" endtime="20230601 19:01:02.545"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 19:01:02.546" level="INFO">${name} = Brett Barry</msg>
<status status="PASS" starttime="20230601 19:01:02.546" endtime="20230601 19:01:02.546"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 19:01:02.547" level="INFO">${email} = danielhinton@example.org</msg>
<status status="PASS" starttime="20230601 19:01:02.546" endtime="20230601 19:01:02.547"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 19:01:02.547" level="INFO">${password} = QIjFdzZp0iVx</msg>
<status status="PASS" starttime="20230601 19:01:02.547" endtime="20230601 19:01:02.547"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:01:02.548" level="INFO">${name} = Brett Barry</msg>
<status status="PASS" starttime="20230601 19:01:02.547" endtime="20230601 19:01:02.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:01:02.548" level="INFO">${email} = danielhinton@example.org</msg>
<status status="PASS" starttime="20230601 19:01:02.548" endtime="20230601 19:01:02.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:01:02.548" level="INFO">${password} = QIjFdzZp0iVx</msg>
<status status="PASS" starttime="20230601 19:01:02.548" endtime="20230601 19:01:02.548"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.545" endtime="20230601 19:01:02.548"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 19:01:02.549" level="INFO">${payload} = {'nome': 'Brett Barry', 'email': 'danielhinton@example.org', 'password': 'QIjFdzZp0iVx', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 19:01:02.549" endtime="20230601 19:01:02.549"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 19:01:02.550" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 19:01:02.549" endtime="20230601 19:01:02.550"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:01:02.630" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "Brett Barry", "email": "danielhinton@example.org", "password": "QIjFdzZp0iVx", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 19:01:02.630" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fc7d8a32-3dba-4505-adbc-2b2d889842a3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a26c8e4251b40ea19885cfb9874190d1', 'Date': 'Thu, 01 Jun 2023 19:01:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "0ZiHmB4w7Blpwqzi"
} 
 </msg>
<msg timestamp="20230601 19:01:02.631" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.550" endtime="20230601 19:01:02.631"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 19:01:02.632" level="INFO">${user_id} = 0ZiHmB4w7Blpwqzi</msg>
<status status="PASS" starttime="20230601 19:01:02.631" endtime="20230601 19:01:02.632"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 19:01:02.632" level="INFO">${USER_ID} = 0ZiHmB4w7Blpwqzi</msg>
<status status="PASS" starttime="20230601 19:01:02.632" endtime="20230601 19:01:02.632"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:01:02.633" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.632" endtime="20230601 19:01:02.633"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.549" endtime="20230601 19:01:02.633"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:01:02.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.633" endtime="20230601 19:01:02.634"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:01:02.634" endtime="20230601 19:01:02.634"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.633" endtime="20230601 19:01:02.635"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:01:02.635" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 19:01:02.635" endtime="20230601 19:01:02.635"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.635" endtime="20230601 19:01:02.636"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:01:02.544" endtime="20230601 19:01:02.636"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:01:02.637" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:01:02.637" endtime="20230601 19:01:02.637"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.636" endtime="20230601 19:01:02.637"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:01:02.714" level="INFO">GET Request : url=https://serverest.dev/usuarios/0ZiHmB4w7Blpwqzi 
 path_url=/usuarios/0ZiHmB4w7Blpwqzi 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 19:01:02.715" level="INFO">GET Response : url=https://serverest.dev/usuarios/0ZiHmB4w7Blpwqzi 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f98fc5cc-b5bc-4eab-9e8a-69ec777d786b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2f197f5ea6c3254c5228a133b3d8c9eb', 'Date': 'Thu, 01 Jun 2023 19:01:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "Brett Barry",
    "email": "danielhinton@example.org",
    "password": "QIjFdzZp0iVx",
    "administrador": "false",
    "_id": "0ZiHmB4w7Blpwqzi"
} 
 </msg>
<msg timestamp="20230601 19:01:02.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.638" endtime="20230601 19:01:02.715"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:01:02.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.715" endtime="20230601 19:01:02.715"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.638" endtime="20230601 19:01:02.715"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:01:02.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.716" endtime="20230601 19:01:02.717"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:01:02.717" endtime="20230601 19:01:02.717"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.716" endtime="20230601 19:01:02.717"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:01:02.718" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 19:01:02.718" endtime="20230601 19:01:02.718"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.717" endtime="20230601 19:01:02.718"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:01:02.636" endtime="20230601 19:01:02.719"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:01:02.720" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:01:02.719" endtime="20230601 19:01:02.720"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.719" endtime="20230601 19:01:02.720"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 19:01:02.721" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 19:01:02.720" endtime="20230601 19:01:02.721"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 19:01:02.721" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 19:01:02.721" endtime="20230601 19:01:02.721"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:01:02.808" level="INFO">PUT Request : url=https://serverest.dev/usuarios/0ZiHmB4w7Blpwqzi 
 path_url=/usuarios/0ZiHmB4w7Blpwqzi 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 19:01:02.808" level="INFO">PUT Response : url=https://serverest.dev/usuarios/0ZiHmB4w7Blpwqzi 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '50a34bd5-b20a-4034-9acb-efc23febe547', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd3c752253e1e5518068e4c69660ad05c', 'Date': 'Thu, 01 Jun 2023 19:01:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 19:01:02.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.721" endtime="20230601 19:01:02.809"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:01:02.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.809" endtime="20230601 19:01:02.809"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.720" endtime="20230601 19:01:02.809"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:01:02.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.810" endtime="20230601 19:01:02.810"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:01:02.810" endtime="20230601 19:01:02.811"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.809" endtime="20230601 19:01:02.811"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:01:02.812" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 19:01:02.812" endtime="20230601 19:01:02.812"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.811" endtime="20230601 19:01:02.812"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:01:02.719" endtime="20230601 19:01:02.812"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:01:02.814" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:01:02.813" endtime="20230601 19:01:02.814"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.813" endtime="20230601 19:01:02.814"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:01:02.896" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/0ZiHmB4w7Blpwqzi 
 path_url=/usuarios/0ZiHmB4w7Blpwqzi 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 19:01:02.896" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/0ZiHmB4w7Blpwqzi 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c1be62e8-3f72-45e8-b65b-cf60c40ac30c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9f4115ab48c05c777fa6995c6c3bf1f0', 'Date': 'Thu, 01 Jun 2023 19:01:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 19:01:02.896" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.815" endtime="20230601 19:01:02.897"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:01:02.897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.897" endtime="20230601 19:01:02.897"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.814" endtime="20230601 19:01:02.897"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:01:02.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:01:02.898" endtime="20230601 19:01:02.899"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:01:02.900" endtime="20230601 19:01:02.900"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.897" endtime="20230601 19:01:02.900"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:01:02.901" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 19:01:02.901" endtime="20230601 19:01:02.901"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.900" endtime="20230601 19:01:02.901"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:01:02.813" endtime="20230601 19:01:02.901"/>
</test>
<status status="PASS" starttime="20230601 19:01:01.724" endtime="20230601 19:01:02.902"/>
</suite>
<status status="PASS" starttime="20230601 19:01:01.723" endtime="20230601 19:01:02.903"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 19:01:02.913" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 19:01:02.912" endtime="20230601 19:01:05.433"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 19:01:05.433" endtime="20230601 19:01:05.543"/>
</kw>
<status status="PASS" starttime="20230601 19:01:02.912" endtime="20230601 19:01:05.544"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 19:01:05.548" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 19:01:05.544" endtime="20230601 19:01:05.549"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:05.550" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 19:01:05.549" endtime="20230601 19:01:05.643"/>
</kw>
<status status="PASS" starttime="20230601 19:01:05.544" endtime="20230601 19:01:05.643"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:05.644" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 19:01:05.643" endtime="20230601 19:01:05.720"/>
</kw>
<status status="PASS" starttime="20230601 19:01:05.643" endtime="20230601 19:01:05.720"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 19:01:05.720" endtime="20230601 19:01:05.953"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 19:01:05.971" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 19:01:05.953" endtime="20230601 19:01:05.971"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:01:05.990" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 19:01:05.971" endtime="20230601 19:01:05.991"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:01:06.010" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 19:01:05.991" endtime="20230601 19:01:06.010"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:01:06.023" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 19:01:06.011" endtime="20230601 19:01:06.023"/>
</kw>
<status status="PASS" starttime="20230601 19:01:05.720" endtime="20230601 19:01:06.023"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 19:01:06.024" endtime="20230601 19:01:06.079"/>
</kw>
<status status="PASS" starttime="20230601 19:01:06.024" endtime="20230601 19:01:06.079"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 19:01:02.912" endtime="20230601 19:01:06.079"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 19:01:06.082" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 19:01:06.081" endtime="20230601 19:01:07.464"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 19:01:07.464" endtime="20230601 19:01:07.580"/>
</kw>
<status status="PASS" starttime="20230601 19:01:06.081" endtime="20230601 19:01:07.580"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 19:01:07.586" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 19:01:07.581" endtime="20230601 19:01:07.586"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:07.587" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 19:01:07.586" endtime="20230601 19:01:07.641"/>
</kw>
<status status="PASS" starttime="20230601 19:01:07.580" endtime="20230601 19:01:07.641"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 19:01:07.642" level="INFO">${name} = Tim Bailey</msg>
<status status="PASS" starttime="20230601 19:01:07.641" endtime="20230601 19:01:07.642"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 19:01:07.643" level="INFO">${email} = brandi91@example.com</msg>
<status status="PASS" starttime="20230601 19:01:07.642" endtime="20230601 19:01:07.643"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 19:01:07.643" level="INFO">${password} = C4potpmPdGgK</msg>
<status status="PASS" starttime="20230601 19:01:07.643" endtime="20230601 19:01:07.643"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:07.644" level="INFO">Typing text 'Tim Bailey' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 19:01:07.643" endtime="20230601 19:01:07.769"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:07.770" level="INFO">Typing text 'brandi91@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 19:01:07.769" endtime="20230601 19:01:07.879"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:07.880" level="INFO">Typing text 'C4potpmPdGgK' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 19:01:07.880" endtime="20230601 19:01:07.967"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:07.968" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 19:01:07.967" endtime="20230601 19:01:08.046"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:01:08.046" level="INFO">${name} = Tim Bailey</msg>
<status status="PASS" starttime="20230601 19:01:08.046" endtime="20230601 19:01:08.046"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:01:08.047" level="INFO">${email} = brandi91@example.com</msg>
<status status="PASS" starttime="20230601 19:01:08.047" endtime="20230601 19:01:08.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:01:08.047" level="INFO">${password} = C4potpmPdGgK</msg>
<status status="PASS" starttime="20230601 19:01:08.047" endtime="20230601 19:01:08.047"/>
</kw>
<status status="PASS" starttime="20230601 19:01:07.641" endtime="20230601 19:01:08.047"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:08.048" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 19:01:08.048" endtime="20230601 19:01:08.110"/>
</kw>
<status status="PASS" starttime="20230601 19:01:08.047" endtime="20230601 19:01:08.110"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 19:01:08.110" endtime="20230601 19:01:08.346"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 19:01:08.367" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 19:01:08.347" endtime="20230601 19:01:08.367"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:01:08.380" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 19:01:08.367" endtime="20230601 19:01:08.380"/>
</kw>
<status status="PASS" starttime="20230601 19:01:08.110" endtime="20230601 19:01:08.380"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 19:01:08.381" endtime="20230601 19:01:08.435"/>
</kw>
<status status="PASS" starttime="20230601 19:01:08.380" endtime="20230601 19:01:08.435"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 19:01:06.080" endtime="20230601 19:01:08.435"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 19:01:08.437" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 19:01:08.437" endtime="20230601 19:01:09.774"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 19:01:09.775" endtime="20230601 19:01:09.883"/>
</kw>
<status status="PASS" starttime="20230601 19:01:08.436" endtime="20230601 19:01:09.883"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 19:01:09.888" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 19:01:09.883" endtime="20230601 19:01:09.888"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:09.889" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 19:01:09.888" endtime="20230601 19:01:09.944"/>
</kw>
<status status="PASS" starttime="20230601 19:01:09.883" endtime="20230601 19:01:09.944"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:09.946" level="INFO">Typing text 'Tim Bailey' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 19:01:09.945" endtime="20230601 19:01:10.055"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:10.056" level="INFO">Typing text 'brandi91@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 19:01:10.055" endtime="20230601 19:01:10.159"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:10.160" level="INFO">Typing text 'C4potpmPdGgK' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 19:01:10.159" endtime="20230601 19:01:10.265"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:10.266" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 19:01:10.265" endtime="20230601 19:01:10.339"/>
</kw>
<status status="PASS" starttime="20230601 19:01:09.945" endtime="20230601 19:01:10.339"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 19:01:10.340" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 19:01:10.339" endtime="20230601 19:01:10.402"/>
</kw>
<status status="PASS" starttime="20230601 19:01:10.339" endtime="20230601 19:01:10.403"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 19:01:10.403" endtime="20230601 19:01:10.639"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 19:01:10.657" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 19:01:10.639" endtime="20230601 19:01:10.657"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:01:10.672" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 19:01:10.657" endtime="20230601 19:01:10.673"/>
</kw>
<status status="PASS" starttime="20230601 19:01:10.403" endtime="20230601 19:01:10.673"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 19:01:10.674" endtime="20230601 19:01:10.732"/>
</kw>
<status status="PASS" starttime="20230601 19:01:10.673" endtime="20230601 19:01:10.732"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 19:01:08.436" endtime="20230601 19:01:10.732"/>
</test>
<status status="PASS" starttime="20230601 19:01:02.905" endtime="20230601 19:01:10.733"/>
</suite>
<status status="PASS" starttime="20230601 19:01:02.903" endtime="20230601 19:01:10.735"/>
</suite>
<status status="PASS" starttime="20230601 19:01:01.704" endtime="20230601 19:01:10.737"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
