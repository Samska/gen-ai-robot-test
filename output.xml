<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230521 22:51:38.478" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:51:39.098" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:51:39.098" endtime="20230521 22:51:39.098"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.097" endtime="20230521 22:51:39.099"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:51:39.344" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 22:51:39.344" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fb9b647c-5c23-44bc-a52c-871e077b3f13', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '779c8bcc940d1585b644c975f11827fd;o=1', 'Date': 'Sun, 21 May 2023 22:51:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '3278'} 
 body={
    "quantidade": 15,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "John Bell",
            "email": "ruizevan@example.org",
            "password": "*6OUOdmYrv",
            "administrador": "true",
            "_id": "2IKr7LeKuyL4FtC8"
        },
        {
            "nome": "Nicholas Pacheco",
            "email": "youngkayla@example.com",
            "password": "6)5EZOSrjn",
            "administrador": "true",
            "_id": "38Y0QxwG4PDRWCXi"
        },
        {
            "nome": "Teste",
            "email": "samska@gmail.com",
            "password": "Qw98ed74",
            "administrador": "false",
            "_id": "3Xr3T2ckzgNOAh1F"
        },
        {
            "nome": "Mr. James Peterson PhD",
            "email": "connierivera@example.net",
            "password": "NdU_3!LsKk",
            "administrador": "true",
            "_id": "4pI3IxxAgkZAtnue"
        },
        {
            "nome": "Juan Allen",
            "email": "justingomez@example.com",
            "password": "1(#X9ArRvD",
            "administrador": "true",
            "_id": "8tu4KvMVyoTeP4LJ"
        },
        {
            "nome": "Clifford Price",
            "email": "welchnicholas@example.net",
            "password": "1qY#Rh5L^4",
            "administrador": "true",
            "_id": "CeTenawvCCaAOcoP"
        },
        {
            "nome": "Amy Clark",
            "email": "stephanie62@example.org",
            "password": "g2bHN9v4@4",
            "administrador": "true",
            "_id": "GiHP7flmMy9cnO4x"
        },
        {
            "nome": "Donald Smith",
            "email": "samanthawells@example.com",
            "password": "+N9BWsoU_y",
            "administrador": "true",
            "_id": "Gv7cXeZoEeMSmJ4b"
        },
        {
            "nome": "teste",
            "email": "testee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "PaihpGw8oseaf7q7"
        },
        {
            "nome": "David Sanders",
            "email": "christopher87@example.com",
            "password": "LNkI#4Ah@_",
            "administrador": "true",
            "_id": "SFEcefct8tA4iHXt"
        },
        {
            "nome": "Micheal Caldwell",
            "email": "wilsonphilip@example.org",
            "password": "+BtZAI*Rs9",
            "administrador": "true",
            "_id": "b6YFBA5wmoQHYZRW"
        },
        {
            "nome": "Heidi Downs",
            "email": "urodriguez@example.com",
            "password": "1HQp3Qp5G#",
            "administrador": "true",
            "_id": "kO3ZvqwVu4B467mM"
        },
        {
            "nome": "testeeee",
            "email": "testeee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "yedZQ0ohrtKKZHdP"
        },
        {
            "nome": "Shannon Harris",
            "email": "tarapatterson@example.org",
            "password": "46HqkYPe#V",
            "administrador": "true",
            "_id": "zW5jUFJLv4d4MDmN"
        }
    ]
} 
 </msg>
<msg timestamp="20230521 22:51:39.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.099" endtime="20230521 22:51:39.344"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:51:39.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.344" endtime="20230521 22:51:39.345"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.099" endtime="20230521 22:51:39.345"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:51:39.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.346" endtime="20230521 22:51:39.346"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:51:39.347" endtime="20230521 22:51:39.347"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.345" endtime="20230521 22:51:39.347"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:51:39.349" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 22:51:39.348" endtime="20230521 22:51:39.349"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.348" endtime="20230521 22:51:39.349"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:51:39.096" endtime="20230521 22:51:39.349"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:51:39.351" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:51:39.351" endtime="20230521 22:51:39.351"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.350" endtime="20230521 22:51:39.351"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 22:51:39.352" level="INFO">${name} = Russell Parker</msg>
<status status="PASS" starttime="20230521 22:51:39.352" endtime="20230521 22:51:39.352"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 22:51:39.353" level="INFO">${email} = dannycannon@example.org</msg>
<status status="PASS" starttime="20230521 22:51:39.352" endtime="20230521 22:51:39.353"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 22:51:39.353" level="INFO">${password} = ^T@l8O+l%(</msg>
<status status="PASS" starttime="20230521 22:51:39.353" endtime="20230521 22:51:39.353"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:51:39.354" level="INFO">${name} = Russell Parker</msg>
<status status="PASS" starttime="20230521 22:51:39.353" endtime="20230521 22:51:39.354"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:51:39.354" level="INFO">${email} = dannycannon@example.org</msg>
<status status="PASS" starttime="20230521 22:51:39.354" endtime="20230521 22:51:39.354"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:51:39.355" level="INFO">${password} = ^T@l8O+l%(</msg>
<status status="PASS" starttime="20230521 22:51:39.354" endtime="20230521 22:51:39.355"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.352" endtime="20230521 22:51:39.355"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 22:51:39.356" level="INFO">${payload} = {'nome': 'Russell Parker', 'email': 'dannycannon@example.org', 'password': '^T@l8O+l%(', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 22:51:39.355" endtime="20230521 22:51:39.356"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 22:51:39.356" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 22:51:39.356" endtime="20230521 22:51:39.356"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:51:39.457" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "Russell Parker", "email": "dannycannon@example.org", "password": "^T@l8O+l%(", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 22:51:39.457" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3d5eb33c-111c-4837-a141-9ebec726489c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0e3af1f596c1021ae4bb5c3801ac0689', 'Date': 'Sun, 21 May 2023 22:51:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "GWWIULZs93NxmQSZ"
} 
 </msg>
<msg timestamp="20230521 22:51:39.457" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.356" endtime="20230521 22:51:39.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230521 22:51:39.459" level="INFO">${user_id} = GWWIULZs93NxmQSZ</msg>
<status status="PASS" starttime="20230521 22:51:39.458" endtime="20230521 22:51:39.459"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230521 22:51:39.460" level="INFO">${USER_ID} = GWWIULZs93NxmQSZ</msg>
<status status="PASS" starttime="20230521 22:51:39.459" endtime="20230521 22:51:39.460"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:51:39.460" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.460" endtime="20230521 22:51:39.460"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.355" endtime="20230521 22:51:39.460"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:51:39.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.461" endtime="20230521 22:51:39.461"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:51:39.462" endtime="20230521 22:51:39.462"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.460" endtime="20230521 22:51:39.462"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:51:39.463" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 22:51:39.463" endtime="20230521 22:51:39.463"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.462" endtime="20230521 22:51:39.464"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:51:39.350" endtime="20230521 22:51:39.464"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:51:39.466" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:51:39.465" endtime="20230521 22:51:39.466"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.465" endtime="20230521 22:51:39.466"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:51:39.565" level="INFO">GET Request : url=https://serverest.dev/usuarios/GWWIULZs93NxmQSZ 
 path_url=/usuarios/GWWIULZs93NxmQSZ 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 22:51:39.566" level="INFO">GET Response : url=https://serverest.dev/usuarios/GWWIULZs93NxmQSZ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0884633c-55a6-4b9b-8ce2-8bb557357c48', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ea0cc93291817f366904a719da489774', 'Date': 'Sun, 21 May 2023 22:51:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "Russell Parker",
    "email": "dannycannon@example.org",
    "password": "^T@l8O+l%(",
    "administrador": "false",
    "_id": "GWWIULZs93NxmQSZ"
} 
 </msg>
<msg timestamp="20230521 22:51:39.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.467" endtime="20230521 22:51:39.566"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:51:39.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.566" endtime="20230521 22:51:39.566"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.466" endtime="20230521 22:51:39.567"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:51:39.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.567" endtime="20230521 22:51:39.568"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:51:39.568" endtime="20230521 22:51:39.569"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.567" endtime="20230521 22:51:39.569"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:51:39.571" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230521 22:51:39.569" endtime="20230521 22:51:39.571"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.569" endtime="20230521 22:51:39.571"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:51:39.464" endtime="20230521 22:51:39.571"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:51:39.573" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:51:39.573" endtime="20230521 22:51:39.574"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.573" endtime="20230521 22:51:39.574"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 22:51:39.575" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 22:51:39.574" endtime="20230521 22:51:39.575"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 22:51:39.575" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 22:51:39.575" endtime="20230521 22:51:39.575"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:51:39.671" level="INFO">PUT Request : url=https://serverest.dev/usuarios/GWWIULZs93NxmQSZ 
 path_url=/usuarios/GWWIULZs93NxmQSZ 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 22:51:39.671" level="INFO">PUT Response : url=https://serverest.dev/usuarios/GWWIULZs93NxmQSZ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8887b9fb-fcb7-41e3-a1d9-299ee3d875f3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '998403b2bacedaec0cf8448e6c58aff4', 'Date': 'Sun, 21 May 2023 22:51:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230521 22:51:39.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.575" endtime="20230521 22:51:39.671"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:51:39.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.672" endtime="20230521 22:51:39.672"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.574" endtime="20230521 22:51:39.672"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:51:39.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.673" endtime="20230521 22:51:39.673"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:51:39.673" endtime="20230521 22:51:39.674"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.672" endtime="20230521 22:51:39.674"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:51:39.675" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 22:51:39.675" endtime="20230521 22:51:39.675"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.674" endtime="20230521 22:51:39.676"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:51:39.572" endtime="20230521 22:51:39.676"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:51:39.678" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:51:39.678" endtime="20230521 22:51:39.678"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.677" endtime="20230521 22:51:39.679"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:51:39.775" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/GWWIULZs93NxmQSZ 
 path_url=/usuarios/GWWIULZs93NxmQSZ 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230521 22:51:39.775" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/GWWIULZs93NxmQSZ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b5e1ec08-8ae0-4908-9802-67230c9f4a0c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '01efac7f853316509fb5c68dae3241bc', 'Date': 'Sun, 21 May 2023 22:51:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230521 22:51:39.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.679" endtime="20230521 22:51:39.775"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:51:39.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.776" endtime="20230521 22:51:39.776"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.679" endtime="20230521 22:51:39.776"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:51:39.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:51:39.776" endtime="20230521 22:51:39.777"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:51:39.777" endtime="20230521 22:51:39.778"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.776" endtime="20230521 22:51:39.778"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:51:39.779" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 22:51:39.779" endtime="20230521 22:51:39.779"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.778" endtime="20230521 22:51:39.779"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:51:39.676" endtime="20230521 22:51:39.780"/>
</test>
<status status="PASS" starttime="20230521 22:51:38.504" endtime="20230521 22:51:39.780"/>
</suite>
<status status="PASS" starttime="20230521 22:51:38.502" endtime="20230521 22:51:39.783"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 22:51:39.795" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 22:51:39.795" endtime="20230521 22:51:41.753"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 22:51:41.754" endtime="20230521 22:51:41.860"/>
</kw>
<status status="PASS" starttime="20230521 22:51:39.794" endtime="20230521 22:51:41.860"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 22:51:41.867" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 22:51:41.861" endtime="20230521 22:51:41.867"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:41.868" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 22:51:41.868" endtime="20230521 22:51:41.983"/>
</kw>
<status status="PASS" starttime="20230521 22:51:41.861" endtime="20230521 22:51:41.983"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:41.985" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 22:51:41.984" endtime="20230521 22:51:42.101"/>
</kw>
<status status="PASS" starttime="20230521 22:51:41.984" endtime="20230521 22:51:42.101"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 22:51:42.102" endtime="20230521 22:51:42.344"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 22:51:42.366" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 22:51:42.345" endtime="20230521 22:51:42.366"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:51:42.384" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230521 22:51:42.366" endtime="20230521 22:51:42.384"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:51:42.398" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230521 22:51:42.384" endtime="20230521 22:51:42.398"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:51:42.415" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230521 22:51:42.398" endtime="20230521 22:51:42.415"/>
</kw>
<status status="PASS" starttime="20230521 22:51:42.101" endtime="20230521 22:51:42.415"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 22:51:42.416" endtime="20230521 22:51:42.472"/>
</kw>
<status status="PASS" starttime="20230521 22:51:42.416" endtime="20230521 22:51:42.472"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 22:51:39.794" endtime="20230521 22:51:42.472"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 22:51:42.475" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 22:51:42.474" endtime="20230521 22:51:43.515"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 22:51:43.516" endtime="20230521 22:51:43.625"/>
</kw>
<status status="PASS" starttime="20230521 22:51:42.473" endtime="20230521 22:51:43.625"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 22:51:43.631" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 22:51:43.626" endtime="20230521 22:51:43.632"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:43.632" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 22:51:43.632" endtime="20230521 22:51:43.735"/>
</kw>
<status status="PASS" starttime="20230521 22:51:43.625" endtime="20230521 22:51:43.736"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 22:51:43.737" level="INFO">${name} = Erin Perkins</msg>
<status status="PASS" starttime="20230521 22:51:43.736" endtime="20230521 22:51:43.737"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 22:51:43.738" level="INFO">${email} = bowenmichael@example.com</msg>
<status status="PASS" starttime="20230521 22:51:43.737" endtime="20230521 22:51:43.738"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 22:51:43.738" level="INFO">${password} = ^5@&amp;8Xg(u_</msg>
<status status="PASS" starttime="20230521 22:51:43.738" endtime="20230521 22:51:43.738"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:43.739" level="INFO">Typing text 'Erin Perkins' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 22:51:43.738" endtime="20230521 22:51:43.898"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:43.899" level="INFO">Typing text 'bowenmichael@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 22:51:43.898" endtime="20230521 22:51:44.047"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:44.048" level="INFO">Typing text '^5@&amp;8Xg(u_' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 22:51:44.047" endtime="20230521 22:51:44.165"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:44.166" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 22:51:44.166" endtime="20230521 22:51:44.253"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:51:44.254" level="INFO">${name} = Erin Perkins</msg>
<status status="PASS" starttime="20230521 22:51:44.254" endtime="20230521 22:51:44.254"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:51:44.255" level="INFO">${email} = bowenmichael@example.com</msg>
<status status="PASS" starttime="20230521 22:51:44.255" endtime="20230521 22:51:44.255"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:51:44.256" level="INFO">${password} = ^5@&amp;8Xg(u_</msg>
<status status="PASS" starttime="20230521 22:51:44.256" endtime="20230521 22:51:44.256"/>
</kw>
<status status="PASS" starttime="20230521 22:51:43.736" endtime="20230521 22:51:44.256"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:44.258" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 22:51:44.257" endtime="20230521 22:51:44.332"/>
</kw>
<status status="PASS" starttime="20230521 22:51:44.256" endtime="20230521 22:51:44.332"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 22:51:44.333" endtime="20230521 22:51:44.578"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 22:51:44.601" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 22:51:44.579" endtime="20230521 22:51:44.601"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:51:44.618" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230521 22:51:44.601" endtime="20230521 22:51:44.618"/>
</kw>
<status status="PASS" starttime="20230521 22:51:44.333" endtime="20230521 22:51:44.619"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 22:51:44.619" endtime="20230521 22:51:44.678"/>
</kw>
<status status="PASS" starttime="20230521 22:51:44.619" endtime="20230521 22:51:44.678"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 22:51:42.473" endtime="20230521 22:51:44.678"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 22:51:44.680" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 22:51:44.680" endtime="20230521 22:51:45.711"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 22:51:45.711" endtime="20230521 22:51:45.816"/>
</kw>
<status status="PASS" starttime="20230521 22:51:44.679" endtime="20230521 22:51:45.817"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 22:51:45.823" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 22:51:45.817" endtime="20230521 22:51:45.823"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:45.824" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 22:51:45.824" endtime="20230521 22:51:45.933"/>
</kw>
<status status="PASS" starttime="20230521 22:51:45.817" endtime="20230521 22:51:45.933"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:45.934" level="INFO">Typing text 'Erin Perkins' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 22:51:45.934" endtime="20230521 22:51:46.076"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:46.077" level="INFO">Typing text 'bowenmichael@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 22:51:46.077" endtime="20230521 22:51:46.228"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:46.229" level="INFO">Typing text '^5@&amp;8Xg(u_' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 22:51:46.229" endtime="20230521 22:51:46.353"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:46.354" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 22:51:46.353" endtime="20230521 22:51:46.448"/>
</kw>
<status status="PASS" starttime="20230521 22:51:45.933" endtime="20230521 22:51:46.449"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 22:51:46.450" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 22:51:46.449" endtime="20230521 22:51:46.526"/>
</kw>
<status status="PASS" starttime="20230521 22:51:46.449" endtime="20230521 22:51:46.526"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 22:51:46.527" endtime="20230521 22:51:46.763"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 22:51:46.783" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 22:51:46.764" endtime="20230521 22:51:46.783"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:51:46.798" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230521 22:51:46.784" endtime="20230521 22:51:46.798"/>
</kw>
<status status="PASS" starttime="20230521 22:51:46.526" endtime="20230521 22:51:46.798"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 22:51:46.799" endtime="20230521 22:51:46.854"/>
</kw>
<status status="PASS" starttime="20230521 22:51:46.798" endtime="20230521 22:51:46.854"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 22:51:44.679" endtime="20230521 22:51:46.854"/>
</test>
<status status="PASS" starttime="20230521 22:51:39.785" endtime="20230521 22:51:46.855"/>
</suite>
<status status="PASS" starttime="20230521 22:51:39.783" endtime="20230521 22:51:46.857"/>
</suite>
<status status="PASS" starttime="20230521 22:51:38.479" endtime="20230521 22:51:46.858"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
