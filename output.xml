<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230521 23:05:39.018" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:05:39.926" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:05:39.926" endtime="20230521 23:05:39.926"/>
</kw>
<status status="PASS" starttime="20230521 23:05:39.925" endtime="20230521 23:05:39.926"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:05:40.061" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:05:40.061" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b4512961-beeb-42de-8b0c-d8a9f6201ee5', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '540203bb68ef2a0db887ecc1c610a09e;o=1', 'Date': 'Sun, 21 May 2023 23:05:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '3717'} 
 body={
    "quantidade": 17,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "John Bell",
            "email": "ruizevan@example.org",
            "password": "*6OUOdmYrv",
            "administrador": "true",
            "_id": "2IKr7LeKuyL4FtC8"
        },
        {
            "nome": "Nicholas Pacheco",
            "email": "youngkayla@example.com",
            "password": "6)5EZOSrjn",
            "administrador": "true",
            "_id": "38Y0QxwG4PDRWCXi"
        },
        {
            "nome": "Teste",
            "email": "samska@gmail.com",
            "password": "Qw98ed74",
            "administrador": "false",
            "_id": "3Xr3T2ckzgNOAh1F"
        },
        {
            "nome": "Mr. James Peterson PhD",
            "email": "connierivera@example.net",
            "password": "NdU_3!LsKk",
            "administrador": "true",
            "_id": "4pI3IxxAgkZAtnue"
        },
        {
            "nome": "Juan Allen",
            "email": "justingomez@example.com",
            "password": "1(#X9ArRvD",
            "administrador": "true",
            "_id": "8tu4KvMVyoTeP4LJ"
        },
        {
            "nome": "Clifford Price",
            "email": "welchnicholas@example.net",
            "password": "1qY#Rh5L^4",
            "administrador": "true",
            "_id": "CeTenawvCCaAOcoP"
        },
        {
            "nome": "Amy Clark",
            "email": "stephanie62@example.org",
            "password": "g2bHN9v4@4",
            "administrador": "true",
            "_id": "GiHP7flmMy9cnO4x"
        },
        {
            "nome": "Donald Smith",
            "email": "samanthawells@example.com",
            "password": "+N9BWsoU_y",
            "administrador": "true",
            "_id": "Gv7cXeZoEeMSmJ4b"
        },
        {
            "nome": "Terri Campbell",
            "email": "afitzgerald@example.org",
            "password": "x$g8ZRbZ*8",
            "administrador": "true",
            "_id": "HYf8IxtoxgZTI2YN"
        },
        {
            "nome": "teste",
            "email": "testee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "PaihpGw8oseaf7q7"
        },
        {
            "nome": "David Sanders",
            "email": "christopher87@example.com",
            "password": "LNkI#4Ah@_",
            "administrador": "true",
            "_id": "SFEcefct8tA4iHXt"
        },
        {
            "nome": "Micheal Caldwell",
            "email": "wilsonphilip@example.org",
            "password": "+BtZAI*Rs9",
            "administrador": "true",
            "_id": "b6YFBA5wmoQHYZRW"
        },
        {
            "nome": "Heidi Downs",
            "email": "urodriguez@example.com",
            "password": "1HQp3Qp5G#",
            "administrador": "true",
            "_id": "kO3ZvqwVu4B467mM"
        },
        {
            "nome": "Erin Perkins",
            "email": "bowenmichael@example.com",
            "password": "^5@&amp;8Xg(u_",
            "administrador": "true",
            "_id": "rd8XVnMFbXai1o5T"
        },
        {
            "nome": "testeeee",
            "email": "testeee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "yedZQ0ohrtKKZHdP"
        },
        {
            "nome": "Shannon Harris",
            "email": "tarapatterson@example.org",
            "password": "46HqkYPe#V",
            "administrador": "true",
            "_id": "zW5jUFJLv4d4MDmN"
        }
    ]
} 
 </msg>
<msg timestamp="20230521 23:05:40.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:39.927" endtime="20230521 23:05:40.062"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:05:40.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.062" endtime="20230521 23:05:40.062"/>
</kw>
<status status="PASS" starttime="20230521 23:05:39.927" endtime="20230521 23:05:40.062"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:05:40.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.063" endtime="20230521 23:05:40.064"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:05:40.064" endtime="20230521 23:05:40.065"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.063" endtime="20230521 23:05:40.065"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:05:40.066" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:05:40.065" endtime="20230521 23:05:40.066"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.065" endtime="20230521 23:05:40.066"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:05:39.924" endtime="20230521 23:05:40.066"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:05:40.068" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:05:40.068" endtime="20230521 23:05:40.068"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.067" endtime="20230521 23:05:40.068"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:05:40.069" level="INFO">${name} = William Adams</msg>
<status status="PASS" starttime="20230521 23:05:40.069" endtime="20230521 23:05:40.069"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:05:40.070" level="INFO">${email} = uward@example.org</msg>
<status status="PASS" starttime="20230521 23:05:40.070" endtime="20230521 23:05:40.070"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:05:40.070" level="INFO">${password} = 81MF%i$O@B</msg>
<status status="PASS" starttime="20230521 23:05:40.070" endtime="20230521 23:05:40.070"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:05:40.071" level="INFO">${name} = William Adams</msg>
<status status="PASS" starttime="20230521 23:05:40.070" endtime="20230521 23:05:40.071"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:05:40.071" level="INFO">${email} = uward@example.org</msg>
<status status="PASS" starttime="20230521 23:05:40.071" endtime="20230521 23:05:40.071"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:05:40.072" level="INFO">${password} = 81MF%i$O@B</msg>
<status status="PASS" starttime="20230521 23:05:40.071" endtime="20230521 23:05:40.072"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.069" endtime="20230521 23:05:40.072"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:05:40.073" level="INFO">${payload} = {'nome': 'William Adams', 'email': 'uward@example.org', 'password': '81MF%i$O@B', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 23:05:40.072" endtime="20230521 23:05:40.073"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:05:40.073" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 23:05:40.073" endtime="20230521 23:05:40.073"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:05:40.138" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '107'} 
 body=b'{"nome": "William Adams", "email": "uward@example.org", "password": "81MF%i$O@B", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 23:05:40.138" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '548ed234-3509-4aac-bef8-b44fb28e38e6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '53cc039cf19567d0ca1ebb9ee3aa2975', 'Date': 'Sun, 21 May 2023 23:05:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "TEOs6vXp9AB0J9YB"
} 
 </msg>
<msg timestamp="20230521 23:05:40.138" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.073" endtime="20230521 23:05:40.138"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230521 23:05:40.139" level="INFO">${user_id} = TEOs6vXp9AB0J9YB</msg>
<status status="PASS" starttime="20230521 23:05:40.138" endtime="20230521 23:05:40.139"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230521 23:05:40.140" level="INFO">${USER_ID} = TEOs6vXp9AB0J9YB</msg>
<status status="PASS" starttime="20230521 23:05:40.139" endtime="20230521 23:05:40.140"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:05:40.140" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.140" endtime="20230521 23:05:40.140"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.072" endtime="20230521 23:05:40.141"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:05:40.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.141" endtime="20230521 23:05:40.142"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:05:40.142" endtime="20230521 23:05:40.143"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.141" endtime="20230521 23:05:40.143"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:05:40.144" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:05:40.143" endtime="20230521 23:05:40.144"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.143" endtime="20230521 23:05:40.144"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:05:40.067" endtime="20230521 23:05:40.144"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:05:40.146" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:05:40.145" endtime="20230521 23:05:40.146"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.145" endtime="20230521 23:05:40.146"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:05:40.209" level="INFO">GET Request : url=https://serverest.dev/usuarios/TEOs6vXp9AB0J9YB 
 path_url=/usuarios/TEOs6vXp9AB0J9YB 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:05:40.210" level="INFO">GET Response : url=https://serverest.dev/usuarios/TEOs6vXp9AB0J9YB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '627a6496-2e07-43a4-a2ff-f98eacffc6f6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3bb44ba02e082e70c7dd72a155ee1880', 'Date': 'Sun, 21 May 2023 23:05:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '156'} 
 body={
    "nome": "William Adams",
    "email": "uward@example.org",
    "password": "81MF%i$O@B",
    "administrador": "false",
    "_id": "TEOs6vXp9AB0J9YB"
} 
 </msg>
<msg timestamp="20230521 23:05:40.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.146" endtime="20230521 23:05:40.210"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:05:40.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.210" endtime="20230521 23:05:40.210"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.146" endtime="20230521 23:05:40.210"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:05:40.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.211" endtime="20230521 23:05:40.212"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:05:40.212" endtime="20230521 23:05:40.213"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.211" endtime="20230521 23:05:40.213"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:05:40.214" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230521 23:05:40.213" endtime="20230521 23:05:40.214"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.213" endtime="20230521 23:05:40.214"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:05:40.144" endtime="20230521 23:05:40.214"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:05:40.215" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:05:40.215" endtime="20230521 23:05:40.216"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.215" endtime="20230521 23:05:40.216"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:05:40.216" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 23:05:40.216" endtime="20230521 23:05:40.216"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:05:40.217" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 23:05:40.217" endtime="20230521 23:05:40.217"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:05:40.281" level="INFO">PUT Request : url=https://serverest.dev/usuarios/TEOs6vXp9AB0J9YB 
 path_url=/usuarios/TEOs6vXp9AB0J9YB 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 23:05:40.281" level="INFO">PUT Response : url=https://serverest.dev/usuarios/TEOs6vXp9AB0J9YB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8c6dadbf-0620-4d78-b6a9-44be7ad5751c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a43be845dd64e289e9966c3a6bd49e1e', 'Date': 'Sun, 21 May 2023 23:05:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230521 23:05:40.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.217" endtime="20230521 23:05:40.282"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:05:40.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.282" endtime="20230521 23:05:40.282"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.216" endtime="20230521 23:05:40.283"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:05:40.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.283" endtime="20230521 23:05:40.284"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:05:40.284" endtime="20230521 23:05:40.285"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.283" endtime="20230521 23:05:40.285"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:05:40.286" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 23:05:40.285" endtime="20230521 23:05:40.286"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.285" endtime="20230521 23:05:40.286"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:05:40.214" endtime="20230521 23:05:40.286"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:05:40.287" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:05:40.287" endtime="20230521 23:05:40.288"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.287" endtime="20230521 23:05:40.288"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:05:40.353" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/TEOs6vXp9AB0J9YB 
 path_url=/usuarios/TEOs6vXp9AB0J9YB 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:05:40.353" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/TEOs6vXp9AB0J9YB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5a6cccf1-8a30-499c-be13-a82894b3db64', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ad437ef169fbbe61e67408898b1d1559', 'Date': 'Sun, 21 May 2023 23:05:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230521 23:05:40.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.288" endtime="20230521 23:05:40.354"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:05:40.354" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.354" endtime="20230521 23:05:40.354"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.288" endtime="20230521 23:05:40.354"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:05:40.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:05:40.355" endtime="20230521 23:05:40.356"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:05:40.356" endtime="20230521 23:05:40.356"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.354" endtime="20230521 23:05:40.357"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:05:40.358" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 23:05:40.357" endtime="20230521 23:05:40.358"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.357" endtime="20230521 23:05:40.358"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:05:40.286" endtime="20230521 23:05:40.358"/>
</test>
<status status="PASS" starttime="20230521 23:05:39.039" endtime="20230521 23:05:40.358"/>
</suite>
<status status="PASS" starttime="20230521 23:05:39.037" endtime="20230521 23:05:40.360"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:05:40.370" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:05:40.369" endtime="20230521 23:06:05.445"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:06:05.446" endtime="20230521 23:06:05.695"/>
</kw>
<status status="PASS" starttime="20230521 23:05:40.369" endtime="20230521 23:06:05.696"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:06:05.702" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:06:05.696" endtime="20230521 23:06:05.702"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:05.703" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:06:05.702" endtime="20230521 23:06:06.093"/>
</kw>
<status status="PASS" starttime="20230521 23:06:05.696" endtime="20230521 23:06:06.093"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:06.094" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:06:06.094" endtime="20230521 23:06:06.465"/>
</kw>
<status status="PASS" starttime="20230521 23:06:06.094" endtime="20230521 23:06:06.466"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:06:06.466" endtime="20230521 23:06:06.700"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:06:06.719" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:06:06.701" endtime="20230521 23:06:06.719"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:06:06.816" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:06:06.720" endtime="20230521 23:06:06.816"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:06:06.830" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:06:06.816" endtime="20230521 23:06:06.830"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:06:06.843" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:06:06.830" endtime="20230521 23:06:06.843"/>
</kw>
<status status="PASS" starttime="20230521 23:06:06.466" endtime="20230521 23:06:06.843"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:06:06.844" endtime="20230521 23:06:06.899"/>
</kw>
<status status="PASS" starttime="20230521 23:06:06.843" endtime="20230521 23:06:06.899"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:05:40.369" endtime="20230521 23:06:06.899"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:06:06.901" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:06:06.901" endtime="20230521 23:06:08.292"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:06:08.292" endtime="20230521 23:06:08.409"/>
</kw>
<status status="PASS" starttime="20230521 23:06:06.900" endtime="20230521 23:06:08.409"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:06:08.415" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:06:08.410" endtime="20230521 23:06:08.415"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:08.416" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:06:08.415" endtime="20230521 23:06:08.470"/>
</kw>
<status status="PASS" starttime="20230521 23:06:08.409" endtime="20230521 23:06:08.470"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:06:08.471" level="INFO">${name} = Jessica Carter</msg>
<status status="PASS" starttime="20230521 23:06:08.470" endtime="20230521 23:06:08.471"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:06:08.472" level="INFO">${email} = ashley35@example.org</msg>
<status status="PASS" starttime="20230521 23:06:08.471" endtime="20230521 23:06:08.472"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:06:08.472" level="INFO">${password} = 2o#CnmFC!x</msg>
<status status="PASS" starttime="20230521 23:06:08.472" endtime="20230521 23:06:08.472"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:08.473" level="INFO">Typing text 'Jessica Carter' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:06:08.472" endtime="20230521 23:06:08.817"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:08.818" level="INFO">Typing text 'ashley35@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:06:08.817" endtime="20230521 23:06:09.208"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:09.209" level="INFO">Typing text '2o#CnmFC!x' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:06:09.208" endtime="20230521 23:06:09.368"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:09.369" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:06:09.369" endtime="20230521 23:06:09.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:06:09.461" level="INFO">${name} = Jessica Carter</msg>
<status status="PASS" starttime="20230521 23:06:09.460" endtime="20230521 23:06:09.461"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:06:09.461" level="INFO">${email} = ashley35@example.org</msg>
<status status="PASS" starttime="20230521 23:06:09.461" endtime="20230521 23:06:09.461"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:06:09.462" level="INFO">${password} = 2o#CnmFC!x</msg>
<status status="PASS" starttime="20230521 23:06:09.461" endtime="20230521 23:06:09.462"/>
</kw>
<status status="PASS" starttime="20230521 23:06:08.470" endtime="20230521 23:06:09.462"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:09.463" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:06:09.462" endtime="20230521 23:06:09.521"/>
</kw>
<status status="PASS" starttime="20230521 23:06:09.462" endtime="20230521 23:06:09.521"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:06:09.522" endtime="20230521 23:06:09.755"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:06:09.773" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:06:09.755" endtime="20230521 23:06:09.773"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:06:09.786" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230521 23:06:09.773" endtime="20230521 23:06:09.786"/>
</kw>
<status status="PASS" starttime="20230521 23:06:09.521" endtime="20230521 23:06:09.786"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:06:09.787" endtime="20230521 23:06:09.841"/>
</kw>
<status status="PASS" starttime="20230521 23:06:09.786" endtime="20230521 23:06:09.841"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:06:06.900" endtime="20230521 23:06:09.841"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:06:09.843" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:06:09.843" endtime="20230521 23:06:11.156"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:06:11.156" endtime="20230521 23:06:11.279"/>
</kw>
<status status="PASS" starttime="20230521 23:06:09.842" endtime="20230521 23:06:11.280"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:06:11.285" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:06:11.280" endtime="20230521 23:06:11.285"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:11.286" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:06:11.286" endtime="20230521 23:06:11.338"/>
</kw>
<status status="PASS" starttime="20230521 23:06:11.280" endtime="20230521 23:06:11.338"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:11.339" level="INFO">Typing text 'Jessica Carter' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:06:11.338" endtime="20230521 23:06:11.458"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:11.459" level="INFO">Typing text 'ashley35@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:06:11.458" endtime="20230521 23:06:11.579"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:11.580" level="INFO">Typing text '2o#CnmFC!x' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:06:11.579" endtime="20230521 23:06:11.667"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:11.668" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:06:11.667" endtime="20230521 23:06:11.738"/>
</kw>
<status status="PASS" starttime="20230521 23:06:11.338" endtime="20230521 23:06:11.738"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:06:11.739" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:06:11.738" endtime="20230521 23:06:11.796"/>
</kw>
<status status="PASS" starttime="20230521 23:06:11.738" endtime="20230521 23:06:11.796"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:06:11.797" endtime="20230521 23:06:12.032"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:06:12.050" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:06:12.032" endtime="20230521 23:06:12.050"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:06:12.064" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230521 23:06:12.051" endtime="20230521 23:06:12.064"/>
</kw>
<status status="PASS" starttime="20230521 23:06:11.796" endtime="20230521 23:06:12.065"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:06:12.065" endtime="20230521 23:06:12.120"/>
</kw>
<status status="PASS" starttime="20230521 23:06:12.065" endtime="20230521 23:06:12.120"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:06:09.842" endtime="20230521 23:06:12.120"/>
</test>
<status status="PASS" starttime="20230521 23:05:40.362" endtime="20230521 23:06:12.121"/>
</suite>
<status status="PASS" starttime="20230521 23:05:40.360" endtime="20230521 23:06:12.122"/>
</suite>
<status status="PASS" starttime="20230521 23:05:39.019" endtime="20230521 23:06:12.123"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
