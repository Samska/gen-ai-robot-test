<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230420 18:10:39.374" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 18:10:40.023" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 18:10:40.022" endtime="20230420 18:10:40.023"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.022" endtime="20230420 18:10:40.023"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 18:10:40.151" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230420 18:10:40.151" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a88f05e9-ae0f-4c7c-8c05-711ade53bde1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7573d72c57746ca5afe2dc12b1c99c64', 'Date': 'Thu, 20 Apr 2023 18:10:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '10287'} 
 body={
    "quantidade": 45,
    "usuarios": [
        {
            "nome": "Napoleon Dibbert OFK",
            "email": "napoleondibbertofk_4993462@teste.com.br",
            "password": "n_vY9kar7m7yxhP",
            "administrador": "true",
            "_id": "0BfgrvIbbk1t39BS"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Eda",
            "email": "Freddie.Gulgowski@gmail.com",
            "password": "K7rknPtnbmvkJe9",
            "administrador": "true",
            "_id": "14hyBN2LJssGrrBA"
        },
        {
            "nome": "Cydney Kautzer YSO",
            "email": "cydneykautzeryso_956448@teste.com.br",
            "password": "AxYjk2xiy0BU2Fy",
            "administrador": "true",
            "_id": "1vZWjrtBYS5TnwQH"
        },
        {
            "nome": "Cali",
            "email": "Darron.Herzog3@gmail.com",
            "password": "uQX1Jsy80A9hrbX",
            "administrador": "false",
            "_id": "3iW4TfUpslFaOF30"
        },
        {
            "nome": "Nome Abc",
            "email": "email1@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "3z2P3zQftjPFR23k"
        },
        {
            "nome": "Liana Boyle BSSoperador",
            "email": "lianaboylebssoperador_2440173@teste.com.br",
            "password": "eDRhRGJeKc1sMUt",
            "administrador": "false",
            "_id": "4RLNgKE0X27FgnYh"
        },
        {
            "nome": "Weldon",
            "email": "Juliet.Brakus@hotmail.com",
            "password": "E_hY4KyakDqJFo1",
            "administrador": "true",
            "_id": "6cmcUoI4kJsegd4s"
        },
        {
            "nome": "Adolf McDermott WEF operador",
            "email": "adolfmcdermottwefoperador_2316687@teste.com.br",
            "password": "oIo8NERRHCZNGnG",
            "administrador": "false",
            "_id": "7LFqNG05freQ53CC"
        },
        {
            "nome": "Adolf McDermott WEF administrador",
            "email": "adolfmcdermottwefadministrador_4223073@teste.com.br",
            "password": "oIo8NERRHCZNGnG",
            "administrador": "true",
            "_id": "B7snKUL40Ku1y02x"
        },
        {
            "nome": "admin",
            "email": "clauberrr@email.com",
            "password": "senhamuitomassa",
            "administrador": "true",
            "_id": "CBQtm8GSTx8FvmOV"
        },
        {
            "nome": "Luis Farrell NLF",
            "email": "luisfarrellnlf_1304102@teste.com.br",
            "password": "dihHvvgvdBPLVn_",
            "administrador": "true",
            "_id": "ChvIAqCPZtnaZ7rE"
        },
        {
            "nome": "Nome Abc",
            "email": "email2@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "Ds3kdX6u9BVF5pMW"
        },
        {
            "nome": "Nome Abcd",
            "email": "email123@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IQqAib03GG0tr5DN"
        },
        {
            "nome": "Dustin",
            "email": "Coy14@gmail.com",
            "password": "q2s41PqTZhdAOYk",
            "administrador": "true",
            "_id": "K2a229O3rzFCQ8Yv"
        },
        {
            "nome": "Violette Kessler RKN administrador",
            "email": "violettekesslerrknadministrador_1071222@teste.com.br",
            "password": "r3QritdJwuvBV7l",
            "administrador": "true",
            "_id": "LapbUr3pbCM5QY1g"
        },
        {
            "nome": "Omer",
            "email": "Charity.Upton57@yahoo.com",
            "password": "aFiU8u79oMhoXoc",
            "administrador": "true",
            "_id": "MyR0btVeEhEO1Rbk"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Shaina.Schmitt@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "NyCnVZN25OFvR2bE"
        },
        {
            "nome": "Guardi√£o da Qualidade",
            "email": "47ba9219-ef41-415f-8399-ea9513b593a8@qa.com.br",
            "password": "guardiao",
            "administrador": "true",
            "_id": "PRNFc6PSPL1nwjjk"
        },
        {
            "nome": "Dorris",
            "email": "Ellie_Brekke42@yahoo.com",
            "password": "oX7AXVNOYNWvGD7",
            "administrador": "true",
            "_id": "QmlsadUzOHCIfthY"
        },
        {
            "nome": "Mariam Konopelski STE",
            "email": "mariamkonopelskiste_1718951@teste.com.br",
            "password": "O5LL1gVgs5lJUXN",
            "administrador": "false",
            "_id": "RWEi8X8UpbUlOtPw"
        },
        {
            "nome": "Amir",
            "email": "Janis31@gmail.com",
            "password": "qPtdtWbmcvUKGXr",
            "administrador": "false",
            "_id": "SA2MjxvrpYhjKkIF"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "TDgwfyaRivwSw5r8"
        },
        {
            "nome": "Isac",
            "email": "Berry_Morissette91@gmail.com",
            "password": "of11RTFP7l80ziX",
            "administrador": "false",
            "_id": "TKSKa4z7TbF53Ow0"
        },
        {
            "nome": "Teresa",
            "email": "Bradley.Mayer@yahoo.com",
            "password": "KCVUo1vj1WYKAtf",
            "administrador": "true",
            "_id": "Uqe85Xvu2xyvoFon"
        },
        {
            "nome": "ReannaXQD",
            "email": "reannaxqd_1808984@teste.com.br",
            "password": "Def456*@",
            "administrador": "false",
            "_id": "VH5arxgQRMMezsBP"
        },
        {
            "nome": "Maude",
            "email": "Trisha.Littel@yahoo.com",
            "password": "qroqNtS3LSqN3au",
            "administrador": "true",
            "_id": "YMp9zTMxRB3uc2ln"
        },
        {
            "nome": "Zelda",
            "email": "Stone_McGlynn@yahoo.com",
            "password": "D2b0ljgGuZmliWy",
            "administrador": "true",
            "_id": "YzMl3EBJ7njdKa6J"
        },
        {
            "nome": "Johathan",
            "email": "Ethel70@hotmail.com",
            "password": "fz9hFwBa42zM2es",
            "administrador": "false",
            "_id": "ZpbB2EXj9oCHv4Lo"
        },
        {
            "nome": "Adrienne",
            "email": "Enrique_Kessler@hotmail.com",
            "password": "aSk77xSeGhJMq6l",
            "administrador": "false",
            "_id": "aVAUnpcHqsYP3795"
        },
        {
            "nome": "Cydney Kautzer YSO",
            "email": "cydneykautzeryso_810493@teste.com.br",
            "password": "AxYjk2xiy0BU2Fy",
            "administrador": "false",
            "_id": "b8mobgfwL0OKGDki"
        },
        {
            "nome": "Marjory",
            "email": "Yvette.Larson@yahoo.com",
            "password": "PZ9RkoJ4v6Ri7zD",
            "administrador": "false",
            "_id": "cjOa9wDiwNP05BHO"
        },
        {
            "nome": "Mckenzie",
            "email": "Carlie_Braun@yahoo.com",
            "password": "n_juxIKbvnX2Xoh",
            "administrador": "false",
            "_id": "cxPmP7KD37HxoZV3"
        },
        {
            "nome": "Magali",
            "email": "Olin.Langosh@hotmail.com",
            "password": "lrZ02eub85x5Lct",
            "administrador": "false",
            "_id": "fOaXaeuJycZKOXHa"
        },
        {
            "nome": "Napoleon Dibbert OFK",
            "email": "napoleondibbertofk_378744@teste.com.br",
            "password": "n_vY9kar7m7yxhP",
            "administrador": "false",
            "_id": "fcFrgEUA9supu17H"
        },
        {
            "nome": "ReannaXQD",
            "email": "reannaxqd_240796@teste.com.br",
            "password": "Def456*@",
            "administrador": "true",
            "_id": "fdc0Bjikv8qnBEjZ"
        },
        {
            "nome": "Audrey",
            "email": "Wilford_Kihn95@hotmail.com",
            "password": "y7IUGKmxUCDA0ey",
            "administrador": "true",
            "_id": "fnIxO5jXlRvu9m1K"
        },
        {
            "nome": "Johnny",
            "email": "Sterling.Carroll@gmail.com",
            "password": "iSZfZKgGpPvvO68",
            "administrador": "false",
            "_id": "iemeiwDsn0TPWjV6"
        },
        {
            "nome": "Martina",
            "email": "Olen_McLaughlin@yahoo.com",
            "password": "aLbg67KO4R5xpNx",
            "administrador": "true",
            "_id": "jdppGdvKu4WENOMI"
        },
        {
            "nome": "Guardi√£o da Qualidade",
            "email": "guardiao@qa.com.br",
            "password": "guardiao",
            "administrador": "true",
            "_id": "nIEWRZR5kRqLziiI"
        },
        {
            "nome": "Guardi√£o da Qualidade",
            "email": "4942fdd3-7c27-4aea-9593-97a1e0a6b539@qa.com.br",
            "password": "guardiao",
            "administrador": "true",
            "_id": "pN9ikBnfSWXmdfkc"
        },
        {
            "nome": "Delores",
            "email": "Anastasia_Lang@hotmail.com",
            "password": "MKnldnoJJJFJPuT",
            "administrador": "false",
            "_id": "qXqGoOeEDZbbWqON"
        },
        {
            "nome": "Darrick",
            "email": "Elvera_Ullrich@yahoo.com",
            "password": "cUKBrvWvxe7nAgC",
            "administrador": "false",
            "_id": "vCfTpczl8hyMWFmj"
        },
        {
            "nome": "Liana Boyle BSSadministrador",
            "email": "lianaboylebssadministrador_2559565@teste.com.br",
            "password": "eDRhRGJeKc1sMUt",
            "administrador": "true",
            "_id": "... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230420 18:10:40.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.024" endtime="20230420 18:10:40.151"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 18:10:40.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.151" endtime="20230420 18:10:40.152"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.023" endtime="20230420 18:10:40.152"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 18:10:40.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.152" endtime="20230420 18:10:40.153"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 18:10:40.153" endtime="20230420 18:10:40.154"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.152" endtime="20230420 18:10:40.154"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 18:10:40.155" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230420 18:10:40.154" endtime="20230420 18:10:40.155"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.154" endtime="20230420 18:10:40.155"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.021" endtime="20230420 18:10:40.155"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="14">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 18:10:40.157" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 18:10:40.156" endtime="20230420 18:10:40.157"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.156" endtime="20230420 18:10:40.157"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230420 18:10:40.158" level="INFO">${name} = Jason Robinson</msg>
<status status="PASS" starttime="20230420 18:10:40.157" endtime="20230420 18:10:40.158"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230420 18:10:40.159" level="INFO">${email} = jerrysmith@example.com</msg>
<status status="PASS" starttime="20230420 18:10:40.158" endtime="20230420 18:10:40.159"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230420 18:10:40.159" level="INFO">${password} = _N8CK#rv@6</msg>
<status status="PASS" starttime="20230420 18:10:40.159" endtime="20230420 18:10:40.159"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230420 18:10:40.159" level="INFO">${name} = Jason Robinson</msg>
<status status="PASS" starttime="20230420 18:10:40.159" endtime="20230420 18:10:40.159"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230420 18:10:40.160" level="INFO">${email} = jerrysmith@example.com</msg>
<status status="PASS" starttime="20230420 18:10:40.159" endtime="20230420 18:10:40.160"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230420 18:10:40.160" level="INFO">${password} = _N8CK#rv@6</msg>
<status status="PASS" starttime="20230420 18:10:40.160" endtime="20230420 18:10:40.160"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.157" endtime="20230420 18:10:40.160"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230420 18:10:40.161" level="INFO">${payload} = {'nome': 'Jason Robinson', 'email': 'jerrysmith@example.com', 'password': '_N8CK#rv@6', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230420 18:10:40.160" endtime="20230420 18:10:40.161"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230420 18:10:40.161" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230420 18:10:40.161" endtime="20230420 18:10:40.161"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 18:10:40.226" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Jason Robinson", "email": "jerrysmith@example.com", "password": "_N8CK#rv@6", "administrador": "false"}' 
 </msg>
<msg timestamp="20230420 18:10:40.226" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '12371031-35a5-4fe5-bfd2-9b9b3d0b78c0', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6bce5f44cb5873935608f8d37c69822b', 'Date': 'Thu, 20 Apr 2023 18:10:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "uTtWDwy7JpMoz9po"
} 
 </msg>
<msg timestamp="20230420 18:10:40.227" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.161" endtime="20230420 18:10:40.227"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230420 18:10:40.228" level="INFO">${user_id} = uTtWDwy7JpMoz9po</msg>
<status status="PASS" starttime="20230420 18:10:40.227" endtime="20230420 18:10:40.228"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230420 18:10:40.228" level="INFO">${USER_ID} = uTtWDwy7JpMoz9po</msg>
<status status="PASS" starttime="20230420 18:10:40.228" endtime="20230420 18:10:40.228"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 18:10:40.229" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.228" endtime="20230420 18:10:40.229"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.160" endtime="20230420 18:10:40.229"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 18:10:40.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.229" endtime="20230420 18:10:40.230"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 18:10:40.230" endtime="20230420 18:10:40.231"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.229" endtime="20230420 18:10:40.231"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 18:10:40.232" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230420 18:10:40.231" endtime="20230420 18:10:40.232"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.231" endtime="20230420 18:10:40.232"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.156" endtime="20230420 18:10:40.232"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="20">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 18:10:40.234" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 18:10:40.234" endtime="20230420 18:10:40.234"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.233" endtime="20230420 18:10:40.234"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 18:10:40.302" level="INFO">GET Request : url=https://serverest.dev/usuarios/uTtWDwy7JpMoz9po 
 path_url=/usuarios/uTtWDwy7JpMoz9po 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230420 18:10:40.302" level="INFO">GET Response : url=https://serverest.dev/usuarios/uTtWDwy7JpMoz9po 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cf5e1822-dd7f-4c55-8827-cab1536c7bfa', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd13064d751c0a9a0b3b75224ac801c37', 'Date': 'Thu, 20 Apr 2023 18:10:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Jason Robinson",
    "email": "jerrysmith@example.com",
    "password": "_N8CK#rv@6",
    "administrador": "false",
    "_id": "uTtWDwy7JpMoz9po"
} 
 </msg>
<msg timestamp="20230420 18:10:40.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.235" endtime="20230420 18:10:40.303"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 18:10:40.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.303" endtime="20230420 18:10:40.303"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.234" endtime="20230420 18:10:40.303"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 18:10:40.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.304" endtime="20230420 18:10:40.305"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 18:10:40.305" endtime="20230420 18:10:40.306"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.304" endtime="20230420 18:10:40.306"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 18:10:40.307" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230420 18:10:40.306" endtime="20230420 18:10:40.307"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.306" endtime="20230420 18:10:40.307"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.233" endtime="20230420 18:10:40.307"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="25">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 18:10:40.308" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 18:10:40.308" endtime="20230420 18:10:40.308"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.308" endtime="20230420 18:10:40.308"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230420 18:10:40.309" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230420 18:10:40.309" endtime="20230420 18:10:40.309"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230420 18:10:40.310" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230420 18:10:40.309" endtime="20230420 18:10:40.310"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 18:10:40.380" level="INFO">PUT Request : url=https://serverest.dev/usuarios/uTtWDwy7JpMoz9po 
 path_url=/usuarios/uTtWDwy7JpMoz9po 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230420 18:10:40.380" level="INFO">PUT Response : url=https://serverest.dev/usuarios/uTtWDwy7JpMoz9po 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5eb0b70d-85df-420e-8fa1-de44ad6a40dd', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8ecee44c163e4369ac58ed829a1d6df5', 'Date': 'Thu, 20 Apr 2023 18:10:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230420 18:10:40.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.310" endtime="20230420 18:10:40.381"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 18:10:40.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.381" endtime="20230420 18:10:40.381"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.309" endtime="20230420 18:10:40.381"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 18:10:40.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.382" endtime="20230420 18:10:40.383"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 18:10:40.383" endtime="20230420 18:10:40.383"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.381" endtime="20230420 18:10:40.384"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 18:10:40.385" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230420 18:10:40.384" endtime="20230420 18:10:40.385"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.384" endtime="20230420 18:10:40.385"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.307" endtime="20230420 18:10:40.385"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 18:10:40.386" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 18:10:40.386" endtime="20230420 18:10:40.387"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.386" endtime="20230420 18:10:40.387"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 18:10:40.455" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/uTtWDwy7JpMoz9po 
 path_url=/usuarios/uTtWDwy7JpMoz9po 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230420 18:10:40.455" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/uTtWDwy7JpMoz9po 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b112f750-4271-4fea-808c-5669c525a3ed', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f851633df015fdba5d6bdba2c9d546e7', 'Date': 'Thu, 20 Apr 2023 18:10:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro exclu√≠do com sucesso"
} 
 </msg>
<msg timestamp="20230420 18:10:40.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.387" endtime="20230420 18:10:40.455"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 18:10:40.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.455" endtime="20230420 18:10:40.456"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.387" endtime="20230420 18:10:40.456"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 18:10:40.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 18:10:40.456" endtime="20230420 18:10:40.457"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 18:10:40.457" endtime="20230420 18:10:40.458"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.456" endtime="20230420 18:10:40.458"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 18:10:40.459" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230420 18:10:40.458" endtime="20230420 18:10:40.459"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.458" endtime="20230420 18:10:40.459"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.385" endtime="20230420 18:10:40.459"/>
</test>
<status status="PASS" starttime="20230420 18:10:39.397" endtime="20230420 18:10:40.460"/>
</suite>
<status status="PASS" starttime="20230420 18:10:39.395" endtime="20230420 18:10:40.461"/>
</suite>
<status status="PASS" starttime="20230420 18:10:39.394" endtime="20230420 18:10:40.462"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 18:10:40.473" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:10:40.472" endtime="20230420 18:10:47.891"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 18:10:47.892" endtime="20230420 18:10:48.019"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.472" endtime="20230420 18:10:48.019"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 18:10:48.020" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 18:10:48.020" endtime="20230420 18:10:48.152"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 18:10:48.156" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:10:48.152" endtime="20230420 18:10:48.156"/>
</kw>
<status status="PASS" starttime="20230420 18:10:48.019" endtime="20230420 18:10:48.156"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:48.159" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 18:10:48.157" endtime="20230420 18:10:48.393"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:48.394" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 18:10:48.393" endtime="20230420 18:10:48.562"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:48.563" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 18:10:48.563" endtime="20230420 18:10:48.866"/>
</kw>
<status status="PASS" starttime="20230420 18:10:48.157" endtime="20230420 18:10:48.866"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 18:10:48.871" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230420 18:10:48.866" endtime="20230420 18:10:48.871"/>
</kw>
<status status="PASS" starttime="20230420 18:10:48.866" endtime="20230420 18:10:48.872"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230420 18:10:48.909" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230420 18:10:48.872" endtime="20230420 18:10:48.910"/>
</kw>
<status status="PASS" starttime="20230420 18:10:48.872" endtime="20230420 18:10:48.910"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230420 18:10:48.910" endtime="20230420 18:10:48.967"/>
</kw>
<status status="PASS" starttime="20230420 18:10:48.910" endtime="20230420 18:10:48.967"/>
</kw>
<status status="PASS" starttime="20230420 18:10:40.471" endtime="20230420 18:10:48.968"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 18:10:48.970" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:10:48.969" endtime="20230420 18:10:49.758"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 18:10:49.759" endtime="20230420 18:10:49.867"/>
</kw>
<status status="PASS" starttime="20230420 18:10:48.969" endtime="20230420 18:10:49.868"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 18:10:49.869" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 18:10:49.869" endtime="20230420 18:10:49.923"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 18:10:49.927" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:10:49.923" endtime="20230420 18:10:49.927"/>
</kw>
<status status="PASS" starttime="20230420 18:10:49.868" endtime="20230420 18:10:49.927"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:49.928" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 18:10:49.928" endtime="20230420 18:10:50.017"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:50.018" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 18:10:50.017" endtime="20230420 18:10:50.099"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:50.099" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 18:10:50.099" endtime="20230420 18:10:50.154"/>
</kw>
<status status="PASS" starttime="20230420 18:10:49.927" endtime="20230420 18:10:50.155"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230420 18:10:50.177" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230420 18:10:50.155" endtime="20230420 18:10:50.178"/>
</kw>
<status status="PASS" starttime="20230420 18:10:50.155" endtime="20230420 18:10:50.178"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230420 18:10:50.178" endtime="20230420 18:10:50.236"/>
</kw>
<status status="PASS" starttime="20230420 18:10:50.178" endtime="20230420 18:10:50.236"/>
</kw>
<status status="PASS" starttime="20230420 18:10:48.968" endtime="20230420 18:10:50.236"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 18:10:50.238" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:10:50.237" endtime="20230420 18:10:51.023"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 18:10:51.024" endtime="20230420 18:10:51.129"/>
</kw>
<status status="PASS" starttime="20230420 18:10:50.237" endtime="20230420 18:10:51.129"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 18:10:51.130" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 18:10:51.130" endtime="20230420 18:10:51.186"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 18:10:51.190" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:10:51.186" endtime="20230420 18:10:51.190"/>
</kw>
<status status="PASS" starttime="20230420 18:10:51.130" endtime="20230420 18:10:51.190"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:51.192" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 18:10:51.191" endtime="20230420 18:10:51.277"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:51.278" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 18:10:51.277" endtime="20230420 18:10:51.360"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:51.361" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 18:10:51.361" endtime="20230420 18:10:51.449"/>
</kw>
<status status="PASS" starttime="20230420 18:10:51.190" endtime="20230420 18:10:51.449"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 18:10:51.459" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230420 18:10:51.450" endtime="20230420 18:10:51.459"/>
</kw>
<status status="PASS" starttime="20230420 18:10:51.449" endtime="20230420 18:10:51.459"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230420 18:10:51.472" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230420 18:10:51.459" endtime="20230420 18:10:51.473"/>
</kw>
<status status="PASS" starttime="20230420 18:10:51.459" endtime="20230420 18:10:51.473"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230420 18:10:51.473" endtime="20230420 18:10:51.531"/>
</kw>
<status status="PASS" starttime="20230420 18:10:51.473" endtime="20230420 18:10:51.531"/>
</kw>
<status status="PASS" starttime="20230420 18:10:50.236" endtime="20230420 18:10:51.531"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="27">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 18:10:51.533" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:10:51.532" endtime="20230420 18:10:52.326"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 18:10:52.327" endtime="20230420 18:10:52.433"/>
</kw>
<status status="PASS" starttime="20230420 18:10:51.532" endtime="20230420 18:10:52.433"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 18:10:52.434" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 18:10:52.434" endtime="20230420 18:10:52.494"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 18:10:52.501" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:10:52.494" endtime="20230420 18:10:52.501"/>
</kw>
<status status="PASS" starttime="20230420 18:10:52.433" endtime="20230420 18:10:52.501"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:52.503" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 18:10:52.502" endtime="20230420 18:10:52.607"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:52.608" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 18:10:52.607" endtime="20230420 18:10:52.697"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 18:10:52.698" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 18:10:52.697" endtime="20230420 18:10:57.784"/>
</kw>
<status status="PASS" starttime="20230420 18:10:52.501" endtime="20230420 18:10:57.784"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 18:10:57.788" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230420 18:10:57.785" endtime="20230420 18:10:57.789"/>
</kw>
<status status="PASS" starttime="20230420 18:10:57.784" endtime="20230420 18:10:57.789"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230420 18:10:57.814" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230420 18:10:57.789" endtime="20230420 18:10:57.814"/>
</kw>
<status status="PASS" starttime="20230420 18:10:57.789" endtime="20230420 18:10:57.814"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230420 18:10:57.815" endtime="20230420 18:10:57.872"/>
</kw>
<status status="PASS" starttime="20230420 18:10:57.815" endtime="20230420 18:10:57.872"/>
</kw>
<status status="PASS" starttime="20230420 18:10:51.531" endtime="20230420 18:10:57.872"/>
</test>
<status status="PASS" starttime="20230420 18:10:40.465" endtime="20230420 18:10:57.873"/>
</suite>
<status status="PASS" starttime="20230420 18:10:40.464" endtime="20230420 18:10:57.875"/>
</suite>
<status status="PASS" starttime="20230420 18:10:40.462" endtime="20230420 18:10:57.876"/>
</suite>
<suite id="s1-s3" name="Visual" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual">
<suite id="s1-s3-s1" name="Test Visual Check" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual/test_visual_check.robot">
<test id="s1-s3-s1-t1" name="Scenario: Visual check login page" line="11">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 18:10:58.930" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:10:58.929" endtime="20230420 18:10:59.705"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 18:10:59.706" endtime="20230420 18:10:59.812"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230420 18:10:59.813" endtime="20230420 18:11:02.346"/>
</kw>
<status status="PASS" starttime="20230420 18:10:58.928" endtime="20230420 18:11:02.346"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Login Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230420 18:11:02.347" endtime="20230420 18:11:02.347"/>
</kw>
<status status="PASS" starttime="20230420 18:11:02.347" endtime="20230420 18:11:04.832"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 18:11:04.833" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 18:11:04.833" endtime="20230420 18:11:04.889"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 18:11:04.902" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:11:04.889" endtime="20230420 18:11:04.902"/>
</kw>
<status status="PASS" starttime="20230420 18:11:04.832" endtime="20230420 18:11:04.903"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230420 18:11:04.903" endtime="20230420 18:11:05.932"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230420 18:11:05.932" endtime="20230420 18:11:05.993"/>
</kw>
<status status="PASS" starttime="20230420 18:11:04.903" endtime="20230420 18:11:05.993"/>
</kw>
<status status="PASS" starttime="20230420 18:10:58.927" endtime="20230420 18:11:05.993"/>
</test>
<test id="s1-s3-s1-t2" name="Scenario: Visual check inventory page" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 18:11:05.996" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 18:11:05.995" endtime="20230420 18:11:06.896"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 18:11:06.897" endtime="20230420 18:11:07.000"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230420 18:11:07.001" endtime="20230420 18:11:09.048"/>
</kw>
<status status="PASS" starttime="20230420 18:11:05.995" endtime="20230420 18:11:09.049"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:11:09.050" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 18:11:09.049" endtime="20230420 18:11:09.136"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 18:11:09.137" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 18:11:09.136" endtime="20230420 18:11:09.219"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 18:11:09.220" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 18:11:09.220" endtime="20230420 18:11:09.304"/>
</kw>
<status status="PASS" starttime="20230420 18:11:09.049" endtime="20230420 18:11:09.304"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 18:11:09.317" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230420 18:11:09.305" endtime="20230420 18:11:09.317"/>
</kw>
<status status="PASS" starttime="20230420 18:11:09.305" endtime="20230420 18:11:09.317"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230420 18:11:09.330" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230420 18:11:09.318" endtime="20230420 18:11:09.330"/>
</kw>
<status status="PASS" starttime="20230420 18:11:09.317" endtime="20230420 18:11:09.330"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Inventory Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230420 18:11:09.331" endtime="20230420 18:11:09.331"/>
</kw>
<status status="PASS" starttime="20230420 18:11:09.330" endtime="20230420 18:11:11.844"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230420 18:11:11.844" endtime="20230420 18:11:12.864"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230420 18:11:12.864" endtime="20230420 18:11:12.922"/>
</kw>
<status status="PASS" starttime="20230420 18:11:11.844" endtime="20230420 18:11:12.922"/>
</kw>
<status status="PASS" starttime="20230420 18:11:05.994" endtime="20230420 18:11:12.922"/>
</test>
<meta name="Applitools TestResults Path">/tmp/tmpgrjibvku/EyesTestResults-afda1a3443014159a08e3b19a6afb206.json</meta>
<status status="PASS" starttime="20230420 18:10:57.879" endtime="20230420 18:11:12.923"/>
</suite>
<status status="PASS" starttime="20230420 18:10:57.877" endtime="20230420 18:11:12.925"/>
</suite>
<status status="PASS" starttime="20230420 18:10:39.375" endtime="20230420 18:11:12.926"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Visual">Tests.Visual</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Test Visual Check">Tests.Visual.Test Visual Check</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
