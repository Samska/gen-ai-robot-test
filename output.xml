<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 21:00:08.547" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:00:09.384" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:00:09.383" endtime="20230526 21:00:09.385"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.382" endtime="20230526 21:00:09.385"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:00:09.521" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:00:09.522" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e61c9941-e994-4edd-aad2-6a858b1fb0fe', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8bfe84cc9b92c273dc497ae806007b93;o=1', 'Date': 'Fri, 26 May 2023 21:00:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '2197'} 
 body={
    "quantidade": 10,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Nichole White",
            "email": "garciastephen@example.com",
            "password": "mSEXXw1MQ1q2",
            "administrador": "true",
            "_id": "8DygXGzSxgFKifQv"
        },
        {
            "nome": "Carol Smith",
            "email": "yguzman@example.com",
            "password": "Z8OOhg3tOyqQ",
            "administrador": "true",
            "_id": "HXPaxOE28NFgzgJh"
        },
        {
            "nome": "Lawrence Hanson",
            "email": "michelle11@example.org",
            "password": "7feQ4sbxy6Ie",
            "administrador": "true",
            "_id": "MgBVcaaQYuq5SEYk"
        },
        {
            "nome": "sadas",
            "email": "mill2@mil.com",
            "password": "123",
            "administrador": "true",
            "_id": "OvyYUousDsG4JYeX"
        },
        {
            "nome": "Cody Valentine",
            "email": "todd72@example.org",
            "password": "do58Eoup2qUy",
            "administrador": "true",
            "_id": "T2V5t8ZpKz0PTqGQ"
        },
        {
            "nome": "Brendan George",
            "email": "leslie86@example.com",
            "password": "1GiqcZl305aG",
            "administrador": "true",
            "_id": "TMKqdrqnRTNFOyht"
        },
        {
            "nome": "Hayley Byrd",
            "email": "kimberlymartin@example.com",
            "password": "q78F3X1rG3oF",
            "administrador": "true",
            "_id": "bLBFKECXSYeoPEjz"
        },
        {
            "nome": "Juan Reese",
            "email": "stephen03@example.com",
            "password": "STxJqTlLO5Ok",
            "administrador": "true",
            "_id": "v1MH0Jry6qPgJ0Gd"
        },
        {
            "nome": "Kyle Cooper",
            "email": "yflores@example.org",
            "password": "k7JpINT2Qek2",
            "administrador": "true",
            "_id": "vbb2T2tN8byhWgGI"
        }
    ]
} 
 </msg>
<msg timestamp="20230526 21:00:09.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.387" endtime="20230526 21:00:09.522"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:00:09.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.522" endtime="20230526 21:00:09.523"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.386" endtime="20230526 21:00:09.523"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:00:09.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.523" endtime="20230526 21:00:09.524"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:00:09.524" endtime="20230526 21:00:09.525"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.523" endtime="20230526 21:00:09.525"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:00:09.526" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:00:09.526" endtime="20230526 21:00:09.526"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.525" endtime="20230526 21:00:09.526"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:00:09.380" endtime="20230526 21:00:09.527"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:00:09.528" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:00:09.528" endtime="20230526 21:00:09.528"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.527" endtime="20230526 21:00:09.528"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:00:09.529" level="INFO">${name} = John Mercer</msg>
<status status="PASS" starttime="20230526 21:00:09.529" endtime="20230526 21:00:09.529"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:00:09.530" level="INFO">${email} = qsanders@example.com</msg>
<status status="PASS" starttime="20230526 21:00:09.530" endtime="20230526 21:00:09.530"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:00:09.531" level="INFO">${password} = RV8BiqBf39IR</msg>
<status status="PASS" starttime="20230526 21:00:09.530" endtime="20230526 21:00:09.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:00:09.531" level="INFO">${name} = John Mercer</msg>
<status status="PASS" starttime="20230526 21:00:09.531" endtime="20230526 21:00:09.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:00:09.531" level="INFO">${email} = qsanders@example.com</msg>
<status status="PASS" starttime="20230526 21:00:09.531" endtime="20230526 21:00:09.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:00:09.532" level="INFO">${password} = RV8BiqBf39IR</msg>
<status status="PASS" starttime="20230526 21:00:09.531" endtime="20230526 21:00:09.532"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.529" endtime="20230526 21:00:09.532"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:00:09.533" level="INFO">${payload} = {'nome': 'John Mercer', 'email': 'qsanders@example.com', 'password': 'RV8BiqBf39IR', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:00:09.532" endtime="20230526 21:00:09.533"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:00:09.533" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:00:09.533" endtime="20230526 21:00:09.533"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:00:09.602" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Mercer", "email": "qsanders@example.com", "password": "RV8BiqBf39IR", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:00:09.602" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '40c68f38-bc0c-488e-b132-81424ef97fd6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5841a81e6c088a4e87af792118428b3a', 'Date': 'Fri, 26 May 2023 21:00:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "LxtMg1XjPzQCWTrf"
} 
 </msg>
<msg timestamp="20230526 21:00:09.602" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.533" endtime="20230526 21:00:09.602"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 21:00:09.603" level="INFO">${user_id} = LxtMg1XjPzQCWTrf</msg>
<status status="PASS" starttime="20230526 21:00:09.602" endtime="20230526 21:00:09.603"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 21:00:09.604" level="INFO">${USER_ID} = LxtMg1XjPzQCWTrf</msg>
<status status="PASS" starttime="20230526 21:00:09.604" endtime="20230526 21:00:09.604"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:00:09.604" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.604" endtime="20230526 21:00:09.605"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.532" endtime="20230526 21:00:09.605"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:00:09.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.605" endtime="20230526 21:00:09.606"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:00:09.606" endtime="20230526 21:00:09.607"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.605" endtime="20230526 21:00:09.607"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:00:09.608" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:00:09.607" endtime="20230526 21:00:09.608"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.607" endtime="20230526 21:00:09.608"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:00:09.527" endtime="20230526 21:00:09.608"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:00:09.610" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:00:09.610" endtime="20230526 21:00:09.610"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.609" endtime="20230526 21:00:09.610"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:00:09.681" level="INFO">GET Request : url=https://serverest.dev/usuarios/LxtMg1XjPzQCWTrf 
 path_url=/usuarios/LxtMg1XjPzQCWTrf 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:00:09.681" level="INFO">GET Response : url=https://serverest.dev/usuarios/LxtMg1XjPzQCWTrf 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4cd2627a-db3e-4b44-b00c-ef875123614f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '64e56a9a324d2e86b3602d7d1f974408', 'Date': 'Fri, 26 May 2023 21:00:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '159'} 
 body={
    "nome": "John Mercer",
    "email": "qsanders@example.com",
    "password": "RV8BiqBf39IR",
    "administrador": "false",
    "_id": "LxtMg1XjPzQCWTrf"
} 
 </msg>
<msg timestamp="20230526 21:00:09.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.611" endtime="20230526 21:00:09.682"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:00:09.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.682" endtime="20230526 21:00:09.682"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.611" endtime="20230526 21:00:09.682"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:00:09.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.683" endtime="20230526 21:00:09.684"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:00:09.684" endtime="20230526 21:00:09.685"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.683" endtime="20230526 21:00:09.685"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:00:09.686" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 21:00:09.685" endtime="20230526 21:00:09.686"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.685" endtime="20230526 21:00:09.686"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:00:09.609" endtime="20230526 21:00:09.686"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:00:09.688" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:00:09.688" endtime="20230526 21:00:09.688"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.687" endtime="20230526 21:00:09.688"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:00:09.689" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:00:09.689" endtime="20230526 21:00:09.689"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:00:09.689" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:00:09.689" endtime="20230526 21:00:09.690"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:00:09.759" level="INFO">PUT Request : url=https://serverest.dev/usuarios/LxtMg1XjPzQCWTrf 
 path_url=/usuarios/LxtMg1XjPzQCWTrf 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:00:09.760" level="INFO">PUT Response : url=https://serverest.dev/usuarios/LxtMg1XjPzQCWTrf 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a377db0d-5927-4768-809b-99b3350a9e75', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '637e88567b9df500180bd7ba05aef84d', 'Date': 'Fri, 26 May 2023 21:00:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:00:09.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.690" endtime="20230526 21:00:09.760"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:00:09.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.760" endtime="20230526 21:00:09.761"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.688" endtime="20230526 21:00:09.761"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:00:09.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.761" endtime="20230526 21:00:09.762"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:00:09.762" endtime="20230526 21:00:09.763"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.761" endtime="20230526 21:00:09.763"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:00:09.764" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:00:09.764" endtime="20230526 21:00:09.765"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.763" endtime="20230526 21:00:09.765"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:00:09.687" endtime="20230526 21:00:09.765"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:00:09.767" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:00:09.766" endtime="20230526 21:00:09.767"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.766" endtime="20230526 21:00:09.767"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:00:09.837" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/LxtMg1XjPzQCWTrf 
 path_url=/usuarios/LxtMg1XjPzQCWTrf 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:00:09.837" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/LxtMg1XjPzQCWTrf 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5d1daafe-eb65-49af-a1d0-c4f08f2b4317', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f7e298e407d1e397ab3073feb62a8694', 'Date': 'Fri, 26 May 2023 21:00:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:00:09.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.768" endtime="20230526 21:00:09.837"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:00:09.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.837" endtime="20230526 21:00:09.838"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.767" endtime="20230526 21:00:09.838"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:00:09.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:00:09.838" endtime="20230526 21:00:09.839"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:00:09.839" endtime="20230526 21:00:09.840"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.838" endtime="20230526 21:00:09.840"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:00:09.841" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:00:09.841" endtime="20230526 21:00:09.841"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.840" endtime="20230526 21:00:09.842"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:00:09.765" endtime="20230526 21:00:09.842"/>
</test>
<status status="PASS" starttime="20230526 21:00:08.571" endtime="20230526 21:00:09.842"/>
</suite>
<status status="PASS" starttime="20230526 21:00:08.569" endtime="20230526 21:00:09.843"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:00:09.856" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:00:09.855" endtime="20230526 21:00:26.044"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:00:26.045" endtime="20230526 21:00:26.201"/>
</kw>
<status status="PASS" starttime="20230526 21:00:09.854" endtime="20230526 21:00:26.201"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:00:26.209" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:00:26.203" endtime="20230526 21:00:26.210"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:26.211" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:00:26.210" endtime="20230526 21:00:26.511"/>
</kw>
<status status="PASS" starttime="20230526 21:00:26.202" endtime="20230526 21:00:26.511"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:26.512" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:00:26.511" endtime="20230526 21:00:26.797"/>
</kw>
<status status="PASS" starttime="20230526 21:00:26.511" endtime="20230526 21:00:26.797"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:00:26.798" endtime="20230526 21:00:27.035"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:00:27.058" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:00:27.035" endtime="20230526 21:00:27.058"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:00:27.258" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:00:27.058" endtime="20230526 21:00:27.259"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:00:27.275" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:00:27.259" endtime="20230526 21:00:27.275"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:00:27.289" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:00:27.275" endtime="20230526 21:00:27.289"/>
</kw>
<status status="PASS" starttime="20230526 21:00:26.797" endtime="20230526 21:00:27.289"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:00:27.290" endtime="20230526 21:00:27.348"/>
</kw>
<status status="PASS" starttime="20230526 21:00:27.290" endtime="20230526 21:00:27.349"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:00:09.854" endtime="20230526 21:00:27.349"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:00:27.351" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:00:27.350" endtime="20230526 21:00:28.740"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:00:28.741" endtime="20230526 21:00:28.862"/>
</kw>
<status status="PASS" starttime="20230526 21:00:27.350" endtime="20230526 21:00:28.862"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:00:28.869" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:00:28.863" endtime="20230526 21:00:28.869"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:28.870" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:00:28.869" endtime="20230526 21:00:28.930"/>
</kw>
<status status="PASS" starttime="20230526 21:00:28.862" endtime="20230526 21:00:28.930"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:00:28.931" level="INFO">${name} = Mr. Matthew Collins</msg>
<status status="PASS" starttime="20230526 21:00:28.930" endtime="20230526 21:00:28.931"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:00:28.932" level="INFO">${email} = wanglauren@example.org</msg>
<status status="PASS" starttime="20230526 21:00:28.931" endtime="20230526 21:00:28.932"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:00:28.932" level="INFO">${password} = xIuLyrW2E8fs</msg>
<status status="PASS" starttime="20230526 21:00:28.932" endtime="20230526 21:00:28.932"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:28.933" level="INFO">Typing text 'Mr. Matthew Collins' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:00:28.932" endtime="20230526 21:00:29.168"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:29.169" level="INFO">Typing text 'wanglauren@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:00:29.168" endtime="20230526 21:00:29.314"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:29.315" level="INFO">Typing text 'xIuLyrW2E8fs' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:00:29.315" endtime="20230526 21:00:29.476"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:29.477" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:00:29.476" endtime="20230526 21:00:29.571"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:00:29.572" level="INFO">${name} = Mr. Matthew Collins</msg>
<status status="PASS" starttime="20230526 21:00:29.571" endtime="20230526 21:00:29.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:00:29.572" level="INFO">${email} = wanglauren@example.org</msg>
<status status="PASS" starttime="20230526 21:00:29.572" endtime="20230526 21:00:29.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:00:29.572" level="INFO">${password} = xIuLyrW2E8fs</msg>
<status status="PASS" starttime="20230526 21:00:29.572" endtime="20230526 21:00:29.572"/>
</kw>
<status status="PASS" starttime="20230526 21:00:28.930" endtime="20230526 21:00:29.573"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:29.574" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:00:29.573" endtime="20230526 21:00:29.642"/>
</kw>
<status status="PASS" starttime="20230526 21:00:29.573" endtime="20230526 21:00:29.642"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:00:29.643" endtime="20230526 21:00:29.884"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:00:29.905" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:00:29.884" endtime="20230526 21:00:29.905"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:00:29.920" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 21:00:29.906" endtime="20230526 21:00:29.920"/>
</kw>
<status status="PASS" starttime="20230526 21:00:29.642" endtime="20230526 21:00:29.921"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:00:29.921" endtime="20230526 21:00:29.976"/>
</kw>
<status status="PASS" starttime="20230526 21:00:29.921" endtime="20230526 21:00:29.976"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:00:27.349" endtime="20230526 21:00:29.976"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:00:29.979" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:00:29.978" endtime="20230526 21:00:31.386"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:00:31.386" endtime="20230526 21:00:31.508"/>
</kw>
<status status="PASS" starttime="20230526 21:00:29.978" endtime="20230526 21:00:31.508"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:00:31.514" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:00:31.509" endtime="20230526 21:00:31.515"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:31.516" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:00:31.515" endtime="20230526 21:00:31.575"/>
</kw>
<status status="PASS" starttime="20230526 21:00:31.508" endtime="20230526 21:00:31.575"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:31.576" level="INFO">Typing text 'Mr. Matthew Collins' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:00:31.576" endtime="20230526 21:00:31.720"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:31.721" level="INFO">Typing text 'wanglauren@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:00:31.721" endtime="20230526 21:00:31.842"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:31.843" level="INFO">Typing text 'xIuLyrW2E8fs' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:00:31.842" endtime="20230526 21:00:31.981"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:31.981" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:00:31.981" endtime="20230526 21:00:32.073"/>
</kw>
<status status="PASS" starttime="20230526 21:00:31.576" endtime="20230526 21:00:32.074"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:00:32.075" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:00:32.074" endtime="20230526 21:00:32.145"/>
</kw>
<status status="PASS" starttime="20230526 21:00:32.074" endtime="20230526 21:00:32.145"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:00:32.146" endtime="20230526 21:00:32.385"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:00:32.408" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:00:32.386" endtime="20230526 21:00:32.408"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:00:32.425" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 21:00:32.408" endtime="20230526 21:00:32.425"/>
</kw>
<status status="PASS" starttime="20230526 21:00:32.145" endtime="20230526 21:00:32.425"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:00:32.426" endtime="20230526 21:00:32.481"/>
</kw>
<status status="PASS" starttime="20230526 21:00:32.425" endtime="20230526 21:00:32.481"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:00:29.977" endtime="20230526 21:00:32.481"/>
</test>
<status status="PASS" starttime="20230526 21:00:09.846" endtime="20230526 21:00:32.482"/>
</suite>
<status status="PASS" starttime="20230526 21:00:09.844" endtime="20230526 21:00:32.484"/>
</suite>
<status status="PASS" starttime="20230526 21:00:08.548" endtime="20230526 21:00:32.485"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
