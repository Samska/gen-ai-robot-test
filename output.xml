<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230420 01:00:58.273" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 01:00:58.859" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 01:00:58.859" endtime="20230420 01:00:58.859"/>
</kw>
<status status="PASS" starttime="20230420 01:00:58.858" endtime="20230420 01:00:58.859"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 01:00:59.027" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230420 01:00:59.027" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '29216d58-3b7c-4bf0-8ace-a1d9616588f9', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '942a59788bd8aacc164bf0f5d54c71be;o=1', 'Date': 'Thu, 20 Apr 2023 01:00:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230420 01:00:59.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:58.860" endtime="20230420 01:00:59.027"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 01:00:59.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.028" endtime="20230420 01:00:59.028"/>
</kw>
<status status="PASS" starttime="20230420 01:00:58.859" endtime="20230420 01:00:59.028"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 01:00:59.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.029" endtime="20230420 01:00:59.029"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 01:00:59.029" endtime="20230420 01:00:59.030"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.028" endtime="20230420 01:00:59.030"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 01:00:59.031" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230420 01:00:59.030" endtime="20230420 01:00:59.031"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.030" endtime="20230420 01:00:59.031"/>
</kw>
<status status="PASS" starttime="20230420 01:00:58.857" endtime="20230420 01:00:59.031"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="14">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 01:00:59.033" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 01:00:59.033" endtime="20230420 01:00:59.033"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.032" endtime="20230420 01:00:59.033"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230420 01:00:59.034" level="INFO">${name} = Tanya Rodriguez</msg>
<status status="PASS" starttime="20230420 01:00:59.034" endtime="20230420 01:00:59.034"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230420 01:00:59.035" level="INFO">${email} = samanthataylor@example.net</msg>
<status status="PASS" starttime="20230420 01:00:59.034" endtime="20230420 01:00:59.035"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230420 01:00:59.035" level="INFO">${password} = #v!2VqBpOa</msg>
<status status="PASS" starttime="20230420 01:00:59.035" endtime="20230420 01:00:59.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230420 01:00:59.035" level="INFO">${name} = Tanya Rodriguez</msg>
<status status="PASS" starttime="20230420 01:00:59.035" endtime="20230420 01:00:59.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230420 01:00:59.036" level="INFO">${email} = samanthataylor@example.net</msg>
<status status="PASS" starttime="20230420 01:00:59.035" endtime="20230420 01:00:59.036"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230420 01:00:59.036" level="INFO">${password} = #v!2VqBpOa</msg>
<status status="PASS" starttime="20230420 01:00:59.036" endtime="20230420 01:00:59.036"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.033" endtime="20230420 01:00:59.036"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230420 01:00:59.037" level="INFO">${payload} = {'nome': 'Tanya Rodriguez', 'email': 'samanthataylor@example.net', 'password': '#v!2VqBpOa', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230420 01:00:59.036" endtime="20230420 01:00:59.037"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230420 01:00:59.037" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230420 01:00:59.037" endtime="20230420 01:00:59.037"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 01:00:59.143" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '118'} 
 body=b'{"nome": "Tanya Rodriguez", "email": "samanthataylor@example.net", "password": "#v!2VqBpOa", "administrador": "false"}' 
 </msg>
<msg timestamp="20230420 01:00:59.143" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '58b4153f-d1f8-41d3-86bd-f96dff0e9169', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '08b05ef74ef8cc196fcac11683fe7087', 'Date': 'Thu, 20 Apr 2023 01:00:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "DVcgwSbygD43eie5"
} 
 </msg>
<msg timestamp="20230420 01:00:59.143" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.037" endtime="20230420 01:00:59.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230420 01:00:59.144" level="INFO">${user_id} = DVcgwSbygD43eie5</msg>
<status status="PASS" starttime="20230420 01:00:59.144" endtime="20230420 01:00:59.144"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230420 01:00:59.145" level="INFO">${USER_ID} = DVcgwSbygD43eie5</msg>
<status status="PASS" starttime="20230420 01:00:59.144" endtime="20230420 01:00:59.145"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 01:00:59.145" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.145" endtime="20230420 01:00:59.145"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.036" endtime="20230420 01:00:59.145"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 01:00:59.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.146" endtime="20230420 01:00:59.146"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 01:00:59.146" endtime="20230420 01:00:59.147"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.145" endtime="20230420 01:00:59.147"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 01:00:59.148" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230420 01:00:59.147" endtime="20230420 01:00:59.148"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.147" endtime="20230420 01:00:59.148"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.032" endtime="20230420 01:00:59.148"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="20">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 01:00:59.150" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 01:00:59.150" endtime="20230420 01:00:59.150"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.149" endtime="20230420 01:00:59.150"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 01:00:59.219" level="INFO">GET Request : url=https://serverest.dev/usuarios/DVcgwSbygD43eie5 
 path_url=/usuarios/DVcgwSbygD43eie5 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230420 01:00:59.219" level="INFO">GET Response : url=https://serverest.dev/usuarios/DVcgwSbygD43eie5 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '909778c9-6af1-42b6-800a-43911f0238d6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ab29005538d2f38e0fed28b438da7694', 'Date': 'Thu, 20 Apr 2023 01:00:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '167'} 
 body={
    "nome": "Tanya Rodriguez",
    "email": "samanthataylor@example.net",
    "password": "#v!2VqBpOa",
    "administrador": "false",
    "_id": "DVcgwSbygD43eie5"
} 
 </msg>
<msg timestamp="20230420 01:00:59.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.150" endtime="20230420 01:00:59.219"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 01:00:59.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.219" endtime="20230420 01:00:59.219"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.150" endtime="20230420 01:00:59.219"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 01:00:59.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.220" endtime="20230420 01:00:59.220"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 01:00:59.221" endtime="20230420 01:00:59.221"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.219" endtime="20230420 01:00:59.221"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 01:00:59.222" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230420 01:00:59.222" endtime="20230420 01:00:59.222"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.221" endtime="20230420 01:00:59.222"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.149" endtime="20230420 01:00:59.222"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="25">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 01:00:59.223" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 01:00:59.223" endtime="20230420 01:00:59.224"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.223" endtime="20230420 01:00:59.224"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230420 01:00:59.224" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230420 01:00:59.224" endtime="20230420 01:00:59.224"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230420 01:00:59.225" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230420 01:00:59.225" endtime="20230420 01:00:59.225"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 01:00:59.299" level="INFO">PUT Request : url=https://serverest.dev/usuarios/DVcgwSbygD43eie5 
 path_url=/usuarios/DVcgwSbygD43eie5 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230420 01:00:59.299" level="INFO">PUT Response : url=https://serverest.dev/usuarios/DVcgwSbygD43eie5 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4be759a1-0686-4663-8f73-5589a63b3d51', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1781cdc5ef27bfa8ff4250f5d4a73706', 'Date': 'Thu, 20 Apr 2023 01:00:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230420 01:00:59.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.225" endtime="20230420 01:00:59.299"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 01:00:59.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.300" endtime="20230420 01:00:59.300"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.224" endtime="20230420 01:00:59.300"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 01:00:59.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.300" endtime="20230420 01:00:59.301"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 01:00:59.301" endtime="20230420 01:00:59.302"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.300" endtime="20230420 01:00:59.302"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 01:00:59.303" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230420 01:00:59.302" endtime="20230420 01:00:59.303"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.302" endtime="20230420 01:00:59.303"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.223" endtime="20230420 01:00:59.303"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230420 01:00:59.304" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230420 01:00:59.304" endtime="20230420 01:00:59.305"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.304" endtime="20230420 01:00:59.305"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230420 01:00:59.391" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/DVcgwSbygD43eie5 
 path_url=/usuarios/DVcgwSbygD43eie5 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230420 01:00:59.391" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/DVcgwSbygD43eie5 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3fa97ef1-cf61-49a3-85cb-0f77af623b5b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f7d93e248c6c4cea6d3f8eebf10da40f', 'Date': 'Thu, 20 Apr 2023 01:00:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230420 01:00:59.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.305" endtime="20230420 01:00:59.391"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230420 01:00:59.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.391" endtime="20230420 01:00:59.391"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.305" endtime="20230420 01:00:59.391"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230420 01:00:59.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230420 01:00:59.392" endtime="20230420 01:00:59.392"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230420 01:00:59.393" endtime="20230420 01:00:59.393"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.391" endtime="20230420 01:00:59.393"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230420 01:00:59.394" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230420 01:00:59.394" endtime="20230420 01:00:59.394"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.393" endtime="20230420 01:00:59.394"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.303" endtime="20230420 01:00:59.394"/>
</test>
<status status="PASS" starttime="20230420 01:00:58.295" endtime="20230420 01:00:59.395"/>
</suite>
<status status="PASS" starttime="20230420 01:00:58.294" endtime="20230420 01:00:59.396"/>
</suite>
<status status="PASS" starttime="20230420 01:00:58.292" endtime="20230420 01:00:59.397"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 01:00:59.407" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:00:59.407" endtime="20230420 01:01:06.435"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 01:01:06.436" endtime="20230420 01:01:06.556"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.406" endtime="20230420 01:01:06.556"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 01:01:06.557" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 01:01:06.557" endtime="20230420 01:01:06.643"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 01:01:06.648" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:06.644" endtime="20230420 01:01:06.648"/>
</kw>
<status status="PASS" starttime="20230420 01:01:06.557" endtime="20230420 01:01:06.648"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:06.650" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 01:01:06.648" endtime="20230420 01:01:06.837"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:06.838" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 01:01:06.837" endtime="20230420 01:01:06.981"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:06.982" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 01:01:06.981" endtime="20230420 01:01:07.207"/>
</kw>
<status status="PASS" starttime="20230420 01:01:06.648" endtime="20230420 01:01:07.207"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 01:01:07.212" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230420 01:01:07.207" endtime="20230420 01:01:07.213"/>
</kw>
<status status="PASS" starttime="20230420 01:01:07.207" endtime="20230420 01:01:07.213"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230420 01:01:07.237" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230420 01:01:07.213" endtime="20230420 01:01:07.237"/>
</kw>
<status status="PASS" starttime="20230420 01:01:07.213" endtime="20230420 01:01:07.237"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230420 01:01:07.237" endtime="20230420 01:01:07.304"/>
</kw>
<status status="PASS" starttime="20230420 01:01:07.237" endtime="20230420 01:01:07.305"/>
</kw>
<status status="PASS" starttime="20230420 01:00:59.406" endtime="20230420 01:01:07.305"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 01:01:07.307" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:07.306" endtime="20230420 01:01:08.152"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 01:01:08.152" endtime="20230420 01:01:08.259"/>
</kw>
<status status="PASS" starttime="20230420 01:01:07.306" endtime="20230420 01:01:08.260"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 01:01:08.260" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 01:01:08.260" endtime="20230420 01:01:08.319"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 01:01:08.323" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:08.320" endtime="20230420 01:01:08.323"/>
</kw>
<status status="PASS" starttime="20230420 01:01:08.260" endtime="20230420 01:01:08.323"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:08.325" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 01:01:08.324" endtime="20230420 01:01:08.415"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:08.416" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 01:01:08.415" endtime="20230420 01:01:08.494"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:08.495" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 01:01:08.495" endtime="20230420 01:01:08.549"/>
</kw>
<status status="PASS" starttime="20230420 01:01:08.323" endtime="20230420 01:01:08.549"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230420 01:01:08.571" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230420 01:01:08.549" endtime="20230420 01:01:08.571"/>
</kw>
<status status="PASS" starttime="20230420 01:01:08.549" endtime="20230420 01:01:08.571"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230420 01:01:08.572" endtime="20230420 01:01:08.628"/>
</kw>
<status status="PASS" starttime="20230420 01:01:08.571" endtime="20230420 01:01:08.628"/>
</kw>
<status status="PASS" starttime="20230420 01:01:07.305" endtime="20230420 01:01:08.628"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 01:01:08.630" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:08.630" endtime="20230420 01:01:09.505"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 01:01:09.505" endtime="20230420 01:01:09.610"/>
</kw>
<status status="PASS" starttime="20230420 01:01:08.629" endtime="20230420 01:01:09.610"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 01:01:09.611" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 01:01:09.611" endtime="20230420 01:01:09.665"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 01:01:09.668" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:09.665" endtime="20230420 01:01:09.669"/>
</kw>
<status status="PASS" starttime="20230420 01:01:09.611" endtime="20230420 01:01:09.669"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:09.670" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 01:01:09.669" endtime="20230420 01:01:09.768"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:09.768" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 01:01:09.768" endtime="20230420 01:01:09.851"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:09.852" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 01:01:09.851" endtime="20230420 01:01:09.931"/>
</kw>
<status status="PASS" starttime="20230420 01:01:09.669" endtime="20230420 01:01:09.931"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 01:01:09.947" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230420 01:01:09.931" endtime="20230420 01:01:09.947"/>
</kw>
<status status="PASS" starttime="20230420 01:01:09.931" endtime="20230420 01:01:09.947"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230420 01:01:09.960" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230420 01:01:09.948" endtime="20230420 01:01:09.960"/>
</kw>
<status status="PASS" starttime="20230420 01:01:09.948" endtime="20230420 01:01:09.960"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230420 01:01:09.960" endtime="20230420 01:01:10.017"/>
</kw>
<status status="PASS" starttime="20230420 01:01:09.960" endtime="20230420 01:01:10.017"/>
</kw>
<status status="PASS" starttime="20230420 01:01:08.629" endtime="20230420 01:01:10.017"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="27">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 01:01:10.019" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:10.019" endtime="20230420 01:01:10.869"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 01:01:10.869" endtime="20230420 01:01:10.978"/>
</kw>
<status status="PASS" starttime="20230420 01:01:10.018" endtime="20230420 01:01:10.978"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 01:01:10.979" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 01:01:10.979" endtime="20230420 01:01:11.044"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 01:01:11.049" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:11.044" endtime="20230420 01:01:11.049"/>
</kw>
<status status="PASS" starttime="20230420 01:01:10.979" endtime="20230420 01:01:11.049"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:11.050" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 01:01:11.050" endtime="20230420 01:01:11.154"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:11.155" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 01:01:11.154" endtime="20230420 01:01:11.237"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:11.238" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 01:01:11.238" endtime="20230420 01:01:16.330"/>
</kw>
<status status="PASS" starttime="20230420 01:01:11.049" endtime="20230420 01:01:16.330"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 01:01:16.342" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230420 01:01:16.330" endtime="20230420 01:01:16.342"/>
</kw>
<status status="PASS" starttime="20230420 01:01:16.330" endtime="20230420 01:01:16.343"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230420 01:01:16.355" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230420 01:01:16.343" endtime="20230420 01:01:16.355"/>
</kw>
<status status="PASS" starttime="20230420 01:01:16.343" endtime="20230420 01:01:16.356"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230420 01:01:16.356" endtime="20230420 01:01:16.413"/>
</kw>
<status status="PASS" starttime="20230420 01:01:16.356" endtime="20230420 01:01:16.413"/>
</kw>
<status status="PASS" starttime="20230420 01:01:10.018" endtime="20230420 01:01:16.413"/>
</test>
<status status="PASS" starttime="20230420 01:00:59.400" endtime="20230420 01:01:16.414"/>
</suite>
<status status="PASS" starttime="20230420 01:00:59.399" endtime="20230420 01:01:16.416"/>
</suite>
<status status="PASS" starttime="20230420 01:00:59.398" endtime="20230420 01:01:16.417"/>
</suite>
<suite id="s1-s3" name="Visual" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual">
<suite id="s1-s3-s1" name="Test Visual Check" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual/test_visual_check.robot">
<test id="s1-s3-s1-t1" name="Scenario: Visual check login page" line="11">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 01:01:17.397" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:17.396" endtime="20230420 01:01:18.240"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 01:01:18.241" endtime="20230420 01:01:18.345"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230420 01:01:18.345" endtime="20230420 01:01:20.695"/>
</kw>
<status status="PASS" starttime="20230420 01:01:17.395" endtime="20230420 01:01:20.695"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Login Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230420 01:01:20.696" endtime="20230420 01:01:20.696"/>
</kw>
<status status="PASS" starttime="20230420 01:01:20.695" endtime="20230420 01:01:23.191"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230420 01:01:23.192" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230420 01:01:23.192" endtime="20230420 01:01:23.250"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 01:01:23.253" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:23.250" endtime="20230420 01:01:23.254"/>
</kw>
<status status="PASS" starttime="20230420 01:01:23.192" endtime="20230420 01:01:23.254"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230420 01:01:23.255" endtime="20230420 01:01:24.287"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230420 01:01:24.288" endtime="20230420 01:01:24.345"/>
</kw>
<status status="PASS" starttime="20230420 01:01:23.255" endtime="20230420 01:01:24.345"/>
</kw>
<status status="PASS" starttime="20230420 01:01:17.394" endtime="20230420 01:01:24.345"/>
</test>
<test id="s1-s3-s1-t2" name="Scenario: Visual check inventory page" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230420 01:01:24.348" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230420 01:01:24.347" endtime="20230420 01:01:25.209"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230420 01:01:25.209" endtime="20230420 01:01:25.315"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230420 01:01:25.316" endtime="20230420 01:01:27.362"/>
</kw>
<status status="PASS" starttime="20230420 01:01:24.347" endtime="20230420 01:01:27.362"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:27.363" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230420 01:01:27.363" endtime="20230420 01:01:27.447"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:27.448" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230420 01:01:27.448" endtime="20230420 01:01:27.528"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230420 01:01:27.529" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230420 01:01:27.528" endtime="20230420 01:01:27.619"/>
</kw>
<status status="PASS" starttime="20230420 01:01:27.362" endtime="20230420 01:01:27.619"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230420 01:01:27.630" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230420 01:01:27.620" endtime="20230420 01:01:27.630"/>
</kw>
<status status="PASS" starttime="20230420 01:01:27.619" endtime="20230420 01:01:27.630"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230420 01:01:27.643" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230420 01:01:27.630" endtime="20230420 01:01:27.643"/>
</kw>
<status status="PASS" starttime="20230420 01:01:27.630" endtime="20230420 01:01:27.644"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Inventory Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230420 01:01:27.644" endtime="20230420 01:01:27.645"/>
</kw>
<status status="PASS" starttime="20230420 01:01:27.644" endtime="20230420 01:01:30.126"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230420 01:01:30.127" endtime="20230420 01:01:31.146"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230420 01:01:31.147" endtime="20230420 01:01:31.203"/>
</kw>
<status status="PASS" starttime="20230420 01:01:30.126" endtime="20230420 01:01:31.203"/>
</kw>
<status status="PASS" starttime="20230420 01:01:24.346" endtime="20230420 01:01:31.203"/>
</test>
<meta name="Applitools TestResults Path">/tmp/tmpbwlz9kz0/EyesTestResults-d145d61c8cc2489a834caa51a41fc93c.json</meta>
<status status="PASS" starttime="20230420 01:01:16.420" endtime="20230420 01:01:31.204"/>
</suite>
<status status="PASS" starttime="20230420 01:01:16.418" endtime="20230420 01:01:31.205"/>
</suite>
<status status="PASS" starttime="20230420 01:00:58.274" endtime="20230420 01:01:31.206"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Visual">Tests.Visual</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Test Visual Check">Tests.Visual.Test Visual Check</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
