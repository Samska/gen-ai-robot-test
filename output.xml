<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 21:15:21.511" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:15:22.102" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:15:22.102" endtime="20230526 21:15:22.102"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.101" endtime="20230526 21:15:22.102"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:15:22.250" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:15:22.250" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '39fa15f0-bbee-445c-bf80-f35c195f8ff2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5018dae82ee88c6febd10a18c7be604e;o=1', 'Date': 'Fri, 26 May 2023 21:15:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '3959'} 
 body={
    "quantidade": 18,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Jacqueline Lopez",
            "email": "bjohnson@example.org",
            "password": "KlILbusq4KYn",
            "administrador": "true",
            "_id": "5zRpRME6l2znI1Co"
        },
        {
            "nome": "Nichole White",
            "email": "garciastephen@example.com",
            "password": "mSEXXw1MQ1q2",
            "administrador": "true",
            "_id": "8DygXGzSxgFKifQv"
        },
        {
            "nome": "Mary Butler",
            "email": "zperez@example.net",
            "password": "KUSsb75E4Tai",
            "administrador": "true",
            "_id": "9m6worerGZSyU4Vd"
        },
        {
            "nome": "Carol Smith",
            "email": "yguzman@example.com",
            "password": "Z8OOhg3tOyqQ",
            "administrador": "true",
            "_id": "HXPaxOE28NFgzgJh"
        },
        {
            "nome": "Dillon Gibson",
            "email": "jeffreymitchell@example.com",
            "password": "P7jYMEnhP5om",
            "administrador": "true",
            "_id": "HzusPP4B294O7zVO"
        },
        {
            "nome": "Lisa Greene",
            "email": "john32@example.net",
            "password": "JXimtd1w7Jdd",
            "administrador": "true",
            "_id": "KJe5wBwnfCR2mWW3"
        },
        {
            "nome": "Lawrence Hanson",
            "email": "michelle11@example.org",
            "password": "7feQ4sbxy6Ie",
            "administrador": "true",
            "_id": "MgBVcaaQYuq5SEYk"
        },
        {
            "nome": "Michele Mosley",
            "email": "troyweeks@example.org",
            "password": "daE0Chk089HM",
            "administrador": "true",
            "_id": "Ol0riOoxL8pOKcE2"
        },
        {
            "nome": "sadas",
            "email": "mill2@mil.com",
            "password": "123",
            "administrador": "true",
            "_id": "OvyYUousDsG4JYeX"
        },
        {
            "nome": "Mr. Matthew Collins",
            "email": "wanglauren@example.org",
            "password": "xIuLyrW2E8fs",
            "administrador": "true",
            "_id": "Pd9cZNjcG1eWfUMQ"
        },
        {
            "nome": "Cody Valentine",
            "email": "todd72@example.org",
            "password": "do58Eoup2qUy",
            "administrador": "true",
            "_id": "T2V5t8ZpKz0PTqGQ"
        },
        {
            "nome": "Brendan George",
            "email": "leslie86@example.com",
            "password": "1GiqcZl305aG",
            "administrador": "true",
            "_id": "TMKqdrqnRTNFOyht"
        },
        {
            "nome": "Hayley Byrd",
            "email": "kimberlymartin@example.com",
            "password": "q78F3X1rG3oF",
            "administrador": "true",
            "_id": "bLBFKECXSYeoPEjz"
        },
        {
            "nome": "Sheila Esparza",
            "email": "ycarter@example.org",
            "password": "gX9w2NckaW0K",
            "administrador": "true",
            "_id": "jSiHSVUpLmNpts8M"
        },
        {
            "nome": "Juan Reese",
            "email": "stephen03@example.com",
            "password": "STxJqTlLO5Ok",
            "administrador": "true",
            "_id": "v1MH0Jry6qPgJ0Gd"
        },
        {
            "nome": "Kyle Cooper",
            "email": "yflores@example.org",
            "password": "k7JpINT2Qek2",
            "administrador": "true",
            "_id": "vbb2T2tN8byhWgGI"
        },
        {
            "nome": "Terry Buchanan",
            "email": "jacobanderson@example.com",
            "password": "eg4zJyPl4QnT",
            "administrador": "true",
            "_id": "zHru6fs2sCmJnPry"
        }
    ]
} 
 </msg>
<msg timestamp="20230526 21:15:22.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.103" endtime="20230526 21:15:22.251"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:15:22.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.251" endtime="20230526 21:15:22.252"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.103" endtime="20230526 21:15:22.252"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:15:22.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230526 21:15:22.253" level="FAIL">200.0 != 201.0</msg>
<status status="FAIL" starttime="20230526 21:15:22.253" endtime="20230526 21:15:22.254"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20230526 21:15:22.254" endtime="20230526 21:15:22.254"/>
</kw>
<status status="FAIL" starttime="20230526 21:15:22.252" endtime="20230526 21:15:22.254"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<status status="NOT RUN" starttime="20230526 21:15:22.254" endtime="20230526 21:15:22.254"/>
</kw>
<tag>api</tag>
<status status="FAIL" starttime="20230526 21:15:22.100" endtime="20230526 21:15:22.254">200.0 != 201.0</status>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:15:22.256" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:15:22.256" endtime="20230526 21:15:22.256"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.255" endtime="20230526 21:15:22.256"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:15:22.257" level="INFO">${name} = Jared Bradley</msg>
<status status="PASS" starttime="20230526 21:15:22.257" endtime="20230526 21:15:22.257"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:15:22.258" level="INFO">${email} = gwilson@example.net</msg>
<status status="PASS" starttime="20230526 21:15:22.257" endtime="20230526 21:15:22.258"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:15:22.258" level="INFO">${password} = 4wjQsSUu3UwW</msg>
<status status="PASS" starttime="20230526 21:15:22.258" endtime="20230526 21:15:22.258"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:15:22.259" level="INFO">${name} = Jared Bradley</msg>
<status status="PASS" starttime="20230526 21:15:22.258" endtime="20230526 21:15:22.259"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:15:22.259" level="INFO">${email} = gwilson@example.net</msg>
<status status="PASS" starttime="20230526 21:15:22.259" endtime="20230526 21:15:22.259"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:15:22.260" level="INFO">${password} = 4wjQsSUu3UwW</msg>
<status status="PASS" starttime="20230526 21:15:22.259" endtime="20230526 21:15:22.260"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.256" endtime="20230526 21:15:22.260"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:15:22.261" level="INFO">${payload} = {'nome': 'Jared Bradley', 'email': 'gwilson@example.net', 'password': '4wjQsSUu3UwW', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:15:22.260" endtime="20230526 21:15:22.261"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:15:22.261" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:15:22.261" endtime="20230526 21:15:22.261"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:15:22.331" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Jared Bradley", "email": "gwilson@example.net", "password": "4wjQsSUu3UwW", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:15:22.331" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '91763e1e-1fdc-42d1-9390-1dd002ca6e7a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '70d53973de5b5e392d42584f5efdec5d', 'Date': 'Fri, 26 May 2023 21:15:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "nGhm4TFFSgMbejFp"
} 
 </msg>
<msg timestamp="20230526 21:15:22.332" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.261" endtime="20230526 21:15:22.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 21:15:22.333" level="INFO">${user_id} = nGhm4TFFSgMbejFp</msg>
<status status="PASS" starttime="20230526 21:15:22.332" endtime="20230526 21:15:22.333"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 21:15:22.334" level="INFO">${USER_ID} = nGhm4TFFSgMbejFp</msg>
<status status="PASS" starttime="20230526 21:15:22.333" endtime="20230526 21:15:22.334"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:15:22.335" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.334" endtime="20230526 21:15:22.335"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.260" endtime="20230526 21:15:22.335"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:15:22.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.335" endtime="20230526 21:15:22.336"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:15:22.336" endtime="20230526 21:15:22.337"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.335" endtime="20230526 21:15:22.337"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:15:22.338" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:15:22.338" endtime="20230526 21:15:22.339"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.337" endtime="20230526 21:15:22.339"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:15:22.255" endtime="20230526 21:15:22.339"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:15:22.340" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:15:22.340" endtime="20230526 21:15:22.341"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.340" endtime="20230526 21:15:22.341"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:15:22.412" level="INFO">GET Request : url=https://serverest.dev/usuarios/nGhm4TFFSgMbejFp 
 path_url=/usuarios/nGhm4TFFSgMbejFp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:15:22.412" level="INFO">GET Response : url=https://serverest.dev/usuarios/nGhm4TFFSgMbejFp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b4857be5-e0d3-44b6-9a78-b2e077a8c1d1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ff9e77b763d62c72699f8dc65c89402d', 'Date': 'Fri, 26 May 2023 21:15:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Jared Bradley",
    "email": "gwilson@example.net",
    "password": "4wjQsSUu3UwW",
    "administrador": "false",
    "_id": "nGhm4TFFSgMbejFp"
} 
 </msg>
<msg timestamp="20230526 21:15:22.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.341" endtime="20230526 21:15:22.412"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:15:22.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.412" endtime="20230526 21:15:22.413"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.341" endtime="20230526 21:15:22.413"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:15:22.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.413" endtime="20230526 21:15:22.414"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:15:22.415" endtime="20230526 21:15:22.415"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.413" endtime="20230526 21:15:22.416"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:15:22.417" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 21:15:22.416" endtime="20230526 21:15:22.417"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.416" endtime="20230526 21:15:22.417"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:15:22.339" endtime="20230526 21:15:22.417"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:15:22.418" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:15:22.418" endtime="20230526 21:15:22.418"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.418" endtime="20230526 21:15:22.418"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:15:22.419" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:15:22.419" endtime="20230526 21:15:22.419"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:15:22.420" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:15:22.419" endtime="20230526 21:15:22.420"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:15:22.495" level="INFO">PUT Request : url=https://serverest.dev/usuarios/nGhm4TFFSgMbejFp 
 path_url=/usuarios/nGhm4TFFSgMbejFp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:15:22.495" level="INFO">PUT Response : url=https://serverest.dev/usuarios/nGhm4TFFSgMbejFp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'deee7605-1365-4ae4-ab18-0c01ddf43823', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '02c44a902fa52e26334ee54ff858dbbe', 'Date': 'Fri, 26 May 2023 21:15:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:15:22.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.420" endtime="20230526 21:15:22.495"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:15:22.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.496" endtime="20230526 21:15:22.496"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.419" endtime="20230526 21:15:22.497"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:15:22.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.497" endtime="20230526 21:15:22.498"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:15:22.498" endtime="20230526 21:15:22.498"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.497" endtime="20230526 21:15:22.498"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:15:22.499" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:15:22.499" endtime="20230526 21:15:22.499"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.499" endtime="20230526 21:15:22.500"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:15:22.417" endtime="20230526 21:15:22.500"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:15:22.501" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:15:22.501" endtime="20230526 21:15:22.501"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.500" endtime="20230526 21:15:22.501"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:15:22.603" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/nGhm4TFFSgMbejFp 
 path_url=/usuarios/nGhm4TFFSgMbejFp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:15:22.603" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/nGhm4TFFSgMbejFp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '89490114-1d3b-4769-b9fc-7f25aedfea5c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9943c183e2a3b3d081d405850b0587a4', 'Date': 'Fri, 26 May 2023 21:15:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:15:22.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.501" endtime="20230526 21:15:22.604"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:15:22.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.604" endtime="20230526 21:15:22.605"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.501" endtime="20230526 21:15:22.605"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:15:22.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:15:22.606" endtime="20230526 21:15:22.607"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:15:22.607" endtime="20230526 21:15:22.608"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.605" endtime="20230526 21:15:22.609"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:15:22.610" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:15:22.609" endtime="20230526 21:15:22.610"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.609" endtime="20230526 21:15:22.610"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:15:22.500" endtime="20230526 21:15:22.610"/>
</test>
<status status="FAIL" starttime="20230526 21:15:21.534" endtime="20230526 21:15:22.610"/>
</suite>
<status status="FAIL" starttime="20230526 21:15:21.532" endtime="20230526 21:15:22.611"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:15:22.623" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:15:22.622" endtime="20230526 21:15:24.838"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:15:24.838" endtime="20230526 21:15:24.951"/>
</kw>
<status status="PASS" starttime="20230526 21:15:22.622" endtime="20230526 21:15:24.951"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:15:24.957" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:15:24.952" endtime="20230526 21:15:24.958"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:24.959" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:15:24.958" endtime="20230526 21:15:25.058"/>
</kw>
<status status="PASS" starttime="20230526 21:15:24.952" endtime="20230526 21:15:25.058"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:25.060" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:15:25.059" endtime="20230526 21:15:25.131"/>
</kw>
<status status="PASS" starttime="20230526 21:15:25.059" endtime="20230526 21:15:25.131"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:15:25.132" endtime="20230526 21:15:25.372"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:15:25.391" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:15:25.372" endtime="20230526 21:15:25.391"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:15:25.407" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:15:25.391" endtime="20230526 21:15:25.407"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:15:25.419" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:15:25.407" endtime="20230526 21:15:25.419"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:15:25.433" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:15:25.420" endtime="20230526 21:15:25.433"/>
</kw>
<status status="PASS" starttime="20230526 21:15:25.131" endtime="20230526 21:15:25.433"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:15:25.433" endtime="20230526 21:15:26.490"/>
</kw>
<status status="PASS" starttime="20230526 21:15:25.433" endtime="20230526 21:15:26.490"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:15:22.621" endtime="20230526 21:15:26.490"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:15:26.495" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:15:26.493" endtime="20230526 21:15:27.693"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:15:27.694" endtime="20230526 21:15:27.799"/>
</kw>
<status status="PASS" starttime="20230526 21:15:26.493" endtime="20230526 21:15:27.799"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:15:27.806" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:15:27.801" endtime="20230526 21:15:27.807"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:27.808" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:15:27.807" endtime="20230526 21:15:27.906"/>
</kw>
<status status="PASS" starttime="20230526 21:15:27.800" endtime="20230526 21:15:27.906"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:15:27.907" level="INFO">${name} = David Ellis</msg>
<status status="PASS" starttime="20230526 21:15:27.906" endtime="20230526 21:15:27.907"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:15:27.908" level="INFO">${email} = psimpson@example.net</msg>
<status status="PASS" starttime="20230526 21:15:27.907" endtime="20230526 21:15:27.908"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:15:27.908" level="INFO">${password} = NCvKpmrf12AI</msg>
<status status="PASS" starttime="20230526 21:15:27.908" endtime="20230526 21:15:27.908"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:27.909" level="INFO">Typing text 'David Ellis' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:15:27.909" endtime="20230526 21:15:28.048"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:28.048" level="INFO">Typing text 'psimpson@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:15:28.048" endtime="20230526 21:15:28.180"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:28.181" level="INFO">Typing text 'NCvKpmrf12AI' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:15:28.180" endtime="20230526 21:15:28.287"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:28.288" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:15:28.287" endtime="20230526 21:15:28.370"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:15:28.371" level="INFO">${name} = David Ellis</msg>
<status status="PASS" starttime="20230526 21:15:28.370" endtime="20230526 21:15:28.371"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:15:28.371" level="INFO">${email} = psimpson@example.net</msg>
<status status="PASS" starttime="20230526 21:15:28.371" endtime="20230526 21:15:28.371"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:15:28.372" level="INFO">${password} = NCvKpmrf12AI</msg>
<status status="PASS" starttime="20230526 21:15:28.372" endtime="20230526 21:15:28.372"/>
</kw>
<status status="PASS" starttime="20230526 21:15:27.906" endtime="20230526 21:15:28.372"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:28.373" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:15:28.373" endtime="20230526 21:15:28.439"/>
</kw>
<status status="PASS" starttime="20230526 21:15:28.372" endtime="20230526 21:15:28.440"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:15:28.440" endtime="20230526 21:15:28.678"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:15:28.698" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:15:28.679" endtime="20230526 21:15:28.699"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:15:28.713" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 21:15:28.699" endtime="20230526 21:15:28.713"/>
</kw>
<status status="PASS" starttime="20230526 21:15:28.440" endtime="20230526 21:15:28.713"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:15:28.714" endtime="20230526 21:15:28.770"/>
</kw>
<status status="PASS" starttime="20230526 21:15:28.713" endtime="20230526 21:15:28.770"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:15:26.491" endtime="20230526 21:15:28.770"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:15:28.773" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:15:28.772" endtime="20230526 21:15:29.979"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:15:29.980" endtime="20230526 21:15:30.085"/>
</kw>
<status status="PASS" starttime="20230526 21:15:28.771" endtime="20230526 21:15:30.085"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:15:30.095" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:15:30.086" endtime="20230526 21:15:30.095"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:30.096" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:15:30.095" endtime="20230526 21:15:30.193"/>
</kw>
<status status="PASS" starttime="20230526 21:15:30.086" endtime="20230526 21:15:30.193"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:30.195" level="INFO">Typing text 'David Ellis' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:15:30.194" endtime="20230526 21:15:30.333"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:30.334" level="INFO">Typing text 'psimpson@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:15:30.333" endtime="20230526 21:15:30.465"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:30.466" level="INFO">Typing text 'NCvKpmrf12AI' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:15:30.465" endtime="20230526 21:15:30.565"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:30.566" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:15:30.565" endtime="20230526 21:15:30.649"/>
</kw>
<status status="PASS" starttime="20230526 21:15:30.194" endtime="20230526 21:15:30.649"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:15:30.651" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:15:30.650" endtime="20230526 21:15:30.713"/>
</kw>
<status status="PASS" starttime="20230526 21:15:30.650" endtime="20230526 21:15:30.713"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:15:30.714" endtime="20230526 21:15:30.954"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:15:30.973" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:15:30.954" endtime="20230526 21:15:30.973"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:15:30.988" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 21:15:30.973" endtime="20230526 21:15:30.988"/>
</kw>
<status status="PASS" starttime="20230526 21:15:30.714" endtime="20230526 21:15:30.989"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:15:30.989" endtime="20230526 21:15:31.046"/>
</kw>
<status status="PASS" starttime="20230526 21:15:30.989" endtime="20230526 21:15:31.046"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:15:28.771" endtime="20230526 21:15:31.047"/>
</test>
<status status="PASS" starttime="20230526 21:15:22.614" endtime="20230526 21:15:31.048"/>
</suite>
<status status="PASS" starttime="20230526 21:15:22.612" endtime="20230526 21:15:31.050"/>
</suite>
<status status="FAIL" starttime="20230526 21:15:21.512" endtime="20230526 21:15:31.052"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="1" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="7" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="4" fail="1" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="4" fail="1" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
