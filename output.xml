<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 21:12:11.432" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:12:11.915" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:12:11.914" endtime="20230526 21:12:11.915"/>
</kw>
<status status="PASS" starttime="20230526 21:12:11.914" endtime="20230526 21:12:11.915"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:12:12.079" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:12:12.079" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd1f4cc4d-54be-4cdb-ae2c-8ce2ed9f64b4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4c300922175bc748dbc2367c0a67eeb3;o=1', 'Date': 'Fri, 26 May 2023 21:12:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '3739'} 
 body={
    "quantidade": 17,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Jacqueline Lopez",
            "email": "bjohnson@example.org",
            "password": "KlILbusq4KYn",
            "administrador": "true",
            "_id": "5zRpRME6l2znI1Co"
        },
        {
            "nome": "Nichole White",
            "email": "garciastephen@example.com",
            "password": "mSEXXw1MQ1q2",
            "administrador": "true",
            "_id": "8DygXGzSxgFKifQv"
        },
        {
            "nome": "Mary Butler",
            "email": "zperez@example.net",
            "password": "KUSsb75E4Tai",
            "administrador": "true",
            "_id": "9m6worerGZSyU4Vd"
        },
        {
            "nome": "Carol Smith",
            "email": "yguzman@example.com",
            "password": "Z8OOhg3tOyqQ",
            "administrador": "true",
            "_id": "HXPaxOE28NFgzgJh"
        },
        {
            "nome": "Dillon Gibson",
            "email": "jeffreymitchell@example.com",
            "password": "P7jYMEnhP5om",
            "administrador": "true",
            "_id": "HzusPP4B294O7zVO"
        },
        {
            "nome": "Lisa Greene",
            "email": "john32@example.net",
            "password": "JXimtd1w7Jdd",
            "administrador": "true",
            "_id": "KJe5wBwnfCR2mWW3"
        },
        {
            "nome": "Lawrence Hanson",
            "email": "michelle11@example.org",
            "password": "7feQ4sbxy6Ie",
            "administrador": "true",
            "_id": "MgBVcaaQYuq5SEYk"
        },
        {
            "nome": "sadas",
            "email": "mill2@mil.com",
            "password": "123",
            "administrador": "true",
            "_id": "OvyYUousDsG4JYeX"
        },
        {
            "nome": "Mr. Matthew Collins",
            "email": "wanglauren@example.org",
            "password": "xIuLyrW2E8fs",
            "administrador": "true",
            "_id": "Pd9cZNjcG1eWfUMQ"
        },
        {
            "nome": "Cody Valentine",
            "email": "todd72@example.org",
            "password": "do58Eoup2qUy",
            "administrador": "true",
            "_id": "T2V5t8ZpKz0PTqGQ"
        },
        {
            "nome": "Brendan George",
            "email": "leslie86@example.com",
            "password": "1GiqcZl305aG",
            "administrador": "true",
            "_id": "TMKqdrqnRTNFOyht"
        },
        {
            "nome": "Hayley Byrd",
            "email": "kimberlymartin@example.com",
            "password": "q78F3X1rG3oF",
            "administrador": "true",
            "_id": "bLBFKECXSYeoPEjz"
        },
        {
            "nome": "Sheila Esparza",
            "email": "ycarter@example.org",
            "password": "gX9w2NckaW0K",
            "administrador": "true",
            "_id": "jSiHSVUpLmNpts8M"
        },
        {
            "nome": "Juan Reese",
            "email": "stephen03@example.com",
            "password": "STxJqTlLO5Ok",
            "administrador": "true",
            "_id": "v1MH0Jry6qPgJ0Gd"
        },
        {
            "nome": "Kyle Cooper",
            "email": "yflores@example.org",
            "password": "k7JpINT2Qek2",
            "administrador": "true",
            "_id": "vbb2T2tN8byhWgGI"
        },
        {
            "nome": "Terry Buchanan",
            "email": "jacobanderson@example.com",
            "password": "eg4zJyPl4QnT",
            "administrador": "true",
            "_id": "zHru6fs2sCmJnPry"
        }
    ]
} 
 </msg>
<msg timestamp="20230526 21:12:12.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:11.916" endtime="20230526 21:12:12.080"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:12:12.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.080" endtime="20230526 21:12:12.080"/>
</kw>
<status status="PASS" starttime="20230526 21:12:11.915" endtime="20230526 21:12:12.080"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:12:12.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.081" endtime="20230526 21:12:12.082"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:12:12.082" endtime="20230526 21:12:12.083"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.081" endtime="20230526 21:12:12.083"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:12:12.084" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:12:12.083" endtime="20230526 21:12:12.084"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.083" endtime="20230526 21:12:12.084"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:12:11.913" endtime="20230526 21:12:12.084"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:12:12.086" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:12:12.086" endtime="20230526 21:12:12.086"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.085" endtime="20230526 21:12:12.086"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:12:12.087" level="INFO">${name} = Maxwell Young</msg>
<status status="PASS" starttime="20230526 21:12:12.087" endtime="20230526 21:12:12.087"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:12:12.088" level="INFO">${email} = cjones@example.org</msg>
<status status="PASS" starttime="20230526 21:12:12.087" endtime="20230526 21:12:12.088"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:12:12.088" level="INFO">${password} = yN8PzwpE03y0</msg>
<status status="PASS" starttime="20230526 21:12:12.088" endtime="20230526 21:12:12.088"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:12:12.089" level="INFO">${name} = Maxwell Young</msg>
<status status="PASS" starttime="20230526 21:12:12.088" endtime="20230526 21:12:12.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:12:12.089" level="INFO">${email} = cjones@example.org</msg>
<status status="PASS" starttime="20230526 21:12:12.089" endtime="20230526 21:12:12.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:12:12.089" level="INFO">${password} = yN8PzwpE03y0</msg>
<status status="PASS" starttime="20230526 21:12:12.089" endtime="20230526 21:12:12.089"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.086" endtime="20230526 21:12:12.089"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:12:12.090" level="INFO">${payload} = {'nome': 'Maxwell Young', 'email': 'cjones@example.org', 'password': 'yN8PzwpE03y0', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:12:12.090" endtime="20230526 21:12:12.090"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:12:12.091" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:12:12.090" endtime="20230526 21:12:12.091"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:12:12.175" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Maxwell Young", "email": "cjones@example.org", "password": "yN8PzwpE03y0", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:12:12.175" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4634befa-2457-4375-916d-5a24ed8adcd3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bfd8b9c03a67cf26a8e7b717e7aed095', 'Date': 'Fri, 26 May 2023 21:12:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "OWjTurkuLsNhkmWm"
} 
 </msg>
<msg timestamp="20230526 21:12:12.175" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.091" endtime="20230526 21:12:12.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 21:12:12.176" level="INFO">${user_id} = OWjTurkuLsNhkmWm</msg>
<status status="PASS" starttime="20230526 21:12:12.175" endtime="20230526 21:12:12.176"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 21:12:12.177" level="INFO">${USER_ID} = OWjTurkuLsNhkmWm</msg>
<status status="PASS" starttime="20230526 21:12:12.176" endtime="20230526 21:12:12.177"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:12:12.177" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.177" endtime="20230526 21:12:12.177"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.089" endtime="20230526 21:12:12.177"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:12:12.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.178" endtime="20230526 21:12:12.179"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:12:12.179" endtime="20230526 21:12:12.179"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.177" endtime="20230526 21:12:12.179"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:12:12.180" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:12:12.180" endtime="20230526 21:12:12.180"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.179" endtime="20230526 21:12:12.181"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:12:12.085" endtime="20230526 21:12:12.181"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:12:12.182" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:12:12.182" endtime="20230526 21:12:12.183"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.182" endtime="20230526 21:12:12.183"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:12:12.259" level="INFO">GET Request : url=https://serverest.dev/usuarios/OWjTurkuLsNhkmWm 
 path_url=/usuarios/OWjTurkuLsNhkmWm 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:12:12.259" level="INFO">GET Response : url=https://serverest.dev/usuarios/OWjTurkuLsNhkmWm 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '63abf5d7-95aa-4755-ba7f-111fb9f76871', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8dfe1c8d0b093dc5b9ddcaeda0531061', 'Date': 'Fri, 26 May 2023 21:12:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '159'} 
 body={
    "nome": "Maxwell Young",
    "email": "cjones@example.org",
    "password": "yN8PzwpE03y0",
    "administrador": "false",
    "_id": "OWjTurkuLsNhkmWm"
} 
 </msg>
<msg timestamp="20230526 21:12:12.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.183" endtime="20230526 21:12:12.260"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:12:12.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.260" endtime="20230526 21:12:12.260"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.183" endtime="20230526 21:12:12.260"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:12:12.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.261" endtime="20230526 21:12:12.262"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:12:12.262" endtime="20230526 21:12:12.262"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.260" endtime="20230526 21:12:12.262"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:12:12.263" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 21:12:12.263" endtime="20230526 21:12:12.263"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.262" endtime="20230526 21:12:12.263"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:12:12.181" endtime="20230526 21:12:12.264"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:12:12.265" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:12:12.265" endtime="20230526 21:12:12.265"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.264" endtime="20230526 21:12:12.265"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:12:12.266" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:12:12.266" endtime="20230526 21:12:12.266"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:12:12.266" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:12:12.266" endtime="20230526 21:12:12.266"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:12:12.347" level="INFO">PUT Request : url=https://serverest.dev/usuarios/OWjTurkuLsNhkmWm 
 path_url=/usuarios/OWjTurkuLsNhkmWm 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:12:12.347" level="INFO">PUT Response : url=https://serverest.dev/usuarios/OWjTurkuLsNhkmWm 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '460d0e34-f7ac-441d-a1cf-7c2b60d113d4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dbf9461d42ee22fb1480d763d0957e87', 'Date': 'Fri, 26 May 2023 21:12:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:12:12.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.266" endtime="20230526 21:12:12.347"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:12:12.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.347" endtime="20230526 21:12:12.348"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.265" endtime="20230526 21:12:12.348"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:12:12.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.348" endtime="20230526 21:12:12.349"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:12:12.349" endtime="20230526 21:12:12.350"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.348" endtime="20230526 21:12:12.350"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:12:12.351" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:12:12.350" endtime="20230526 21:12:12.351"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.350" endtime="20230526 21:12:12.351"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:12:12.264" endtime="20230526 21:12:12.351"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:12:12.353" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:12:12.353" endtime="20230526 21:12:12.353"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.352" endtime="20230526 21:12:12.353"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:12:12.433" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/OWjTurkuLsNhkmWm 
 path_url=/usuarios/OWjTurkuLsNhkmWm 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:12:12.433" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/OWjTurkuLsNhkmWm 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a99059f1-b2ff-4e59-8a45-70b13fd3e244', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '75525c67095e0b1c171097165294b8c5', 'Date': 'Fri, 26 May 2023 21:12:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:12:12.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.354" endtime="20230526 21:12:12.433"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:12:12.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.433" endtime="20230526 21:12:12.434"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.353" endtime="20230526 21:12:12.434"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:12:12.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:12:12.434" endtime="20230526 21:12:12.435"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:12:12.435" endtime="20230526 21:12:12.436"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.434" endtime="20230526 21:12:12.436"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:12:12.437" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:12:12.436" endtime="20230526 21:12:12.437"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.436" endtime="20230526 21:12:12.437"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:12:12.352" endtime="20230526 21:12:12.437"/>
</test>
<status status="PASS" starttime="20230526 21:12:11.453" endtime="20230526 21:12:12.438"/>
</suite>
<status status="PASS" starttime="20230526 21:12:11.451" endtime="20230526 21:12:12.439"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:12:12.450" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:12:12.449" endtime="20230526 21:12:14.452"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:12:14.453" endtime="20230526 21:12:14.569"/>
</kw>
<status status="PASS" starttime="20230526 21:12:12.449" endtime="20230526 21:12:14.569"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:12:14.575" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:12:14.570" endtime="20230526 21:12:14.575"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:14.576" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:12:14.575" endtime="20230526 21:12:14.637"/>
</kw>
<status status="PASS" starttime="20230526 21:12:14.569" endtime="20230526 21:12:14.637"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:14.638" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:12:14.638" endtime="20230526 21:12:14.702"/>
</kw>
<status status="PASS" starttime="20230526 21:12:14.637" endtime="20230526 21:12:14.703"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:12:14.703" endtime="20230526 21:12:14.938"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:12:14.956" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:12:14.938" endtime="20230526 21:12:14.956"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:12:14.972" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:12:14.957" endtime="20230526 21:12:14.972"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:12:14.985" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:12:14.972" endtime="20230526 21:12:14.985"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:12:14.998" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:12:14.985" endtime="20230526 21:12:14.998"/>
</kw>
<status status="PASS" starttime="20230526 21:12:14.703" endtime="20230526 21:12:14.998"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:12:14.999" endtime="20230526 21:12:15.054"/>
</kw>
<status status="PASS" starttime="20230526 21:12:14.998" endtime="20230526 21:12:15.054"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:12:12.448" endtime="20230526 21:12:15.054"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:12:15.056" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:12:15.056" endtime="20230526 21:12:16.424"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:12:16.425" endtime="20230526 21:12:16.549"/>
</kw>
<status status="PASS" starttime="20230526 21:12:15.055" endtime="20230526 21:12:16.550"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:12:16.556" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:12:16.551" endtime="20230526 21:12:16.556"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:16.557" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:12:16.556" endtime="20230526 21:12:16.614"/>
</kw>
<status status="PASS" starttime="20230526 21:12:16.550" endtime="20230526 21:12:16.615"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:12:16.616" level="INFO">${name} = Michele Mosley</msg>
<status status="PASS" starttime="20230526 21:12:16.615" endtime="20230526 21:12:16.616"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:12:16.617" level="INFO">${email} = troyweeks@example.org</msg>
<status status="PASS" starttime="20230526 21:12:16.616" endtime="20230526 21:12:16.617"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:12:16.617" level="INFO">${password} = daE0Chk089HM</msg>
<status status="PASS" starttime="20230526 21:12:16.617" endtime="20230526 21:12:16.617"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:16.618" level="INFO">Typing text 'Michele Mosley' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:12:16.617" endtime="20230526 21:12:16.734"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:16.735" level="INFO">Typing text 'troyweeks@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:12:16.734" endtime="20230526 21:12:16.850"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:16.851" level="INFO">Typing text 'daE0Chk089HM' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:12:16.850" endtime="20230526 21:12:16.945"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:16.946" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:12:16.945" endtime="20230526 21:12:17.018"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:12:17.019" level="INFO">${name} = Michele Mosley</msg>
<status status="PASS" starttime="20230526 21:12:17.018" endtime="20230526 21:12:17.019"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:12:17.019" level="INFO">${email} = troyweeks@example.org</msg>
<status status="PASS" starttime="20230526 21:12:17.019" endtime="20230526 21:12:17.019"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:12:17.020" level="INFO">${password} = daE0Chk089HM</msg>
<status status="PASS" starttime="20230526 21:12:17.019" endtime="20230526 21:12:17.020"/>
</kw>
<status status="PASS" starttime="20230526 21:12:16.615" endtime="20230526 21:12:17.020"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:17.021" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:12:17.020" endtime="20230526 21:12:17.079"/>
</kw>
<status status="PASS" starttime="20230526 21:12:17.020" endtime="20230526 21:12:17.080"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:12:17.080" endtime="20230526 21:12:17.314"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:12:17.333" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:12:17.315" endtime="20230526 21:12:17.333"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:12:17.346" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 21:12:17.334" endtime="20230526 21:12:17.346"/>
</kw>
<status status="PASS" starttime="20230526 21:12:17.080" endtime="20230526 21:12:17.347"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:12:17.347" endtime="20230526 21:12:17.402"/>
</kw>
<status status="PASS" starttime="20230526 21:12:17.347" endtime="20230526 21:12:17.402"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:12:15.055" endtime="20230526 21:12:17.402"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:12:17.405" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:12:17.404" endtime="20230526 21:12:18.809"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:12:18.809" endtime="20230526 21:12:18.931"/>
</kw>
<status status="PASS" starttime="20230526 21:12:17.404" endtime="20230526 21:12:18.932"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:12:18.937" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:12:18.933" endtime="20230526 21:12:18.938"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:18.939" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:12:18.938" endtime="20230526 21:12:19.004"/>
</kw>
<status status="PASS" starttime="20230526 21:12:18.932" endtime="20230526 21:12:19.004"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:19.005" level="INFO">Typing text 'Michele Mosley' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:12:19.005" endtime="20230526 21:12:19.146"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:19.146" level="INFO">Typing text 'troyweeks@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:12:19.146" endtime="20230526 21:12:19.261"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:19.262" level="INFO">Typing text 'daE0Chk089HM' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:12:19.261" endtime="20230526 21:12:19.357"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:19.357" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:12:19.357" endtime="20230526 21:12:19.433"/>
</kw>
<status status="PASS" starttime="20230526 21:12:19.004" endtime="20230526 21:12:19.433"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:12:19.434" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:12:19.433" endtime="20230526 21:12:19.495"/>
</kw>
<status status="PASS" starttime="20230526 21:12:19.433" endtime="20230526 21:12:19.495"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:12:19.495" endtime="20230526 21:12:19.728"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:12:19.746" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:12:19.729" endtime="20230526 21:12:19.746"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:12:19.760" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 21:12:19.747" endtime="20230526 21:12:19.760"/>
</kw>
<status status="PASS" starttime="20230526 21:12:19.495" endtime="20230526 21:12:19.760"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:12:19.760" endtime="20230526 21:12:19.816"/>
</kw>
<status status="PASS" starttime="20230526 21:12:19.760" endtime="20230526 21:12:19.817"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:12:17.403" endtime="20230526 21:12:19.817"/>
</test>
<status status="PASS" starttime="20230526 21:12:12.441" endtime="20230526 21:12:19.818"/>
</suite>
<status status="PASS" starttime="20230526 21:12:12.440" endtime="20230526 21:12:19.820"/>
</suite>
<status status="PASS" starttime="20230526 21:12:11.433" endtime="20230526 21:12:19.821"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
