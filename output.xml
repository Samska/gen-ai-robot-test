<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230413 16:27:46.340" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 16:27:46.801" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 16:27:46.800" endtime="20230413 16:27:46.801"/>
</kw>
<status status="PASS" starttime="20230413 16:27:46.800" endtime="20230413 16:27:46.802"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 16:27:47.047" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230413 16:27:47.048" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e26732fc-79be-44a9-95aa-03ca11849e59', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7b5aad4dd9aafac7d76ca8563d291775;o=1', 'Date': 'Thu, 13 Apr 2023 16:27:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '4764'} 
 body={
    "quantidade": 22,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Windows da Silva",
            "email": "ipqxei@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "2JhTk8dSFIFe8lH6"
        },
        {
            "nome": "Beth Ratke",
            "email": "stacy@osinski-osinski.info",
            "password": "teste",
            "administrador": "true",
            "_id": "71wWcZo3ezwrC3Cr"
        },
        {
            "nome": "Fulano da Silva",
            "email": "juvo@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "H7CG5GTrfZj2tn96"
        },
        {
            "nome": "Delma Welch",
            "email": "jermaine@rodriguez.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IJG76Lf2CDJbbMsw"
        },
        {
            "nome": "Fulano da Silva",
            "email": "jlnp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "J3UFFE8BkXHPl98Q"
        },
        {
            "nome": "Erasmo Greenfelder",
            "email": "gary@green.biz",
            "password": "teste",
            "administrador": "true",
            "_id": "L9YvsBccf96rb0IJ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "dvrb@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "LbqHhFaMoMXgzH6e"
        },
        {
            "nome": "batata",
            "email": "hayden_steuber@cartwright.info",
            "password": "teste",
            "administrador": "true",
            "_id": "MFX1zgBTAv3RdyAw"
        },
        {
            "nome": "Twila Hessel",
            "email": "derek@frami-huel.info",
            "password": "teste",
            "administrador": "true",
            "_id": "VkpCmTunrhycBbfW"
        },
        {
            "nome": "Windows da Silva",
            "email": "fslffc@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "XTwLaV0XfRxVQhUW"
        },
        {
            "nome": "Keshia Sanford",
            "email": "antonio_gleason@abbott.biz",
            "password": "teste",
            "administrador": "true",
            "_id": "ZsGL8uPkee6KhzCc"
        },
        {
            "nome": "Windows da Silva",
            "email": "guiwtc@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "dYbAWCLodZs9INI4"
        },
        {
            "nome": "Keisha Witting",
            "email": "alexandra.jakubowski@hirthe-wisoky.org",
            "password": "teste",
            "administrador": "true",
            "_id": "gUKn5J99Pi2FaKPZ"
        },
        {
            "nome": "Windows da Silva",
            "email": "lliebv@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "iv23MKIg4gCOCuqE"
        },
        {
            "nome": "Basil Renner",
            "email": "valentin_heathcote@parisian.com",
            "password": "teste",
            "administrador": "true",
            "_id": "kiqxPiLVa1rvPRw7"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ywal@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "lFKFtZbCGJwdqrRd"
        },
        {
            "nome": "Windows da Silva",
            "email": "mdjicj@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "lMuS9y6b6CMlz4WM"
        },
        {
            "nome": "Windows da Silva",
            "email": "mwgrlo@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "oiVWYW5KdkaZHGsH"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Carlee_Shields@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "vB7VATGIp6u1ay9w"
        },
        {
            "nome": "Fulano da Silva",
            "email": "orpn@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "wQFiz8g2ElHHEhEp"
        },
        {
            "nome": "Jamey Wilkinson I",
            "email": "gary@okon-ratke.biz",
            "password": "teste",
            "administrador": "false",
            "_id": "yonFUppR1mA1rN3E"
        }
    ]
} 
 </msg>
<msg timestamp="20230413 16:27:47.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:46.802" endtime="20230413 16:27:47.048"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 16:27:47.049" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.048" endtime="20230413 16:27:47.049"/>
</kw>
<status status="PASS" starttime="20230413 16:27:46.802" endtime="20230413 16:27:47.049"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 16:27:47.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.049" endtime="20230413 16:27:47.050"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 16:27:47.050" endtime="20230413 16:27:47.051"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.049" endtime="20230413 16:27:47.052"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 16:27:47.054" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230413 16:27:47.052" endtime="20230413 16:27:47.054"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.052" endtime="20230413 16:27:47.054"/>
</kw>
<status status="PASS" starttime="20230413 16:27:46.799" endtime="20230413 16:27:47.054"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 16:27:47.057" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 16:27:47.056" endtime="20230413 16:27:47.057"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.056" endtime="20230413 16:27:47.057"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230413 16:27:47.058" level="INFO">${name} = Melinda Smith</msg>
<status status="PASS" starttime="20230413 16:27:47.058" endtime="20230413 16:27:47.058"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230413 16:27:47.059" level="INFO">${email} = wrightjohn@example.net</msg>
<status status="PASS" starttime="20230413 16:27:47.058" endtime="20230413 16:27:47.059"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230413 16:27:47.059" level="INFO">${password} = snh6B*Hw&amp;S</msg>
<status status="PASS" starttime="20230413 16:27:47.059" endtime="20230413 16:27:47.059"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230413 16:27:47.060" level="INFO">${name} = Melinda Smith</msg>
<status status="PASS" starttime="20230413 16:27:47.060" endtime="20230413 16:27:47.060"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230413 16:27:47.060" level="INFO">${email} = wrightjohn@example.net</msg>
<status status="PASS" starttime="20230413 16:27:47.060" endtime="20230413 16:27:47.060"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230413 16:27:47.061" level="INFO">${password} = snh6B*Hw&amp;S</msg>
<status status="PASS" starttime="20230413 16:27:47.060" endtime="20230413 16:27:47.061"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.057" endtime="20230413 16:27:47.061"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 16:27:47.062" level="INFO">${payload} = {'nome': 'Melinda Smith', 'email': 'wrightjohn@example.net', 'password': 'snh6B*Hw&amp;S', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230413 16:27:47.061" endtime="20230413 16:27:47.062"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 16:27:47.063" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230413 16:27:47.062" endtime="20230413 16:27:47.063"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 16:27:47.160" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Melinda Smith", "email": "wrightjohn@example.net", "password": "snh6B*Hw&amp;S", "administrador": "false"}' 
 </msg>
<msg timestamp="20230413 16:27:47.160" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e04a0f33-3bf3-4596-a49f-e6c13707cc62', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a0ea71d264406e21452538cb04036558', 'Date': 'Thu, 13 Apr 2023 16:27:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "pIR660VYlrhhpRhb"
} 
 </msg>
<msg timestamp="20230413 16:27:47.160" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.063" endtime="20230413 16:27:47.160"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230413 16:27:47.162" level="INFO">${user_id} = pIR660VYlrhhpRhb</msg>
<status status="PASS" starttime="20230413 16:27:47.161" endtime="20230413 16:27:47.162"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230413 16:27:47.163" level="INFO">${USER_ID} = pIR660VYlrhhpRhb</msg>
<status status="PASS" starttime="20230413 16:27:47.162" endtime="20230413 16:27:47.163"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 16:27:47.164" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.163" endtime="20230413 16:27:47.164"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.061" endtime="20230413 16:27:47.164"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 16:27:47.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.165" endtime="20230413 16:27:47.166"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 16:27:47.167" endtime="20230413 16:27:47.168"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.164" endtime="20230413 16:27:47.168"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 16:27:47.169" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230413 16:27:47.169" endtime="20230413 16:27:47.170"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.168" endtime="20230413 16:27:47.170"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.055" endtime="20230413 16:27:47.170"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 16:27:47.171" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 16:27:47.171" endtime="20230413 16:27:47.172"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.171" endtime="20230413 16:27:47.172"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 16:27:47.270" level="INFO">GET Request : url=https://serverest.dev/usuarios/pIR660VYlrhhpRhb 
 path_url=/usuarios/pIR660VYlrhhpRhb 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230413 16:27:47.270" level="INFO">GET Response : url=https://serverest.dev/usuarios/pIR660VYlrhhpRhb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0519e303-a641-44cc-a988-625dc65b611a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a53dbd34d00ba6fed415496ccd6b015a', 'Date': 'Thu, 13 Apr 2023 16:27:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Melinda Smith",
    "email": "wrightjohn@example.net",
    "password": "snh6B*Hw&amp;S",
    "administrador": "false",
    "_id": "pIR660VYlrhhpRhb"
} 
 </msg>
<msg timestamp="20230413 16:27:47.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.172" endtime="20230413 16:27:47.271"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 16:27:47.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.271" endtime="20230413 16:27:47.271"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.172" endtime="20230413 16:27:47.271"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 16:27:47.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.272" endtime="20230413 16:27:47.273"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 16:27:47.273" endtime="20230413 16:27:47.274"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.272" endtime="20230413 16:27:47.274"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 16:27:47.275" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230413 16:27:47.274" endtime="20230413 16:27:47.275"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.274" endtime="20230413 16:27:47.275"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.170" endtime="20230413 16:27:47.275"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 16:27:47.277" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 16:27:47.276" endtime="20230413 16:27:47.277"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.276" endtime="20230413 16:27:47.277"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 16:27:47.278" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230413 16:27:47.278" endtime="20230413 16:27:47.278"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 16:27:47.278" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230413 16:27:47.278" endtime="20230413 16:27:47.278"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 16:27:47.376" level="INFO">PUT Request : url=https://serverest.dev/usuarios/pIR660VYlrhhpRhb 
 path_url=/usuarios/pIR660VYlrhhpRhb 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230413 16:27:47.376" level="INFO">PUT Response : url=https://serverest.dev/usuarios/pIR660VYlrhhpRhb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd76197ef-0923-4b55-9407-820233b59764', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cec8d8b50745528d89068f37c8f1f7fd', 'Date': 'Thu, 13 Apr 2023 16:27:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230413 16:27:47.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.279" endtime="20230413 16:27:47.377"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 16:27:47.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.377" endtime="20230413 16:27:47.378"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.277" endtime="20230413 16:27:47.378"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 16:27:47.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.379" endtime="20230413 16:27:47.380"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 16:27:47.380" endtime="20230413 16:27:47.381"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.378" endtime="20230413 16:27:47.382"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 16:27:47.383" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230413 16:27:47.382" endtime="20230413 16:27:47.383"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.382" endtime="20230413 16:27:47.384"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.275" endtime="20230413 16:27:47.384"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 16:27:47.385" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 16:27:47.385" endtime="20230413 16:27:47.385"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.385" endtime="20230413 16:27:47.386"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 16:27:47.482" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/pIR660VYlrhhpRhb 
 path_url=/usuarios/pIR660VYlrhhpRhb 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230413 16:27:47.483" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/pIR660VYlrhhpRhb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b9c60ce5-6758-4ba9-8c08-fc5f9d4840d8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '811a66b4bbb1b3e79b24438d7c0ea8b5', 'Date': 'Thu, 13 Apr 2023 16:27:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230413 16:27:47.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.386" endtime="20230413 16:27:47.483"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 16:27:47.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.483" endtime="20230413 16:27:47.483"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.386" endtime="20230413 16:27:47.484"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 16:27:47.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 16:27:47.484" endtime="20230413 16:27:47.485"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 16:27:47.485" endtime="20230413 16:27:47.486"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.484" endtime="20230413 16:27:47.486"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 16:27:47.487" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230413 16:27:47.486" endtime="20230413 16:27:47.487"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.486" endtime="20230413 16:27:47.487"/>
</kw>
<status status="PASS" starttime="20230413 16:27:47.384" endtime="20230413 16:27:47.487"/>
</test>
<status status="PASS" starttime="20230413 16:27:46.368" endtime="20230413 16:27:47.488"/>
</suite>
<status status="PASS" starttime="20230413 16:27:46.366" endtime="20230413 16:27:47.489"/>
</suite>
<status status="PASS" starttime="20230413 16:27:46.364" endtime="20230413 16:27:47.490"/>
</suite>
<status status="PASS" starttime="20230413 16:27:46.342" endtime="20230413 16:27:47.491"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
