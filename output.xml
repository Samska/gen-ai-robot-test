<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230607 01:14:11.988" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230607 01:14:12.441" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230607 01:14:12.441" endtime="20230607 01:14:12.441"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.440" endtime="20230607 01:14:12.442"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230607 01:14:12.589" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230607 01:14:12.589" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1987e51e-1ca5-48cb-9b47-ae86ee106fc2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'da5dff704349cea611344267ecb1eed1;o=1', 'Date': 'Wed, 07 Jun 2023 01:14:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '22356'} 
 body={
    "quantidade": 99,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Mable Walsh I",
            "email": "Amy_Von19@gmail.com",
            "password": "1nFCC5j1Sm3Hdvx",
            "administrador": "true",
            "_id": "1vLQSTO3NpEhuQA8"
        },
        {
            "nome": "Brett Kub",
            "email": "Zachary.Considine45@yahoo.com",
            "password": "DS7RIObwhk0j_0e",
            "administrador": "false",
            "_id": "20sgUenUQOAC3Gsk"
        },
        {
            "nome": "Arlene McDermott-Marvin",
            "email": "Marion_Jacobson@hotmail.com",
            "password": "KkWLkum1ScBq3s8",
            "administrador": "true",
            "_id": "3mSUxhqTBklclAGA"
        },
        {
            "nome": "Grady Walter",
            "email": "Abigail23@hotmail.com",
            "password": "XxSrdcTQuiORHnT",
            "administrador": "true",
            "_id": "3xiCs83y0l2LoxKD"
        },
        {
            "nome": "Gwendolyn Hyatt",
            "email": "Julie36@hotmail.com",
            "password": "WFIOSLUg3OUWKBZ",
            "administrador": "false",
            "_id": "55AN0CN1qJvVW0mo"
        },
        {
            "nome": "Christie Reichel",
            "email": "Jaydon73@hotmail.com",
            "password": "dmAupYS2p1ORxlj",
            "administrador": "false",
            "_id": "6O15szCjH3q0Qdxd"
        },
        {
            "nome": "Dr. Pablo Simonis",
            "email": "Alda.OHara@hotmail.com",
            "password": "_H3aCPqH1YxR5or",
            "administrador": "false",
            "_id": "7k9Ff62EVqcIb6Ch"
        },
        {
            "nome": "Mr. Billy Douglas",
            "email": "Flavie.Kertzmann43@hotmail.com",
            "password": "bywQaIlhol9y5B0",
            "administrador": "false",
            "_id": "8BQwalKzfCoTJCuT"
        },
        {
            "nome": "Lee Goyette",
            "email": "Makenzie.Osinski-Renner37@gmail.com",
            "password": "yWmAUB97t9bQZ9Q",
            "administrador": "true",
            "_id": "8Lq64zu3oS1n7Fp9"
        },
        {
            "nome": "Miranda Heidenreich",
            "email": "Daryl_Schmeler69@gmail.com",
            "password": "1SFqbLbWgIy6Jqk",
            "administrador": "true",
            "_id": "9OL0FVofLNRohODG"
        },
        {
            "nome": "Carla Grady",
            "email": "Kenya.Block34@hotmail.com",
            "password": "_aCdy2QoXmVXFqI",
            "administrador": "false",
            "_id": "A4XHdoQELYBohbOs"
        },
        {
            "nome": "Dr. Juan Cronin",
            "email": "Cristal_Stroman@yahoo.com",
            "password": "9uwVOdKASlDI24r",
            "administrador": "true",
            "_id": "ABCjWN8o3ZWT63Au"
        },
        {
            "nome": "Ernest Goodwin",
            "email": "Maida.Luettgen@yahoo.com",
            "password": "LxRX7H0CimVjw0c",
            "administrador": "true",
            "_id": "AJpdoFJfcwJncAu6"
        },
        {
            "nome": "Lila Walter",
            "email": "Tony.Grant94@yahoo.com",
            "password": "NWDtUb1t3Q6Z9XR",
            "administrador": "true",
            "_id": "AK6SC6gyETmhiUiB"
        },
        {
            "nome": "Diane Von",
            "email": "Mohammad_Turner@hotmail.com",
            "password": "jQmQmYeCCbyq7Sj",
            "administrador": "false",
            "_id": "Ai9nf9lpvokUQjXJ"
        },
        {
            "nome": "Tommy Ledner",
            "email": "Jeanie72@yahoo.com",
            "password": "Xf7TGNTaUBE3o4N",
            "administrador": "false",
            "_id": "BSi8y90ogZTcLsoJ"
        },
        {
            "nome": "Kelley Prosacco",
            "email": "Vivian_Mills@gmail.com",
            "password": "iwiOqCMQfUYDprN",
            "administrador": "true",
            "_id": "BVOnH8TUInOHsCSR"
        },
        {
            "nome": "Conrad Pouros Jr.",
            "email": "Toy_Senger@gmail.com",
            "password": "oBakQ0tG1r7ByNX",
            "administrador": "false",
            "_id": "BjWo1GVptzwfE7S5"
        },
        {
            "nome": "Bobbie Little",
            "email": "Ruben_Romaguera@gmail.com",
            "password": "zd69qZ6Iqw2mUDN",
            "administrador": "false",
            "_id": "C6KeiDxNquy3mbbP"
        },
        {
            "nome": "Brett Bartoletti",
            "email": "Korey.Marvin12@yahoo.com",
            "password": "lXhJ0sEMUITxklm",
            "administrador": "false",
            "_id": "C6fYFcSXcBY9qmCg"
        },
        {
            "nome": "Corey Hamill",
            "email": "Adrien.Morar@gmail.com",
            "password": "xg8yTJLv1yhBOqZ",
            "administrador": "true",
            "_id": "DQHDtGIjig6iScyv"
        },
        {
            "nome": "Winifred Botsford",
            "email": "Roslyn46@gmail.com",
            "password": "OllRsHf1FPxS1cJ",
            "administrador": "true",
            "_id": "Dm901ooZyAZefTtv"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltraaaano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "E7QUDLmQXDm2Xtxn"
        },
        {
            "nome": "Wilbur Harris",
            "email": "Adell_Weber68@gmail.com",
            "password": "B1_x6sxSH1LJuss",
            "administrador": "true",
            "_id": "F2iSLLb0Y8xpnDGs"
        },
        {
            "nome": "Rene Williamson Jr.",
            "email": "Vella_Ebert3@gmail.com",
            "password": "2Rf4FYXUAyeI6ft",
            "administrador": "true",
            "_id": "FYnIlYmUxXfssPar"
        },
        {
            "nome": "Mr. Antonio Pagac III",
            "email": "Mortimer28@yahoo.com",
            "password": "iCTvSuAWOnHkR6h",
            "administrador": "false",
            "_id": "GQNEpBZ7dMJjTh6I"
        },
        {
            "nome": "Tracy Schinner-Huel",
            "email": "Nikki.Stark70@gmail.com",
            "password": "i9jI5i_P_dTI9lD",
            "administrador": "true",
            "_id": "HCFN3VZUykKH6VWI"
        },
        {
            "nome": "Jake Klein",
            "email": "Charley_Kuhlman@yahoo.com",
            "password": "VSkjv5bHSMpI79a",
            "administrador": "false",
            "_id": "HQZVTBqJOVrQtGtm"
        },
        {
            "nome": "Shari Ratke Jr.",
            "email": "Tyshawn.Mosciski@gmail.com",
            "password": "ZiCcFHhaYs_Ard4",
            "administrador": "false",
            "_id": "IRe54gnfpJahPdQI"
        },
        {
            "nome": "Jack Ratke",
            "email": "Kaia67@hotmail.com",
            "password": "vQZ17LNDMWWpJWt",
            "administrador": "true",
            "_id": "Ic2KQdqwMDEr0Wvw"
        },
        {
            "nome": "Mr. Mike Conroy",
            "email": "Laurel.Stiedemann32@yahoo.com",
            "password": "erzejtP0KfAJAaH",
            "administrador": "false",
            "_id": "K4Lxxk3lJfBg0mk4"
        },
        {
            "nome": "Tara Dietrich",
            "email": "Carlos.Fadel@gmail.com",
            "password": "PASmozbGJNFn0ok",
            "administrador": "false",
            "_id": "KOEdDKHXjPyz6Fth"
        },
        {
            "nome": "Nelson Hickle",
            "email": "Yesenia_Davis@yahoo.com",
            "password": "DwjtXD19SfzWSQR",
            "administrador": "true",
            "_id": "LoktgFF7HrfjwXEZ"
        },
        {
            "nome": "Marcella O'Kon DVM",
            "email": "Bridget.Marvin@hotmail.com",
            "password": "wtHduGfibEIiKjO",
            "administrador": "true",
            "_id": "LqnqHJDMirOcc9xG"
        },
        {
            "nome": "Cheryl Reichel Jr.",
            "email": "Cameron.Murphy@yahoo.com",
            "password": "OiQT4zdcUNBtpjx",
            "administrador": "true",
            "_id": "MV52wgDpAz0vG4sy"
        },
        {
            "nome": "Francisco Macejkovic",
            "email": "Orlo.Balistreri@hotmail.com",
            "password": "gYXz94BHKtPTM3H",
            "administrador": "true",
            "_id": "Mi0oaIJZD8HoIyGs"
        },
        {
            "nome": "Doug Langworth-Ullrich",
            "email": "Marley.Kozey@yahoo.com",
            "password": "bcbvOI3tArMAzW0",
            "administrador": "true",
            "_id": "NvJCnq9CaH8XNIvd"
        },
        {
            "nome": "Jimmie Leannon",
            "email": "Everardo_Raynor@yahoo.com",
            "password": "hDLxrsxsikhp3hf",
            "administrador": "true",
            "_id": "OupFWcxKLz9ocMxk"
        },
        {
            "nome": "Ginger Bosco",
            "email": "Letha_Emmerich2@yahoo.com",
            "password": "Mv5Zh_fUye1lxSM",
            "administrador": "false",
            "_id": "PEvVqohdZid8LOGB"
        },
        {
            "nome": "Damon Hirthe",
            "email": "Adele_Kemmer@yahoo.com",
            "password": "CnBmpurtNhSGf0y",
            "administrador": "true",
            "_id": "PH2C53aY5GnJRi3C"
        },
        {
            "nome": "Samantha Simonis II",
            "email": "Neil73@gmail.com",
            "password": "lLDCXR5aT9W4jvl",
            "administrador": "true",
            "_id": "PYZgxQ0TOfAABkgS"
        },
        {
            "nome": "Barbara McLaughlin I",
            "email": "Alanis_Bins@gmail.com",
            "password": "ycLKSPhqONyyoEN",
            "administrador": "true",
            "_id": "PtgmfRcsemvkodkT"
        },
        {
            "nome": "Dr. Martin Sauer",
            "email": "Jaden1@gmail.com",
            "password": "halLTq6MLFWbknV",
            "administrador": "true",
            "_id": "RRCccm00gGWTkmVv"
        },
        {
       ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230607 01:14:12.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.442" endtime="20230607 01:14:12.589"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230607 01:14:12.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.589" endtime="20230607 01:14:12.590"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.442" endtime="20230607 01:14:12.590"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230607 01:14:12.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.590" endtime="20230607 01:14:12.591"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230607 01:14:12.591" endtime="20230607 01:14:12.592"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.590" endtime="20230607 01:14:12.592"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230607 01:14:12.593" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230607 01:14:12.592" endtime="20230607 01:14:12.593"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.592" endtime="20230607 01:14:12.593"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230607 01:14:12.440" endtime="20230607 01:14:12.593"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230607 01:14:12.594" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230607 01:14:12.594" endtime="20230607 01:14:12.595"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.594" endtime="20230607 01:14:12.595"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230607 01:14:12.595" level="INFO">${name} = Jonathan Morton</msg>
<status status="PASS" starttime="20230607 01:14:12.595" endtime="20230607 01:14:12.595"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230607 01:14:12.596" level="INFO">${email} = michael38@example.org</msg>
<status status="PASS" starttime="20230607 01:14:12.596" endtime="20230607 01:14:12.596"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230607 01:14:12.596" level="INFO">${password} = Q0JOPuzeXcXa</msg>
<status status="PASS" starttime="20230607 01:14:12.596" endtime="20230607 01:14:12.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230607 01:14:12.597" level="INFO">${name} = Jonathan Morton</msg>
<status status="PASS" starttime="20230607 01:14:12.596" endtime="20230607 01:14:12.597"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230607 01:14:12.597" level="INFO">${email} = michael38@example.org</msg>
<status status="PASS" starttime="20230607 01:14:12.597" endtime="20230607 01:14:12.597"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230607 01:14:12.597" level="INFO">${password} = Q0JOPuzeXcXa</msg>
<status status="PASS" starttime="20230607 01:14:12.597" endtime="20230607 01:14:12.598"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.595" endtime="20230607 01:14:12.598"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230607 01:14:12.598" level="INFO">${payload} = {'nome': 'Jonathan Morton', 'email': 'michael38@example.org', 'password': 'Q0JOPuzeXcXa', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230607 01:14:12.598" endtime="20230607 01:14:12.598"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230607 01:14:12.599" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230607 01:14:12.599" endtime="20230607 01:14:12.599"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230607 01:14:12.678" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Jonathan Morton", "email": "michael38@example.org", "password": "Q0JOPuzeXcXa", "administrador": "false"}' 
 </msg>
<msg timestamp="20230607 01:14:12.678" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4eab27bf-2064-4f47-b7fb-4756bf3a28f8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '21dc6cd9ed970de7696f928da3c5062b', 'Date': 'Wed, 07 Jun 2023 01:14:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "0ST8RHqLMpTQ3Hyu"
} 
 </msg>
<msg timestamp="20230607 01:14:12.678" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.599" endtime="20230607 01:14:12.678"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230607 01:14:12.679" level="INFO">${user_id} = 0ST8RHqLMpTQ3Hyu</msg>
<status status="PASS" starttime="20230607 01:14:12.678" endtime="20230607 01:14:12.679"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230607 01:14:12.679" level="INFO">${USER_ID} = 0ST8RHqLMpTQ3Hyu</msg>
<status status="PASS" starttime="20230607 01:14:12.679" endtime="20230607 01:14:12.679"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230607 01:14:12.680" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.679" endtime="20230607 01:14:12.680"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.598" endtime="20230607 01:14:12.680"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230607 01:14:12.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.680" endtime="20230607 01:14:12.681"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230607 01:14:12.681" endtime="20230607 01:14:12.681"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.680" endtime="20230607 01:14:12.681"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230607 01:14:12.682" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230607 01:14:12.682" endtime="20230607 01:14:12.682"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.682" endtime="20230607 01:14:12.682"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230607 01:14:12.593" endtime="20230607 01:14:12.683"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230607 01:14:12.684" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230607 01:14:12.684" endtime="20230607 01:14:12.684"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.683" endtime="20230607 01:14:12.684"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230607 01:14:12.752" level="INFO">GET Request : url=https://serverest.dev/usuarios/0ST8RHqLMpTQ3Hyu 
 path_url=/usuarios/0ST8RHqLMpTQ3Hyu 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230607 01:14:12.752" level="INFO">GET Response : url=https://serverest.dev/usuarios/0ST8RHqLMpTQ3Hyu 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4d76b500-fc0b-4b3c-bdaf-590e5dbda972', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '75605d916e46e2dd8af170e380ff4213', 'Date': 'Wed, 07 Jun 2023 01:14:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Jonathan Morton",
    "email": "michael38@example.org",
    "password": "Q0JOPuzeXcXa",
    "administrador": "false",
    "_id": "0ST8RHqLMpTQ3Hyu"
} 
 </msg>
<msg timestamp="20230607 01:14:12.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.685" endtime="20230607 01:14:12.752"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230607 01:14:12.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.752" endtime="20230607 01:14:12.752"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.684" endtime="20230607 01:14:12.752"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230607 01:14:12.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.753" endtime="20230607 01:14:12.754"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230607 01:14:12.754" endtime="20230607 01:14:12.754"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.753" endtime="20230607 01:14:12.754"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230607 01:14:12.755" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230607 01:14:12.755" endtime="20230607 01:14:12.755"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.754" endtime="20230607 01:14:12.755"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230607 01:14:12.683" endtime="20230607 01:14:12.755"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230607 01:14:12.757" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230607 01:14:12.756" endtime="20230607 01:14:12.757"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.756" endtime="20230607 01:14:12.757"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230607 01:14:12.758" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230607 01:14:12.757" endtime="20230607 01:14:12.758"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230607 01:14:12.758" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230607 01:14:12.758" endtime="20230607 01:14:12.758"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230607 01:14:12.824" level="INFO">PUT Request : url=https://serverest.dev/usuarios/0ST8RHqLMpTQ3Hyu 
 path_url=/usuarios/0ST8RHqLMpTQ3Hyu 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230607 01:14:12.824" level="INFO">PUT Response : url=https://serverest.dev/usuarios/0ST8RHqLMpTQ3Hyu 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '459b52d9-cbcb-4430-8c7d-6ece34a72dd0', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9b41607ffb9eee6849f6f6dd841bad9c', 'Date': 'Wed, 07 Jun 2023 01:14:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230607 01:14:12.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.758" endtime="20230607 01:14:12.824"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230607 01:14:12.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.824" endtime="20230607 01:14:12.825"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.757" endtime="20230607 01:14:12.825"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230607 01:14:12.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.825" endtime="20230607 01:14:12.826"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230607 01:14:12.826" endtime="20230607 01:14:12.827"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.825" endtime="20230607 01:14:12.827"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230607 01:14:12.828" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230607 01:14:12.827" endtime="20230607 01:14:12.828"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.827" endtime="20230607 01:14:12.828"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230607 01:14:12.756" endtime="20230607 01:14:12.828"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230607 01:14:12.829" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230607 01:14:12.829" endtime="20230607 01:14:12.829"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.829" endtime="20230607 01:14:12.830"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230607 01:14:12.902" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/0ST8RHqLMpTQ3Hyu 
 path_url=/usuarios/0ST8RHqLMpTQ3Hyu 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230607 01:14:12.902" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/0ST8RHqLMpTQ3Hyu 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ddf4fa5e-30c2-4541-85b6-b5ecfb116681', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '48a0bd8bb64e77da6c3daa81480423bc', 'Date': 'Wed, 07 Jun 2023 01:14:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230607 01:14:12.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.830" endtime="20230607 01:14:12.902"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230607 01:14:12.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.902" endtime="20230607 01:14:12.903"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.830" endtime="20230607 01:14:12.903"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230607 01:14:12.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230607 01:14:12.903" endtime="20230607 01:14:12.904"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230607 01:14:12.904" endtime="20230607 01:14:12.905"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.903" endtime="20230607 01:14:12.905"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230607 01:14:12.906" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230607 01:14:12.905" endtime="20230607 01:14:12.906"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.905" endtime="20230607 01:14:12.906"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230607 01:14:12.828" endtime="20230607 01:14:12.906"/>
</test>
<status status="PASS" starttime="20230607 01:14:12.009" endtime="20230607 01:14:12.906"/>
</suite>
<status status="PASS" starttime="20230607 01:14:12.007" endtime="20230607 01:14:12.908"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230607 01:14:12.918" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230607 01:14:12.918" endtime="20230607 01:14:19.374"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230607 01:14:19.374" endtime="20230607 01:14:19.489"/>
</kw>
<status status="PASS" starttime="20230607 01:14:12.917" endtime="20230607 01:14:19.489"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230607 01:14:19.494" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230607 01:14:19.490" endtime="20230607 01:14:19.494"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:19.495" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230607 01:14:19.494" endtime="20230607 01:14:19.648"/>
</kw>
<status status="PASS" starttime="20230607 01:14:19.489" endtime="20230607 01:14:19.648"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:19.649" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230607 01:14:19.649" endtime="20230607 01:14:19.757"/>
</kw>
<status status="PASS" starttime="20230607 01:14:19.648" endtime="20230607 01:14:19.757"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230607 01:14:19.758" endtime="20230607 01:14:19.992"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230607 01:14:20.009" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230607 01:14:19.992" endtime="20230607 01:14:20.009"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230607 01:14:20.058" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230607 01:14:20.009" endtime="20230607 01:14:20.058"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230607 01:14:20.071" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230607 01:14:20.058" endtime="20230607 01:14:20.071"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230607 01:14:20.083" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230607 01:14:20.071" endtime="20230607 01:14:20.083"/>
</kw>
<status status="PASS" starttime="20230607 01:14:19.758" endtime="20230607 01:14:20.083"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230607 01:14:20.084" endtime="20230607 01:14:20.139"/>
</kw>
<status status="PASS" starttime="20230607 01:14:20.083" endtime="20230607 01:14:20.139"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230607 01:14:12.917" endtime="20230607 01:14:20.139"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230607 01:14:20.141" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230607 01:14:20.141" endtime="20230607 01:14:21.284"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230607 01:14:21.284" endtime="20230607 01:14:21.387"/>
</kw>
<status status="PASS" starttime="20230607 01:14:20.140" endtime="20230607 01:14:21.388"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230607 01:14:21.413" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230607 01:14:21.388" endtime="20230607 01:14:21.413"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:21.414" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230607 01:14:21.414" endtime="20230607 01:14:21.468"/>
</kw>
<status status="PASS" starttime="20230607 01:14:21.388" endtime="20230607 01:14:21.469"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230607 01:14:21.470" level="INFO">${name} = Adam Harrington</msg>
<status status="PASS" starttime="20230607 01:14:21.469" endtime="20230607 01:14:21.470"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230607 01:14:21.470" level="INFO">${email} = wholmes@example.net</msg>
<status status="PASS" starttime="20230607 01:14:21.470" endtime="20230607 01:14:21.470"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230607 01:14:21.471" level="INFO">${password} = 24MIy5cCEZ2M</msg>
<status status="PASS" starttime="20230607 01:14:21.470" endtime="20230607 01:14:21.471"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:21.471" level="INFO">Typing text 'Adam Harrington' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230607 01:14:21.471" endtime="20230607 01:14:21.659"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:21.660" level="INFO">Typing text 'wholmes@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230607 01:14:21.659" endtime="20230607 01:14:21.762"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:21.763" level="INFO">Typing text '24MIy5cCEZ2M' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230607 01:14:21.762" endtime="20230607 01:14:21.866"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:21.866" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230607 01:14:21.866" endtime="20230607 01:14:21.934"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230607 01:14:21.935" level="INFO">${name} = Adam Harrington</msg>
<status status="PASS" starttime="20230607 01:14:21.934" endtime="20230607 01:14:21.935"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230607 01:14:21.935" level="INFO">${email} = wholmes@example.net</msg>
<status status="PASS" starttime="20230607 01:14:21.935" endtime="20230607 01:14:21.935"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230607 01:14:21.935" level="INFO">${password} = 24MIy5cCEZ2M</msg>
<status status="PASS" starttime="20230607 01:14:21.935" endtime="20230607 01:14:21.935"/>
</kw>
<status status="PASS" starttime="20230607 01:14:21.469" endtime="20230607 01:14:21.936"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:21.937" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230607 01:14:21.936" endtime="20230607 01:14:21.994"/>
</kw>
<status status="PASS" starttime="20230607 01:14:21.936" endtime="20230607 01:14:21.994"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230607 01:14:21.994" endtime="20230607 01:14:22.224"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230607 01:14:22.241" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230607 01:14:22.224" endtime="20230607 01:14:22.241"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230607 01:14:22.253" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230607 01:14:22.241" endtime="20230607 01:14:22.253"/>
</kw>
<status status="PASS" starttime="20230607 01:14:21.994" endtime="20230607 01:14:22.253"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230607 01:14:22.254" endtime="20230607 01:14:22.309"/>
</kw>
<status status="PASS" starttime="20230607 01:14:22.253" endtime="20230607 01:14:22.309"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230607 01:14:20.140" endtime="20230607 01:14:22.309"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230607 01:14:22.311" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230607 01:14:22.311" endtime="20230607 01:14:23.509"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230607 01:14:23.510" endtime="20230607 01:14:23.632"/>
</kw>
<status status="PASS" starttime="20230607 01:14:22.310" endtime="20230607 01:14:23.632"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230607 01:14:23.637" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230607 01:14:23.633" endtime="20230607 01:14:23.637"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:23.638" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230607 01:14:23.637" endtime="20230607 01:14:23.689"/>
</kw>
<status status="PASS" starttime="20230607 01:14:23.632" endtime="20230607 01:14:23.690"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:23.691" level="INFO">Typing text 'Adam Harrington' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230607 01:14:23.690" endtime="20230607 01:14:23.808"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:23.809" level="INFO">Typing text 'wholmes@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230607 01:14:23.808" endtime="20230607 01:14:23.905"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:23.906" level="INFO">Typing text '24MIy5cCEZ2M' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230607 01:14:23.905" endtime="20230607 01:14:24.001"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:24.002" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230607 01:14:24.002" endtime="20230607 01:14:24.072"/>
</kw>
<status status="PASS" starttime="20230607 01:14:23.690" endtime="20230607 01:14:24.073"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230607 01:14:24.073" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230607 01:14:24.073" endtime="20230607 01:14:24.130"/>
</kw>
<status status="PASS" starttime="20230607 01:14:24.073" endtime="20230607 01:14:24.130"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230607 01:14:24.130" endtime="20230607 01:14:24.365"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230607 01:14:24.382" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230607 01:14:24.365" endtime="20230607 01:14:24.382"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230607 01:14:24.394" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230607 01:14:24.382" endtime="20230607 01:14:24.394"/>
</kw>
<status status="PASS" starttime="20230607 01:14:24.130" endtime="20230607 01:14:24.394"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230607 01:14:24.395" endtime="20230607 01:14:24.450"/>
</kw>
<status status="PASS" starttime="20230607 01:14:24.395" endtime="20230607 01:14:24.451"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230607 01:14:22.310" endtime="20230607 01:14:24.451"/>
</test>
<status status="PASS" starttime="20230607 01:14:12.910" endtime="20230607 01:14:24.451"/>
</suite>
<status status="PASS" starttime="20230607 01:14:12.908" endtime="20230607 01:14:24.453"/>
</suite>
<status status="PASS" starttime="20230607 01:14:11.989" endtime="20230607 01:14:24.454"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
