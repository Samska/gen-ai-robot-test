<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230505 00:57:44.641" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230505 00:57:45.297" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230505 00:57:45.297" endtime="20230505 00:57:45.297"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.296" endtime="20230505 00:57:45.298"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230505 00:57:45.523" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230505 00:57:45.523" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fed61d4b-c6b5-455f-86b1-c020dbb292eb', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '083ec3cca685f3ee3a4867af1a83419c;o=1', 'Date': 'Fri, 05 May 2023 00:57:45 GMT', 'Server': 'Google Frontend', 'Content-Length': '457'} 
 body={
    "quantidade": 2,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Maya",
            "email": "maya@serve.com.br",
            "password": "987654321",
            "administrador": "false",
            "_id": "i4Hlfe6RjpnjBwZs"
        }
    ]
} 
 </msg>
<msg timestamp="20230505 00:57:45.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.298" endtime="20230505 00:57:45.523"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230505 00:57:45.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.524" endtime="20230505 00:57:45.524"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.298" endtime="20230505 00:57:45.524"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230505 00:57:45.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.525" endtime="20230505 00:57:45.525"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230505 00:57:45.525" endtime="20230505 00:57:45.526"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.524" endtime="20230505 00:57:45.526"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230505 00:57:45.527" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230505 00:57:45.526" endtime="20230505 00:57:45.527"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.526" endtime="20230505 00:57:45.527"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230505 00:57:45.296" endtime="20230505 00:57:45.527"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230505 00:57:45.529" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230505 00:57:45.528" endtime="20230505 00:57:45.529"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.528" endtime="20230505 00:57:45.529"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230505 00:57:45.530" level="INFO">${name} = Destiny Hogan</msg>
<status status="PASS" starttime="20230505 00:57:45.529" endtime="20230505 00:57:45.530"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230505 00:57:45.530" level="INFO">${email} = danahernandez@example.com</msg>
<status status="PASS" starttime="20230505 00:57:45.530" endtime="20230505 00:57:45.530"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230505 00:57:45.531" level="INFO">${password} = Hw58QPfia&amp;</msg>
<status status="PASS" starttime="20230505 00:57:45.530" endtime="20230505 00:57:45.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230505 00:57:45.531" level="INFO">${name} = Destiny Hogan</msg>
<status status="PASS" starttime="20230505 00:57:45.531" endtime="20230505 00:57:45.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230505 00:57:45.531" level="INFO">${email} = danahernandez@example.com</msg>
<status status="PASS" starttime="20230505 00:57:45.531" endtime="20230505 00:57:45.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230505 00:57:45.532" level="INFO">${password} = Hw58QPfia&amp;</msg>
<status status="PASS" starttime="20230505 00:57:45.531" endtime="20230505 00:57:45.532"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.529" endtime="20230505 00:57:45.532"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230505 00:57:45.533" level="INFO">${payload} = {'nome': 'Destiny Hogan', 'email': 'danahernandez@example.com', 'password': 'Hw58QPfia&amp;', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230505 00:57:45.532" endtime="20230505 00:57:45.533"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230505 00:57:45.533" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230505 00:57:45.533" endtime="20230505 00:57:45.533"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230505 00:57:45.637" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Destiny Hogan", "email": "danahernandez@example.com", "password": "Hw58QPfia&amp;", "administrador": "false"}' 
 </msg>
<msg timestamp="20230505 00:57:45.638" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9964304d-1d36-4229-a073-424fcae86224', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '097e262b1175aa15751b1162d8738c3e', 'Date': 'Fri, 05 May 2023 00:57:45 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "HI794ZuNYJvwSnzh"
} 
 </msg>
<msg timestamp="20230505 00:57:45.638" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.533" endtime="20230505 00:57:45.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230505 00:57:45.639" level="INFO">${user_id} = HI794ZuNYJvwSnzh</msg>
<status status="PASS" starttime="20230505 00:57:45.638" endtime="20230505 00:57:45.639"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230505 00:57:45.639" level="INFO">${USER_ID} = HI794ZuNYJvwSnzh</msg>
<status status="PASS" starttime="20230505 00:57:45.639" endtime="20230505 00:57:45.639"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230505 00:57:45.639" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.639" endtime="20230505 00:57:45.640"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.532" endtime="20230505 00:57:45.640"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230505 00:57:45.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.640" endtime="20230505 00:57:45.641"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230505 00:57:45.641" endtime="20230505 00:57:45.641"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.640" endtime="20230505 00:57:45.641"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230505 00:57:45.642" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230505 00:57:45.642" endtime="20230505 00:57:45.642"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.642" endtime="20230505 00:57:45.642"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230505 00:57:45.528" endtime="20230505 00:57:45.643"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230505 00:57:45.644" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230505 00:57:45.644" endtime="20230505 00:57:45.644"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.643" endtime="20230505 00:57:45.644"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230505 00:57:45.743" level="INFO">GET Request : url=https://serverest.dev/usuarios/HI794ZuNYJvwSnzh 
 path_url=/usuarios/HI794ZuNYJvwSnzh 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230505 00:57:45.743" level="INFO">GET Response : url=https://serverest.dev/usuarios/HI794ZuNYJvwSnzh 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '382226e8-41d7-47ce-88c4-0783bf198140', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '37d1d4ea4a634c43c19783de5ca32678', 'Date': 'Fri, 05 May 2023 00:57:45 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Destiny Hogan",
    "email": "danahernandez@example.com",
    "password": "Hw58QPfia&amp;",
    "administrador": "false",
    "_id": "HI794ZuNYJvwSnzh"
} 
 </msg>
<msg timestamp="20230505 00:57:45.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.645" endtime="20230505 00:57:45.744"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230505 00:57:45.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.744" endtime="20230505 00:57:45.744"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.644" endtime="20230505 00:57:45.744"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230505 00:57:45.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.745" endtime="20230505 00:57:45.745"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230505 00:57:45.746" endtime="20230505 00:57:45.746"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.744" endtime="20230505 00:57:45.746"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230505 00:57:45.747" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230505 00:57:45.747" endtime="20230505 00:57:45.747"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.746" endtime="20230505 00:57:45.747"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230505 00:57:45.643" endtime="20230505 00:57:45.747"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230505 00:57:45.749" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230505 00:57:45.749" endtime="20230505 00:57:45.749"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.748" endtime="20230505 00:57:45.749"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230505 00:57:45.750" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230505 00:57:45.750" endtime="20230505 00:57:45.750"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230505 00:57:45.750" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230505 00:57:45.750" endtime="20230505 00:57:45.750"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230505 00:57:45.856" level="INFO">PUT Request : url=https://serverest.dev/usuarios/HI794ZuNYJvwSnzh 
 path_url=/usuarios/HI794ZuNYJvwSnzh 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230505 00:57:45.856" level="INFO">PUT Response : url=https://serverest.dev/usuarios/HI794ZuNYJvwSnzh 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dd62f1e9-b73a-4176-a7d2-cd60fd3b1fa1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '06b37199cd51051fcb6a0d491d3724a5', 'Date': 'Fri, 05 May 2023 00:57:45 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230505 00:57:45.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.750" endtime="20230505 00:57:45.856"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230505 00:57:45.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.856" endtime="20230505 00:57:45.856"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.749" endtime="20230505 00:57:45.857"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230505 00:57:45.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.857" endtime="20230505 00:57:45.858"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230505 00:57:45.858" endtime="20230505 00:57:45.858"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.857" endtime="20230505 00:57:45.858"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230505 00:57:45.859" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230505 00:57:45.859" endtime="20230505 00:57:45.859"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.859" endtime="20230505 00:57:45.859"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230505 00:57:45.748" endtime="20230505 00:57:45.860"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230505 00:57:45.861" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230505 00:57:45.861" endtime="20230505 00:57:45.861"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.861" endtime="20230505 00:57:45.861"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230505 00:57:45.968" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/HI794ZuNYJvwSnzh 
 path_url=/usuarios/HI794ZuNYJvwSnzh 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230505 00:57:45.968" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/HI794ZuNYJvwSnzh 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8c88e846-4aea-4853-9cfc-b5db20230430', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ec57968b3e8f46127337d9838470b4fc', 'Date': 'Fri, 05 May 2023 00:57:45 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230505 00:57:45.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.862" endtime="20230505 00:57:45.968"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230505 00:57:45.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.968" endtime="20230505 00:57:45.969"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.861" endtime="20230505 00:57:45.969"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230505 00:57:45.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230505 00:57:45.969" endtime="20230505 00:57:45.970"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230505 00:57:45.970" endtime="20230505 00:57:45.970"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.969" endtime="20230505 00:57:45.971"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230505 00:57:45.971" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230505 00:57:45.971" endtime="20230505 00:57:45.972"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.971" endtime="20230505 00:57:45.972"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230505 00:57:45.860" endtime="20230505 00:57:45.972"/>
</test>
<status status="PASS" starttime="20230505 00:57:44.664" endtime="20230505 00:57:45.973"/>
</suite>
<status status="PASS" starttime="20230505 00:57:44.662" endtime="20230505 00:57:45.974"/>
</suite>
<status status="PASS" starttime="20230505 00:57:44.660" endtime="20230505 00:57:45.975"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230505 00:57:45.985" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230505 00:57:45.985" endtime="20230505 00:57:52.434"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230505 00:57:52.434" endtime="20230505 00:57:52.555"/>
</kw>
<status status="PASS" starttime="20230505 00:57:45.984" endtime="20230505 00:57:52.555"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230505 00:57:52.556" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230505 00:57:52.556" endtime="20230505 00:57:52.650"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230505 00:57:52.656" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230505 00:57:52.650" endtime="20230505 00:57:52.656"/>
</kw>
<status status="PASS" starttime="20230505 00:57:52.555" endtime="20230505 00:57:52.656"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:52.659" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230505 00:57:52.657" endtime="20230505 00:57:52.839"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:52.839" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230505 00:57:52.839" endtime="20230505 00:57:52.996"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:52.997" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230505 00:57:52.996" endtime="20230505 00:57:53.242"/>
</kw>
<status status="PASS" starttime="20230505 00:57:52.656" endtime="20230505 00:57:53.242"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230505 00:57:53.247" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230505 00:57:53.243" endtime="20230505 00:57:53.248"/>
</kw>
<status status="PASS" starttime="20230505 00:57:53.242" endtime="20230505 00:57:53.248"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230505 00:57:53.278" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230505 00:57:53.248" endtime="20230505 00:57:53.278"/>
</kw>
<status status="PASS" starttime="20230505 00:57:53.248" endtime="20230505 00:57:53.278"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230505 00:57:53.279" endtime="20230505 00:57:53.336"/>
</kw>
<status status="PASS" starttime="20230505 00:57:53.278" endtime="20230505 00:57:53.337"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230505 00:57:45.984" endtime="20230505 00:57:53.337"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230505 00:57:53.339" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230505 00:57:53.338" endtime="20230505 00:57:54.216"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230505 00:57:54.216" endtime="20230505 00:57:54.322"/>
</kw>
<status status="PASS" starttime="20230505 00:57:53.338" endtime="20230505 00:57:54.322"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230505 00:57:54.323" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230505 00:57:54.322" endtime="20230505 00:57:54.381"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230505 00:57:54.388" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230505 00:57:54.381" endtime="20230505 00:57:54.388"/>
</kw>
<status status="PASS" starttime="20230505 00:57:54.322" endtime="20230505 00:57:54.388"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:54.389" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230505 00:57:54.389" endtime="20230505 00:57:54.475"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:54.476" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230505 00:57:54.476" endtime="20230505 00:57:54.554"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:54.555" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230505 00:57:54.554" endtime="20230505 00:57:54.613"/>
</kw>
<status status="PASS" starttime="20230505 00:57:54.388" endtime="20230505 00:57:54.613"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230505 00:57:54.635" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230505 00:57:54.613" endtime="20230505 00:57:54.635"/>
</kw>
<status status="PASS" starttime="20230505 00:57:54.613" endtime="20230505 00:57:54.635"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230505 00:57:54.635" endtime="20230505 00:57:54.692"/>
</kw>
<status status="PASS" starttime="20230505 00:57:54.635" endtime="20230505 00:57:54.692"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230505 00:57:53.337" endtime="20230505 00:57:54.692"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230505 00:57:54.694" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230505 00:57:54.693" endtime="20230505 00:57:55.565"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230505 00:57:55.565" endtime="20230505 00:57:55.670"/>
</kw>
<status status="PASS" starttime="20230505 00:57:54.693" endtime="20230505 00:57:55.670"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230505 00:57:55.671" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230505 00:57:55.670" endtime="20230505 00:57:55.733"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230505 00:57:55.742" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230505 00:57:55.733" endtime="20230505 00:57:55.742"/>
</kw>
<status status="PASS" starttime="20230505 00:57:55.670" endtime="20230505 00:57:55.742"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:55.743" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230505 00:57:55.743" endtime="20230505 00:57:55.827"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:55.827" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230505 00:57:55.827" endtime="20230505 00:57:55.905"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:55.905" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230505 00:57:55.905" endtime="20230505 00:57:55.985"/>
</kw>
<status status="PASS" starttime="20230505 00:57:55.742" endtime="20230505 00:57:55.985"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230505 00:57:55.997" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230505 00:57:55.986" endtime="20230505 00:57:55.998"/>
</kw>
<status status="PASS" starttime="20230505 00:57:55.985" endtime="20230505 00:57:55.998"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230505 00:57:56.010" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230505 00:57:55.999" endtime="20230505 00:57:56.010"/>
</kw>
<status status="PASS" starttime="20230505 00:57:55.998" endtime="20230505 00:57:56.010"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230505 00:57:56.011" endtime="20230505 00:57:56.067"/>
</kw>
<status status="PASS" starttime="20230505 00:57:56.011" endtime="20230505 00:57:56.068"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230505 00:57:54.693" endtime="20230505 00:57:56.068"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230505 00:57:56.070" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230505 00:57:56.069" endtime="20230505 00:57:56.927"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230505 00:57:56.927" endtime="20230505 00:57:57.034"/>
</kw>
<status status="PASS" starttime="20230505 00:57:56.069" endtime="20230505 00:57:57.034"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230505 00:57:57.035" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230505 00:57:57.034" endtime="20230505 00:57:57.104"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230505 00:57:57.108" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230505 00:57:57.104" endtime="20230505 00:57:57.108"/>
</kw>
<status status="PASS" starttime="20230505 00:57:57.034" endtime="20230505 00:57:57.108"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:57.110" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230505 00:57:57.109" endtime="20230505 00:57:57.206"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:57.207" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230505 00:57:57.207" endtime="20230505 00:57:57.287"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230505 00:57:57.288" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230505 00:57:57.287" endtime="20230505 00:58:02.370"/>
</kw>
<status status="PASS" starttime="20230505 00:57:57.109" endtime="20230505 00:58:02.370"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230505 00:58:02.389" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230505 00:58:02.371" endtime="20230505 00:58:02.389"/>
</kw>
<status status="PASS" starttime="20230505 00:58:02.370" endtime="20230505 00:58:02.389"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230505 00:58:02.402" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230505 00:58:02.390" endtime="20230505 00:58:02.402"/>
</kw>
<status status="PASS" starttime="20230505 00:58:02.389" endtime="20230505 00:58:02.403"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230505 00:58:02.403" endtime="20230505 00:58:02.459"/>
</kw>
<status status="PASS" starttime="20230505 00:58:02.403" endtime="20230505 00:58:02.460"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230505 00:57:56.068" endtime="20230505 00:58:02.460"/>
</test>
<status status="PASS" starttime="20230505 00:57:45.978" endtime="20230505 00:58:02.461"/>
</suite>
<status status="PASS" starttime="20230505 00:57:45.977" endtime="20230505 00:58:02.462"/>
</suite>
<status status="PASS" starttime="20230505 00:57:45.975" endtime="20230505 00:58:02.463"/>
</suite>
<status status="PASS" starttime="20230505 00:57:44.642" endtime="20230505 00:58:02.464"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
