<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.18 on linux)" generated="20231128 00:10:27.242" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231128 00:10:27.642" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231128 00:10:27.642" endtime="20231128 00:10:27.642"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.641" endtime="20231128 00:10:27.642"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20231128 00:10:27.792" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231128 00:10:27.793" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '61dc1dee03c42c8d66e301d0bf83a251;o=1', 'Date': 'Tue, 28 Nov 2023 00:10:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20231128 00:10:27.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.643" endtime="20231128 00:10:27.793"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231128 00:10:27.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.793" endtime="20231128 00:10:27.793"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.642" endtime="20231128 00:10:27.793"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231128 00:10:27.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.793" endtime="20231128 00:10:27.794"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231128 00:10:27.794" endtime="20231128 00:10:27.795"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.793" endtime="20231128 00:10:27.795"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231128 00:10:27.795" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20231128 00:10:27.795" endtime="20231128 00:10:27.795"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.795" endtime="20231128 00:10:27.796"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231128 00:10:27.641" endtime="20231128 00:10:27.796"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231128 00:10:27.797" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231128 00:10:27.797" endtime="20231128 00:10:27.797"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.796" endtime="20231128 00:10:27.797"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20231128 00:10:27.798" level="INFO">${name} = Stephen Velasquez</msg>
<status status="PASS" starttime="20231128 00:10:27.797" endtime="20231128 00:10:27.798"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20231128 00:10:27.798" level="INFO">${email} = briannahill@example.net</msg>
<status status="PASS" starttime="20231128 00:10:27.798" endtime="20231128 00:10:27.798"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231128 00:10:27.798" level="INFO">${password} = 8HyNluIVtCVN</msg>
<status status="PASS" starttime="20231128 00:10:27.798" endtime="20231128 00:10:27.798"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231128 00:10:27.799" level="INFO">${name} = Stephen Velasquez</msg>
<status status="PASS" starttime="20231128 00:10:27.799" endtime="20231128 00:10:27.799"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231128 00:10:27.799" level="INFO">${email} = briannahill@example.net</msg>
<status status="PASS" starttime="20231128 00:10:27.799" endtime="20231128 00:10:27.799"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231128 00:10:27.799" level="INFO">${password} = 8HyNluIVtCVN</msg>
<status status="PASS" starttime="20231128 00:10:27.799" endtime="20231128 00:10:27.799"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.797" endtime="20231128 00:10:27.799"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231128 00:10:27.800" level="INFO">${payload} = {'nome': 'Stephen Velasquez', 'email': 'briannahill@example.net', 'password': '8HyNluIVtCVN', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20231128 00:10:27.800" endtime="20231128 00:10:27.800"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231128 00:10:27.801" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20231128 00:10:27.800" endtime="20231128 00:10:27.801"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20231128 00:10:27.888" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '119'} 
 body=b'{"nome": "Stephen Velasquez", "email": "briannahill@example.net", "password": "8HyNluIVtCVN", "administrador": "false"}' 
 </msg>
<msg timestamp="20231128 00:10:27.888" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f7a30280c499819d7322447922efc8ec', 'Date': 'Tue, 28 Nov 2023 00:10:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ALbbGNHdJZKfuyAw"
} 
 </msg>
<msg timestamp="20231128 00:10:27.888" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.801" endtime="20231128 00:10:27.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 00:10:27.889" level="INFO">${user_id} = ALbbGNHdJZKfuyAw</msg>
<status status="PASS" starttime="20231128 00:10:27.888" endtime="20231128 00:10:27.889"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 00:10:27.889" level="INFO">${USER_ID} = ALbbGNHdJZKfuyAw</msg>
<status status="PASS" starttime="20231128 00:10:27.889" endtime="20231128 00:10:27.889"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231128 00:10:27.889" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.889" endtime="20231128 00:10:27.889"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.800" endtime="20231128 00:10:27.889"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231128 00:10:27.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.890" endtime="20231128 00:10:27.890"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231128 00:10:27.890" endtime="20231128 00:10:27.891"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.890" endtime="20231128 00:10:27.891"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231128 00:10:27.892" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20231128 00:10:27.891" endtime="20231128 00:10:27.892"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.891" endtime="20231128 00:10:27.892"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231128 00:10:27.796" endtime="20231128 00:10:27.892"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231128 00:10:27.893" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231128 00:10:27.893" endtime="20231128 00:10:27.893"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.893" endtime="20231128 00:10:27.893"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20231128 00:10:27.978" level="INFO">GET Request : url=https://serverest.dev/usuarios/ALbbGNHdJZKfuyAw 
 path_url=/usuarios/ALbbGNHdJZKfuyAw 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231128 00:10:27.978" level="INFO">GET Response : url=https://serverest.dev/usuarios/ALbbGNHdJZKfuyAw 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c2c9db23ee8ed6e5bafb08cac49b1efe', 'Date': 'Tue, 28 Nov 2023 00:10:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '168'} 
 body={
    "nome": "Stephen Velasquez",
    "email": "briannahill@example.net",
    "password": "8HyNluIVtCVN",
    "administrador": "false",
    "_id": "ALbbGNHdJZKfuyAw"
} 
 </msg>
<msg timestamp="20231128 00:10:27.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.894" endtime="20231128 00:10:27.978"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231128 00:10:27.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.978" endtime="20231128 00:10:27.979"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.893" endtime="20231128 00:10:27.979"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231128 00:10:27.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.979" endtime="20231128 00:10:27.980"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231128 00:10:27.980" endtime="20231128 00:10:27.980"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.979" endtime="20231128 00:10:27.980"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231128 00:10:27.981" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20231128 00:10:27.981" endtime="20231128 00:10:27.981"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.980" endtime="20231128 00:10:27.981"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231128 00:10:27.892" endtime="20231128 00:10:27.981"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231128 00:10:27.983" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231128 00:10:27.982" endtime="20231128 00:10:27.983"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.982" endtime="20231128 00:10:27.983"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231128 00:10:27.983" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20231128 00:10:27.983" endtime="20231128 00:10:27.983"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231128 00:10:27.984" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20231128 00:10:27.984" endtime="20231128 00:10:27.984"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20231128 00:10:28.062" level="INFO">PUT Request : url=https://serverest.dev/usuarios/ALbbGNHdJZKfuyAw 
 path_url=/usuarios/ALbbGNHdJZKfuyAw 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20231128 00:10:28.062" level="INFO">PUT Response : url=https://serverest.dev/usuarios/ALbbGNHdJZKfuyAw 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8cb6ae45c3caee809cdfd61888793150', 'Date': 'Tue, 28 Nov 2023 00:10:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20231128 00:10:28.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:27.984" endtime="20231128 00:10:28.062"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231128 00:10:28.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:28.063" endtime="20231128 00:10:28.063"/>
</kw>
<status status="PASS" starttime="20231128 00:10:27.983" endtime="20231128 00:10:28.063"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231128 00:10:28.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 00:10:28.063" endtime="20231128 00:10:28.064"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231128 00:10:28.064" endtime="20231128 00:10:28.064"/>
</kw>
<status status="PASS" starttime="20231128 00:10:28.063" endtime="20231128 00:10:28.064"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231128 00:10:28.065" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20231128 00:10:28.065" endtime="20231128 00:10:28.065"/>
</kw>
<status status="PASS" starttime="20231128 00:10:28.064" endtime="20231128 00:10:28.065"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231128 00:10:27.982" endtime="20231128 00:10:28.065"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231128 00:10:28.066" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231128 00:10:28.066" endtime="20231128 00:10:28.067"/>
</kw>
<status status="PASS" starttime="20231128 00:10:28.066" endtime="20231128 00:10:28.067"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20231128 00:10:28.157" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/ALbbGNHdJZKfuyAw 
 path_url=/usuarios/ALbbGNHdJZKfuyAw 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20231128 00:10:28.157" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/ALbbGNHdJZKfuyAw 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2d6db0171560771502828b83a7b8715c', 'Date': 'Tue, 28 Nov 2023 00:10:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20231128 00:10:28.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:28.067" endtime="20231128 00:10:28.157"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231128 00:10:28.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231128 00:10:28.157" endtime="20231128 00:10:28.157"/>
</kw>
<status status="PASS" starttime="20231128 00:10:28.067" endtime="20231128 00:10:28.157"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231128 00:10:28.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 00:10:28.158" endtime="20231128 00:10:28.158"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231128 00:10:28.158" endtime="20231128 00:10:28.159"/>
</kw>
<status status="PASS" starttime="20231128 00:10:28.157" endtime="20231128 00:10:28.159"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231128 00:10:28.160" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20231128 00:10:28.159" endtime="20231128 00:10:28.160"/>
</kw>
<status status="PASS" starttime="20231128 00:10:28.159" endtime="20231128 00:10:28.160"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231128 00:10:28.066" endtime="20231128 00:10:28.160"/>
</test>
<status status="PASS" starttime="20231128 00:10:27.260" endtime="20231128 00:10:28.160"/>
</suite>
<status status="PASS" starttime="20231128 00:10:27.259" endtime="20231128 00:10:28.161"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231128 00:10:28.171" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20231128 00:10:28.170" endtime="20231128 00:10:30.738"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231128 00:10:30.739" endtime="20231128 00:10:30.843"/>
</kw>
<status status="PASS" starttime="20231128 00:10:28.170" endtime="20231128 00:10:30.843"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20231128 00:10:30.849" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20231128 00:10:30.844" endtime="20231128 00:10:30.849"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:30.850" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20231128 00:10:30.849" endtime="20231128 00:10:30.895"/>
</kw>
<status status="PASS" starttime="20231128 00:10:30.843" endtime="20231128 00:10:30.895"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:30.896" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20231128 00:10:30.895" endtime="20231128 00:10:30.950"/>
</kw>
<status status="PASS" starttime="20231128 00:10:30.895" endtime="20231128 00:10:30.950"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231128 00:10:30.951" endtime="20231128 00:10:31.176"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20231128 00:10:31.192" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20231128 00:10:31.176" endtime="20231128 00:10:31.192"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231128 00:10:31.204" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20231128 00:10:31.193" endtime="20231128 00:10:31.205"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231128 00:10:31.214" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20231128 00:10:31.205" endtime="20231128 00:10:31.214"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231128 00:10:31.223" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20231128 00:10:31.214" endtime="20231128 00:10:31.224"/>
</kw>
<status status="PASS" starttime="20231128 00:10:30.950" endtime="20231128 00:10:31.224"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231128 00:10:31.224" endtime="20231128 00:10:31.287"/>
</kw>
<status status="PASS" starttime="20231128 00:10:31.224" endtime="20231128 00:10:31.287"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20231128 00:10:28.170" endtime="20231128 00:10:31.287"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231128 00:10:31.290" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20231128 00:10:31.289" endtime="20231128 00:10:32.756"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231128 00:10:32.756" endtime="20231128 00:10:32.865"/>
</kw>
<status status="PASS" starttime="20231128 00:10:31.288" endtime="20231128 00:10:32.866"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20231128 00:10:32.871" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20231128 00:10:32.866" endtime="20231128 00:10:32.871"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:32.872" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20231128 00:10:32.871" endtime="20231128 00:10:32.913"/>
</kw>
<status status="PASS" starttime="20231128 00:10:32.866" endtime="20231128 00:10:32.914"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20231128 00:10:32.914" level="INFO">${name} = Bryan Kim</msg>
<status status="PASS" starttime="20231128 00:10:32.914" endtime="20231128 00:10:32.915"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20231128 00:10:32.915" level="INFO">${email} = sotodonald@example.com</msg>
<status status="PASS" starttime="20231128 00:10:32.915" endtime="20231128 00:10:32.915"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231128 00:10:32.915" level="INFO">${password} = HhufVfPsDc2t</msg>
<status status="PASS" starttime="20231128 00:10:32.915" endtime="20231128 00:10:32.915"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:32.916" level="INFO">Typing text 'Bryan Kim' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20231128 00:10:32.916" endtime="20231128 00:10:33.006"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:33.007" level="INFO">Typing text 'sotodonald@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20231128 00:10:33.006" endtime="20231128 00:10:33.150"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:33.150" level="INFO">Typing text 'HhufVfPsDc2t' into text field 'id:password'.</msg>
<status status="PASS" starttime="20231128 00:10:33.150" endtime="20231128 00:10:33.218"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:33.219" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20231128 00:10:33.218" endtime="20231128 00:10:33.279"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231128 00:10:33.279" level="INFO">${name} = Bryan Kim</msg>
<status status="PASS" starttime="20231128 00:10:33.279" endtime="20231128 00:10:33.279"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231128 00:10:33.280" level="INFO">${email} = sotodonald@example.com</msg>
<status status="PASS" starttime="20231128 00:10:33.280" endtime="20231128 00:10:33.280"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231128 00:10:33.280" level="INFO">${password} = HhufVfPsDc2t</msg>
<status status="PASS" starttime="20231128 00:10:33.280" endtime="20231128 00:10:33.280"/>
</kw>
<status status="PASS" starttime="20231128 00:10:32.914" endtime="20231128 00:10:33.280"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:33.281" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20231128 00:10:33.280" endtime="20231128 00:10:33.328"/>
</kw>
<status status="PASS" starttime="20231128 00:10:33.280" endtime="20231128 00:10:33.328"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231128 00:10:33.328" endtime="20231128 00:10:33.555"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20231128 00:10:33.569" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20231128 00:10:33.555" endtime="20231128 00:10:33.569"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231128 00:10:33.580" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20231128 00:10:33.570" endtime="20231128 00:10:33.580"/>
</kw>
<status status="PASS" starttime="20231128 00:10:33.328" endtime="20231128 00:10:33.580"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231128 00:10:33.581" endtime="20231128 00:10:33.645"/>
</kw>
<status status="PASS" starttime="20231128 00:10:33.581" endtime="20231128 00:10:33.645"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20231128 00:10:31.287" endtime="20231128 00:10:33.645"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231128 00:10:33.647" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20231128 00:10:33.647" endtime="20231128 00:10:35.090"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231128 00:10:35.090" endtime="20231128 00:10:35.199"/>
</kw>
<status status="PASS" starttime="20231128 00:10:33.646" endtime="20231128 00:10:35.199"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20231128 00:10:35.206" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20231128 00:10:35.200" endtime="20231128 00:10:35.206"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:35.207" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20231128 00:10:35.206" endtime="20231128 00:10:35.248"/>
</kw>
<status status="PASS" starttime="20231128 00:10:35.199" endtime="20231128 00:10:35.248"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:35.249" level="INFO">Typing text 'Bryan Kim' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20231128 00:10:35.249" endtime="20231128 00:10:35.335"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:35.335" level="INFO">Typing text 'sotodonald@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20231128 00:10:35.335" endtime="20231128 00:10:35.477"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:35.478" level="INFO">Typing text 'HhufVfPsDc2t' into text field 'id:password'.</msg>
<status status="PASS" starttime="20231128 00:10:35.477" endtime="20231128 00:10:35.547"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:35.547" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20231128 00:10:35.547" endtime="20231128 00:10:35.605"/>
</kw>
<status status="PASS" starttime="20231128 00:10:35.248" endtime="20231128 00:10:35.605"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20231128 00:10:35.606" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20231128 00:10:35.605" endtime="20231128 00:10:35.655"/>
</kw>
<status status="PASS" starttime="20231128 00:10:35.605" endtime="20231128 00:10:35.655"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231128 00:10:35.655" endtime="20231128 00:10:35.883"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20231128 00:10:35.898" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20231128 00:10:35.883" endtime="20231128 00:10:35.898"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231128 00:10:35.909" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20231128 00:10:35.898" endtime="20231128 00:10:35.909"/>
</kw>
<status status="PASS" starttime="20231128 00:10:35.655" endtime="20231128 00:10:35.909"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231128 00:10:35.909" endtime="20231128 00:10:35.972"/>
</kw>
<status status="PASS" starttime="20231128 00:10:35.909" endtime="20231128 00:10:35.972"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20231128 00:10:33.646" endtime="20231128 00:10:35.972"/>
</test>
<status status="PASS" starttime="20231128 00:10:28.164" endtime="20231128 00:10:35.973"/>
</suite>
<status status="PASS" starttime="20231128 00:10:28.162" endtime="20231128 00:10:35.975"/>
</suite>
<status status="PASS" starttime="20231128 00:10:27.242" endtime="20231128 00:10:35.976"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
