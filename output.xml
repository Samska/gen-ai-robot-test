<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.18 on linux)" generated="20231017 00:10:16.196" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231017 00:10:16.837" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231017 00:10:16.836" endtime="20231017 00:10:16.837"/>
</kw>
<status status="PASS" starttime="20231017 00:10:16.836" endtime="20231017 00:10:16.837"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20231017 00:10:16.972" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231017 00:10:16.972" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '11c464a1f4b4208c36494b5ee80013a3;o=1', 'Date': 'Tue, 17 Oct 2023 00:10:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '22824'} 
 body={
    "quantidade": 105,
    "usuarios": [
        {
            "nome": "Cinthia Leannon IV",
            "email": "daren_conn@rath-johns.biz",
            "password": "FJjSFMBUwTmGYTip",
            "administrador": "false",
            "_id": "0FHOaPaMkezbuEqz"
        },
        {
            "nome": "ViniTeste",
            "email": "Vini@emaillouco.com.br",
            "password": "1",
            "administrador": "true",
            "_id": "0LrUdkw78uSDLnqR"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fpua@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "0sk5Tqb0S938pc8J"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Frederick Murazik",
            "email": "kathe_prosacco@gutmann-purdy.info",
            "password": "bzOWybmMRx",
            "administrador": "false",
            "_id": "2I2xGAvYJhNcJFkr"
        },
        {
            "nome": "Shannon Ernser",
            "email": "jetta@nicolas.name",
            "password": "RUKtyQYlzxLwR",
            "administrador": "false",
            "_id": "2YOVd7SeEjslgKUo"
        },
        {
            "nome": "Renato Rodrigues",
            "email": "imccoy@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "2yRuQBB7ACPafIH3"
        },
        {
            "nome": "Starla Wintheiser JD",
            "email": "renea.mills@ruecker.io",
            "password": "qmhfPigkBRwUr",
            "administrador": "false",
            "_id": "3vTiZYjqAH4b6W1J"
        },
        {
            "nome": "Vini Moura",
            "email": "Evert.Frami@hotmail.com",
            "password": "senha dificil atualizada",
            "administrador": "true",
            "_id": "3weYHgoocjzbHgr3"
        },
        {
            "nome": "Fulano Encontrado das Oliveiras",
            "email": "carlos.pereira@test.org",
            "password": "Fulano-5522",
            "administrador": "true",
            "_id": "3wpRNzNvqVdyxjGw"
        },
        {
            "nome": "teste",
            "email": "teste09@gmail.com",
            "password": "123321",
            "administrador": "false",
            "_id": "4YQnN0dPOL3uAQeo"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "AsJQcNIyCjU@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "5LhLfQavGSNbxnEU"
        },
        {
            "nome": "Felton Skiles",
            "email": "bart.emard@brakus.org",
            "password": "hDOMprfacUhFDg",
            "administrador": "false",
            "_id": "5N5QVBdCRZjeMEpY"
        },
        {
            "nome": "Renato Rodrigues",
            "email": "salazarevan@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "5r5Jl5RiJePsQHul"
        },
        {
            "nome": "Vaninho",
            "email": "vaninho@email.com",
            "password": "teste",
            "administrador": "true",
            "_id": "61Q3RRFRniXXrs8F"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "DNJmJzhXGck@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "65l78bZjbEEOVTDm"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "TIGNjnIHWHY@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "6HsnjkD8kGZlPV1z"
        },
        {
            "nome": "Charlott Homenick",
            "email": "daryl.kunde@barrows-lubowitz.name",
            "password": "biyhOmGXJOYG",
            "administrador": "false",
            "_id": "6JADcdGZYfp6ykXC"
        },
        {
            "nome": "Renato Rodrigues",
            "email": "phillip38@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "6qKDw4uhe07sGll7"
        },
        {
            "nome": "Dorothy Schumm",
            "email": "DorothySchumm.Mraz@hotmail.com",
            "password": "b2TQ1J4AQcFnY1L",
            "administrador": "true",
            "_id": "7EZwNWi9PjaNmwyr"
        },
        {
            "nome": "Arlie Lesch",
            "email": "brady.mohr@stracke.com",
            "password": "IjCpsUSCMgrVG",
            "administrador": "true",
            "_id": "8RyB9CmqdiHA1YmN"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "FciWBeCurSz@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "8ZIagYVnjAJk3bsx"
        },
        {
            "nome": "Betty Blanda I",
            "email": "BettyBlandaI_Runolfsdottir@hotmail.com",
            "password": "tNh7Rti1oS3ePHw",
            "administrador": "true",
            "_id": "8pwM8aLQWVXZ8G6t"
        },
        {
            "nome": "Vini Moura",
            "email": "Eli_Crona@gmail.com",
            "password": "senha dificil",
            "administrador": "true",
            "_id": "8wRgkOm1Dhruyc85"
        },
        {
            "nome": "Fulano Perdido da Silva",
            "email": "carlos.travis@example.com",
            "password": "fSj2!|CoL[",
            "administrador": "true",
            "_id": "As6rr8IjCnDtxajB"
        },
        {
            "nome": "Renato Rodrigues",
            "email": "mark01@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "BgECSr0oAm0yfoji"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "utDoGZQlKpw@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "CQJsy67Kp9zbWUHH"
        },
        {
            "nome": "ua123",
            "email": "ua@gmail.com",
            "password": "123",
            "administrador": "false",
            "_id": "CfFJtWGGTPLbXvVd"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "jAkLemEiFgo@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "DcFGXbw7GKpXIED9"
        },
        {
            "nome": "Renato Rodrigues",
            "email": "dbrown@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "E4z0gu6zy7zzfTUs"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "aZGiJTiaukL@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "F6Jz8K9jmXOSwyCa"
        },
        {
            "nome": "Fulano da Silva",
            "email": "vntv@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "FH4q7zmAtPjJHDiD"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "bUCVcNoponR@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "Fks8AKH63WJjCGab"
        },
        {
            "nome": "Fulano da Silva 2",
            "email": "PKUWYbNUVBV@emailtest.com",
            "password": "teste2222",
            "administrador": "true",
            "_id": "G6VJabpF56OxBaYt"
        },
        {
            "nome": "Katie Barton",
            "email": "KatieBarton73@gmail.com",
            "password": "RxaI7iUSTR05OYz",
            "administrador": "true",
            "_id": "HelFInapS2WR6IyZ"
        },
        {
            "nome": "Leroy Fritsch",
            "email": "LeroyFritsch_Spinka@hotmail.com",
            "password": "Vv0RCanpIUYVtpM",
            "administrador": "true",
            "_id": "Hx6rUncXGC2Fv4tr"
        },
        {
            "nome": "Neely Goyette",
            "email": "lowell.gutmann@ortiz-kub.co",
            "password": "BNlLOrIKCYnF",
            "administrador": "false",
            "_id": "ITwffUXXK3g9oVTW"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ijii@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "JQZEZQFvvubob5d2"
        },
        {
            "nome": "Reyes Ruecker",
            "email": "gracie_koss@beahan.com",
            "password": "hriPfwUIWcT",
            "administrador": "true",
            "_id": "JkgAa61mIOZQfyDz"
        },
        {
            "nome": "teste",
            "email": "teste@teste.com",
            "password": "7",
            "administrador": "true",
            "_id": "K4EzI5eOiPZoAnJF"
        },
        {
            "nome": "Vini Moura",
            "email": "Cassie.Reynolds@gmail.com",
            "password": "senha dificil",
            "administrador": "true",
            "_id": "KAybShq6YxDyQBwO"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "dXurabrZvfu@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "L8EkbILy6XQe51aF"
        },
        {
            "nome": "Rafa Bitencourt",
            "email": "gurm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "LEePoXzs2YeACkYu"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrno@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "LzTiWXr4Voh5gKol"
        },
        {
            "nome": "Odis White",
            "email": "nicholas.cole@bode-dubuque.biz",
            "password": "oVDhliCvATMkKJyx",
            "administrador": "true",
            "_id": "MTW9PtIo7DGHL9ug"
        },
        {
            "nome": "Fulano da Silva Jr",
            "email": "mRYRCDQrDAm@... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20231017 00:10:16.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:16.838" endtime="20231017 00:10:16.972"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231017 00:10:16.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:16.972" endtime="20231017 00:10:16.973"/>
</kw>
<status status="PASS" starttime="20231017 00:10:16.837" endtime="20231017 00:10:16.973"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231017 00:10:16.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231017 00:10:16.973" endtime="20231017 00:10:16.974"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231017 00:10:16.974" endtime="20231017 00:10:16.975"/>
</kw>
<status status="PASS" starttime="20231017 00:10:16.973" endtime="20231017 00:10:16.975"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231017 00:10:16.976" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20231017 00:10:16.976" endtime="20231017 00:10:16.977"/>
</kw>
<status status="PASS" starttime="20231017 00:10:16.975" endtime="20231017 00:10:16.977"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231017 00:10:16.835" endtime="20231017 00:10:16.977"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231017 00:10:16.979" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231017 00:10:16.978" endtime="20231017 00:10:16.979"/>
</kw>
<status status="PASS" starttime="20231017 00:10:16.978" endtime="20231017 00:10:16.979"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20231017 00:10:16.980" level="INFO">${name} = Dennis Fitzgerald</msg>
<status status="PASS" starttime="20231017 00:10:16.980" endtime="20231017 00:10:16.980"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20231017 00:10:16.981" level="INFO">${email} = trandonna@example.net</msg>
<status status="PASS" starttime="20231017 00:10:16.980" endtime="20231017 00:10:16.981"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231017 00:10:16.981" level="INFO">${password} = lssQdfOWM0gM</msg>
<status status="PASS" starttime="20231017 00:10:16.981" endtime="20231017 00:10:16.981"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231017 00:10:16.982" level="INFO">${name} = Dennis Fitzgerald</msg>
<status status="PASS" starttime="20231017 00:10:16.981" endtime="20231017 00:10:16.982"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231017 00:10:16.982" level="INFO">${email} = trandonna@example.net</msg>
<status status="PASS" starttime="20231017 00:10:16.982" endtime="20231017 00:10:16.982"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231017 00:10:16.983" level="INFO">${password} = lssQdfOWM0gM</msg>
<status status="PASS" starttime="20231017 00:10:16.982" endtime="20231017 00:10:16.983"/>
</kw>
<status status="PASS" starttime="20231017 00:10:16.979" endtime="20231017 00:10:16.983"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231017 00:10:16.984" level="INFO">${payload} = {'nome': 'Dennis Fitzgerald', 'email': 'trandonna@example.net', 'password': 'lssQdfOWM0gM', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20231017 00:10:16.983" endtime="20231017 00:10:16.984"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231017 00:10:16.984" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20231017 00:10:16.984" endtime="20231017 00:10:16.984"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20231017 00:10:17.057" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"nome": "Dennis Fitzgerald", "email": "trandonna@example.net", "password": "lssQdfOWM0gM", "administrador": "false"}' 
 </msg>
<msg timestamp="20231017 00:10:17.058" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bebdf033d15f6f466a8a6a0d77e9fdfd', 'Date': 'Tue, 17 Oct 2023 00:10:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "WST31SE8RcQ7bNs0"
} 
 </msg>
<msg timestamp="20231017 00:10:17.058" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:16.984" endtime="20231017 00:10:17.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231017 00:10:17.059" level="INFO">${user_id} = WST31SE8RcQ7bNs0</msg>
<status status="PASS" starttime="20231017 00:10:17.058" endtime="20231017 00:10:17.059"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231017 00:10:17.059" level="INFO">${USER_ID} = WST31SE8RcQ7bNs0</msg>
<status status="PASS" starttime="20231017 00:10:17.059" endtime="20231017 00:10:17.060"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231017 00:10:17.060" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.060" endtime="20231017 00:10:17.060"/>
</kw>
<status status="PASS" starttime="20231017 00:10:16.983" endtime="20231017 00:10:17.060"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231017 00:10:17.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.060" endtime="20231017 00:10:17.061"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231017 00:10:17.061" endtime="20231017 00:10:17.062"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.060" endtime="20231017 00:10:17.062"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231017 00:10:17.063" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20231017 00:10:17.062" endtime="20231017 00:10:17.063"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.062" endtime="20231017 00:10:17.063"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231017 00:10:16.978" endtime="20231017 00:10:17.063"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231017 00:10:17.065" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231017 00:10:17.065" endtime="20231017 00:10:17.066"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.065" endtime="20231017 00:10:17.066"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20231017 00:10:17.136" level="INFO">GET Request : url=https://serverest.dev/usuarios/WST31SE8RcQ7bNs0 
 path_url=/usuarios/WST31SE8RcQ7bNs0 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231017 00:10:17.136" level="INFO">GET Response : url=https://serverest.dev/usuarios/WST31SE8RcQ7bNs0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '628642abe6a13bff4803944b664c374c', 'Date': 'Tue, 17 Oct 2023 00:10:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '166'} 
 body={
    "nome": "Dennis Fitzgerald",
    "email": "trandonna@example.net",
    "password": "lssQdfOWM0gM",
    "administrador": "false",
    "_id": "WST31SE8RcQ7bNs0"
} 
 </msg>
<msg timestamp="20231017 00:10:17.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.066" endtime="20231017 00:10:17.136"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231017 00:10:17.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.136" endtime="20231017 00:10:17.137"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.066" endtime="20231017 00:10:17.137"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231017 00:10:17.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.137" endtime="20231017 00:10:17.138"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231017 00:10:17.139" endtime="20231017 00:10:17.139"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.137" endtime="20231017 00:10:17.139"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231017 00:10:17.140" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20231017 00:10:17.140" endtime="20231017 00:10:17.140"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.139" endtime="20231017 00:10:17.140"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231017 00:10:17.064" endtime="20231017 00:10:17.140"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231017 00:10:17.143" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231017 00:10:17.142" endtime="20231017 00:10:17.143"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.142" endtime="20231017 00:10:17.143"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231017 00:10:17.144" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20231017 00:10:17.143" endtime="20231017 00:10:17.144"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231017 00:10:17.144" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20231017 00:10:17.144" endtime="20231017 00:10:17.144"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20231017 00:10:17.214" level="INFO">PUT Request : url=https://serverest.dev/usuarios/WST31SE8RcQ7bNs0 
 path_url=/usuarios/WST31SE8RcQ7bNs0 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20231017 00:10:17.214" level="INFO">PUT Response : url=https://serverest.dev/usuarios/WST31SE8RcQ7bNs0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '86d857ace0435ea289447edf2b33120e', 'Date': 'Tue, 17 Oct 2023 00:10:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20231017 00:10:17.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.144" endtime="20231017 00:10:17.214"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231017 00:10:17.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.214" endtime="20231017 00:10:17.215"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.143" endtime="20231017 00:10:17.215"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231017 00:10:17.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.216" endtime="20231017 00:10:17.216"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231017 00:10:17.217" endtime="20231017 00:10:17.217"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.215" endtime="20231017 00:10:17.217"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231017 00:10:17.218" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20231017 00:10:17.218" endtime="20231017 00:10:17.218"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.217" endtime="20231017 00:10:17.218"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231017 00:10:17.141" endtime="20231017 00:10:17.219"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231017 00:10:17.221" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231017 00:10:17.221" endtime="20231017 00:10:17.221"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.220" endtime="20231017 00:10:17.221"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20231017 00:10:17.292" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/WST31SE8RcQ7bNs0 
 path_url=/usuarios/WST31SE8RcQ7bNs0 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20231017 00:10:17.292" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/WST31SE8RcQ7bNs0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a6ab884f5fbfa214378e710c44e5a18e', 'Date': 'Tue, 17 Oct 2023 00:10:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20231017 00:10:17.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.222" endtime="20231017 00:10:17.292"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231017 00:10:17.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.293" endtime="20231017 00:10:17.293"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.222" endtime="20231017 00:10:17.293"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231017 00:10:17.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231017 00:10:17.294" endtime="20231017 00:10:17.295"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231017 00:10:17.295" endtime="20231017 00:10:17.296"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.293" endtime="20231017 00:10:17.296"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231017 00:10:17.298" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20231017 00:10:17.297" endtime="20231017 00:10:17.298"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.296" endtime="20231017 00:10:17.298"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231017 00:10:17.220" endtime="20231017 00:10:17.298"/>
</test>
<status status="PASS" starttime="20231017 00:10:16.220" endtime="20231017 00:10:17.299"/>
</suite>
<status status="PASS" starttime="20231017 00:10:16.218" endtime="20231017 00:10:17.300"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231017 00:10:17.316" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20231017 00:10:17.315" endtime="20231017 00:10:19.734"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231017 00:10:19.735" endtime="20231017 00:10:19.890"/>
</kw>
<status status="PASS" starttime="20231017 00:10:17.315" endtime="20231017 00:10:19.890"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20231017 00:10:19.898" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20231017 00:10:19.891" endtime="20231017 00:10:19.898"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:19.899" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20231017 00:10:19.898" endtime="20231017 00:10:20.001"/>
</kw>
<status status="PASS" starttime="20231017 00:10:19.890" endtime="20231017 00:10:20.001"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:20.002" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20231017 00:10:20.002" endtime="20231017 00:10:20.101"/>
</kw>
<status status="PASS" starttime="20231017 00:10:20.001" endtime="20231017 00:10:20.101"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231017 00:10:20.102" endtime="20231017 00:10:20.339"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20231017 00:10:20.362" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20231017 00:10:20.340" endtime="20231017 00:10:20.362"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231017 00:10:20.385" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20231017 00:10:20.362" endtime="20231017 00:10:20.385"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231017 00:10:20.400" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20231017 00:10:20.385" endtime="20231017 00:10:20.400"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231017 00:10:20.415" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20231017 00:10:20.401" endtime="20231017 00:10:20.415"/>
</kw>
<status status="PASS" starttime="20231017 00:10:20.101" endtime="20231017 00:10:20.415"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231017 00:10:20.416" endtime="20231017 00:10:20.472"/>
</kw>
<status status="PASS" starttime="20231017 00:10:20.416" endtime="20231017 00:10:20.472"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20231017 00:10:17.315" endtime="20231017 00:10:20.473"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231017 00:10:20.475" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20231017 00:10:20.475" endtime="20231017 00:10:21.794"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231017 00:10:21.794" endtime="20231017 00:10:21.922"/>
</kw>
<status status="PASS" starttime="20231017 00:10:20.474" endtime="20231017 00:10:21.922"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20231017 00:10:21.928" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20231017 00:10:21.923" endtime="20231017 00:10:21.929"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:21.930" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20231017 00:10:21.929" endtime="20231017 00:10:21.995"/>
</kw>
<status status="PASS" starttime="20231017 00:10:21.923" endtime="20231017 00:10:21.995"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20231017 00:10:21.997" level="INFO">${name} = Melissa Mathis</msg>
<status status="PASS" starttime="20231017 00:10:21.996" endtime="20231017 00:10:21.997"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20231017 00:10:21.997" level="INFO">${email} = tdaniels@example.org</msg>
<status status="PASS" starttime="20231017 00:10:21.997" endtime="20231017 00:10:21.997"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231017 00:10:21.998" level="INFO">${password} = aKHbWT6K8Z9Y</msg>
<status status="PASS" starttime="20231017 00:10:21.997" endtime="20231017 00:10:21.998"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:21.999" level="INFO">Typing text 'Melissa Mathis' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20231017 00:10:21.999" endtime="20231017 00:10:22.212"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:22.213" level="INFO">Typing text 'tdaniels@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20231017 00:10:22.212" endtime="20231017 00:10:22.593"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:22.595" level="INFO">Typing text 'aKHbWT6K8Z9Y' into text field 'id:password'.</msg>
<status status="PASS" starttime="20231017 00:10:22.593" endtime="20231017 00:10:22.812"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:22.812" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20231017 00:10:22.812" endtime="20231017 00:10:22.895"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231017 00:10:22.896" level="INFO">${name} = Melissa Mathis</msg>
<status status="PASS" starttime="20231017 00:10:22.896" endtime="20231017 00:10:22.896"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231017 00:10:22.897" level="INFO">${email} = tdaniels@example.org</msg>
<status status="PASS" starttime="20231017 00:10:22.896" endtime="20231017 00:10:22.897"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231017 00:10:22.898" level="INFO">${password} = aKHbWT6K8Z9Y</msg>
<status status="PASS" starttime="20231017 00:10:22.897" endtime="20231017 00:10:22.898"/>
</kw>
<status status="PASS" starttime="20231017 00:10:21.996" endtime="20231017 00:10:22.898"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:22.899" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20231017 00:10:22.899" endtime="20231017 00:10:22.969"/>
</kw>
<status status="PASS" starttime="20231017 00:10:22.898" endtime="20231017 00:10:22.970"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231017 00:10:22.970" endtime="20231017 00:10:23.210"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20231017 00:10:23.232" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20231017 00:10:23.210" endtime="20231017 00:10:23.232"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231017 00:10:23.249" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20231017 00:10:23.233" endtime="20231017 00:10:23.249"/>
</kw>
<status status="PASS" starttime="20231017 00:10:22.970" endtime="20231017 00:10:23.250"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231017 00:10:23.251" endtime="20231017 00:10:23.307"/>
</kw>
<status status="PASS" starttime="20231017 00:10:23.250" endtime="20231017 00:10:23.307"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20231017 00:10:20.474" endtime="20231017 00:10:23.308"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231017 00:10:23.310" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20231017 00:10:23.309" endtime="20231017 00:10:24.666"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231017 00:10:24.666" endtime="20231017 00:10:24.770"/>
</kw>
<status status="PASS" starttime="20231017 00:10:23.309" endtime="20231017 00:10:24.770"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20231017 00:10:24.803" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20231017 00:10:24.771" endtime="20231017 00:10:24.803"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:24.804" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20231017 00:10:24.803" endtime="20231017 00:10:24.901"/>
</kw>
<status status="PASS" starttime="20231017 00:10:24.771" endtime="20231017 00:10:24.901"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:24.903" level="INFO">Typing text 'Melissa Mathis' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20231017 00:10:24.902" endtime="20231017 00:10:25.060"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:25.061" level="INFO">Typing text 'tdaniels@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20231017 00:10:25.060" endtime="20231017 00:10:25.166"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:25.167" level="INFO">Typing text 'aKHbWT6K8Z9Y' into text field 'id:password'.</msg>
<status status="PASS" starttime="20231017 00:10:25.166" endtime="20231017 00:10:25.259"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:25.260" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20231017 00:10:25.259" endtime="20231017 00:10:25.332"/>
</kw>
<status status="PASS" starttime="20231017 00:10:24.901" endtime="20231017 00:10:25.332"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20231017 00:10:25.333" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20231017 00:10:25.333" endtime="20231017 00:10:25.392"/>
</kw>
<status status="PASS" starttime="20231017 00:10:25.332" endtime="20231017 00:10:25.392"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231017 00:10:25.393" endtime="20231017 00:10:25.630"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20231017 00:10:25.653" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20231017 00:10:25.630" endtime="20231017 00:10:25.653"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231017 00:10:25.670" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20231017 00:10:25.654" endtime="20231017 00:10:25.670"/>
</kw>
<status status="PASS" starttime="20231017 00:10:25.392" endtime="20231017 00:10:25.670"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231017 00:10:25.671" endtime="20231017 00:10:25.726"/>
</kw>
<status status="PASS" starttime="20231017 00:10:25.671" endtime="20231017 00:10:25.726"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20231017 00:10:23.308" endtime="20231017 00:10:25.726"/>
</test>
<status status="PASS" starttime="20231017 00:10:17.302" endtime="20231017 00:10:25.727"/>
</suite>
<status status="PASS" starttime="20231017 00:10:17.300" endtime="20231017 00:10:25.729"/>
</suite>
<status status="PASS" starttime="20231017 00:10:16.197" endtime="20231017 00:10:25.731"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
