<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.8.16 on linux)" generated="20230614 15:21:40.732" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:21:41.544" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:21:41.543" endtime="20230614 15:21:41.544"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.543" endtime="20230614 15:21:41.544"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:21:41.712" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230614 15:21:41.713" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '913f2fd0-d49f-400c-bb82-cedd645db5c1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5ed4d2d71d52ebc92caf5cc96b8ee55b;o=1', 'Date': 'Wed, 14 Jun 2023 15:21:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '1558'} 
 body={
    "quantidade": 7,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Joseph Frank",
            "email": "rodriguezjonathon@example.net",
            "password": "9Wi9NKtUjXm1",
            "administrador": "true",
            "_id": "LroURRC5q1y0XyjP"
        },
        {
            "nome": "Cleisson Atrix",
            "email": "atrix@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "U8yE3jAZEwClVz2R"
        },
        {
            "nome": "Anthony Shaw",
            "email": "glovermelissa@example.net",
            "password": "G4l2UyUnVBBH",
            "administrador": "true",
            "_id": "a0rAjzmPy9MPnMbD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lwoq@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "i267z8MqsiGOJDrN"
        },
        {
            "nome": "Fulano da Silva",
            "email": "nysm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "jlb2vMqgPSciFizX"
        },
        {
            "nome": "Matthew Henderson",
            "email": "emcdonald@example.net",
            "password": "P9nLVXys6QWD",
            "administrador": "true",
            "_id": "mTT73HwO7cmCOupH"
        }
    ]
} 
 </msg>
<msg timestamp="20230614 15:21:41.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.545" endtime="20230614 15:21:41.713"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:21:41.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.713" endtime="20230614 15:21:41.713"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.544" endtime="20230614 15:21:41.714"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:21:41.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.714" endtime="20230614 15:21:41.715"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:21:41.715" endtime="20230614 15:21:41.715"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.714" endtime="20230614 15:21:41.715"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:21:41.716" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230614 15:21:41.716" endtime="20230614 15:21:41.716"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.716" endtime="20230614 15:21:41.716"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:21:41.542" endtime="20230614 15:21:41.717"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:21:41.718" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:21:41.718" endtime="20230614 15:21:41.718"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.718" endtime="20230614 15:21:41.718"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230614 15:21:41.719" level="INFO">${name} = Tyler Hull</msg>
<status status="PASS" starttime="20230614 15:21:41.719" endtime="20230614 15:21:41.719"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230614 15:21:41.720" level="INFO">${email} = bakerdavid@example.org</msg>
<status status="PASS" starttime="20230614 15:21:41.719" endtime="20230614 15:21:41.720"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230614 15:21:41.720" level="INFO">${password} = 21YGU3lXvVAo</msg>
<status status="PASS" starttime="20230614 15:21:41.720" endtime="20230614 15:21:41.720"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:21:41.721" level="INFO">${name} = Tyler Hull</msg>
<status status="PASS" starttime="20230614 15:21:41.720" endtime="20230614 15:21:41.721"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:21:41.721" level="INFO">${email} = bakerdavid@example.org</msg>
<status status="PASS" starttime="20230614 15:21:41.721" endtime="20230614 15:21:41.721"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:21:41.721" level="INFO">${password} = 21YGU3lXvVAo</msg>
<status status="PASS" starttime="20230614 15:21:41.721" endtime="20230614 15:21:41.721"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.719" endtime="20230614 15:21:41.722"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 15:21:41.722" level="INFO">${payload} = {'nome': 'Tyler Hull', 'email': 'bakerdavid@example.org', 'password': '21YGU3lXvVAo', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230614 15:21:41.722" endtime="20230614 15:21:41.722"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 15:21:41.723" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230614 15:21:41.722" endtime="20230614 15:21:41.723"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:21:41.812" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Tyler Hull", "email": "bakerdavid@example.org", "password": "21YGU3lXvVAo", "administrador": "false"}' 
 </msg>
<msg timestamp="20230614 15:21:41.812" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3755edc6-b640-4469-87e1-190a38c1c151', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '893c0ba0dcd2d106317ef6b0643f6b28', 'Date': 'Wed, 14 Jun 2023 15:21:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "8Vzbm8Y8e6DLdsaP"
} 
 </msg>
<msg timestamp="20230614 15:21:41.812" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.723" endtime="20230614 15:21:41.812"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230614 15:21:41.813" level="INFO">${user_id} = 8Vzbm8Y8e6DLdsaP</msg>
<status status="PASS" starttime="20230614 15:21:41.813" endtime="20230614 15:21:41.813"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230614 15:21:41.814" level="INFO">${USER_ID} = 8Vzbm8Y8e6DLdsaP</msg>
<status status="PASS" starttime="20230614 15:21:41.814" endtime="20230614 15:21:41.814"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:21:41.814" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.814" endtime="20230614 15:21:41.814"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.722" endtime="20230614 15:21:41.814"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:21:41.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.815" endtime="20230614 15:21:41.815"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:21:41.816" endtime="20230614 15:21:41.816"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.814" endtime="20230614 15:21:41.816"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:21:41.817" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230614 15:21:41.816" endtime="20230614 15:21:41.817"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.816" endtime="20230614 15:21:41.817"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:21:41.717" endtime="20230614 15:21:41.817"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:21:41.819" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:21:41.818" endtime="20230614 15:21:41.819"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.818" endtime="20230614 15:21:41.819"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:21:41.913" level="INFO">GET Request : url=https://serverest.dev/usuarios/8Vzbm8Y8e6DLdsaP 
 path_url=/usuarios/8Vzbm8Y8e6DLdsaP 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230614 15:21:41.913" level="INFO">GET Response : url=https://serverest.dev/usuarios/8Vzbm8Y8e6DLdsaP 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5538e6ce-3384-43da-bc49-654722192fe8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '68c78f2b9444c6e4919feb60c518be25', 'Date': 'Wed, 14 Jun 2023 15:21:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Tyler Hull",
    "email": "bakerdavid@example.org",
    "password": "21YGU3lXvVAo",
    "administrador": "false",
    "_id": "8Vzbm8Y8e6DLdsaP"
} 
 </msg>
<msg timestamp="20230614 15:21:41.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.819" endtime="20230614 15:21:41.913"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:21:41.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.913" endtime="20230614 15:21:41.914"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.819" endtime="20230614 15:21:41.914"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:21:41.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.914" endtime="20230614 15:21:41.915"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:21:41.915" endtime="20230614 15:21:41.916"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.914" endtime="20230614 15:21:41.916"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:21:41.917" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230614 15:21:41.916" endtime="20230614 15:21:41.917"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.916" endtime="20230614 15:21:41.917"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:21:41.818" endtime="20230614 15:21:41.917"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:21:41.918" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:21:41.918" endtime="20230614 15:21:41.918"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.918" endtime="20230614 15:21:41.918"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 15:21:41.919" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230614 15:21:41.919" endtime="20230614 15:21:41.919"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 15:21:41.920" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230614 15:21:41.919" endtime="20230614 15:21:41.920"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:21:42.025" level="INFO">PUT Request : url=https://serverest.dev/usuarios/8Vzbm8Y8e6DLdsaP 
 path_url=/usuarios/8Vzbm8Y8e6DLdsaP 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230614 15:21:42.025" level="INFO">PUT Response : url=https://serverest.dev/usuarios/8Vzbm8Y8e6DLdsaP 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c68582ab-e09e-49ff-9baa-a663ded4903a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a36966475b4f039835fb84ea35dc795d', 'Date': 'Wed, 14 Jun 2023 15:21:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230614 15:21:42.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:41.920" endtime="20230614 15:21:42.025"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:21:42.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:42.025" endtime="20230614 15:21:42.026"/>
</kw>
<status status="PASS" starttime="20230614 15:21:41.919" endtime="20230614 15:21:42.026"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:21:42.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:21:42.026" endtime="20230614 15:21:42.027"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:21:42.027" endtime="20230614 15:21:42.028"/>
</kw>
<status status="PASS" starttime="20230614 15:21:42.026" endtime="20230614 15:21:42.028"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:21:42.029" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230614 15:21:42.028" endtime="20230614 15:21:42.029"/>
</kw>
<status status="PASS" starttime="20230614 15:21:42.028" endtime="20230614 15:21:42.029"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:21:41.917" endtime="20230614 15:21:42.029"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:21:42.030" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:21:42.030" endtime="20230614 15:21:42.031"/>
</kw>
<status status="PASS" starttime="20230614 15:21:42.030" endtime="20230614 15:21:42.031"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:21:42.120" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/8Vzbm8Y8e6DLdsaP 
 path_url=/usuarios/8Vzbm8Y8e6DLdsaP 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230614 15:21:42.120" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/8Vzbm8Y8e6DLdsaP 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f6356c6a-39fb-456c-8773-88c0aab963e0', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '64bed3779c5c5bc312d195d93da6f1ad', 'Date': 'Wed, 14 Jun 2023 15:21:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230614 15:21:42.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:42.031" endtime="20230614 15:21:42.120"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:21:42.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:21:42.120" endtime="20230614 15:21:42.121"/>
</kw>
<status status="PASS" starttime="20230614 15:21:42.031" endtime="20230614 15:21:42.121"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:21:42.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:21:42.121" endtime="20230614 15:21:42.122"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:21:42.122" endtime="20230614 15:21:42.123"/>
</kw>
<status status="PASS" starttime="20230614 15:21:42.121" endtime="20230614 15:21:42.123"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:21:42.123" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230614 15:21:42.123" endtime="20230614 15:21:42.124"/>
</kw>
<status status="PASS" starttime="20230614 15:21:42.123" endtime="20230614 15:21:42.124"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:21:42.029" endtime="20230614 15:21:42.124"/>
</test>
<status status="PASS" starttime="20230614 15:21:40.754" endtime="20230614 15:21:42.124"/>
</suite>
<status status="PASS" starttime="20230614 15:21:40.752" endtime="20230614 15:21:42.126"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 15:21:42.137" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 15:21:42.136" endtime="20230614 15:22:00.005"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 15:22:00.006" endtime="20230614 15:22:00.180"/>
</kw>
<status status="PASS" starttime="20230614 15:21:42.136" endtime="20230614 15:22:00.180"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 15:22:00.185" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 15:22:00.181" endtime="20230614 15:22:00.186"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:00.187" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 15:22:00.186" endtime="20230614 15:22:00.423"/>
</kw>
<status status="PASS" starttime="20230614 15:22:00.181" endtime="20230614 15:22:00.423"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:00.424" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 15:22:00.423" endtime="20230614 15:22:00.708"/>
</kw>
<status status="PASS" starttime="20230614 15:22:00.423" endtime="20230614 15:22:00.708"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 15:22:00.709" endtime="20230614 15:22:01.020"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 15:22:01.040" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 15:22:01.020" endtime="20230614 15:22:01.040"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:01.092" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230614 15:22:01.040" endtime="20230614 15:22:01.092"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:01.106" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230614 15:22:01.092" endtime="20230614 15:22:01.106"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:01.119" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230614 15:22:01.106" endtime="20230614 15:22:01.119"/>
</kw>
<status status="PASS" starttime="20230614 15:22:00.709" endtime="20230614 15:22:01.119"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 15:22:01.120" endtime="20230614 15:22:01.175"/>
</kw>
<status status="PASS" starttime="20230614 15:22:01.120" endtime="20230614 15:22:01.175"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 15:21:42.135" endtime="20230614 15:22:01.175"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 15:22:01.178" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 15:22:01.177" endtime="20230614 15:22:02.369"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 15:22:02.370" endtime="20230614 15:22:02.473"/>
</kw>
<status status="PASS" starttime="20230614 15:22:01.177" endtime="20230614 15:22:02.473"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 15:22:02.479" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 15:22:02.474" endtime="20230614 15:22:02.479"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:02.480" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 15:22:02.479" endtime="20230614 15:22:02.536"/>
</kw>
<status status="PASS" starttime="20230614 15:22:02.473" endtime="20230614 15:22:02.536"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230614 15:22:02.537" level="INFO">${name} = Tonya Torres</msg>
<status status="PASS" starttime="20230614 15:22:02.536" endtime="20230614 15:22:02.537"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230614 15:22:02.538" level="INFO">${email} = averyterri@example.com</msg>
<status status="PASS" starttime="20230614 15:22:02.537" endtime="20230614 15:22:02.538"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230614 15:22:02.538" level="INFO">${password} = 8Hr55QDbnQez</msg>
<status status="PASS" starttime="20230614 15:22:02.538" endtime="20230614 15:22:02.538"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:02.539" level="INFO">Typing text 'Tonya Torres' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230614 15:22:02.538" endtime="20230614 15:22:02.763"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:02.764" level="INFO">Typing text 'averyterri@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230614 15:22:02.763" endtime="20230614 15:22:02.893"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:02.894" level="INFO">Typing text '8Hr55QDbnQez' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230614 15:22:02.893" endtime="20230614 15:22:03.026"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:03.027" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230614 15:22:03.026" endtime="20230614 15:22:03.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:22:03.106" level="INFO">${name} = Tonya Torres</msg>
<status status="PASS" starttime="20230614 15:22:03.105" endtime="20230614 15:22:03.106"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:22:03.106" level="INFO">${email} = averyterri@example.com</msg>
<status status="PASS" starttime="20230614 15:22:03.106" endtime="20230614 15:22:03.106"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:22:03.106" level="INFO">${password} = 8Hr55QDbnQez</msg>
<status status="PASS" starttime="20230614 15:22:03.106" endtime="20230614 15:22:03.107"/>
</kw>
<status status="PASS" starttime="20230614 15:22:02.536" endtime="20230614 15:22:03.107"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:03.107" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 15:22:03.107" endtime="20230614 15:22:03.169"/>
</kw>
<status status="PASS" starttime="20230614 15:22:03.107" endtime="20230614 15:22:03.169"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 15:22:03.170" endtime="20230614 15:22:03.405"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 15:22:03.423" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 15:22:03.405" endtime="20230614 15:22:03.424"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:03.437" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230614 15:22:03.424" endtime="20230614 15:22:03.437"/>
</kw>
<status status="PASS" starttime="20230614 15:22:03.169" endtime="20230614 15:22:03.437"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 15:22:03.438" endtime="20230614 15:22:03.492"/>
</kw>
<status status="PASS" starttime="20230614 15:22:03.437" endtime="20230614 15:22:03.492"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 15:22:01.176" endtime="20230614 15:22:03.492"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 15:22:03.494" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 15:22:03.494" endtime="20230614 15:22:04.767"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 15:22:04.767" endtime="20230614 15:22:04.870"/>
</kw>
<status status="PASS" starttime="20230614 15:22:03.493" endtime="20230614 15:22:04.870"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 15:22:04.876" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 15:22:04.871" endtime="20230614 15:22:04.876"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:04.877" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 15:22:04.876" endtime="20230614 15:22:04.937"/>
</kw>
<status status="PASS" starttime="20230614 15:22:04.871" endtime="20230614 15:22:04.937"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:04.938" level="INFO">Typing text 'Tonya Torres' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230614 15:22:04.938" endtime="20230614 15:22:05.070"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:05.070" level="INFO">Typing text 'averyterri@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230614 15:22:05.070" endtime="20230614 15:22:05.183"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:05.184" level="INFO">Typing text '8Hr55QDbnQez' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230614 15:22:05.183" endtime="20230614 15:22:05.282"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:05.283" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230614 15:22:05.282" endtime="20230614 15:22:05.360"/>
</kw>
<status status="PASS" starttime="20230614 15:22:04.937" endtime="20230614 15:22:05.360"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:05.361" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 15:22:05.361" endtime="20230614 15:22:05.427"/>
</kw>
<status status="PASS" starttime="20230614 15:22:05.360" endtime="20230614 15:22:05.427"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 15:22:05.427" endtime="20230614 15:22:05.662"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 15:22:05.681" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 15:22:05.662" endtime="20230614 15:22:05.681"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:05.695" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230614 15:22:05.682" endtime="20230614 15:22:05.696"/>
</kw>
<status status="PASS" starttime="20230614 15:22:05.427" endtime="20230614 15:22:05.696"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 15:22:05.696" endtime="20230614 15:22:05.752"/>
</kw>
<status status="PASS" starttime="20230614 15:22:05.696" endtime="20230614 15:22:05.752"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 15:22:03.493" endtime="20230614 15:22:05.752"/>
</test>
<status status="PASS" starttime="20230614 15:21:42.128" endtime="20230614 15:22:05.753"/>
</suite>
<status status="PASS" starttime="20230614 15:21:42.126" endtime="20230614 15:22:05.755"/>
</suite>
<status status="PASS" starttime="20230614 15:21:40.733" endtime="20230614 15:22:05.757"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
