<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 20:50:19.663" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 20:50:20.383" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 20:50:20.383" endtime="20230526 20:50:20.383"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.382" endtime="20230526 20:50:20.384"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 20:50:20.495" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 20:50:20.495" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '747836b0-30d8-4870-adde-41f574774dc8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '63fb331ad5afd5f02b3f573781eeb9cd;o=1', 'Date': 'Fri, 26 May 2023 20:50:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '1542'} 
 body={
    "quantidade": 7,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Lawrence Hanson",
            "email": "michelle11@example.org",
            "password": "7feQ4sbxy6Ie",
            "administrador": "true",
            "_id": "MgBVcaaQYuq5SEYk"
        },
        {
            "nome": "sadas",
            "email": "mill2@mil.com",
            "password": "123",
            "administrador": "true",
            "_id": "OvyYUousDsG4JYeX"
        },
        {
            "nome": "Cody Valentine",
            "email": "todd72@example.org",
            "password": "do58Eoup2qUy",
            "administrador": "true",
            "_id": "T2V5t8ZpKz0PTqGQ"
        },
        {
            "nome": "Brendan George",
            "email": "leslie86@example.com",
            "password": "1GiqcZl305aG",
            "administrador": "true",
            "_id": "TMKqdrqnRTNFOyht"
        },
        {
            "nome": "Hayley Byrd",
            "email": "kimberlymartin@example.com",
            "password": "q78F3X1rG3oF",
            "administrador": "true",
            "_id": "bLBFKECXSYeoPEjz"
        },
        {
            "nome": "Kyle Cooper",
            "email": "yflores@example.org",
            "password": "k7JpINT2Qek2",
            "administrador": "true",
            "_id": "vbb2T2tN8byhWgGI"
        }
    ]
} 
 </msg>
<msg timestamp="20230526 20:50:20.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.384" endtime="20230526 20:50:20.496"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 20:50:20.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.496" endtime="20230526 20:50:20.496"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.384" endtime="20230526 20:50:20.496"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 20:50:20.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.497" endtime="20230526 20:50:20.498"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 20:50:20.498" endtime="20230526 20:50:20.499"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.497" endtime="20230526 20:50:20.499"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 20:50:20.500" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 20:50:20.499" endtime="20230526 20:50:20.500"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.499" endtime="20230526 20:50:20.500"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 20:50:20.381" endtime="20230526 20:50:20.500"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 20:50:20.502" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 20:50:20.502" endtime="20230526 20:50:20.503"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.501" endtime="20230526 20:50:20.503"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 20:50:20.504" level="INFO">${name} = Brandy Schneider</msg>
<status status="PASS" starttime="20230526 20:50:20.503" endtime="20230526 20:50:20.504"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 20:50:20.505" level="INFO">${email} = cwilliams@example.org</msg>
<status status="PASS" starttime="20230526 20:50:20.504" endtime="20230526 20:50:20.505"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 20:50:20.505" level="INFO">${password} = NIMc8Jfn6fC8</msg>
<status status="PASS" starttime="20230526 20:50:20.505" endtime="20230526 20:50:20.505"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 20:50:20.506" level="INFO">${name} = Brandy Schneider</msg>
<status status="PASS" starttime="20230526 20:50:20.505" endtime="20230526 20:50:20.508"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 20:50:20.508" level="INFO">${email} = cwilliams@example.org</msg>
<status status="PASS" starttime="20230526 20:50:20.508" endtime="20230526 20:50:20.508"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 20:50:20.509" level="INFO">${password} = NIMc8Jfn6fC8</msg>
<status status="PASS" starttime="20230526 20:50:20.508" endtime="20230526 20:50:20.509"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.503" endtime="20230526 20:50:20.509"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 20:50:20.510" level="INFO">${payload} = {'nome': 'Brandy Schneider', 'email': 'cwilliams@example.org', 'password': 'NIMc8Jfn6fC8', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 20:50:20.509" endtime="20230526 20:50:20.510"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 20:50:20.510" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 20:50:20.510" endtime="20230526 20:50:20.511"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 20:50:20.590" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"nome": "Brandy Schneider", "email": "cwilliams@example.org", "password": "NIMc8Jfn6fC8", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 20:50:20.590" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2b6986c1-d167-4fdc-b1e4-64102827a56d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7d4b7b44e7d129fd22b8fa3afc310140', 'Date': 'Fri, 26 May 2023 20:50:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "1QJBtrI4yEtZWfcG"
} 
 </msg>
<msg timestamp="20230526 20:50:20.590" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.511" endtime="20230526 20:50:20.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 20:50:20.591" level="INFO">${user_id} = 1QJBtrI4yEtZWfcG</msg>
<status status="PASS" starttime="20230526 20:50:20.591" endtime="20230526 20:50:20.591"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 20:50:20.592" level="INFO">${USER_ID} = 1QJBtrI4yEtZWfcG</msg>
<status status="PASS" starttime="20230526 20:50:20.592" endtime="20230526 20:50:20.592"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 20:50:20.593" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.592" endtime="20230526 20:50:20.593"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.509" endtime="20230526 20:50:20.593"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 20:50:20.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.594" endtime="20230526 20:50:20.594"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 20:50:20.595" endtime="20230526 20:50:20.595"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.593" endtime="20230526 20:50:20.595"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 20:50:20.597" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 20:50:20.596" endtime="20230526 20:50:20.597"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.596" endtime="20230526 20:50:20.597"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 20:50:20.501" endtime="20230526 20:50:20.597"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 20:50:20.599" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 20:50:20.598" endtime="20230526 20:50:20.599"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.598" endtime="20230526 20:50:20.600"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 20:50:20.671" level="INFO">GET Request : url=https://serverest.dev/usuarios/1QJBtrI4yEtZWfcG 
 path_url=/usuarios/1QJBtrI4yEtZWfcG 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 20:50:20.671" level="INFO">GET Response : url=https://serverest.dev/usuarios/1QJBtrI4yEtZWfcG 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '36c7b351-7fe1-415d-bc13-24523f0f0c96', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6015b94a9cc140e16bf496c448732564', 'Date': 'Fri, 26 May 2023 20:50:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '165'} 
 body={
    "nome": "Brandy Schneider",
    "email": "cwilliams@example.org",
    "password": "NIMc8Jfn6fC8",
    "administrador": "false",
    "_id": "1QJBtrI4yEtZWfcG"
} 
 </msg>
<msg timestamp="20230526 20:50:20.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.600" endtime="20230526 20:50:20.672"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 20:50:20.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.672" endtime="20230526 20:50:20.673"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.600" endtime="20230526 20:50:20.673"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 20:50:20.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.673" endtime="20230526 20:50:20.674"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 20:50:20.675" endtime="20230526 20:50:20.676"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.673" endtime="20230526 20:50:20.676"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 20:50:20.677" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 20:50:20.676" endtime="20230526 20:50:20.677"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.676" endtime="20230526 20:50:20.677"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 20:50:20.598" endtime="20230526 20:50:20.678"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 20:50:20.679" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 20:50:20.679" endtime="20230526 20:50:20.680"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.679" endtime="20230526 20:50:20.680"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 20:50:20.681" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 20:50:20.680" endtime="20230526 20:50:20.681"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 20:50:20.681" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 20:50:20.681" endtime="20230526 20:50:20.681"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 20:50:20.757" level="INFO">PUT Request : url=https://serverest.dev/usuarios/1QJBtrI4yEtZWfcG 
 path_url=/usuarios/1QJBtrI4yEtZWfcG 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 20:50:20.757" level="INFO">PUT Response : url=https://serverest.dev/usuarios/1QJBtrI4yEtZWfcG 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '85743c2f-4be4-4e8d-b40d-feae3010beb7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8a1f17d940b03b13ca7d0e074f59605c', 'Date': 'Fri, 26 May 2023 20:50:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 20:50:20.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.681" endtime="20230526 20:50:20.758"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 20:50:20.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.758" endtime="20230526 20:50:20.758"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.680" endtime="20230526 20:50:20.759"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 20:50:20.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.759" endtime="20230526 20:50:20.760"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 20:50:20.760" endtime="20230526 20:50:20.761"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.759" endtime="20230526 20:50:20.761"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 20:50:20.762" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 20:50:20.761" endtime="20230526 20:50:20.762"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.761" endtime="20230526 20:50:20.762"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 20:50:20.678" endtime="20230526 20:50:20.762"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 20:50:20.764" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 20:50:20.764" endtime="20230526 20:50:20.765"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.763" endtime="20230526 20:50:20.765"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 20:50:20.834" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/1QJBtrI4yEtZWfcG 
 path_url=/usuarios/1QJBtrI4yEtZWfcG 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 20:50:20.834" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/1QJBtrI4yEtZWfcG 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1596dd14-ba84-4fdf-a829-5ba82f9ad2cc', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f9577b9cf187e130d42ddcb050e0b531', 'Date': 'Fri, 26 May 2023 20:50:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 20:50:20.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.765" endtime="20230526 20:50:20.835"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 20:50:20.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.835" endtime="20230526 20:50:20.835"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.765" endtime="20230526 20:50:20.835"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 20:50:20.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 20:50:20.836" endtime="20230526 20:50:20.837"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 20:50:20.837" endtime="20230526 20:50:20.838"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.836" endtime="20230526 20:50:20.838"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 20:50:20.839" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 20:50:20.839" endtime="20230526 20:50:20.839"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.838" endtime="20230526 20:50:20.840"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 20:50:20.763" endtime="20230526 20:50:20.840"/>
</test>
<status status="PASS" starttime="20230526 20:50:19.692" endtime="20230526 20:50:20.840"/>
</suite>
<status status="PASS" starttime="20230526 20:50:19.690" endtime="20230526 20:50:20.842"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 20:50:20.855" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 20:50:20.854" endtime="20230526 20:50:28.836"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 20:50:28.837" endtime="20230526 20:50:28.965"/>
</kw>
<status status="PASS" starttime="20230526 20:50:20.854" endtime="20230526 20:50:28.966"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 20:50:28.971" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 20:50:28.966" endtime="20230526 20:50:28.972"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:28.973" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 20:50:28.972" endtime="20230526 20:50:29.149"/>
</kw>
<status status="PASS" starttime="20230526 20:50:28.966" endtime="20230526 20:50:29.149"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:29.150" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 20:50:29.150" endtime="20230526 20:50:29.277"/>
</kw>
<status status="PASS" starttime="20230526 20:50:29.149" endtime="20230526 20:50:29.278"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 20:50:29.278" endtime="20230526 20:50:29.520"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 20:50:29.543" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 20:50:29.521" endtime="20230526 20:50:29.543"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 20:50:29.591" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 20:50:29.544" endtime="20230526 20:50:29.592"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 20:50:29.609" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 20:50:29.592" endtime="20230526 20:50:29.609"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 20:50:29.625" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 20:50:29.609" endtime="20230526 20:50:29.625"/>
</kw>
<status status="PASS" starttime="20230526 20:50:29.278" endtime="20230526 20:50:29.625"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 20:50:29.626" endtime="20230526 20:50:29.683"/>
</kw>
<status status="PASS" starttime="20230526 20:50:29.626" endtime="20230526 20:50:29.683"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 20:50:20.853" endtime="20230526 20:50:29.683"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 20:50:29.686" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 20:50:29.685" endtime="20230526 20:50:30.926"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 20:50:30.927" endtime="20230526 20:50:31.032"/>
</kw>
<status status="PASS" starttime="20230526 20:50:29.685" endtime="20230526 20:50:31.032"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 20:50:31.038" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 20:50:31.032" endtime="20230526 20:50:31.038"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:31.039" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 20:50:31.038" endtime="20230526 20:50:31.137"/>
</kw>
<status status="PASS" starttime="20230526 20:50:31.032" endtime="20230526 20:50:31.138"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 20:50:31.139" level="INFO">${name} = Nichole White</msg>
<status status="PASS" starttime="20230526 20:50:31.138" endtime="20230526 20:50:31.139"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 20:50:31.140" level="INFO">${email} = garciastephen@example.com</msg>
<status status="PASS" starttime="20230526 20:50:31.139" endtime="20230526 20:50:31.140"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 20:50:31.140" level="INFO">${password} = mSEXXw1MQ1q2</msg>
<status status="PASS" starttime="20230526 20:50:31.140" endtime="20230526 20:50:31.140"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:31.141" level="INFO">Typing text 'Nichole White' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 20:50:31.141" endtime="20230526 20:50:31.321"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:31.322" level="INFO">Typing text 'garciastephen@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 20:50:31.321" endtime="20230526 20:50:31.481"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:31.483" level="INFO">Typing text 'mSEXXw1MQ1q2' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 20:50:31.482" endtime="20230526 20:50:31.597"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:31.598" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 20:50:31.597" endtime="20230526 20:50:31.687"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 20:50:31.687" level="INFO">${name} = Nichole White</msg>
<status status="PASS" starttime="20230526 20:50:31.687" endtime="20230526 20:50:31.687"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 20:50:31.688" level="INFO">${email} = garciastephen@example.com</msg>
<status status="PASS" starttime="20230526 20:50:31.688" endtime="20230526 20:50:31.688"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 20:50:31.688" level="INFO">${password} = mSEXXw1MQ1q2</msg>
<status status="PASS" starttime="20230526 20:50:31.688" endtime="20230526 20:50:31.688"/>
</kw>
<status status="PASS" starttime="20230526 20:50:31.138" endtime="20230526 20:50:31.689"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:31.690" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 20:50:31.689" endtime="20230526 20:50:31.763"/>
</kw>
<status status="PASS" starttime="20230526 20:50:31.689" endtime="20230526 20:50:31.764"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 20:50:31.764" endtime="20230526 20:50:32.001"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 20:50:32.021" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 20:50:32.002" endtime="20230526 20:50:32.021"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 20:50:32.035" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 20:50:32.022" endtime="20230526 20:50:32.035"/>
</kw>
<status status="PASS" starttime="20230526 20:50:31.764" endtime="20230526 20:50:32.035"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 20:50:32.036" endtime="20230526 20:50:32.091"/>
</kw>
<status status="PASS" starttime="20230526 20:50:32.036" endtime="20230526 20:50:32.091"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 20:50:29.684" endtime="20230526 20:50:32.091"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 20:50:32.094" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 20:50:32.093" endtime="20230526 20:50:33.324"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 20:50:33.325" endtime="20230526 20:50:33.432"/>
</kw>
<status status="PASS" starttime="20230526 20:50:32.093" endtime="20230526 20:50:33.432"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 20:50:33.451" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 20:50:33.433" endtime="20230526 20:50:33.451"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:33.453" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 20:50:33.452" endtime="20230526 20:50:33.561"/>
</kw>
<status status="PASS" starttime="20230526 20:50:33.432" endtime="20230526 20:50:33.561"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:33.563" level="INFO">Typing text 'Nichole White' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 20:50:33.562" endtime="20230526 20:50:33.730"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:33.731" level="INFO">Typing text 'garciastephen@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 20:50:33.730" endtime="20230526 20:50:33.884"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:33.885" level="INFO">Typing text 'mSEXXw1MQ1q2' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 20:50:33.884" endtime="20230526 20:50:34.004"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:34.005" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 20:50:34.005" endtime="20230526 20:50:34.109"/>
</kw>
<status status="PASS" starttime="20230526 20:50:33.562" endtime="20230526 20:50:34.109"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 20:50:34.111" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 20:50:34.110" endtime="20230526 20:50:34.189"/>
</kw>
<status status="PASS" starttime="20230526 20:50:34.109" endtime="20230526 20:50:34.189"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 20:50:34.190" endtime="20230526 20:50:34.442"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 20:50:34.466" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 20:50:34.442" endtime="20230526 20:50:34.466"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 20:50:34.483" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 20:50:34.466" endtime="20230526 20:50:34.483"/>
</kw>
<status status="PASS" starttime="20230526 20:50:34.190" endtime="20230526 20:50:34.484"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 20:50:34.484" endtime="20230526 20:50:34.541"/>
</kw>
<status status="PASS" starttime="20230526 20:50:34.484" endtime="20230526 20:50:34.541"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 20:50:32.092" endtime="20230526 20:50:34.541"/>
</test>
<status status="PASS" starttime="20230526 20:50:20.844" endtime="20230526 20:50:34.542"/>
</suite>
<status status="PASS" starttime="20230526 20:50:20.842" endtime="20230526 20:50:34.545"/>
</suite>
<status status="PASS" starttime="20230526 20:50:19.664" endtime="20230526 20:50:34.547"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
