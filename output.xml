<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230521 23:09:37.686" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:09:38.334" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:09:38.333" endtime="20230521 23:09:38.334"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.333" endtime="20230521 23:09:38.334"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:09:38.443" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:09:38.443" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '88abb319-4376-4e67-97aa-e173dd8873be', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '57e78616632cc1e17a8a452c0a119058;o=1', 'Date': 'Sun, 21 May 2023 23:09:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '3934'} 
 body={
    "quantidade": 18,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "John Bell",
            "email": "ruizevan@example.org",
            "password": "*6OUOdmYrv",
            "administrador": "true",
            "_id": "2IKr7LeKuyL4FtC8"
        },
        {
            "nome": "Nicholas Pacheco",
            "email": "youngkayla@example.com",
            "password": "6)5EZOSrjn",
            "administrador": "true",
            "_id": "38Y0QxwG4PDRWCXi"
        },
        {
            "nome": "Teste",
            "email": "samska@gmail.com",
            "password": "Qw98ed74",
            "administrador": "false",
            "_id": "3Xr3T2ckzgNOAh1F"
        },
        {
            "nome": "Mr. James Peterson PhD",
            "email": "connierivera@example.net",
            "password": "NdU_3!LsKk",
            "administrador": "true",
            "_id": "4pI3IxxAgkZAtnue"
        },
        {
            "nome": "Juan Allen",
            "email": "justingomez@example.com",
            "password": "1(#X9ArRvD",
            "administrador": "true",
            "_id": "8tu4KvMVyoTeP4LJ"
        },
        {
            "nome": "Jessica Carter",
            "email": "ashley35@example.org",
            "password": "2o#CnmFC!x",
            "administrador": "true",
            "_id": "Cb7CzMJO3TAjHhNf"
        },
        {
            "nome": "Clifford Price",
            "email": "welchnicholas@example.net",
            "password": "1qY#Rh5L^4",
            "administrador": "true",
            "_id": "CeTenawvCCaAOcoP"
        },
        {
            "nome": "Amy Clark",
            "email": "stephanie62@example.org",
            "password": "g2bHN9v4@4",
            "administrador": "true",
            "_id": "GiHP7flmMy9cnO4x"
        },
        {
            "nome": "Donald Smith",
            "email": "samanthawells@example.com",
            "password": "+N9BWsoU_y",
            "administrador": "true",
            "_id": "Gv7cXeZoEeMSmJ4b"
        },
        {
            "nome": "Terri Campbell",
            "email": "afitzgerald@example.org",
            "password": "x$g8ZRbZ*8",
            "administrador": "true",
            "_id": "HYf8IxtoxgZTI2YN"
        },
        {
            "nome": "teste",
            "email": "testee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "PaihpGw8oseaf7q7"
        },
        {
            "nome": "David Sanders",
            "email": "christopher87@example.com",
            "password": "LNkI#4Ah@_",
            "administrador": "true",
            "_id": "SFEcefct8tA4iHXt"
        },
        {
            "nome": "Micheal Caldwell",
            "email": "wilsonphilip@example.org",
            "password": "+BtZAI*Rs9",
            "administrador": "true",
            "_id": "b6YFBA5wmoQHYZRW"
        },
        {
            "nome": "Heidi Downs",
            "email": "urodriguez@example.com",
            "password": "1HQp3Qp5G#",
            "administrador": "true",
            "_id": "kO3ZvqwVu4B467mM"
        },
        {
            "nome": "Erin Perkins",
            "email": "bowenmichael@example.com",
            "password": "^5@&amp;8Xg(u_",
            "administrador": "true",
            "_id": "rd8XVnMFbXai1o5T"
        },
        {
            "nome": "testeeee",
            "email": "testeee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "yedZQ0ohrtKKZHdP"
        },
        {
            "nome": "Shannon Harris",
            "email": "tarapatterson@example.org",
            "password": "46HqkYPe#V",
            "administrador": "true",
            "_id": "zW5jUFJLv4d4MDmN"
        }
    ]
} 
 </msg>
<msg timestamp="20230521 23:09:38.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.335" endtime="20230521 23:09:38.443"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:09:38.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.443" endtime="20230521 23:09:38.444"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.334" endtime="20230521 23:09:38.444"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:09:38.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.444" endtime="20230521 23:09:38.445"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:09:38.445" endtime="20230521 23:09:38.446"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.444" endtime="20230521 23:09:38.446"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:09:38.447" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:09:38.446" endtime="20230521 23:09:38.447"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.446" endtime="20230521 23:09:38.447"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:09:38.332" endtime="20230521 23:09:38.447"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:09:38.449" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:09:38.449" endtime="20230521 23:09:38.450"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.449" endtime="20230521 23:09:38.450"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:09:38.451" level="INFO">${name} = Theresa Smith</msg>
<status status="PASS" starttime="20230521 23:09:38.450" endtime="20230521 23:09:38.451"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:09:38.451" level="INFO">${email} = reedryan@example.net</msg>
<status status="PASS" starttime="20230521 23:09:38.451" endtime="20230521 23:09:38.451"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:09:38.452" level="INFO">${password} = k70MEirfV_</msg>
<status status="PASS" starttime="20230521 23:09:38.452" endtime="20230521 23:09:38.452"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:09:38.452" level="INFO">${name} = Theresa Smith</msg>
<status status="PASS" starttime="20230521 23:09:38.452" endtime="20230521 23:09:38.452"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:09:38.453" level="INFO">${email} = reedryan@example.net</msg>
<status status="PASS" starttime="20230521 23:09:38.452" endtime="20230521 23:09:38.453"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:09:38.453" level="INFO">${password} = k70MEirfV_</msg>
<status status="PASS" starttime="20230521 23:09:38.453" endtime="20230521 23:09:38.453"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.450" endtime="20230521 23:09:38.453"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:09:38.454" level="INFO">${payload} = {'nome': 'Theresa Smith', 'email': 'reedryan@example.net', 'password': 'k70MEirfV_', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 23:09:38.453" endtime="20230521 23:09:38.454"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:09:38.454" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 23:09:38.454" endtime="20230521 23:09:38.454"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:09:38.521" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Theresa Smith", "email": "reedryan@example.net", "password": "k70MEirfV_", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 23:09:38.522" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2effe535-1bb2-4a13-8589-8a34a3e550ce', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7847f4277e5e3786f89c3cad6ba693ea', 'Date': 'Sun, 21 May 2023 23:09:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "nIbjYzqz7Cvd7eC1"
} 
 </msg>
<msg timestamp="20230521 23:09:38.522" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.454" endtime="20230521 23:09:38.522"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230521 23:09:38.523" level="INFO">${user_id} = nIbjYzqz7Cvd7eC1</msg>
<status status="PASS" starttime="20230521 23:09:38.522" endtime="20230521 23:09:38.523"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230521 23:09:38.523" level="INFO">${USER_ID} = nIbjYzqz7Cvd7eC1</msg>
<status status="PASS" starttime="20230521 23:09:38.523" endtime="20230521 23:09:38.523"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:09:38.524" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.523" endtime="20230521 23:09:38.524"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.453" endtime="20230521 23:09:38.524"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:09:38.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.524" endtime="20230521 23:09:38.525"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:09:38.525" endtime="20230521 23:09:38.525"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.524" endtime="20230521 23:09:38.526"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:09:38.527" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:09:38.526" endtime="20230521 23:09:38.527"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.526" endtime="20230521 23:09:38.527"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:09:38.448" endtime="20230521 23:09:38.527"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:09:38.528" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:09:38.528" endtime="20230521 23:09:38.529"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.528" endtime="20230521 23:09:38.529"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:09:38.594" level="INFO">GET Request : url=https://serverest.dev/usuarios/nIbjYzqz7Cvd7eC1 
 path_url=/usuarios/nIbjYzqz7Cvd7eC1 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:09:38.594" level="INFO">GET Response : url=https://serverest.dev/usuarios/nIbjYzqz7Cvd7eC1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5736775e-b0e0-4657-987a-814253401238', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '480db087b7572951480c7ca5e9edef28', 'Date': 'Sun, 21 May 2023 23:09:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '159'} 
 body={
    "nome": "Theresa Smith",
    "email": "reedryan@example.net",
    "password": "k70MEirfV_",
    "administrador": "false",
    "_id": "nIbjYzqz7Cvd7eC1"
} 
 </msg>
<msg timestamp="20230521 23:09:38.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.529" endtime="20230521 23:09:38.594"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:09:38.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.594" endtime="20230521 23:09:38.594"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.529" endtime="20230521 23:09:38.595"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:09:38.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.595" endtime="20230521 23:09:38.596"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:09:38.596" endtime="20230521 23:09:38.596"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.595" endtime="20230521 23:09:38.597"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:09:38.597" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230521 23:09:38.597" endtime="20230521 23:09:38.597"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.597" endtime="20230521 23:09:38.598"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:09:38.527" endtime="20230521 23:09:38.598"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:09:38.599" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:09:38.599" endtime="20230521 23:09:38.599"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.598" endtime="20230521 23:09:38.599"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:09:38.600" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 23:09:38.600" endtime="20230521 23:09:38.600"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:09:38.600" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 23:09:38.600" endtime="20230521 23:09:38.600"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:09:38.664" level="INFO">PUT Request : url=https://serverest.dev/usuarios/nIbjYzqz7Cvd7eC1 
 path_url=/usuarios/nIbjYzqz7Cvd7eC1 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 23:09:38.664" level="INFO">PUT Response : url=https://serverest.dev/usuarios/nIbjYzqz7Cvd7eC1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '00b62eff-56d3-4d4e-b6eb-38edb56085fa', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '209c134fda213f29985cf186429e4f34', 'Date': 'Sun, 21 May 2023 23:09:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230521 23:09:38.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.600" endtime="20230521 23:09:38.665"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:09:38.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.665" endtime="20230521 23:09:38.665"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.599" endtime="20230521 23:09:38.665"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:09:38.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.666" endtime="20230521 23:09:38.667"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:09:38.667" endtime="20230521 23:09:38.667"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.665" endtime="20230521 23:09:38.667"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:09:38.668" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 23:09:38.668" endtime="20230521 23:09:38.668"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.667" endtime="20230521 23:09:38.668"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:09:38.598" endtime="20230521 23:09:38.669"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:09:38.670" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:09:38.670" endtime="20230521 23:09:38.670"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.669" endtime="20230521 23:09:38.670"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:09:38.734" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/nIbjYzqz7Cvd7eC1 
 path_url=/usuarios/nIbjYzqz7Cvd7eC1 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:09:38.734" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/nIbjYzqz7Cvd7eC1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd76e5d93-c782-4de0-a173-cf9f8db356ce', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '78ba081594e9e3db61dad256adfe5df5', 'Date': 'Sun, 21 May 2023 23:09:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230521 23:09:38.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.671" endtime="20230521 23:09:38.734"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:09:38.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.734" endtime="20230521 23:09:38.735"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.670" endtime="20230521 23:09:38.735"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:09:38.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:09:38.735" endtime="20230521 23:09:38.736"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:09:38.736" endtime="20230521 23:09:38.737"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.735" endtime="20230521 23:09:38.737"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:09:38.738" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 23:09:38.737" endtime="20230521 23:09:38.738"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.737" endtime="20230521 23:09:38.738"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:09:38.669" endtime="20230521 23:09:38.738"/>
</test>
<status status="PASS" starttime="20230521 23:09:37.707" endtime="20230521 23:09:38.739"/>
</suite>
<status status="PASS" starttime="20230521 23:09:37.706" endtime="20230521 23:09:38.740"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:09:38.751" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:09:38.750" endtime="20230521 23:09:47.156"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:09:47.156" endtime="20230521 23:09:47.272"/>
</kw>
<status status="PASS" starttime="20230521 23:09:38.750" endtime="20230521 23:09:47.273"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:09:47.278" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:09:47.273" endtime="20230521 23:09:47.279"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:47.280" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:09:47.279" endtime="20230521 23:09:47.449"/>
</kw>
<status status="PASS" starttime="20230521 23:09:47.273" endtime="20230521 23:09:47.449"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:47.450" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:09:47.449" endtime="20230521 23:09:47.559"/>
</kw>
<status status="PASS" starttime="20230521 23:09:47.449" endtime="20230521 23:09:47.559"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:09:47.560" endtime="20230521 23:09:47.807"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:09:47.825" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:09:47.807" endtime="20230521 23:09:47.825"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:09:47.862" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:09:47.825" endtime="20230521 23:09:47.862"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:09:47.876" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:09:47.862" endtime="20230521 23:09:47.876"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:09:47.888" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:09:47.876" endtime="20230521 23:09:47.888"/>
</kw>
<status status="PASS" starttime="20230521 23:09:47.559" endtime="20230521 23:09:47.889"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:09:47.889" endtime="20230521 23:09:47.944"/>
</kw>
<status status="PASS" starttime="20230521 23:09:47.889" endtime="20230521 23:09:47.944"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:09:38.750" endtime="20230521 23:09:47.944"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:09:47.946" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:09:47.946" endtime="20230521 23:09:49.561"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:09:49.561" endtime="20230521 23:09:49.679"/>
</kw>
<status status="PASS" starttime="20230521 23:09:47.945" endtime="20230521 23:09:49.680"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:09:49.686" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:09:49.680" endtime="20230521 23:09:49.686"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:49.687" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:09:49.687" endtime="20230521 23:09:49.741"/>
</kw>
<status status="PASS" starttime="20230521 23:09:49.680" endtime="20230521 23:09:49.742"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:09:49.743" level="INFO">${name} = Aaron Wilson</msg>
<status status="PASS" starttime="20230521 23:09:49.742" endtime="20230521 23:09:49.743"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:09:49.743" level="INFO">${email} = ghughes@example.org</msg>
<status status="PASS" starttime="20230521 23:09:49.743" endtime="20230521 23:09:49.743"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:09:49.744" level="INFO">${password} = #5Ioppb^^!</msg>
<status status="PASS" starttime="20230521 23:09:49.743" endtime="20230521 23:09:49.744"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:49.744" level="INFO">Typing text 'Aaron Wilson' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:09:49.744" endtime="20230521 23:09:49.892"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:49.893" level="INFO">Typing text 'ghughes@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:09:49.892" endtime="20230521 23:09:50.009"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:50.010" level="INFO">Typing text '#5Ioppb^^!' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:09:50.010" endtime="20230521 23:09:50.107"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:50.108" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:09:50.107" endtime="20230521 23:09:50.186"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:09:50.187" level="INFO">${name} = Aaron Wilson</msg>
<status status="PASS" starttime="20230521 23:09:50.187" endtime="20230521 23:09:50.187"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:09:50.187" level="INFO">${email} = ghughes@example.org</msg>
<status status="PASS" starttime="20230521 23:09:50.187" endtime="20230521 23:09:50.187"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:09:50.188" level="INFO">${password} = #5Ioppb^^!</msg>
<status status="PASS" starttime="20230521 23:09:50.188" endtime="20230521 23:09:50.188"/>
</kw>
<status status="PASS" starttime="20230521 23:09:49.742" endtime="20230521 23:09:50.188"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:50.189" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:09:50.188" endtime="20230521 23:09:50.248"/>
</kw>
<status status="PASS" starttime="20230521 23:09:50.188" endtime="20230521 23:09:50.248"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:09:50.249" endtime="20230521 23:09:50.483"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:09:50.501" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:09:50.483" endtime="20230521 23:09:50.501"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:09:50.514" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230521 23:09:50.501" endtime="20230521 23:09:50.514"/>
</kw>
<status status="PASS" starttime="20230521 23:09:50.249" endtime="20230521 23:09:50.514"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:09:50.515" endtime="20230521 23:09:50.570"/>
</kw>
<status status="PASS" starttime="20230521 23:09:50.514" endtime="20230521 23:09:50.570"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:09:47.945" endtime="20230521 23:09:50.570"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:09:50.572" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:09:50.571" endtime="20230521 23:09:51.905"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:09:51.906" endtime="20230521 23:09:52.030"/>
</kw>
<status status="PASS" starttime="20230521 23:09:50.571" endtime="20230521 23:09:52.031"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:09:52.037" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:09:52.031" endtime="20230521 23:09:52.037"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:52.037" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:09:52.037" endtime="20230521 23:09:52.091"/>
</kw>
<status status="PASS" starttime="20230521 23:09:52.031" endtime="20230521 23:09:52.091"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:52.092" level="INFO">Typing text 'Aaron Wilson' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:09:52.092" endtime="20230521 23:09:52.204"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:52.204" level="INFO">Typing text 'ghughes@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:09:52.204" endtime="20230521 23:09:52.307"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:52.308" level="INFO">Typing text '#5Ioppb^^!' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:09:52.308" endtime="20230521 23:09:52.398"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:52.399" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:09:52.398" endtime="20230521 23:09:52.469"/>
</kw>
<status status="PASS" starttime="20230521 23:09:52.092" endtime="20230521 23:09:52.469"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:09:52.470" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:09:52.469" endtime="20230521 23:09:52.528"/>
</kw>
<status status="PASS" starttime="20230521 23:09:52.469" endtime="20230521 23:09:52.528"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:09:52.529" endtime="20230521 23:09:52.762"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:09:52.780" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:09:52.762" endtime="20230521 23:09:52.780"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:09:52.793" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230521 23:09:52.780" endtime="20230521 23:09:52.794"/>
</kw>
<status status="PASS" starttime="20230521 23:09:52.529" endtime="20230521 23:09:52.794"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:09:52.794" endtime="20230521 23:09:52.850"/>
</kw>
<status status="PASS" starttime="20230521 23:09:52.794" endtime="20230521 23:09:52.850"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:09:50.571" endtime="20230521 23:09:52.850"/>
</test>
<status status="PASS" starttime="20230521 23:09:38.742" endtime="20230521 23:09:52.851"/>
</suite>
<status status="PASS" starttime="20230521 23:09:38.741" endtime="20230521 23:09:52.853"/>
</suite>
<status status="PASS" starttime="20230521 23:09:37.687" endtime="20230521 23:09:52.854"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
