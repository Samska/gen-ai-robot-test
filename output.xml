<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230522 13:59:31.232" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:59:31.920" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:59:31.920" endtime="20230522 13:59:31.921"/>
</kw>
<status status="PASS" starttime="20230522 13:59:31.920" endtime="20230522 13:59:31.921"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:59:32.051" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:59:32.052" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8f70a5c2-5c82-4e8d-9731-4ef7a1a9d77d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd1b79df4f7a4096e665141f727e1f866;o=1', 'Date': 'Mon, 22 May 2023 13:59:32 GMT', 'Server': 'Google Frontend', 'Content-Length': '1346'} 
 body={
    "quantidade": 6,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Cheryl Black",
            "email": "ewashington@example.net",
            "password": "cofp2OYNr8us",
            "administrador": "true",
            "_id": "C3mJjC9bRt4vRiYd"
        },
        {
            "nome": "Sara Cooper",
            "email": "owilliams@example.com",
            "password": "309OSrbg1T6S",
            "administrador": "true",
            "_id": "JFESmL504ZICSz1Y"
        },
        {
            "nome": "Jared Wade",
            "email": "diana33@example.net",
            "password": "8xMeKtPlpWhl",
            "administrador": "true",
            "_id": "eT4v4fyKLjOkISyA"
        },
        {
            "nome": "April Stephens",
            "email": "ortizlatoya@example.net",
            "password": "42aUyqQMJpjB",
            "administrador": "true",
            "_id": "owd1dbjVDYAhGF2t"
        },
        {
            "nome": "Christina Green",
            "email": "robert93@example.net",
            "password": "t9F2raIITdfe",
            "administrador": "true",
            "_id": "zXZU5ChutMyKtXPN"
        }
    ]
} 
 </msg>
<msg timestamp="20230522 13:59:32.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:31.921" endtime="20230522 13:59:32.052"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:59:32.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.052" endtime="20230522 13:59:32.052"/>
</kw>
<status status="PASS" starttime="20230522 13:59:31.921" endtime="20230522 13:59:32.053"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:59:32.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.053" endtime="20230522 13:59:32.054"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:59:32.054" endtime="20230522 13:59:32.055"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.053" endtime="20230522 13:59:32.055"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:59:32.056" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 13:59:32.055" endtime="20230522 13:59:32.056"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.055" endtime="20230522 13:59:32.056"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:59:31.919" endtime="20230522 13:59:32.056"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:59:32.058" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:59:32.058" endtime="20230522 13:59:32.058"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.057" endtime="20230522 13:59:32.058"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 13:59:32.059" level="INFO">${name} = Dawn Matthews</msg>
<status status="PASS" starttime="20230522 13:59:32.059" endtime="20230522 13:59:32.059"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 13:59:32.060" level="INFO">${email} = gwillis@example.net</msg>
<status status="PASS" starttime="20230522 13:59:32.059" endtime="20230522 13:59:32.060"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 13:59:32.060" level="INFO">${password} = KJ7TfaFy4ZFe</msg>
<status status="PASS" starttime="20230522 13:59:32.060" endtime="20230522 13:59:32.060"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:59:32.061" level="INFO">${name} = Dawn Matthews</msg>
<status status="PASS" starttime="20230522 13:59:32.060" endtime="20230522 13:59:32.061"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:59:32.061" level="INFO">${email} = gwillis@example.net</msg>
<status status="PASS" starttime="20230522 13:59:32.061" endtime="20230522 13:59:32.061"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:59:32.062" level="INFO">${password} = KJ7TfaFy4ZFe</msg>
<status status="PASS" starttime="20230522 13:59:32.061" endtime="20230522 13:59:32.062"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.058" endtime="20230522 13:59:32.062"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:59:32.063" level="INFO">${payload} = {'nome': 'Dawn Matthews', 'email': 'gwillis@example.net', 'password': 'KJ7TfaFy4ZFe', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 13:59:32.062" endtime="20230522 13:59:32.063"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:59:32.063" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 13:59:32.063" endtime="20230522 13:59:32.063"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:59:32.130" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Dawn Matthews", "email": "gwillis@example.net", "password": "KJ7TfaFy4ZFe", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 13:59:32.130" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'eaee264c-c48b-4df4-8fb7-1cae44ca0baf', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5dbacb0efea116b720e1663b8382f73d', 'Date': 'Mon, 22 May 2023 13:59:32 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "qXMNjbLlGzrhi99P"
} 
 </msg>
<msg timestamp="20230522 13:59:32.131" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.063" endtime="20230522 13:59:32.131"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230522 13:59:32.132" level="INFO">${user_id} = qXMNjbLlGzrhi99P</msg>
<status status="PASS" starttime="20230522 13:59:32.131" endtime="20230522 13:59:32.132"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230522 13:59:32.132" level="INFO">${USER_ID} = qXMNjbLlGzrhi99P</msg>
<status status="PASS" starttime="20230522 13:59:32.132" endtime="20230522 13:59:32.133"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:59:32.133" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.133" endtime="20230522 13:59:32.133"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.062" endtime="20230522 13:59:32.133"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:59:32.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.133" endtime="20230522 13:59:32.134"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:59:32.134" endtime="20230522 13:59:32.135"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.133" endtime="20230522 13:59:32.135"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:59:32.136" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 13:59:32.135" endtime="20230522 13:59:32.136"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.135" endtime="20230522 13:59:32.136"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:59:32.057" endtime="20230522 13:59:32.136"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:59:32.137" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:59:32.137" endtime="20230522 13:59:32.138"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.137" endtime="20230522 13:59:32.138"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:59:32.204" level="INFO">GET Request : url=https://serverest.dev/usuarios/qXMNjbLlGzrhi99P 
 path_url=/usuarios/qXMNjbLlGzrhi99P 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:59:32.204" level="INFO">GET Response : url=https://serverest.dev/usuarios/qXMNjbLlGzrhi99P 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5d15207c-b35e-4481-af11-f01d53557656', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2e35fbc3e5c9ebf5ace503c5cd5369ff', 'Date': 'Mon, 22 May 2023 13:59:32 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Dawn Matthews",
    "email": "gwillis@example.net",
    "password": "KJ7TfaFy4ZFe",
    "administrador": "false",
    "_id": "qXMNjbLlGzrhi99P"
} 
 </msg>
<msg timestamp="20230522 13:59:32.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.138" endtime="20230522 13:59:32.205"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:59:32.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.205" endtime="20230522 13:59:32.205"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.138" endtime="20230522 13:59:32.205"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:59:32.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.206" endtime="20230522 13:59:32.207"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:59:32.207" endtime="20230522 13:59:32.207"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.206" endtime="20230522 13:59:32.207"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:59:32.208" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230522 13:59:32.208" endtime="20230522 13:59:32.208"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.208" endtime="20230522 13:59:32.209"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:59:32.136" endtime="20230522 13:59:32.209"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:59:32.210" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:59:32.210" endtime="20230522 13:59:32.210"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.209" endtime="20230522 13:59:32.210"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:59:32.211" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 13:59:32.211" endtime="20230522 13:59:32.211"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:59:32.211" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 13:59:32.211" endtime="20230522 13:59:32.211"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:59:32.281" level="INFO">PUT Request : url=https://serverest.dev/usuarios/qXMNjbLlGzrhi99P 
 path_url=/usuarios/qXMNjbLlGzrhi99P 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 13:59:32.281" level="INFO">PUT Response : url=https://serverest.dev/usuarios/qXMNjbLlGzrhi99P 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '55fb29cb-83bf-440c-8e14-b8f8beebf264', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a4c6d6e9cacc01a8f89f45b7fea00208', 'Date': 'Mon, 22 May 2023 13:59:32 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230522 13:59:32.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.211" endtime="20230522 13:59:32.281"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:59:32.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.282" endtime="20230522 13:59:32.282"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.210" endtime="20230522 13:59:32.282"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:59:32.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.283" endtime="20230522 13:59:32.283"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:59:32.284" endtime="20230522 13:59:32.284"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.282" endtime="20230522 13:59:32.284"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:59:32.285" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 13:59:32.285" endtime="20230522 13:59:32.286"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.285" endtime="20230522 13:59:32.286"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:59:32.209" endtime="20230522 13:59:32.286"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:59:32.287" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:59:32.287" endtime="20230522 13:59:32.288"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.287" endtime="20230522 13:59:32.288"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:59:32.352" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/qXMNjbLlGzrhi99P 
 path_url=/usuarios/qXMNjbLlGzrhi99P 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:59:32.352" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/qXMNjbLlGzrhi99P 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '56e2e6b5-8748-4578-a31a-ca1977c99799', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '45182e787100bc2fe7d38b851217cca3', 'Date': 'Mon, 22 May 2023 13:59:32 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230522 13:59:32.352" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.288" endtime="20230522 13:59:32.352"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:59:32.352" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.352" endtime="20230522 13:59:32.353"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.288" endtime="20230522 13:59:32.353"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:59:32.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:59:32.353" endtime="20230522 13:59:32.354"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:59:32.354" endtime="20230522 13:59:32.355"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.353" endtime="20230522 13:59:32.355"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:59:32.356" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 13:59:32.355" endtime="20230522 13:59:32.356"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.355" endtime="20230522 13:59:32.356"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:59:32.286" endtime="20230522 13:59:32.356"/>
</test>
<status status="PASS" starttime="20230522 13:59:31.252" endtime="20230522 13:59:32.357"/>
</suite>
<status status="PASS" starttime="20230522 13:59:31.251" endtime="20230522 13:59:32.358"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:59:32.369" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:59:32.368" endtime="20230522 13:59:56.221"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:59:56.222" endtime="20230522 13:59:56.407"/>
</kw>
<status status="PASS" starttime="20230522 13:59:32.368" endtime="20230522 13:59:56.407"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:59:56.413" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:59:56.408" endtime="20230522 13:59:56.413"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:59:56.414" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:59:56.413" endtime="20230522 13:59:56.884"/>
</kw>
<status status="PASS" starttime="20230522 13:59:56.407" endtime="20230522 13:59:56.884"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:59:56.885" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:59:56.885" endtime="20230522 13:59:57.166"/>
</kw>
<status status="PASS" starttime="20230522 13:59:56.884" endtime="20230522 13:59:57.166"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:59:57.166" endtime="20230522 13:59:57.400"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:59:57.419" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:59:57.400" endtime="20230522 13:59:57.419"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:59:57.532" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:59:57.419" endtime="20230522 13:59:57.532"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:59:57.546" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:59:57.532" endtime="20230522 13:59:57.546"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:59:57.559" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:59:57.546" endtime="20230522 13:59:57.559"/>
</kw>
<status status="PASS" starttime="20230522 13:59:57.166" endtime="20230522 13:59:57.559"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:59:57.559" endtime="20230522 13:59:57.615"/>
</kw>
<status status="PASS" starttime="20230522 13:59:57.559" endtime="20230522 13:59:57.615"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:59:32.368" endtime="20230522 13:59:57.615"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:59:57.617" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:59:57.617" endtime="20230522 13:59:58.919"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:59:58.920" endtime="20230522 13:59:59.023"/>
</kw>
<status status="PASS" starttime="20230522 13:59:57.616" endtime="20230522 13:59:59.024"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:59:59.029" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:59:59.024" endtime="20230522 13:59:59.029"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:59:59.030" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:59:59.029" endtime="20230522 13:59:59.110"/>
</kw>
<status status="PASS" starttime="20230522 13:59:59.024" endtime="20230522 13:59:59.111"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 13:59:59.112" level="INFO">${name} = Melissa Grant</msg>
<status status="PASS" starttime="20230522 13:59:59.111" endtime="20230522 13:59:59.112"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 13:59:59.112" level="INFO">${email} = amyortega@example.net</msg>
<status status="PASS" starttime="20230522 13:59:59.112" endtime="20230522 13:59:59.112"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 13:59:59.113" level="INFO">${password} = YctFqVWr4T8d</msg>
<status status="PASS" starttime="20230522 13:59:59.113" endtime="20230522 13:59:59.113"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:59:59.114" level="INFO">Typing text 'Melissa Grant' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 13:59:59.113" endtime="20230522 13:59:59.340"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:59:59.341" level="INFO">Typing text 'amyortega@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 13:59:59.340" endtime="20230522 13:59:59.531"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:59:59.532" level="INFO">Typing text 'YctFqVWr4T8d' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 13:59:59.531" endtime="20230522 13:59:59.732"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 13:59:59.733" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 13:59:59.733" endtime="20230522 13:59:59.829"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:59:59.830" level="INFO">${name} = Melissa Grant</msg>
<status status="PASS" starttime="20230522 13:59:59.830" endtime="20230522 13:59:59.830"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:59:59.830" level="INFO">${email} = amyortega@example.net</msg>
<status status="PASS" starttime="20230522 13:59:59.830" endtime="20230522 13:59:59.830"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:59:59.831" level="INFO">${password} = YctFqVWr4T8d</msg>
<status status="PASS" starttime="20230522 13:59:59.831" endtime="20230522 13:59:59.831"/>
</kw>
<status status="PASS" starttime="20230522 13:59:59.111" endtime="20230522 13:59:59.831"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:59:59.832" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:59:59.831" endtime="20230522 13:59:59.892"/>
</kw>
<status status="PASS" starttime="20230522 13:59:59.831" endtime="20230522 13:59:59.892"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:59:59.892" endtime="20230522 14:00:00.126"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 14:00:00.144" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 14:00:00.126" endtime="20230522 14:00:00.144"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:00:00.157" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230522 14:00:00.144" endtime="20230522 14:00:00.157"/>
</kw>
<status status="PASS" starttime="20230522 13:59:59.892" endtime="20230522 14:00:00.158"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 14:00:00.158" endtime="20230522 14:00:00.213"/>
</kw>
<status status="PASS" starttime="20230522 14:00:00.158" endtime="20230522 14:00:00.213"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:59:57.616" endtime="20230522 14:00:00.214"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 14:00:00.216" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 14:00:00.215" endtime="20230522 14:00:01.498"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 14:00:01.498" endtime="20230522 14:00:01.623"/>
</kw>
<status status="PASS" starttime="20230522 14:00:00.215" endtime="20230522 14:00:01.623"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 14:00:01.629" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 14:00:01.624" endtime="20230522 14:00:01.629"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 14:00:01.630" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 14:00:01.629" endtime="20230522 14:00:01.683"/>
</kw>
<status status="PASS" starttime="20230522 14:00:01.623" endtime="20230522 14:00:01.683"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:00:01.684" level="INFO">Typing text 'Melissa Grant' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 14:00:01.684" endtime="20230522 14:00:01.807"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:00:01.808" level="INFO">Typing text 'amyortega@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 14:00:01.807" endtime="20230522 14:00:01.907"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:00:01.908" level="INFO">Typing text 'YctFqVWr4T8d' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 14:00:01.907" endtime="20230522 14:00:02.001"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 14:00:02.002" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 14:00:02.002" endtime="20230522 14:00:02.101"/>
</kw>
<status status="PASS" starttime="20230522 14:00:01.683" endtime="20230522 14:00:02.101"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 14:00:02.102" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 14:00:02.102" endtime="20230522 14:00:02.162"/>
</kw>
<status status="PASS" starttime="20230522 14:00:02.101" endtime="20230522 14:00:02.162"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 14:00:02.163" endtime="20230522 14:00:02.397"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 14:00:02.416" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 14:00:02.397" endtime="20230522 14:00:02.416"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:00:02.429" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230522 14:00:02.416" endtime="20230522 14:00:02.429"/>
</kw>
<status status="PASS" starttime="20230522 14:00:02.162" endtime="20230522 14:00:02.429"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 14:00:02.430" endtime="20230522 14:00:02.484"/>
</kw>
<status status="PASS" starttime="20230522 14:00:02.429" endtime="20230522 14:00:02.484"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 14:00:00.214" endtime="20230522 14:00:02.485"/>
</test>
<status status="PASS" starttime="20230522 13:59:32.361" endtime="20230522 14:00:02.485"/>
</suite>
<status status="PASS" starttime="20230522 13:59:32.359" endtime="20230522 14:00:02.487"/>
</suite>
<suite id="s1-s3" name="Visual" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual">
<suite id="s1-s3-s1" name="Test Visual Check" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual/test_visual_check.robot">
<test id="s1-s3-s1-t1" name="Scenario: Visual check login page" line="11">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 14:00:03.503" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 14:00:03.502" endtime="20230522 14:00:04.804"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 14:00:04.805" endtime="20230522 14:00:04.925"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<msg timestamp="20230522 14:00:07.401" level="ERROR">Re-raising an error received from SDK server: USDKFailure('Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)', '    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)\n    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)\n    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)\n    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)\n    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)\n    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)\n    at async openEyes (/snapshot/core/dist/open-eyes.js)\n    at async /snapshot/core/dist/make-manager.js')</msg>
<msg timestamp="20230522 14:00:07.403" level="FAIL">EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 145, in open
    return eyes.open(self.fetch_driver())
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 92, in open
    self._eyes_ref = self._commands.manager_open_eyes(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 151, in manager_open_eyes
    return self._checked_command(context, "EyesManager.openEyes", payload)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 271, in _checked_command
    _check_error(response_payload)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 281, in _check_error
    raise usdk_error
applitools.common.errors.USDKFailure: Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)
    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)
    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)
    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)
    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)
    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)
    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)
    at async openEyes (/snapshot/core/dist/open-eyes.js)
    at async /snapshot/core/dist/make-manager.js
</msg>
<status status="FAIL" starttime="20230522 14:00:04.925" endtime="20230522 14:00:07.403"/>
</kw>
<status status="FAIL" starttime="20230522 14:00:03.502" endtime="20230522 14:00:07.404"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<msg timestamp="20230522 14:00:07.405" level="FAIL">EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 164, in close
    return self.current_eyes.close_async()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 199, in close_async
    return self._close(False, False)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 528, in _close
    raise EyesError("Eyes not open")
applitools.common.errors.EyesError: Eyes not open
</msg>
<status status="FAIL" starttime="20230522 14:00:07.404" endtime="20230522 14:00:07.405"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="NOT RUN" starttime="20230522 14:00:07.405" endtime="20230522 14:00:07.405"/>
</kw>
<status status="FAIL" starttime="20230522 14:00:07.404" endtime="20230522 14:00:07.405">EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 164, in close
    return self.current_eyes.close_async()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 199, in close_async
    return self._close(False, False)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 528, in _close
    raise EyesError("Eyes not open")
applitools.common.errors.EyesError: Eyes not open
</status>
</kw>
<tag>visual</tag>
<status status="FAIL" starttime="20230522 14:00:03.501" endtime="20230522 14:00:07.405">Setup failed:
EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 145, in open
    return eyes.open(self.fetch_driver())
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 92, in open
    self._eyes_ref = self._commands.manager_open_eyes(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 151, in manager_open_eyes
    return self._checked_command(context, "EyesManager.openEyes", payload)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 271, in _checked_command
    _check_error(response_payload)
    [ Message content over the limit has been removed. ]
...ackages/applitools/selenium/command_executor.py", line 281, in _check_error
    raise usdk_error
applitools.common.errors.USDKFailure: Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)
    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)
    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)
    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)
    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)
    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)
    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)
    at async openEyes (/snapshot/core/dist/open-eyes.js)
    at async /snapshot/core/dist/make-manager.js

Also teardown failed:
EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 164, in close
    return self.current_eyes.close_async()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 199, in close_async
    return self._close(False, False)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 528, in _close
    raise EyesError("Eyes not open")
applitools.common.errors.EyesError: Eyes not open
</status>
</test>
<test id="s1-s3-s1-t2" name="Scenario: Visual check signup page" line="16">
<tag>robot:exit</tag>
<tag>visual</tag>
<status status="FAIL" starttime="20230522 14:00:07.406" endtime="20230522 14:00:07.407">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-t3" name="Scenario: Visual check signup with empty fields" line="21">
<tag>robot:exit</tag>
<tag>visual</tag>
<status status="FAIL" starttime="20230522 14:00:07.407" endtime="20230522 14:00:07.409">Test execution stopped due to a fatal error.</status>
</test>
<meta name="Applitools TestResults Path">/tmp/tmptp5ac2jl/EyesTestResults-0793ddcc9a5a4dceb715b1c423d3815c.json</meta>
<status status="FAIL" starttime="20230522 14:00:02.490" endtime="20230522 14:00:07.409"/>
</suite>
<status status="FAIL" starttime="20230522 14:00:02.488" endtime="20230522 14:00:07.411"/>
</suite>
<status status="FAIL" starttime="20230522 13:59:31.233" endtime="20230522 14:00:07.412"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="1" skip="0" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
<stat pass="0" fail="3" skip="0">visual</stat>
</tag>
<suite>
<stat pass="8" fail="3" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
<stat pass="0" fail="3" skip="0" id="s1-s3" name="Visual">Tests.Visual</stat>
<stat pass="0" fail="3" skip="0" id="s1-s3-s1" name="Test Visual Check">Tests.Visual.Test Visual Check</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230522 14:00:07.401" level="ERROR">Re-raising an error received from SDK server: USDKFailure('Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)', '    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)\n    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)\n    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)\n    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)\n    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)\n    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)\n    at async openEyes (/snapshot/core/dist/open-eyes.js)\n    at async /snapshot/core/dist/make-manager.js')</msg>
</errors>
</robot>
