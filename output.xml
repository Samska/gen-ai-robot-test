<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230418 16:19:02.382" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 16:19:02.836" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 16:19:02.835" endtime="20230418 16:19:02.836"/>
</kw>
<status status="PASS" starttime="20230418 16:19:02.835" endtime="20230418 16:19:02.836"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 16:19:03.066" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 16:19:03.067" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6815494b-7a75-4899-8a18-af608e232c52', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5e3f3f21f76e23d7bd6385336c4a5500;o=1', 'Date': 'Tue, 18 Apr 2023 16:19:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230418 16:19:03.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:02.836" endtime="20230418 16:19:03.067"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 16:19:03.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.067" endtime="20230418 16:19:03.067"/>
</kw>
<status status="PASS" starttime="20230418 16:19:02.836" endtime="20230418 16:19:03.068"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 16:19:03.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.068" endtime="20230418 16:19:03.069"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 16:19:03.069" endtime="20230418 16:19:03.070"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.068" endtime="20230418 16:19:03.070"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 16:19:03.071" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 16:19:03.070" endtime="20230418 16:19:03.071"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.070" endtime="20230418 16:19:03.071"/>
</kw>
<status status="PASS" starttime="20230418 16:19:02.834" endtime="20230418 16:19:03.071"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 16:19:03.073" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 16:19:03.072" endtime="20230418 16:19:03.073"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.072" endtime="20230418 16:19:03.073"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230418 16:19:03.074" level="INFO">${name} = Michael Thomas</msg>
<status status="PASS" starttime="20230418 16:19:03.073" endtime="20230418 16:19:03.074"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230418 16:19:03.074" level="INFO">${email} = meaganbarnes@example.com</msg>
<status status="PASS" starttime="20230418 16:19:03.074" endtime="20230418 16:19:03.074"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230418 16:19:03.075" level="INFO">${password} = 9Umi25Db@s</msg>
<status status="PASS" starttime="20230418 16:19:03.075" endtime="20230418 16:19:03.075"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 16:19:03.075" level="INFO">${name} = Michael Thomas</msg>
<status status="PASS" starttime="20230418 16:19:03.075" endtime="20230418 16:19:03.075"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 16:19:03.075" level="INFO">${email} = meaganbarnes@example.com</msg>
<status status="PASS" starttime="20230418 16:19:03.075" endtime="20230418 16:19:03.075"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 16:19:03.076" level="INFO">${password} = 9Umi25Db@s</msg>
<status status="PASS" starttime="20230418 16:19:03.076" endtime="20230418 16:19:03.076"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.073" endtime="20230418 16:19:03.076"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 16:19:03.077" level="INFO">${payload} = {'nome': 'Michael Thomas', 'email': 'meaganbarnes@example.com', 'password': '9Umi25Db@s', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 16:19:03.076" endtime="20230418 16:19:03.077"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 16:19:03.077" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 16:19:03.077" endtime="20230418 16:19:03.077"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 16:19:03.175" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Michael Thomas", "email": "meaganbarnes@example.com", "password": "9Umi25Db@s", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 16:19:03.175" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '94c89925-e8f5-4d9a-bfc5-fd1bef253878', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fdfdc184007c04fc68f391934ca51f74', 'Date': 'Tue, 18 Apr 2023 16:19:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "6lhXNdlzOpBxrjKB"
} 
 </msg>
<msg timestamp="20230418 16:19:03.175" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.077" endtime="20230418 16:19:03.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230418 16:19:03.176" level="INFO">${user_id} = 6lhXNdlzOpBxrjKB</msg>
<status status="PASS" starttime="20230418 16:19:03.175" endtime="20230418 16:19:03.176"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230418 16:19:03.177" level="INFO">${USER_ID} = 6lhXNdlzOpBxrjKB</msg>
<status status="PASS" starttime="20230418 16:19:03.176" endtime="20230418 16:19:03.177"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 16:19:03.177" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.177" endtime="20230418 16:19:03.177"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.076" endtime="20230418 16:19:03.177"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 16:19:03.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.177" endtime="20230418 16:19:03.178"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 16:19:03.178" endtime="20230418 16:19:03.179"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.177" endtime="20230418 16:19:03.179"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 16:19:03.180" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 16:19:03.179" endtime="20230418 16:19:03.180"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.179" endtime="20230418 16:19:03.180"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.072" endtime="20230418 16:19:03.180"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 16:19:03.181" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 16:19:03.181" endtime="20230418 16:19:03.181"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.181" endtime="20230418 16:19:03.181"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 16:19:03.278" level="INFO">GET Request : url=https://serverest.dev/usuarios/6lhXNdlzOpBxrjKB 
 path_url=/usuarios/6lhXNdlzOpBxrjKB 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 16:19:03.278" level="INFO">GET Response : url=https://serverest.dev/usuarios/6lhXNdlzOpBxrjKB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '66240190-7b4c-41da-b820-0a24206a2a99', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ae3e838ed0831fe15ddc8033ccb05fde', 'Date': 'Tue, 18 Apr 2023 16:19:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Michael Thomas",
    "email": "meaganbarnes@example.com",
    "password": "9Umi25Db@s",
    "administrador": "false",
    "_id": "6lhXNdlzOpBxrjKB"
} 
 </msg>
<msg timestamp="20230418 16:19:03.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.182" endtime="20230418 16:19:03.278"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 16:19:03.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.279" endtime="20230418 16:19:03.279"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.182" endtime="20230418 16:19:03.279"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 16:19:03.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.279" endtime="20230418 16:19:03.280"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 16:19:03.280" endtime="20230418 16:19:03.281"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.279" endtime="20230418 16:19:03.281"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 16:19:03.282" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230418 16:19:03.281" endtime="20230418 16:19:03.282"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.281" endtime="20230418 16:19:03.282"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.180" endtime="20230418 16:19:03.282"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 16:19:03.283" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 16:19:03.283" endtime="20230418 16:19:03.284"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.283" endtime="20230418 16:19:03.284"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 16:19:03.284" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 16:19:03.284" endtime="20230418 16:19:03.284"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 16:19:03.285" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 16:19:03.284" endtime="20230418 16:19:03.285"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 16:19:03.383" level="INFO">PUT Request : url=https://serverest.dev/usuarios/6lhXNdlzOpBxrjKB 
 path_url=/usuarios/6lhXNdlzOpBxrjKB 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 16:19:03.383" level="INFO">PUT Response : url=https://serverest.dev/usuarios/6lhXNdlzOpBxrjKB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4497ce65-6df8-439d-ad80-41a9ced5c96f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e4fe391b7d2454e1d7344bcdbf52cd8b', 'Date': 'Tue, 18 Apr 2023 16:19:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230418 16:19:03.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.285" endtime="20230418 16:19:03.384"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 16:19:03.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.384" endtime="20230418 16:19:03.384"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.284" endtime="20230418 16:19:03.384"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 16:19:03.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.385" endtime="20230418 16:19:03.385"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 16:19:03.385" endtime="20230418 16:19:03.386"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.384" endtime="20230418 16:19:03.386"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 16:19:03.387" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 16:19:03.386" endtime="20230418 16:19:03.387"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.386" endtime="20230418 16:19:03.387"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.282" endtime="20230418 16:19:03.387"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 16:19:03.388" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 16:19:03.388" endtime="20230418 16:19:03.389"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.388" endtime="20230418 16:19:03.389"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 16:19:03.486" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/6lhXNdlzOpBxrjKB 
 path_url=/usuarios/6lhXNdlzOpBxrjKB 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230418 16:19:03.486" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/6lhXNdlzOpBxrjKB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '53efd086-5e69-41f5-b6e4-b693e2cb0373', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '60d8a41a48284d306042a3ce5978a07e', 'Date': 'Tue, 18 Apr 2023 16:19:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230418 16:19:03.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.389" endtime="20230418 16:19:03.486"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 16:19:03.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.486" endtime="20230418 16:19:03.487"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.389" endtime="20230418 16:19:03.487"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 16:19:03.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 16:19:03.487" endtime="20230418 16:19:03.488"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 16:19:03.488" endtime="20230418 16:19:03.489"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.487" endtime="20230418 16:19:03.489"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 16:19:03.490" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 16:19:03.489" endtime="20230418 16:19:03.490"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.489" endtime="20230418 16:19:03.490"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.387" endtime="20230418 16:19:03.490"/>
</test>
<status status="PASS" starttime="20230418 16:19:02.405" endtime="20230418 16:19:03.490"/>
</suite>
<status status="PASS" starttime="20230418 16:19:02.404" endtime="20230418 16:19:03.492"/>
</suite>
<status status="PASS" starttime="20230418 16:19:02.403" endtime="20230418 16:19:03.492"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log In to Sauce Demo" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>headless ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 16:19:03.501" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 16:19:03.500" endtime="20230418 16:19:05.129"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 16:19:05.130" endtime="20230418 16:19:05.238"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.500" endtime="20230418 16:19:05.238"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>standard_user</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 16:19:05.239" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 16:19:05.238" endtime="20230418 16:19:05.344"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>secret_sauce</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 16:19:05.345" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 16:19:05.344" endtime="20230418 16:19:05.428"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 16:19:05.429" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 16:19:05.428" endtime="20230418 16:19:05.514"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 16:19:05.515" endtime="20230418 16:19:05.574"/>
</kw>
<status status="PASS" starttime="20230418 16:19:05.514" endtime="20230418 16:19:05.574"/>
</kw>
<status status="PASS" starttime="20230418 16:19:03.500" endtime="20230418 16:19:05.574"/>
</test>
<status status="PASS" starttime="20230418 16:19:03.496" endtime="20230418 16:19:05.575"/>
</suite>
<status status="PASS" starttime="20230418 16:19:03.494" endtime="20230418 16:19:05.576"/>
</suite>
<status status="PASS" starttime="20230418 16:19:03.493" endtime="20230418 16:19:05.577"/>
</suite>
<status status="PASS" starttime="20230418 16:19:02.383" endtime="20230418 16:19:05.577"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
