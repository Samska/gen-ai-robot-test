<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230522 14:42:02.634" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:42:03.232" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:42:03.231" endtime="20230522 14:42:03.232"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.231" endtime="20230522 14:42:03.232"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:42:03.383" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 14:42:03.383" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '06576851-3f42-4a6a-b82b-840df8e862fc', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0e0f060571b274fef1a0bb67ad8b28e3;o=1', 'Date': 'Mon, 22 May 2023 14:42:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '3303'} 
 body={
    "quantidade": 15,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "B7UCYpaVdXPDXSrS"
        },
        {
            "nome": "Cheryl Black",
            "email": "ewashington@example.net",
            "password": "cofp2OYNr8us",
            "administrador": "true",
            "_id": "C3mJjC9bRt4vRiYd"
        },
        {
            "nome": "Sara Cooper",
            "email": "owilliams@example.com",
            "password": "309OSrbg1T6S",
            "administrador": "true",
            "_id": "JFESmL504ZICSz1Y"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano9@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "YiAua7K6YFlmqD5i"
        },
        {
            "nome": "Rachel Reed",
            "email": "john38@example.com",
            "password": "3IQMttv5b7Iy",
            "administrador": "true",
            "_id": "bw2I97rWCSui7nAD"
        },
        {
            "nome": "Jared Wade",
            "email": "diana33@example.net",
            "password": "8xMeKtPlpWhl",
            "administrador": "true",
            "_id": "eT4v4fyKLjOkISyA"
        },
        {
            "nome": "John Ford",
            "email": "dunntonya@example.org",
            "password": "efW1YTZgeTJf",
            "administrador": "true",
            "_id": "eqUe3cKnInMF6wIr"
        },
        {
            "nome": "Michael Jones",
            "email": "charles50@example.net",
            "password": "OWBqDtBG81dn",
            "administrador": "true",
            "_id": "hWj6bB3MawMXZz88"
        },
        {
            "nome": "Rodney Lee",
            "email": "martinezkristy@example.net",
            "password": "8HwKukyyMj3Z",
            "administrador": "true",
            "_id": "i0jHidMscSE4smQR"
        },
        {
            "nome": "April Stephens",
            "email": "ortizlatoya@example.net",
            "password": "42aUyqQMJpjB",
            "administrador": "true",
            "_id": "owd1dbjVDYAhGF2t"
        },
        {
            "nome": "Melissa Grant",
            "email": "amyortega@example.net",
            "password": "YctFqVWr4T8d",
            "administrador": "true",
            "_id": "qwyjhpZK56HugKqO"
        },
        {
            "nome": "Dr. Chad Johnson",
            "email": "ilamb@example.com",
            "password": "ED8DimNr1RNy",
            "administrador": "true",
            "_id": "rFXRokgB8ayMBxkq"
        },
        {
            "nome": "Jesus Blankenship",
            "email": "wilsonkenneth@example.com",
            "password": "36HuwijeFJmg",
            "administrador": "true",
            "_id": "vqL6orrqjTjRJXcP"
        },
        {
            "nome": "Christina Green",
            "email": "robert93@example.net",
            "password": "t9F2raIITdfe",
            "administrador": "true",
            "_id": "zXZU5ChutMyKtXPN"
        }
    ]
} 
 </msg>
<msg timestamp="20230522 14:42:03.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.233" endtime="20230522 14:42:03.383"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:42:03.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.383" endtime="20230522 14:42:03.384"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.232" endtime="20230522 14:42:03.384"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:42:03.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.384" endtime="20230522 14:42:03.385"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:42:03.385" endtime="20230522 14:42:03.386"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.384" endtime="20230522 14:42:03.386"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:42:03.387" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 14:42:03.386" endtime="20230522 14:42:03.387"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.386" endtime="20230522 14:42:03.387"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:42:03.230" endtime="20230522 14:42:03.387"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:42:03.389" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:42:03.388" endtime="20230522 14:42:03.389"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.388" endtime="20230522 14:42:03.389"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 14:42:03.390" level="INFO">${name} = Amanda Mahoney</msg>
<status status="PASS" starttime="20230522 14:42:03.389" endtime="20230522 14:42:03.390"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 14:42:03.390" level="INFO">${email} = dparrish@example.com</msg>
<status status="PASS" starttime="20230522 14:42:03.390" endtime="20230522 14:42:03.390"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 14:42:03.391" level="INFO">${password} = GorN8hByDuJg</msg>
<status status="PASS" starttime="20230522 14:42:03.390" endtime="20230522 14:42:03.391"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:42:03.391" level="INFO">${name} = Amanda Mahoney</msg>
<status status="PASS" starttime="20230522 14:42:03.391" endtime="20230522 14:42:03.391"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:42:03.391" level="INFO">${email} = dparrish@example.com</msg>
<status status="PASS" starttime="20230522 14:42:03.391" endtime="20230522 14:42:03.391"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:42:03.392" level="INFO">${password} = GorN8hByDuJg</msg>
<status status="PASS" starttime="20230522 14:42:03.392" endtime="20230522 14:42:03.392"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.389" endtime="20230522 14:42:03.392"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 14:42:03.393" level="INFO">${payload} = {'nome': 'Amanda Mahoney', 'email': 'dparrish@example.com', 'password': 'GorN8hByDuJg', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 14:42:03.392" endtime="20230522 14:42:03.393"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 14:42:03.393" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 14:42:03.393" endtime="20230522 14:42:03.393"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:42:03.480" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Amanda Mahoney", "email": "dparrish@example.com", "password": "GorN8hByDuJg", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 14:42:03.480" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '10df14bf-86fb-422b-89ad-7a3271a77346', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8e2c67b8a110d755e4aea1815a6008a8', 'Date': 'Mon, 22 May 2023 14:42:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "beldFGvZuDM6WBQ6"
} 
 </msg>
<msg timestamp="20230522 14:42:03.480" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.393" endtime="20230522 14:42:03.480"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230522 14:42:03.481" level="INFO">${user_id} = beldFGvZuDM6WBQ6</msg>
<status status="PASS" starttime="20230522 14:42:03.480" endtime="20230522 14:42:03.481"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230522 14:42:03.481" level="INFO">${USER_ID} = beldFGvZuDM6WBQ6</msg>
<status status="PASS" starttime="20230522 14:42:03.481" endtime="20230522 14:42:03.481"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:42:03.482" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.482" endtime="20230522 14:42:03.482"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.392" endtime="20230522 14:42:03.482"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:42:03.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.482" endtime="20230522 14:42:03.483"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:42:03.483" endtime="20230522 14:42:03.484"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.482" endtime="20230522 14:42:03.484"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:42:03.485" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 14:42:03.484" endtime="20230522 14:42:03.485"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.484" endtime="20230522 14:42:03.485"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:42:03.387" endtime="20230522 14:42:03.485"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:42:03.486" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:42:03.486" endtime="20230522 14:42:03.487"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.486" endtime="20230522 14:42:03.487"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:42:03.567" level="INFO">GET Request : url=https://serverest.dev/usuarios/beldFGvZuDM6WBQ6 
 path_url=/usuarios/beldFGvZuDM6WBQ6 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 14:42:03.567" level="INFO">GET Response : url=https://serverest.dev/usuarios/beldFGvZuDM6WBQ6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fb254fc8-49d1-4cf4-ba12-b2a92f7cc742', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fdc10bb9575af1f76991f88a5a6434c8', 'Date': 'Mon, 22 May 2023 14:42:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Amanda Mahoney",
    "email": "dparrish@example.com",
    "password": "GorN8hByDuJg",
    "administrador": "false",
    "_id": "beldFGvZuDM6WBQ6"
} 
 </msg>
<msg timestamp="20230522 14:42:03.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.487" endtime="20230522 14:42:03.568"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:42:03.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.568" endtime="20230522 14:42:03.568"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.487" endtime="20230522 14:42:03.568"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:42:03.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.569" endtime="20230522 14:42:03.569"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:42:03.569" endtime="20230522 14:42:03.570"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.568" endtime="20230522 14:42:03.570"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:42:03.571" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230522 14:42:03.571" endtime="20230522 14:42:03.571"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.570" endtime="20230522 14:42:03.571"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:42:03.485" endtime="20230522 14:42:03.571"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:42:03.573" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:42:03.573" endtime="20230522 14:42:03.573"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.572" endtime="20230522 14:42:03.573"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 14:42:03.574" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 14:42:03.574" endtime="20230522 14:42:03.574"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 14:42:03.574" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 14:42:03.574" endtime="20230522 14:42:03.574"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:42:03.654" level="INFO">PUT Request : url=https://serverest.dev/usuarios/beldFGvZuDM6WBQ6 
 path_url=/usuarios/beldFGvZuDM6WBQ6 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 14:42:03.654" level="INFO">PUT Response : url=https://serverest.dev/usuarios/beldFGvZuDM6WBQ6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c942f37f-6d0c-493d-add7-9202e8ac22a4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9e80b8b909820f35ccf8894c8c48925f', 'Date': 'Mon, 22 May 2023 14:42:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230522 14:42:03.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.574" endtime="20230522 14:42:03.655"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:42:03.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.655" endtime="20230522 14:42:03.655"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.573" endtime="20230522 14:42:03.655"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:42:03.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.656" endtime="20230522 14:42:03.656"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:42:03.657" endtime="20230522 14:42:03.657"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.655" endtime="20230522 14:42:03.657"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:42:03.658" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 14:42:03.658" endtime="20230522 14:42:03.658"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.657" endtime="20230522 14:42:03.658"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:42:03.572" endtime="20230522 14:42:03.658"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:42:03.660" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:42:03.659" endtime="20230522 14:42:03.660"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.659" endtime="20230522 14:42:03.660"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:42:03.744" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/beldFGvZuDM6WBQ6 
 path_url=/usuarios/beldFGvZuDM6WBQ6 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230522 14:42:03.744" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/beldFGvZuDM6WBQ6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '60a25506-1107-41f2-a5e6-63b6fbe84223', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '85e1054de0d9003ad6a4484ef4b05b51', 'Date': 'Mon, 22 May 2023 14:42:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230522 14:42:03.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.661" endtime="20230522 14:42:03.744"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:42:03.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.745" endtime="20230522 14:42:03.745"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.660" endtime="20230522 14:42:03.745"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:42:03.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:42:03.745" endtime="20230522 14:42:03.746"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:42:03.746" endtime="20230522 14:42:03.747"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.745" endtime="20230522 14:42:03.747"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:42:03.748" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 14:42:03.747" endtime="20230522 14:42:03.748"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.747" endtime="20230522 14:42:03.748"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:42:03.659" endtime="20230522 14:42:03.748"/>
</test>
<status status="PASS" starttime="20230522 14:42:02.654" endtime="20230522 14:42:03.749"/>
</suite>
<status status="PASS" starttime="20230522 14:42:02.652" endtime="20230522 14:42:03.750"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 14:42:03.759" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 14:42:03.759" endtime="20230522 14:42:06.111"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 14:42:06.112" endtime="20230522 14:42:06.216"/>
</kw>
<status status="PASS" starttime="20230522 14:42:03.758" endtime="20230522 14:42:06.216"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 14:42:06.221" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 14:42:06.216" endtime="20230522 14:42:06.221"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:06.222" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 14:42:06.221" endtime="20230522 14:42:06.281"/>
</kw>
<status status="PASS" starttime="20230522 14:42:06.216" endtime="20230522 14:42:06.281"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:06.282" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 14:42:06.282" endtime="20230522 14:42:06.345"/>
</kw>
<status status="PASS" starttime="20230522 14:42:06.282" endtime="20230522 14:42:06.346"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 14:42:06.346" endtime="20230522 14:42:06.580"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 14:42:06.597" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 14:42:06.580" endtime="20230522 14:42:06.597"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:42:06.611" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230522 14:42:06.598" endtime="20230522 14:42:06.612"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:42:06.624" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230522 14:42:06.612" endtime="20230522 14:42:06.624"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:42:06.636" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230522 14:42:06.624" endtime="20230522 14:42:06.636"/>
</kw>
<status status="PASS" starttime="20230522 14:42:06.346" endtime="20230522 14:42:06.636"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 14:42:06.637" endtime="20230522 14:42:06.692"/>
</kw>
<status status="PASS" starttime="20230522 14:42:06.636" endtime="20230522 14:42:06.692"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 14:42:03.758" endtime="20230522 14:42:06.692"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 14:42:06.694" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 14:42:06.694" endtime="20230522 14:42:07.901"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 14:42:07.901" endtime="20230522 14:42:08.017"/>
</kw>
<status status="PASS" starttime="20230522 14:42:06.693" endtime="20230522 14:42:08.017"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 14:42:08.022" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 14:42:08.018" endtime="20230522 14:42:08.022"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:08.023" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 14:42:08.023" endtime="20230522 14:42:08.075"/>
</kw>
<status status="PASS" starttime="20230522 14:42:08.017" endtime="20230522 14:42:08.075"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 14:42:08.076" level="INFO">${name} = Kelly Gonzalez</msg>
<status status="PASS" starttime="20230522 14:42:08.076" endtime="20230522 14:42:08.076"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 14:42:08.077" level="INFO">${email} = dennisking@example.net</msg>
<status status="PASS" starttime="20230522 14:42:08.077" endtime="20230522 14:42:08.077"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 14:42:08.078" level="INFO">${password} = H7VB5vDzaS3O</msg>
<status status="PASS" starttime="20230522 14:42:08.077" endtime="20230522 14:42:08.078"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:08.078" level="INFO">Typing text 'Kelly Gonzalez' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 14:42:08.078" endtime="20230522 14:42:08.201"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:08.202" level="INFO">Typing text 'dennisking@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 14:42:08.201" endtime="20230522 14:42:08.312"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:08.313" level="INFO">Typing text 'H7VB5vDzaS3O' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 14:42:08.312" endtime="20230522 14:42:08.403"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:08.404" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 14:42:08.404" endtime="20230522 14:42:08.477"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:42:08.477" level="INFO">${name} = Kelly Gonzalez</msg>
<status status="PASS" starttime="20230522 14:42:08.477" endtime="20230522 14:42:08.477"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:42:08.478" level="INFO">${email} = dennisking@example.net</msg>
<status status="PASS" starttime="20230522 14:42:08.477" endtime="20230522 14:42:08.478"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:42:08.478" level="INFO">${password} = H7VB5vDzaS3O</msg>
<status status="PASS" starttime="20230522 14:42:08.478" endtime="20230522 14:42:08.478"/>
</kw>
<status status="PASS" starttime="20230522 14:42:08.075" endtime="20230522 14:42:08.478"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:08.479" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 14:42:08.478" endtime="20230522 14:42:08.535"/>
</kw>
<status status="PASS" starttime="20230522 14:42:08.478" endtime="20230522 14:42:08.535"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 14:42:08.535" endtime="20230522 14:42:08.769"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 14:42:08.786" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 14:42:08.769" endtime="20230522 14:42:08.786"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:42:08.799" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230522 14:42:08.787" endtime="20230522 14:42:08.799"/>
</kw>
<status status="PASS" starttime="20230522 14:42:08.535" endtime="20230522 14:42:08.799"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 14:42:08.800" endtime="20230522 14:42:08.855"/>
</kw>
<status status="PASS" starttime="20230522 14:42:08.799" endtime="20230522 14:42:08.855"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 14:42:06.693" endtime="20230522 14:42:08.855"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 14:42:08.857" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 14:42:08.857" endtime="20230522 14:42:10.069"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 14:42:10.070" endtime="20230522 14:42:10.173"/>
</kw>
<status status="PASS" starttime="20230522 14:42:08.856" endtime="20230522 14:42:10.173"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 14:42:10.178" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 14:42:10.174" endtime="20230522 14:42:10.179"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:10.179" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 14:42:10.179" endtime="20230522 14:42:10.234"/>
</kw>
<status status="PASS" starttime="20230522 14:42:10.174" endtime="20230522 14:42:10.234"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:10.235" level="INFO">Typing text 'Kelly Gonzalez' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 14:42:10.235" endtime="20230522 14:42:10.351"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:10.352" level="INFO">Typing text 'dennisking@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 14:42:10.352" endtime="20230522 14:42:10.462"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:10.463" level="INFO">Typing text 'H7VB5vDzaS3O' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 14:42:10.462" endtime="20230522 14:42:10.552"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:10.552" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 14:42:10.552" endtime="20230522 14:42:10.624"/>
</kw>
<status status="PASS" starttime="20230522 14:42:10.234" endtime="20230522 14:42:10.624"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 14:42:10.625" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 14:42:10.625" endtime="20230522 14:42:10.683"/>
</kw>
<status status="PASS" starttime="20230522 14:42:10.624" endtime="20230522 14:42:10.683"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 14:42:10.684" endtime="20230522 14:42:10.917"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 14:42:10.935" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 14:42:10.917" endtime="20230522 14:42:10.935"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:42:10.948" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230522 14:42:10.935" endtime="20230522 14:42:10.948"/>
</kw>
<status status="PASS" starttime="20230522 14:42:10.683" endtime="20230522 14:42:10.948"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 14:42:10.949" endtime="20230522 14:42:11.004"/>
</kw>
<status status="PASS" starttime="20230522 14:42:10.949" endtime="20230522 14:42:11.005"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 14:42:08.856" endtime="20230522 14:42:11.005"/>
</test>
<status status="PASS" starttime="20230522 14:42:03.752" endtime="20230522 14:42:11.006"/>
</suite>
<status status="PASS" starttime="20230522 14:42:03.750" endtime="20230522 14:42:11.007"/>
</suite>
<status status="PASS" starttime="20230522 14:42:02.634" endtime="20230522 14:42:11.009"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
