<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230504 01:01:30.890" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230504 01:01:31.354" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230504 01:01:31.354" endtime="20230504 01:01:31.355"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.354" endtime="20230504 01:01:31.355"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230504 01:01:31.590" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230504 01:01:31.590" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2a64f676-1284-4c9e-a636-e5766af4c9ee', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '561bbb596a89c4b1c20ef313e43c24c8;o=1', 'Date': 'Thu, 04 May 2023 01:01:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '467'} 
 body={
    "quantidade": 2,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Ciara85@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "Z1jqBVHypIG94dyR"
        }
    ]
} 
 </msg>
<msg timestamp="20230504 01:01:31.590" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.355" endtime="20230504 01:01:31.590"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230504 01:01:31.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.591" endtime="20230504 01:01:31.591"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.355" endtime="20230504 01:01:31.591"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230504 01:01:31.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.592" endtime="20230504 01:01:31.593"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230504 01:01:31.593" endtime="20230504 01:01:31.593"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.591" endtime="20230504 01:01:31.593"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230504 01:01:31.595" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230504 01:01:31.594" endtime="20230504 01:01:31.595"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.594" endtime="20230504 01:01:31.595"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230504 01:01:31.353" endtime="20230504 01:01:31.595"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230504 01:01:31.597" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230504 01:01:31.597" endtime="20230504 01:01:31.597"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.596" endtime="20230504 01:01:31.597"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230504 01:01:31.598" level="INFO">${name} = Evan Brown</msg>
<status status="PASS" starttime="20230504 01:01:31.598" endtime="20230504 01:01:31.598"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230504 01:01:31.599" level="INFO">${email} = hernandeztaylor@example.net</msg>
<status status="PASS" starttime="20230504 01:01:31.598" endtime="20230504 01:01:31.599"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230504 01:01:31.599" level="INFO">${password} = jU0Tg+siF+</msg>
<status status="PASS" starttime="20230504 01:01:31.599" endtime="20230504 01:01:31.599"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230504 01:01:31.599" level="INFO">${name} = Evan Brown</msg>
<status status="PASS" starttime="20230504 01:01:31.599" endtime="20230504 01:01:31.599"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230504 01:01:31.600" level="INFO">${email} = hernandeztaylor@example.net</msg>
<status status="PASS" starttime="20230504 01:01:31.599" endtime="20230504 01:01:31.600"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230504 01:01:31.600" level="INFO">${password} = jU0Tg+siF+</msg>
<status status="PASS" starttime="20230504 01:01:31.600" endtime="20230504 01:01:31.600"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.597" endtime="20230504 01:01:31.600"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230504 01:01:31.601" level="INFO">${payload} = {'nome': 'Evan Brown', 'email': 'hernandeztaylor@example.net', 'password': 'jU0Tg+siF+', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230504 01:01:31.601" endtime="20230504 01:01:31.601"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230504 01:01:31.601" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230504 01:01:31.601" endtime="20230504 01:01:31.601"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230504 01:01:31.679" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "Evan Brown", "email": "hernandeztaylor@example.net", "password": "jU0Tg+siF+", "administrador": "false"}' 
 </msg>
<msg timestamp="20230504 01:01:31.680" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4e7d6ced-68cb-473c-b2ae-e08ee24bb80f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0328482e125149468336fd2e4cd5ccaf', 'Date': 'Thu, 04 May 2023 01:01:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Z9rq2k9trwnZWxAn"
} 
 </msg>
<msg timestamp="20230504 01:01:31.680" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.602" endtime="20230504 01:01:31.680"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230504 01:01:31.681" level="INFO">${user_id} = Z9rq2k9trwnZWxAn</msg>
<status status="PASS" starttime="20230504 01:01:31.680" endtime="20230504 01:01:31.681"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230504 01:01:31.681" level="INFO">${USER_ID} = Z9rq2k9trwnZWxAn</msg>
<status status="PASS" starttime="20230504 01:01:31.681" endtime="20230504 01:01:31.681"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230504 01:01:31.682" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.681" endtime="20230504 01:01:31.682"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.600" endtime="20230504 01:01:31.682"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230504 01:01:31.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.682" endtime="20230504 01:01:31.683"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230504 01:01:31.683" endtime="20230504 01:01:31.684"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.682" endtime="20230504 01:01:31.684"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230504 01:01:31.685" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230504 01:01:31.684" endtime="20230504 01:01:31.685"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.684" endtime="20230504 01:01:31.685"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230504 01:01:31.596" endtime="20230504 01:01:31.685"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230504 01:01:31.687" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230504 01:01:31.687" endtime="20230504 01:01:31.687"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.686" endtime="20230504 01:01:31.687"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230504 01:01:31.803" level="INFO">GET Request : url=https://serverest.dev/usuarios/Z9rq2k9trwnZWxAn 
 path_url=/usuarios/Z9rq2k9trwnZWxAn 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230504 01:01:31.803" level="INFO">GET Response : url=https://serverest.dev/usuarios/Z9rq2k9trwnZWxAn 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e2b7ef63-ddc5-4874-9663-33ee66d50cdb', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '92fc30f5230778914b53fb979d31a4b3', 'Date': 'Thu, 04 May 2023 01:01:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "Evan Brown",
    "email": "hernandeztaylor@example.net",
    "password": "jU0Tg+siF+",
    "administrador": "false",
    "_id": "Z9rq2k9trwnZWxAn"
} 
 </msg>
<msg timestamp="20230504 01:01:31.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.688" endtime="20230504 01:01:31.803"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230504 01:01:31.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.803" endtime="20230504 01:01:31.803"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.688" endtime="20230504 01:01:31.804"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230504 01:01:31.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.804" endtime="20230504 01:01:31.805"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230504 01:01:31.805" endtime="20230504 01:01:31.806"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.804" endtime="20230504 01:01:31.806"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230504 01:01:31.807" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230504 01:01:31.806" endtime="20230504 01:01:31.807"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.806" endtime="20230504 01:01:31.807"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230504 01:01:31.686" endtime="20230504 01:01:31.807"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230504 01:01:31.809" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230504 01:01:31.809" endtime="20230504 01:01:31.809"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.809" endtime="20230504 01:01:31.809"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230504 01:01:31.810" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230504 01:01:31.810" endtime="20230504 01:01:31.810"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230504 01:01:31.811" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230504 01:01:31.810" endtime="20230504 01:01:31.811"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230504 01:01:31.891" level="INFO">PUT Request : url=https://serverest.dev/usuarios/Z9rq2k9trwnZWxAn 
 path_url=/usuarios/Z9rq2k9trwnZWxAn 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230504 01:01:31.891" level="INFO">PUT Response : url=https://serverest.dev/usuarios/Z9rq2k9trwnZWxAn 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bc10edfa-54ec-4351-885a-13e5819825d7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b88a9204417f354d2cbea97a54374211', 'Date': 'Thu, 04 May 2023 01:01:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230504 01:01:31.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.811" endtime="20230504 01:01:31.891"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230504 01:01:31.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.891" endtime="20230504 01:01:31.891"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.810" endtime="20230504 01:01:31.891"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230504 01:01:31.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.892" endtime="20230504 01:01:31.893"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230504 01:01:31.893" endtime="20230504 01:01:31.893"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.892" endtime="20230504 01:01:31.893"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230504 01:01:31.894" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230504 01:01:31.894" endtime="20230504 01:01:31.894"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.894" endtime="20230504 01:01:31.895"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230504 01:01:31.808" endtime="20230504 01:01:31.895"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230504 01:01:31.896" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230504 01:01:31.896" endtime="20230504 01:01:31.896"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.896" endtime="20230504 01:01:31.896"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230504 01:01:31.977" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/Z9rq2k9trwnZWxAn 
 path_url=/usuarios/Z9rq2k9trwnZWxAn 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230504 01:01:31.977" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/Z9rq2k9trwnZWxAn 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bdcf23f7-e789-4ebd-a2f9-7b8c3a3d1e1f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4d36ac4ebf9d1abe64ad757712f95391', 'Date': 'Thu, 04 May 2023 01:01:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230504 01:01:31.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.897" endtime="20230504 01:01:31.977"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230504 01:01:31.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.977" endtime="20230504 01:01:31.978"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.896" endtime="20230504 01:01:31.978"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230504 01:01:31.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230504 01:01:31.978" endtime="20230504 01:01:31.979"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230504 01:01:31.979" endtime="20230504 01:01:31.980"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.978" endtime="20230504 01:01:31.980"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230504 01:01:31.981" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230504 01:01:31.980" endtime="20230504 01:01:31.981"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.980" endtime="20230504 01:01:31.981"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230504 01:01:31.895" endtime="20230504 01:01:31.981"/>
</test>
<status status="PASS" starttime="20230504 01:01:30.912" endtime="20230504 01:01:31.982"/>
</suite>
<status status="PASS" starttime="20230504 01:01:30.910" endtime="20230504 01:01:31.984"/>
</suite>
<status status="PASS" starttime="20230504 01:01:30.909" endtime="20230504 01:01:31.984"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230504 01:01:31.995" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230504 01:01:31.995" endtime="20230504 01:01:33.336"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230504 01:01:33.337" endtime="20230504 01:01:33.442"/>
</kw>
<status status="PASS" starttime="20230504 01:01:31.995" endtime="20230504 01:01:33.442"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230504 01:01:33.443" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230504 01:01:33.443" endtime="20230504 01:01:33.501"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230504 01:01:33.508" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230504 01:01:33.501" endtime="20230504 01:01:33.508"/>
</kw>
<status status="PASS" starttime="20230504 01:01:33.443" endtime="20230504 01:01:33.508"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:33.511" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230504 01:01:33.509" endtime="20230504 01:01:33.615"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:33.616" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230504 01:01:33.616" endtime="20230504 01:01:33.702"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:33.703" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230504 01:01:33.702" endtime="20230504 01:01:33.795"/>
</kw>
<status status="PASS" starttime="20230504 01:01:33.508" endtime="20230504 01:01:33.795"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230504 01:01:33.807" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230504 01:01:33.796" endtime="20230504 01:01:33.807"/>
</kw>
<status status="PASS" starttime="20230504 01:01:33.795" endtime="20230504 01:01:33.808"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230504 01:01:33.821" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230504 01:01:33.808" endtime="20230504 01:01:33.822"/>
</kw>
<status status="PASS" starttime="20230504 01:01:33.808" endtime="20230504 01:01:33.822"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230504 01:01:33.822" endtime="20230504 01:01:33.879"/>
</kw>
<status status="PASS" starttime="20230504 01:01:33.822" endtime="20230504 01:01:33.880"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230504 01:01:31.994" endtime="20230504 01:01:33.880"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230504 01:01:33.882" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230504 01:01:33.882" endtime="20230504 01:01:34.707"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230504 01:01:34.708" endtime="20230504 01:01:34.812"/>
</kw>
<status status="PASS" starttime="20230504 01:01:33.881" endtime="20230504 01:01:34.812"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230504 01:01:34.813" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230504 01:01:34.813" endtime="20230504 01:01:34.864"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230504 01:01:34.871" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230504 01:01:34.864" endtime="20230504 01:01:34.871"/>
</kw>
<status status="PASS" starttime="20230504 01:01:34.812" endtime="20230504 01:01:34.871"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:34.873" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230504 01:01:34.872" endtime="20230504 01:01:34.968"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:34.969" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230504 01:01:34.968" endtime="20230504 01:01:35.048"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:35.049" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230504 01:01:35.048" endtime="20230504 01:01:35.102"/>
</kw>
<status status="PASS" starttime="20230504 01:01:34.872" endtime="20230504 01:01:35.103"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230504 01:01:35.125" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230504 01:01:35.103" endtime="20230504 01:01:35.125"/>
</kw>
<status status="PASS" starttime="20230504 01:01:35.103" endtime="20230504 01:01:35.125"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230504 01:01:35.126" endtime="20230504 01:01:35.182"/>
</kw>
<status status="PASS" starttime="20230504 01:01:35.125" endtime="20230504 01:01:35.183"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230504 01:01:33.881" endtime="20230504 01:01:35.183"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230504 01:01:35.185" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230504 01:01:35.184" endtime="20230504 01:01:36.027"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230504 01:01:36.027" endtime="20230504 01:01:36.132"/>
</kw>
<status status="PASS" starttime="20230504 01:01:35.184" endtime="20230504 01:01:36.133"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230504 01:01:36.134" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230504 01:01:36.133" endtime="20230504 01:01:36.193"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230504 01:01:36.197" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230504 01:01:36.193" endtime="20230504 01:01:36.197"/>
</kw>
<status status="PASS" starttime="20230504 01:01:36.133" endtime="20230504 01:01:36.197"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:36.199" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230504 01:01:36.198" endtime="20230504 01:01:36.286"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:36.287" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230504 01:01:36.286" endtime="20230504 01:01:36.368"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:36.369" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230504 01:01:36.368" endtime="20230504 01:01:36.454"/>
</kw>
<status status="PASS" starttime="20230504 01:01:36.198" endtime="20230504 01:01:36.454"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230504 01:01:36.459" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230504 01:01:36.455" endtime="20230504 01:01:36.459"/>
</kw>
<status status="PASS" starttime="20230504 01:01:36.455" endtime="20230504 01:01:36.459"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230504 01:01:36.478" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230504 01:01:36.459" endtime="20230504 01:01:36.478"/>
</kw>
<status status="PASS" starttime="20230504 01:01:36.459" endtime="20230504 01:01:36.478"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230504 01:01:36.478" endtime="20230504 01:01:36.535"/>
</kw>
<status status="PASS" starttime="20230504 01:01:36.478" endtime="20230504 01:01:36.536"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230504 01:01:35.183" endtime="20230504 01:01:36.536"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230504 01:01:36.538" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230504 01:01:36.537" endtime="20230504 01:01:37.357"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230504 01:01:37.357" endtime="20230504 01:01:37.462"/>
</kw>
<status status="PASS" starttime="20230504 01:01:36.537" endtime="20230504 01:01:37.462"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230504 01:01:37.463" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230504 01:01:37.463" endtime="20230504 01:01:37.529"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230504 01:01:37.533" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230504 01:01:37.529" endtime="20230504 01:01:37.533"/>
</kw>
<status status="PASS" starttime="20230504 01:01:37.463" endtime="20230504 01:01:37.533"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:37.535" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230504 01:01:37.534" endtime="20230504 01:01:37.636"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:37.637" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230504 01:01:37.636" endtime="20230504 01:01:37.719"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230504 01:01:37.720" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230504 01:01:37.720" endtime="20230504 01:01:42.811"/>
</kw>
<status status="PASS" starttime="20230504 01:01:37.533" endtime="20230504 01:01:42.811"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230504 01:01:42.824" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230504 01:01:42.812" endtime="20230504 01:01:42.824"/>
</kw>
<status status="PASS" starttime="20230504 01:01:42.811" endtime="20230504 01:01:42.824"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230504 01:01:42.837" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230504 01:01:42.825" endtime="20230504 01:01:42.837"/>
</kw>
<status status="PASS" starttime="20230504 01:01:42.824" endtime="20230504 01:01:42.837"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230504 01:01:42.838" endtime="20230504 01:01:42.894"/>
</kw>
<status status="PASS" starttime="20230504 01:01:42.838" endtime="20230504 01:01:42.895"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230504 01:01:36.536" endtime="20230504 01:01:42.895"/>
</test>
<status status="PASS" starttime="20230504 01:01:31.988" endtime="20230504 01:01:42.896"/>
</suite>
<status status="PASS" starttime="20230504 01:01:31.987" endtime="20230504 01:01:42.897"/>
</suite>
<status status="PASS" starttime="20230504 01:01:31.985" endtime="20230504 01:01:42.899"/>
</suite>
<status status="PASS" starttime="20230504 01:01:30.890" endtime="20230504 01:01:42.900"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
