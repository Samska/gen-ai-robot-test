<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230413 23:04:06.483" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 23:04:06.995" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 23:04:06.994" endtime="20230413 23:04:06.995"/>
</kw>
<status status="PASS" starttime="20230413 23:04:06.994" endtime="20230413 23:04:06.995"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 23:04:07.163" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230413 23:04:07.164" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f10a7aa4-48a8-477d-84d6-df34a22fc73f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8ec4190a504c943c6e22c14bb5f701bf;o=1', 'Date': 'Thu, 13 Apr 2023 23:04:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '24258'} 
 body={
    "quantidade": 114,
    "usuarios": [
        {
            "nome": "Rodrigues Tiago",
            "email": "IeDM@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "0zk3mhIYX0ZPGsEj"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "evvM@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "22vh5uh0lLRYjnil"
        },
        {
            "nome": "Tiago Rodrigues",
            "email": "email=arkm@mail.com",
            "password": "1234567",
            "administrador": "false",
            "_id": "2FrsnIaWzdcODIAo"
        },
        {
            "nome": "Windows da Silva",
            "email": "dyflrh@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "2H93T8QLgRGIzMJm"
        },
        {
            "nome": "Windows da Silva",
            "email": "vjjseo@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "2gUo6rc6rVM3ta0q"
        },
        {
            "nome": "August Roob",
            "email": "corey_dach@treutel.info",
            "password": "teste",
            "administrador": "true",
            "_id": "2qJLY11yQyoJtgGe"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "email=ZSFk@mail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "56QHUACPOFjw5O2f"
        },
        {
            "nome": "Windows da Silva",
            "email": "fdkgmb@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "5c5TzHUQvpgC1lfn"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "kCgE@mail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "6Z3HgvkwjuskSc9F"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "kxvm@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "8KfM1FMGPnm734Qg"
        },
        {
            "nome": "Windows da Silva",
            "email": "vkdrzk@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "8QqgaxijPwW3Bepx"
        },
        {
            "nome": "Nigel Moore MD",
            "email": "vonda@hammes.com",
            "password": "teste",
            "administrador": "false",
            "_id": "8wJRcuCuGjNGgeA6"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "Jwsx@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "9MCyMYZl90spCRSB"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "email=tLOP@mail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "9lF3Xl80EutbrRvP"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "GZja@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "C58Dy2UfU63AXG1n"
        },
        {
            "nome": "Windows da Silva",
            "email": "ljkodo@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "CHlhR0YIpEzlURHP"
        },
        {
            "nome": "Windows da Silva",
            "email": "xcdowt@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "CftBJeH0opiozEqG"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "xssv@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "DFov0WCNLOUkK989"
        },
        {
            "nome": "batata",
            "email": "verlie@stamm.co",
            "password": "teste",
            "administrador": "true",
            "_id": "DGRH43wLTI7t0klH"
        },
        {
            "nome": "Windows da Silva",
            "email": "fcldkx@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "DLO89HT1XY53U04C"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "GDLD@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "DwPvi1HxvhdAHJ76"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "email=hnyu@mail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "DyBTMNnTH0mEWzZt"
        },
        {
            "nome": "Windows da Silva",
            "email": "ervvbr@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "EBJfUcpWfxrd2PXR"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "DrVL@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "FCBi2xkB8YBuLVCR"
        },
        {
            "nome": "Windows da Silva",
            "email": "oggybu@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "FMNhCyLwu564OP8x"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "TwrK@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "FMVM8TSxLuDEpQCw"
        },
        {
            "nome": "Super QA",
            "email": "super@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "FZnSeCaEfrHVQOsW"
        },
        {
            "nome": "Tiago Rodrigues",
            "email": "hmJk@mail.com",
            "password": "1234567",
            "administrador": "false",
            "_id": "Fa6zXVOLTPNP1M3T"
        },
        {
            "nome": "Windows da Silva",
            "email": "wkspot@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "FjavTJjtP9umWgQa"
        },
        {
            "nome": "``Guardi√£o da Qualidade",
            "email": "guardiao@qa.com.br",
            "password": "guardiao",
            "administrador": "true",
            "_id": "GDR6xc96f37q16rh"
        },
        {
            "nome": "Windows da Silva",
            "email": "pzoqvu@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "GN0x89mZCSBdzqsV"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "rbOh@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "H5RzEr9Rnb3dnxnk"
        },
        {
            "nome": "Mr. Sterling Smith",
            "email": "rheba.dooley@dare-schulist.name",
            "password": "teste",
            "administrador": "true",
            "_id": "HWwynMwYoorWxAnX"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "BgvE@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "HymRrlOmfshzybR1"
        },
        {
            "nome": "Tiago Rodrigues",
            "email": "emailVKRi@mail.com",
            "password": "1234567",
            "administrador": "false",
            "_id": "IdkVO45shUtylvvQ"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "email=Kcrp@mail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "J7mWUFRVKzoiraqg"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "BRrz@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "Jeq16YKVVfaO63CW"
        },
        {
            "nome": "Windows da Silva",
            "email": "puqdnc@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "KE2Kr4n9olpTRhHE"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "kEYS@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "KwVrQEtZ7cor5AKl"
        },
        {
            "nome": "Windows da Silva",
            "email": "jblzdm@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "LfH0Zs7Fj5F34hRZ"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "KDop@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "Lh1HeklvDKSuV8Yy"
        },
        {
            "nome": "Windows da Silva",
            "email": "aryngw@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "LtC212h4bMq2VNL0"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "RJvS@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "Np0zDXdAOXTB3kWy"
        },
        {
            "nome": "Windows da Silva",
            "email": "pyopsd@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "QT9qJVFZXJ6g9W5h"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "qwPk@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "RJ3JtR2x7CEMqrYP"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "Ijdq@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "RQusDoOXcxQDQFMk"
        },
        {
            "nome": "Rodrigues Tiago",
            "email": "OrMX@mail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "RRuEKPm2klM1N3hB"
        },
        {
           ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230413 23:04:07.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:06.996" endtime="20230413 23:04:07.164"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 23:04:07.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.165" endtime="20230413 23:04:07.165"/>
</kw>
<status status="PASS" starttime="20230413 23:04:06.995" endtime="20230413 23:04:07.165"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 23:04:07.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.166" endtime="20230413 23:04:07.166"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 23:04:07.167" endtime="20230413 23:04:07.167"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.165" endtime="20230413 23:04:07.168"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 23:04:07.169" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230413 23:04:07.168" endtime="20230413 23:04:07.169"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.168" endtime="20230413 23:04:07.169"/>
</kw>
<status status="PASS" starttime="20230413 23:04:06.993" endtime="20230413 23:04:07.169"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 23:04:07.170" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 23:04:07.170" endtime="20230413 23:04:07.170"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.170" endtime="20230413 23:04:07.171"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230413 23:04:07.171" level="INFO">${name} = Kelsey Williams</msg>
<status status="PASS" starttime="20230413 23:04:07.171" endtime="20230413 23:04:07.171"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230413 23:04:07.172" level="INFO">${email} = oparker@example.net</msg>
<status status="PASS" starttime="20230413 23:04:07.171" endtime="20230413 23:04:07.172"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230413 23:04:07.172" level="INFO">${password} = qh*^TRSl*7</msg>
<status status="PASS" starttime="20230413 23:04:07.172" endtime="20230413 23:04:07.172"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230413 23:04:07.173" level="INFO">${name} = Kelsey Williams</msg>
<status status="PASS" starttime="20230413 23:04:07.172" endtime="20230413 23:04:07.173"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230413 23:04:07.173" level="INFO">${email} = oparker@example.net</msg>
<status status="PASS" starttime="20230413 23:04:07.173" endtime="20230413 23:04:07.173"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230413 23:04:07.173" level="INFO">${password} = qh*^TRSl*7</msg>
<status status="PASS" starttime="20230413 23:04:07.173" endtime="20230413 23:04:07.173"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.171" endtime="20230413 23:04:07.173"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 23:04:07.174" level="INFO">${payload} = {'nome': 'Kelsey Williams', 'email': 'oparker@example.net', 'password': 'qh*^TRSl*7', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230413 23:04:07.174" endtime="20230413 23:04:07.174"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 23:04:07.175" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230413 23:04:07.175" endtime="20230413 23:04:07.175"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 23:04:07.254" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Kelsey Williams", "email": "oparker@example.net", "password": "qh*^TRSl*7", "administrador": "false"}' 
 </msg>
<msg timestamp="20230413 23:04:07.254" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '85aca26c-18e5-425b-be96-5cc69159aa6b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4bcf7d6e37d13b229744403ed57c9ee5', 'Date': 'Thu, 13 Apr 2023 23:04:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "R08Y5gZRsvOtudDS"
} 
 </msg>
<msg timestamp="20230413 23:04:07.254" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.175" endtime="20230413 23:04:07.254"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230413 23:04:07.255" level="INFO">${user_id} = R08Y5gZRsvOtudDS</msg>
<status status="PASS" starttime="20230413 23:04:07.254" endtime="20230413 23:04:07.255"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230413 23:04:07.255" level="INFO">${USER_ID} = R08Y5gZRsvOtudDS</msg>
<status status="PASS" starttime="20230413 23:04:07.255" endtime="20230413 23:04:07.256"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 23:04:07.256" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.256" endtime="20230413 23:04:07.256"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.173" endtime="20230413 23:04:07.256"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 23:04:07.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.257" endtime="20230413 23:04:07.257"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 23:04:07.257" endtime="20230413 23:04:07.258"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.256" endtime="20230413 23:04:07.258"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 23:04:07.259" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230413 23:04:07.259" endtime="20230413 23:04:07.259"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.258" endtime="20230413 23:04:07.259"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.169" endtime="20230413 23:04:07.260"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 23:04:07.261" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 23:04:07.261" endtime="20230413 23:04:07.261"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.261" endtime="20230413 23:04:07.262"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 23:04:07.341" level="INFO">GET Request : url=https://serverest.dev/usuarios/R08Y5gZRsvOtudDS 
 path_url=/usuarios/R08Y5gZRsvOtudDS 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230413 23:04:07.342" level="INFO">GET Response : url=https://serverest.dev/usuarios/R08Y5gZRsvOtudDS 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1a64dc91-ca93-4e30-91a0-bc3961b6aa14', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '52e93d3487375e862d4f12bdc29662e7', 'Date': 'Thu, 13 Apr 2023 23:04:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Kelsey Williams",
    "email": "oparker@example.net",
    "password": "qh*^TRSl*7",
    "administrador": "false",
    "_id": "R08Y5gZRsvOtudDS"
} 
 </msg>
<msg timestamp="20230413 23:04:07.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.262" endtime="20230413 23:04:07.342"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 23:04:07.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.342" endtime="20230413 23:04:07.342"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.262" endtime="20230413 23:04:07.342"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 23:04:07.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.343" endtime="20230413 23:04:07.344"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 23:04:07.344" endtime="20230413 23:04:07.344"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.343" endtime="20230413 23:04:07.344"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 23:04:07.345" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230413 23:04:07.345" endtime="20230413 23:04:07.345"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.345" endtime="20230413 23:04:07.345"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.260" endtime="20230413 23:04:07.346"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 23:04:07.347" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 23:04:07.347" endtime="20230413 23:04:07.347"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.346" endtime="20230413 23:04:07.347"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 23:04:07.348" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230413 23:04:07.348" endtime="20230413 23:04:07.348"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 23:04:07.348" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230413 23:04:07.348" endtime="20230413 23:04:07.348"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 23:04:07.433" level="INFO">PUT Request : url=https://serverest.dev/usuarios/R08Y5gZRsvOtudDS 
 path_url=/usuarios/R08Y5gZRsvOtudDS 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230413 23:04:07.434" level="INFO">PUT Response : url=https://serverest.dev/usuarios/R08Y5gZRsvOtudDS 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8a8af8c7-c506-46c6-898c-2b532ec758e4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'efd15c3912a984542d410b37e9cb83b9', 'Date': 'Thu, 13 Apr 2023 23:04:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230413 23:04:07.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.349" endtime="20230413 23:04:07.434"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 23:04:07.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.434" endtime="20230413 23:04:07.434"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.348" endtime="20230413 23:04:07.434"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 23:04:07.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.435" endtime="20230413 23:04:07.436"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 23:04:07.436" endtime="20230413 23:04:07.436"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.435" endtime="20230413 23:04:07.436"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 23:04:07.437" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230413 23:04:07.437" endtime="20230413 23:04:07.437"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.437" endtime="20230413 23:04:07.437"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.346" endtime="20230413 23:04:07.438"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 23:04:07.439" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 23:04:07.438" endtime="20230413 23:04:07.439"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.438" endtime="20230413 23:04:07.439"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 23:04:07.517" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/R08Y5gZRsvOtudDS 
 path_url=/usuarios/R08Y5gZRsvOtudDS 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230413 23:04:07.517" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/R08Y5gZRsvOtudDS 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '549826b3-6900-433c-8b6e-a794e7ee91d0', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8963d6b9ca3a504ba50ccc2c62adb285', 'Date': 'Thu, 13 Apr 2023 23:04:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro exclu√≠do com sucesso"
} 
 </msg>
<msg timestamp="20230413 23:04:07.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.439" endtime="20230413 23:04:07.518"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 23:04:07.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.518" endtime="20230413 23:04:07.518"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.439" endtime="20230413 23:04:07.518"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 23:04:07.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 23:04:07.519" endtime="20230413 23:04:07.520"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 23:04:07.520" endtime="20230413 23:04:07.521"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.519" endtime="20230413 23:04:07.521"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 23:04:07.522" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230413 23:04:07.521" endtime="20230413 23:04:07.522"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.521" endtime="20230413 23:04:07.522"/>
</kw>
<status status="PASS" starttime="20230413 23:04:07.438" endtime="20230413 23:04:07.522"/>
</test>
<status status="PASS" starttime="20230413 23:04:06.507" endtime="20230413 23:04:07.523"/>
</suite>
<status status="PASS" starttime="20230413 23:04:06.505" endtime="20230413 23:04:07.524"/>
</suite>
<status status="PASS" starttime="20230413 23:04:06.504" endtime="20230413 23:04:07.525"/>
</suite>
<status status="PASS" starttime="20230413 23:04:06.484" endtime="20230413 23:04:07.526"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
