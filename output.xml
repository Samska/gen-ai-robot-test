<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 14:23:29.581" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:23:30.107" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:23:30.107" endtime="20230601 14:23:30.108"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.107" endtime="20230601 14:23:30.108"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:23:30.343" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:23:30.343" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0c55ea18-ea96-4bb6-b5ed-1dacf7f32bf6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1f68a7f0d52b560b66d6d9e20d52087d;o=1', 'Date': 'Thu, 01 Jun 2023 14:23:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '3515'} 
 body={
    "quantidade": 16,
    "usuarios": [
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Troy Ray",
            "email": "debbie39@example.net",
            "password": "di5JjZtW5C2X",
            "administrador": "true",
            "_id": "w6qnBS2wGoSELmzN"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "wbGsZa5vMrOWAm7a"
        },
        {
            "nome": "julia",
            "email": "contatojuliasena2@gmail.com",
            "password": "07101995",
            "administrador": "false",
            "_id": "x5hhnzNB64soj1IS"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 14:23:30.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.108" endtime="20230601 14:23:30.343"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:23:30.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.344" endtime="20230601 14:23:30.344"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.108" endtime="20230601 14:23:30.344"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:23:30.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.345" endtime="20230601 14:23:30.345"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:23:30.345" endtime="20230601 14:23:30.346"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.344" endtime="20230601 14:23:30.346"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:23:30.347" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 14:23:30.346" endtime="20230601 14:23:30.347"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.346" endtime="20230601 14:23:30.347"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:23:30.106" endtime="20230601 14:23:30.347"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:23:30.349" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:23:30.349" endtime="20230601 14:23:30.349"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.348" endtime="20230601 14:23:30.349"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 14:23:30.350" level="INFO">${name} = Heather Taylor</msg>
<status status="PASS" starttime="20230601 14:23:30.349" endtime="20230601 14:23:30.350"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 14:23:30.350" level="INFO">${email} = christopher49@example.com</msg>
<status status="PASS" starttime="20230601 14:23:30.350" endtime="20230601 14:23:30.350"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 14:23:30.351" level="INFO">${password} = u3fRes6xQ5jf</msg>
<status status="PASS" starttime="20230601 14:23:30.350" endtime="20230601 14:23:30.351"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:23:30.351" level="INFO">${name} = Heather Taylor</msg>
<status status="PASS" starttime="20230601 14:23:30.351" endtime="20230601 14:23:30.351"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:23:30.352" level="INFO">${email} = christopher49@example.com</msg>
<status status="PASS" starttime="20230601 14:23:30.351" endtime="20230601 14:23:30.352"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:23:30.352" level="INFO">${password} = u3fRes6xQ5jf</msg>
<status status="PASS" starttime="20230601 14:23:30.352" endtime="20230601 14:23:30.352"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.349" endtime="20230601 14:23:30.352"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:23:30.353" level="INFO">${payload} = {'nome': 'Heather Taylor', 'email': 'christopher49@example.com', 'password': 'u3fRes6xQ5jf', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 14:23:30.352" endtime="20230601 14:23:30.353"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:23:30.353" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 14:23:30.353" endtime="20230601 14:23:30.353"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:23:30.453" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '118'} 
 body=b'{"nome": "Heather Taylor", "email": "christopher49@example.com", "password": "u3fRes6xQ5jf", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 14:23:30.453" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '98f3012c-de9a-491d-b9b7-dce4510e599a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '38cfe598c7896a0398f250440ad55221', 'Date': 'Thu, 01 Jun 2023 14:23:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "zgmdFBl84u61bPfV"
} 
 </msg>
<msg timestamp="20230601 14:23:30.453" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.353" endtime="20230601 14:23:30.453"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 14:23:30.454" level="INFO">${user_id} = zgmdFBl84u61bPfV</msg>
<status status="PASS" starttime="20230601 14:23:30.453" endtime="20230601 14:23:30.454"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 14:23:30.454" level="INFO">${USER_ID} = zgmdFBl84u61bPfV</msg>
<status status="PASS" starttime="20230601 14:23:30.454" endtime="20230601 14:23:30.454"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:23:30.455" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.455" endtime="20230601 14:23:30.455"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.352" endtime="20230601 14:23:30.455"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:23:30.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.455" endtime="20230601 14:23:30.456"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:23:30.456" endtime="20230601 14:23:30.457"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.455" endtime="20230601 14:23:30.457"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:23:30.458" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 14:23:30.457" endtime="20230601 14:23:30.458"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.457" endtime="20230601 14:23:30.458"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:23:30.348" endtime="20230601 14:23:30.458"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:23:30.459" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:23:30.459" endtime="20230601 14:23:30.460"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.459" endtime="20230601 14:23:30.460"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:23:30.560" level="INFO">GET Request : url=https://serverest.dev/usuarios/zgmdFBl84u61bPfV 
 path_url=/usuarios/zgmdFBl84u61bPfV 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:23:30.560" level="INFO">GET Response : url=https://serverest.dev/usuarios/zgmdFBl84u61bPfV 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cfdd1112-a134-4ecd-8c9c-c093eb2740e1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f006bd433794575beca74e73e424644f', 'Date': 'Thu, 01 Jun 2023 14:23:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '167'} 
 body={
    "nome": "Heather Taylor",
    "email": "christopher49@example.com",
    "password": "u3fRes6xQ5jf",
    "administrador": "false",
    "_id": "zgmdFBl84u61bPfV"
} 
 </msg>
<msg timestamp="20230601 14:23:30.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.460" endtime="20230601 14:23:30.560"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:23:30.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.560" endtime="20230601 14:23:30.560"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.460" endtime="20230601 14:23:30.561"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:23:30.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.561" endtime="20230601 14:23:30.562"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:23:30.562" endtime="20230601 14:23:30.562"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.561" endtime="20230601 14:23:30.562"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:23:30.563" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 14:23:30.563" endtime="20230601 14:23:30.563"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.563" endtime="20230601 14:23:30.564"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:23:30.458" endtime="20230601 14:23:30.564"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:23:30.565" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:23:30.565" endtime="20230601 14:23:30.565"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.564" endtime="20230601 14:23:30.565"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:23:30.566" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 14:23:30.566" endtime="20230601 14:23:30.566"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:23:30.566" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 14:23:30.566" endtime="20230601 14:23:30.566"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:23:30.671" level="INFO">PUT Request : url=https://serverest.dev/usuarios/zgmdFBl84u61bPfV 
 path_url=/usuarios/zgmdFBl84u61bPfV 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 14:23:30.671" level="INFO">PUT Response : url=https://serverest.dev/usuarios/zgmdFBl84u61bPfV 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6d6391d2-196b-4046-ba9f-306cefdc6af3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fd682022417b1ae6721e8546ac0eb8d0', 'Date': 'Thu, 01 Jun 2023 14:23:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 14:23:30.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.566" endtime="20230601 14:23:30.672"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:23:30.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.672" endtime="20230601 14:23:30.672"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.565" endtime="20230601 14:23:30.672"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:23:30.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.673" endtime="20230601 14:23:30.673"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:23:30.673" endtime="20230601 14:23:30.674"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.672" endtime="20230601 14:23:30.674"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:23:30.675" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 14:23:30.674" endtime="20230601 14:23:30.675"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.674" endtime="20230601 14:23:30.675"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:23:30.564" endtime="20230601 14:23:30.675"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:23:30.677" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:23:30.676" endtime="20230601 14:23:30.677"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.676" endtime="20230601 14:23:30.677"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:23:30.776" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/zgmdFBl84u61bPfV 
 path_url=/usuarios/zgmdFBl84u61bPfV 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:23:30.776" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/zgmdFBl84u61bPfV 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fee10efb-b854-43d6-839f-a6aeb4d46746', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '58f3390eeb2c863af45a6ea2e5c62b48', 'Date': 'Thu, 01 Jun 2023 14:23:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 14:23:30.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.677" endtime="20230601 14:23:30.776"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:23:30.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.776" endtime="20230601 14:23:30.777"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.677" endtime="20230601 14:23:30.777"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:23:30.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:23:30.777" endtime="20230601 14:23:30.778"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:23:30.778" endtime="20230601 14:23:30.778"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.777" endtime="20230601 14:23:30.779"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:23:30.779" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 14:23:30.779" endtime="20230601 14:23:30.780"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.779" endtime="20230601 14:23:30.780"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:23:30.676" endtime="20230601 14:23:30.780"/>
</test>
<status status="PASS" starttime="20230601 14:23:29.602" endtime="20230601 14:23:30.780"/>
</suite>
<status status="PASS" starttime="20230601 14:23:29.601" endtime="20230601 14:23:30.782"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:23:30.792" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:23:30.791" endtime="20230601 14:23:32.665"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:23:32.666" endtime="20230601 14:23:32.770"/>
</kw>
<status status="PASS" starttime="20230601 14:23:30.791" endtime="20230601 14:23:32.770"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:23:32.775" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:23:32.770" endtime="20230601 14:23:32.775"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:32.776" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:23:32.775" endtime="20230601 14:23:32.857"/>
</kw>
<status status="PASS" starttime="20230601 14:23:32.770" endtime="20230601 14:23:32.857"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:32.858" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:23:32.857" endtime="20230601 14:23:32.917"/>
</kw>
<status status="PASS" starttime="20230601 14:23:32.857" endtime="20230601 14:23:32.917"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:23:32.917" endtime="20230601 14:23:33.148"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:23:33.166" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:23:33.148" endtime="20230601 14:23:33.166"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:23:33.181" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:23:33.166" endtime="20230601 14:23:33.181"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:23:33.193" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:23:33.181" endtime="20230601 14:23:33.193"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:23:33.205" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:23:33.193" endtime="20230601 14:23:33.205"/>
</kw>
<status status="PASS" starttime="20230601 14:23:32.917" endtime="20230601 14:23:33.205"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:23:33.206" endtime="20230601 14:23:33.260"/>
</kw>
<status status="PASS" starttime="20230601 14:23:33.206" endtime="20230601 14:23:33.261"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:23:30.791" endtime="20230601 14:23:33.261"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:23:33.263" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:23:33.262" endtime="20230601 14:23:34.355"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:23:34.355" endtime="20230601 14:23:34.458"/>
</kw>
<status status="PASS" starttime="20230601 14:23:33.262" endtime="20230601 14:23:34.459"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:23:34.464" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:23:34.459" endtime="20230601 14:23:34.464"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:34.465" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:23:34.464" endtime="20230601 14:23:34.542"/>
</kw>
<status status="PASS" starttime="20230601 14:23:34.459" endtime="20230601 14:23:34.543"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 14:23:34.544" level="INFO">${name} = Troy Moran</msg>
<status status="PASS" starttime="20230601 14:23:34.543" endtime="20230601 14:23:34.544"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 14:23:34.544" level="INFO">${email} = jonesdavid@example.org</msg>
<status status="PASS" starttime="20230601 14:23:34.544" endtime="20230601 14:23:34.544"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 14:23:34.545" level="INFO">${password} = fwHMTsFS3mgk</msg>
<status status="PASS" starttime="20230601 14:23:34.544" endtime="20230601 14:23:34.545"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:34.545" level="INFO">Typing text 'Troy Moran' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 14:23:34.545" endtime="20230601 14:23:34.656"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:34.657" level="INFO">Typing text 'jonesdavid@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 14:23:34.656" endtime="20230601 14:23:34.765"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:34.766" level="INFO">Typing text 'fwHMTsFS3mgk' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 14:23:34.765" endtime="20230601 14:23:34.849"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:34.849" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 14:23:34.849" endtime="20230601 14:23:34.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:23:34.920" level="INFO">${name} = Troy Moran</msg>
<status status="PASS" starttime="20230601 14:23:34.920" endtime="20230601 14:23:34.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:23:34.921" level="INFO">${email} = jonesdavid@example.org</msg>
<status status="PASS" starttime="20230601 14:23:34.920" endtime="20230601 14:23:34.921"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:23:34.921" level="INFO">${password} = fwHMTsFS3mgk</msg>
<status status="PASS" starttime="20230601 14:23:34.921" endtime="20230601 14:23:34.921"/>
</kw>
<status status="PASS" starttime="20230601 14:23:34.543" endtime="20230601 14:23:34.921"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:34.922" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:23:34.922" endtime="20230601 14:23:34.977"/>
</kw>
<status status="PASS" starttime="20230601 14:23:34.921" endtime="20230601 14:23:34.977"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:23:34.978" endtime="20230601 14:23:35.207"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:23:35.226" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:23:35.207" endtime="20230601 14:23:35.226"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:23:35.238" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 14:23:35.226" endtime="20230601 14:23:35.238"/>
</kw>
<status status="PASS" starttime="20230601 14:23:34.977" endtime="20230601 14:23:35.238"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:23:35.239" endtime="20230601 14:23:35.294"/>
</kw>
<status status="PASS" starttime="20230601 14:23:35.239" endtime="20230601 14:23:35.294"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:23:33.261" endtime="20230601 14:23:35.294"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:23:35.296" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:23:35.296" endtime="20230601 14:23:36.306"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:23:36.306" endtime="20230601 14:23:36.410"/>
</kw>
<status status="PASS" starttime="20230601 14:23:35.295" endtime="20230601 14:23:36.410"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:23:36.415" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:23:36.410" endtime="20230601 14:23:36.415"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:36.416" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:23:36.415" endtime="20230601 14:23:36.487"/>
</kw>
<status status="PASS" starttime="20230601 14:23:36.410" endtime="20230601 14:23:36.487"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:36.488" level="INFO">Typing text 'Troy Moran' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 14:23:36.488" endtime="20230601 14:23:36.595"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:36.596" level="INFO">Typing text 'jonesdavid@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 14:23:36.595" endtime="20230601 14:23:36.707"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:36.708" level="INFO">Typing text 'fwHMTsFS3mgk' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 14:23:36.707" endtime="20230601 14:23:36.796"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:36.796" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 14:23:36.796" endtime="20230601 14:23:36.864"/>
</kw>
<status status="PASS" starttime="20230601 14:23:36.487" endtime="20230601 14:23:36.864"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:23:36.865" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:23:36.864" endtime="20230601 14:23:36.919"/>
</kw>
<status status="PASS" starttime="20230601 14:23:36.864" endtime="20230601 14:23:36.919"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:23:36.920" endtime="20230601 14:23:37.150"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:23:37.167" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:23:37.150" endtime="20230601 14:23:37.167"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:23:37.180" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 14:23:37.168" endtime="20230601 14:23:37.180"/>
</kw>
<status status="PASS" starttime="20230601 14:23:36.920" endtime="20230601 14:23:37.180"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:23:37.181" endtime="20230601 14:23:37.236"/>
</kw>
<status status="PASS" starttime="20230601 14:23:37.181" endtime="20230601 14:23:37.236"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:23:35.295" endtime="20230601 14:23:37.236"/>
</test>
<status status="PASS" starttime="20230601 14:23:30.784" endtime="20230601 14:23:37.237"/>
</suite>
<status status="PASS" starttime="20230601 14:23:30.782" endtime="20230601 14:23:37.238"/>
</suite>
<status status="PASS" starttime="20230601 14:23:29.582" endtime="20230601 14:23:37.239"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
