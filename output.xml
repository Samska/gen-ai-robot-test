<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230418 19:23:04.222" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 19:23:04.998" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 19:23:04.998" endtime="20230418 19:23:04.998"/>
</kw>
<status status="PASS" starttime="20230418 19:23:04.997" endtime="20230418 19:23:04.998"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 19:23:05.126" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 19:23:05.126" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c544aa88-3009-438a-b48f-ad627853269a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cfc47c77b7f046edddec19310fdef2b1;o=1', 'Date': 'Tue, 18 Apr 2023 19:23:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '3416'} 
 body={
    "quantidade": 16,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "dioa@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5DJILKVsK92Wniub"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fbbm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "AIRmV5T8ZvNJultO"
        },
        {
            "nome": "Fulano da Silva",
            "email": "qghw@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "C0OMILASABLvgzkp"
        },
        {
            "nome": "JOﾃグ DA SILVA",
            "email": "vbhRhHkK@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "LPYjy58jEjjHkQ7i"
        },
        {
            "nome": "Fulano da Silva",
            "email": "bgml@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "LTLJ2PuX4xAo5jcG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "qnbn@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "OXLTKmaL4111ln0O"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Dominic97@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RGUFlFsbpN7rgFc4"
        },
        {
            "nome": "Fulano da Silva",
            "email": "sqap@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "VBXoi6Tp8Urp6r7a"
        },
        {
            "nome": "JOﾃグ DA SILVA",
            "email": "wZEeMnYc@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "f2L8bkWFmYc5slbF"
        },
        {
            "nome": "JOﾃグ DA SILVA",
            "email": "avpBQRaQ@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "iYfo7gmqsOIhtGSe"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mvcc@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "qeW2Q49ksCsBqHuU"
        },
        {
            "nome": "Fulano da Silva",
            "email": "sirj@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "tNCMlZYuxV1mP9FG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "nfyp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "uli0HTfnak1VpeSf"
        },
        {
            "nome": "Fulano da Silva",
            "email": "svwv@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "wS8cD3PszR2FCsGo"
        },
        {
            "nome": "JOﾃグ DA SILVA",
            "email": "fIzrJQny@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "xbnb4B1pDtYZ8C1p"
        }
    ]
} 
 </msg>
<msg timestamp="20230418 19:23:05.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:04.999" endtime="20230418 19:23:05.127"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 19:23:05.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.127" endtime="20230418 19:23:05.127"/>
</kw>
<status status="PASS" starttime="20230418 19:23:04.999" endtime="20230418 19:23:05.127"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 19:23:05.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.128" endtime="20230418 19:23:05.129"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 19:23:05.129" endtime="20230418 19:23:05.130"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.128" endtime="20230418 19:23:05.130"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 19:23:05.131" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 19:23:05.130" endtime="20230418 19:23:05.131"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.130" endtime="20230418 19:23:05.131"/>
</kw>
<status status="PASS" starttime="20230418 19:23:04.997" endtime="20230418 19:23:05.131"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="14">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 19:23:05.133" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 19:23:05.132" endtime="20230418 19:23:05.133"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.132" endtime="20230418 19:23:05.133"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230418 19:23:05.134" level="INFO">${name} = Paula Nelson</msg>
<status status="PASS" starttime="20230418 19:23:05.133" endtime="20230418 19:23:05.134"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230418 19:23:05.134" level="INFO">${email} = elizabeth95@example.org</msg>
<status status="PASS" starttime="20230418 19:23:05.134" endtime="20230418 19:23:05.134"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230418 19:23:05.135" level="INFO">${password} = _w28!Ih(D*</msg>
<status status="PASS" starttime="20230418 19:23:05.134" endtime="20230418 19:23:05.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 19:23:05.135" level="INFO">${name} = Paula Nelson</msg>
<status status="PASS" starttime="20230418 19:23:05.135" endtime="20230418 19:23:05.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 19:23:05.135" level="INFO">${email} = elizabeth95@example.org</msg>
<status status="PASS" starttime="20230418 19:23:05.135" endtime="20230418 19:23:05.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 19:23:05.136" level="INFO">${password} = _w28!Ih(D*</msg>
<status status="PASS" starttime="20230418 19:23:05.136" endtime="20230418 19:23:05.136"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.133" endtime="20230418 19:23:05.136"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 19:23:05.137" level="INFO">${payload} = {'nome': 'Paula Nelson', 'email': 'elizabeth95@example.org', 'password': '_w28!Ih(D*', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 19:23:05.136" endtime="20230418 19:23:05.137"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 19:23:05.137" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 19:23:05.137" endtime="20230418 19:23:05.137"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 19:23:05.216" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Paula Nelson", "email": "elizabeth95@example.org", "password": "_w28!Ih(D*", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 19:23:05.216" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9b2aca8d-a05b-49ac-8b4c-2cb6d9ef0fc7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '56e2fa63d048dcb2ef020c08cf224ebe', 'Date': 'Tue, 18 Apr 2023 19:23:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "AXTwuWHIY3LYpRV4"
} 
 </msg>
<msg timestamp="20230418 19:23:05.217" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.137" endtime="20230418 19:23:05.217"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230418 19:23:05.218" level="INFO">${user_id} = AXTwuWHIY3LYpRV4</msg>
<status status="PASS" starttime="20230418 19:23:05.217" endtime="20230418 19:23:05.218"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230418 19:23:05.218" level="INFO">${USER_ID} = AXTwuWHIY3LYpRV4</msg>
<status status="PASS" starttime="20230418 19:23:05.218" endtime="20230418 19:23:05.218"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 19:23:05.219" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.219" endtime="20230418 19:23:05.219"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.136" endtime="20230418 19:23:05.219"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 19:23:05.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.219" endtime="20230418 19:23:05.220"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 19:23:05.220" endtime="20230418 19:23:05.221"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.219" endtime="20230418 19:23:05.221"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 19:23:05.222" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 19:23:05.222" endtime="20230418 19:23:05.222"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.221" endtime="20230418 19:23:05.222"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.132" endtime="20230418 19:23:05.223"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="20">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 19:23:05.224" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 19:23:05.224" endtime="20230418 19:23:05.224"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.224" endtime="20230418 19:23:05.225"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 19:23:05.302" level="INFO">GET Request : url=https://serverest.dev/usuarios/AXTwuWHIY3LYpRV4 
 path_url=/usuarios/AXTwuWHIY3LYpRV4 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 19:23:05.302" level="INFO">GET Response : url=https://serverest.dev/usuarios/AXTwuWHIY3LYpRV4 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5ddd69c2-daf1-4d2b-b966-86e28ffe5af5', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '236d82173993d38110cdf299166e3c26', 'Date': 'Tue, 18 Apr 2023 19:23:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Paula Nelson",
    "email": "elizabeth95@example.org",
    "password": "_w28!Ih(D*",
    "administrador": "false",
    "_id": "AXTwuWHIY3LYpRV4"
} 
 </msg>
<msg timestamp="20230418 19:23:05.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.225" endtime="20230418 19:23:05.303"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 19:23:05.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.303" endtime="20230418 19:23:05.303"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.225" endtime="20230418 19:23:05.304"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 19:23:05.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.304" endtime="20230418 19:23:05.305"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 19:23:05.305" endtime="20230418 19:23:05.305"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.304" endtime="20230418 19:23:05.306"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 19:23:05.306" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230418 19:23:05.306" endtime="20230418 19:23:05.306"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.306" endtime="20230418 19:23:05.307"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.223" endtime="20230418 19:23:05.307"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="25">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 19:23:05.308" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 19:23:05.308" endtime="20230418 19:23:05.308"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.308" endtime="20230418 19:23:05.308"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 19:23:05.309" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 19:23:05.309" endtime="20230418 19:23:05.309"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 19:23:05.310" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 19:23:05.309" endtime="20230418 19:23:05.310"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 19:23:05.390" level="INFO">PUT Request : url=https://serverest.dev/usuarios/AXTwuWHIY3LYpRV4 
 path_url=/usuarios/AXTwuWHIY3LYpRV4 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 19:23:05.390" level="INFO">PUT Response : url=https://serverest.dev/usuarios/AXTwuWHIY3LYpRV4 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5a0a832d-e316-405e-9a28-b711494b8e2a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '00e507fccdfdc214d63a1f818b0131b8', 'Date': 'Tue, 18 Apr 2023 19:23:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230418 19:23:05.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.310" endtime="20230418 19:23:05.390"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 19:23:05.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.390" endtime="20230418 19:23:05.391"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.309" endtime="20230418 19:23:05.391"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 19:23:05.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.392" endtime="20230418 19:23:05.392"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 19:23:05.393" endtime="20230418 19:23:05.393"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.391" endtime="20230418 19:23:05.393"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 19:23:05.394" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 19:23:05.394" endtime="20230418 19:23:05.394"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.393" endtime="20230418 19:23:05.395"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.307" endtime="20230418 19:23:05.395"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 19:23:05.396" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 19:23:05.396" endtime="20230418 19:23:05.397"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.396" endtime="20230418 19:23:05.397"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 19:23:05.479" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/AXTwuWHIY3LYpRV4 
 path_url=/usuarios/AXTwuWHIY3LYpRV4 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230418 19:23:05.479" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/AXTwuWHIY3LYpRV4 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '01f38c7b-bf40-4708-8590-3237d8bc657f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '00e0c447582e2305379dfe8d510d2094', 'Date': 'Tue, 18 Apr 2023 19:23:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluﾃｭdo com sucesso"
} 
 </msg>
<msg timestamp="20230418 19:23:05.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.397" endtime="20230418 19:23:05.479"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 19:23:05.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.480" endtime="20230418 19:23:05.480"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.397" endtime="20230418 19:23:05.480"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 19:23:05.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 19:23:05.481" endtime="20230418 19:23:05.481"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 19:23:05.481" endtime="20230418 19:23:05.482"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.480" endtime="20230418 19:23:05.482"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 19:23:05.483" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 19:23:05.483" endtime="20230418 19:23:05.483"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.482" endtime="20230418 19:23:05.483"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.395" endtime="20230418 19:23:05.483"/>
</test>
<status status="PASS" starttime="20230418 19:23:04.244" endtime="20230418 19:23:05.484"/>
</suite>
<status status="PASS" starttime="20230418 19:23:04.243" endtime="20230418 19:23:05.485"/>
</suite>
<status status="PASS" starttime="20230418 19:23:04.241" endtime="20230418 19:23:05.486"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 19:23:05.499" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:05.498" endtime="20230418 19:23:07.074"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 19:23:07.074" endtime="20230418 19:23:07.180"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.498" endtime="20230418 19:23:07.180"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 19:23:07.181" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 19:23:07.181" endtime="20230418 19:23:07.253"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 19:23:07.261" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:07.254" endtime="20230418 19:23:07.261"/>
</kw>
<status status="PASS" starttime="20230418 19:23:07.180" endtime="20230418 19:23:07.262"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:07.263" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 19:23:07.262" endtime="20230418 19:23:07.373"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:07.374" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 19:23:07.373" endtime="20230418 19:23:07.460"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:07.461" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 19:23:07.460" endtime="20230418 19:23:07.653"/>
</kw>
<status status="PASS" starttime="20230418 19:23:07.262" endtime="20230418 19:23:07.654"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 19:23:07.665" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 19:23:07.654" endtime="20230418 19:23:07.665"/>
</kw>
<status status="PASS" starttime="20230418 19:23:07.654" endtime="20230418 19:23:07.665"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 19:23:07.680" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 19:23:07.666" endtime="20230418 19:23:07.680"/>
</kw>
<status status="PASS" starttime="20230418 19:23:07.665" endtime="20230418 19:23:07.680"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 19:23:07.681" endtime="20230418 19:23:07.737"/>
</kw>
<status status="PASS" starttime="20230418 19:23:07.680" endtime="20230418 19:23:07.738"/>
</kw>
<status status="PASS" starttime="20230418 19:23:05.498" endtime="20230418 19:23:07.738"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 19:23:07.740" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:07.739" endtime="20230418 19:23:08.573"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 19:23:08.573" endtime="20230418 19:23:08.677"/>
</kw>
<status status="PASS" starttime="20230418 19:23:07.739" endtime="20230418 19:23:08.677"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 19:23:08.678" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 19:23:08.678" endtime="20230418 19:23:08.738"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 19:23:08.744" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:08.738" endtime="20230418 19:23:08.744"/>
</kw>
<status status="PASS" starttime="20230418 19:23:08.677" endtime="20230418 19:23:08.744"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:08.746" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 19:23:08.745" endtime="20230418 19:23:08.846"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:08.847" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 19:23:08.846" endtime="20230418 19:23:08.928"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:08.928" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 19:23:08.928" endtime="20230418 19:23:08.984"/>
</kw>
<status status="PASS" starttime="20230418 19:23:08.744" endtime="20230418 19:23:08.984"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230418 19:23:09.007" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230418 19:23:08.985" endtime="20230418 19:23:09.007"/>
</kw>
<status status="PASS" starttime="20230418 19:23:08.984" endtime="20230418 19:23:09.008"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 19:23:09.008" endtime="20230418 19:23:09.065"/>
</kw>
<status status="PASS" starttime="20230418 19:23:09.008" endtime="20230418 19:23:09.066"/>
</kw>
<status status="PASS" starttime="20230418 19:23:07.738" endtime="20230418 19:23:09.066"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 19:23:09.068" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:09.067" endtime="20230418 19:23:09.905"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 19:23:09.905" endtime="20230418 19:23:10.010"/>
</kw>
<status status="PASS" starttime="20230418 19:23:09.067" endtime="20230418 19:23:10.011"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 19:23:10.012" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 19:23:10.012" endtime="20230418 19:23:10.076"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 19:23:10.080" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:10.076" endtime="20230418 19:23:10.081"/>
</kw>
<status status="PASS" starttime="20230418 19:23:10.011" endtime="20230418 19:23:10.081"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:10.082" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 19:23:10.081" endtime="20230418 19:23:10.168"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:10.169" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 19:23:10.168" endtime="20230418 19:23:10.251"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:10.252" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 19:23:10.252" endtime="20230418 19:23:10.341"/>
</kw>
<status status="PASS" starttime="20230418 19:23:10.081" endtime="20230418 19:23:10.342"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 19:23:10.354" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 19:23:10.342" endtime="20230418 19:23:10.354"/>
</kw>
<status status="PASS" starttime="20230418 19:23:10.342" endtime="20230418 19:23:10.354"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 19:23:10.368" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 19:23:10.354" endtime="20230418 19:23:10.368"/>
</kw>
<status status="PASS" starttime="20230418 19:23:10.354" endtime="20230418 19:23:10.368"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 19:23:10.369" endtime="20230418 19:23:10.428"/>
</kw>
<status status="PASS" starttime="20230418 19:23:10.368" endtime="20230418 19:23:10.428"/>
</kw>
<status status="PASS" starttime="20230418 19:23:09.066" endtime="20230418 19:23:10.428"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="27">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 19:23:10.430" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:10.430" endtime="20230418 19:23:11.272"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 19:23:11.272" endtime="20230418 19:23:11.378"/>
</kw>
<status status="PASS" starttime="20230418 19:23:10.429" endtime="20230418 19:23:11.379"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 19:23:11.380" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 19:23:11.379" endtime="20230418 19:23:11.463"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 19:23:11.474" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:11.463" endtime="20230418 19:23:11.474"/>
</kw>
<status status="PASS" starttime="20230418 19:23:11.379" endtime="20230418 19:23:11.474"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:11.475" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 19:23:11.475" endtime="20230418 19:23:11.579"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:11.580" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 19:23:11.580" endtime="20230418 19:23:11.665"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:11.666" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 19:23:11.665" endtime="20230418 19:23:16.766"/>
</kw>
<status status="PASS" starttime="20230418 19:23:11.474" endtime="20230418 19:23:16.766"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 19:23:16.780" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 19:23:16.767" endtime="20230418 19:23:16.780"/>
</kw>
<status status="PASS" starttime="20230418 19:23:16.767" endtime="20230418 19:23:16.780"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 19:23:16.795" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 19:23:16.781" endtime="20230418 19:23:16.795"/>
</kw>
<status status="PASS" starttime="20230418 19:23:16.781" endtime="20230418 19:23:16.795"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 19:23:16.796" endtime="20230418 19:23:16.852"/>
</kw>
<status status="PASS" starttime="20230418 19:23:16.795" endtime="20230418 19:23:16.852"/>
</kw>
<status status="PASS" starttime="20230418 19:23:10.429" endtime="20230418 19:23:16.852"/>
</test>
<status status="PASS" starttime="20230418 19:23:05.490" endtime="20230418 19:23:16.853"/>
</suite>
<status status="PASS" starttime="20230418 19:23:05.489" endtime="20230418 19:23:16.856"/>
</suite>
<status status="PASS" starttime="20230418 19:23:05.487" endtime="20230418 19:23:16.858"/>
</suite>
<suite id="s1-s3" name="Visual" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual">
<suite id="s1-s3-s1" name="Test Visual Check" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual/test_visual_check.robot">
<test id="s1-s3-s1-t1" name="Scenario: Login page" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 19:23:17.835" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:17.834" endtime="20230418 19:23:18.723"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230418 19:23:18.724" endtime="20230418 19:23:21.208"/>
</kw>
<status status="PASS" starttime="20230418 19:23:17.833" endtime="20230418 19:23:21.208"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Login Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230418 19:23:21.209" endtime="20230418 19:23:21.209"/>
</kw>
<status status="PASS" starttime="20230418 19:23:21.208" endtime="20230418 19:23:23.678"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 19:23:23.679" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 19:23:23.679" endtime="20230418 19:23:23.734"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 19:23:23.738" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:23.734" endtime="20230418 19:23:23.738"/>
</kw>
<status status="PASS" starttime="20230418 19:23:23.679" endtime="20230418 19:23:23.738"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230418 19:23:23.739" endtime="20230418 19:23:24.766"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230418 19:23:24.766" endtime="20230418 19:23:24.824"/>
</kw>
<status status="PASS" starttime="20230418 19:23:23.739" endtime="20230418 19:23:24.824"/>
</kw>
<status status="PASS" starttime="20230418 19:23:17.832" endtime="20230418 19:23:24.824"/>
</test>
<test id="s1-s3-s1-t2" name="Scenario: Inventory page" line="14">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 19:23:24.826" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 19:23:24.825" endtime="20230418 19:23:25.669"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230418 19:23:25.670" endtime="20230418 19:23:27.722"/>
</kw>
<status status="PASS" starttime="20230418 19:23:24.825" endtime="20230418 19:23:27.722"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:27.724" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 19:23:27.723" endtime="20230418 19:23:27.812"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:27.813" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 19:23:27.812" endtime="20230418 19:23:27.896"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 19:23:27.896" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 19:23:27.896" endtime="20230418 19:23:27.983"/>
</kw>
<status status="PASS" starttime="20230418 19:23:27.722" endtime="20230418 19:23:27.984"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 19:23:27.996" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 19:23:27.984" endtime="20230418 19:23:27.997"/>
</kw>
<status status="PASS" starttime="20230418 19:23:27.984" endtime="20230418 19:23:27.997"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 19:23:28.010" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 19:23:27.997" endtime="20230418 19:23:28.010"/>
</kw>
<status status="PASS" starttime="20230418 19:23:27.997" endtime="20230418 19:23:28.010"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Inventory Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230418 19:23:28.011" endtime="20230418 19:23:28.011"/>
</kw>
<status status="PASS" starttime="20230418 19:23:28.010" endtime="20230418 19:23:30.498"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230418 19:23:30.498" endtime="20230418 19:23:31.519"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230418 19:23:31.520" endtime="20230418 19:23:31.577"/>
</kw>
<status status="PASS" starttime="20230418 19:23:30.498" endtime="20230418 19:23:31.578"/>
</kw>
<status status="PASS" starttime="20230418 19:23:24.824" endtime="20230418 19:23:31.578"/>
</test>
<meta name="Applitools TestResults Path">/tmp/tmpufayh8w9/EyesTestResults-dbd6f2b74a834579b45f18d6d9f2c592.json</meta>
<status status="PASS" starttime="20230418 19:23:16.862" endtime="20230418 19:23:31.579"/>
</suite>
<status status="PASS" starttime="20230418 19:23:16.859" endtime="20230418 19:23:31.580"/>
</suite>
<status status="PASS" starttime="20230418 19:23:04.223" endtime="20230418 19:23:31.581"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Visual">Tests.Visual</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Test Visual Check">Tests.Visual.Test Visual Check</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230418 19:23:04.990" level="ERROR">Error in file '/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/config/settings.robot' on line 5: Initializing library 'EyesLibrary' with arguments [ runner=web_ufg | config=applitools.yaml ] failed: EyesLibraryConfigError: The configuration file was not found in the following directory: /home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/applitools.yaml
You could initialize config file with command: 
	`python -m EyesLibrary init-config`
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 195, in __init__
    self._configuration = try_parse_configuration(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/config_parser.py", line 411, in try_parse_configuration
    raise EyesLibraryConfigError(
EyesLibrary.errors.EyesLibraryConfigError: The configuration file was not found in the following directory: /home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/applitools.yaml
You could initialize config file with command: 
	`python -m EyesLibrary init-config`</msg>
<msg timestamp="20230418 19:23:05.494" level="ERROR">Error in file '/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/config/settings.robot' on line 5: Initializing library 'EyesLibrary' with arguments [ runner=web_ufg | config=applitools.yaml ] failed: EyesLibraryConfigError: The configuration file was not found in the following directory: /home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/applitools.yaml
You could initialize config file with command: 
	`python -m EyesLibrary init-config`
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 195, in __init__
    self._configuration = try_parse_configuration(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/config_parser.py", line 411, in try_parse_configuration
    raise EyesLibraryConfigError(
EyesLibrary.errors.EyesLibraryConfigError: The configuration file was not found in the following directory: /home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/applitools.yaml
You could initialize config file with command: 
	`python -m EyesLibrary init-config`</msg>
</errors>
</robot>
