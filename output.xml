<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.8.17 on linux)" generated="20230619 01:19:50.786" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230619 01:19:51.245" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230619 01:19:51.244" endtime="20230619 01:19:51.245"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.244" endtime="20230619 01:19:51.245"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230619 01:19:51.389" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230619 01:19:51.389" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2bb4f9ec-a28c-4782-8d47-3cb38e1d5ed6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd5b279a2ee17609a6c61eadf6f6f1833;o=1', 'Date': 'Mon, 19 Jun 2023 01:19:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '9534'} 
 body={
    "quantidade": 44,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "pklp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "4oj0Au0oMT7qSYE6"
        },
        {
            "nome": "Fulano da Silva",
            "email": "tcetf@emailteste.com",
            "password": "VW36V8jf",
            "administrador": "true",
            "_id": "7LsBg9N6Akpi3dS2"
        },
        {
            "nome": "Fulano da Silva",
            "email": "vbjjp@emailteste.com",
            "password": "6YmFD4I3",
            "administrador": "true",
            "_id": "82BcK3fMmPdpIcr6"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ryfld@emailteste.com",
            "password": "UYwQNUYB",
            "administrador": "true",
            "_id": "8fI5B7jqbjxcx69u"
        },
        {
            "nome": "Fulano da Silva",
            "email": "niuwu@emailteste.com",
            "password": "st1tx0eC",
            "administrador": "true",
            "_id": "AXwcbSELUBSokUiS"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fmuhu@emailteste.com",
            "password": "E479s4z9",
            "administrador": "true",
            "_id": "CI8XAkc1DZN9fOVM"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ybaub@emailteste.com",
            "password": "0xYtnbMk",
            "administrador": "true",
            "_id": "EAmIzUsANMMRaCQJ"
        },
        {
            "nome": "Buddy Thompson",
            "email": "buddy.thompson@email.com",
            "password": "WRmWtJuqpyWrhQv",
            "administrador": "true",
            "_id": "Ef1UmsyPLyyiHzmd"
        },
        {
            "nome": "Edgardo Wilkinson",
            "email": "edgardo.wilkinson@email.com",
            "password": "ZYqwfcfsJawzPv5",
            "administrador": "true",
            "_id": "FwJvvyrGhHK2rFCA"
        },
        {
            "nome": "emma",
            "email": "emma@teste.com",
            "password": "1231",
            "administrador": "true",
            "_id": "HgFiiNcLsmGqi0rD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ugik@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "HtKksH3vRZp89wcj"
        },
        {
            "nome": "Fulano da Silva",
            "email": "bkro@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "ILtfYreVnTc35i1D"
        },
        {
            "nome": "Fulano da Silva",
            "email": "kbisj@emailteste.com",
            "password": "1Cbof6j2",
            "administrador": "true",
            "_id": "JpvWK6KKnAbBYH9h"
        },
        {
            "nome": "Fulano da Silva",
            "email": "jerc@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "LacUlA421D0EzkUA"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ufob@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "N3Kevm9LjRXHTptx"
        },
        {
            "nome": "Fulano da Silva",
            "email": "wqdgi@emailteste.com",
            "password": "gAg5P6yJ",
            "administrador": "true",
            "_id": "NSGGVQUScZLX0tFR"
        },
        {
            "nome": "Fulano da Silva",
            "email": "kgiaz@emailteste.com",
            "password": "ueQHQrSe",
            "administrador": "true",
            "_id": "O6NTip51Y5n4sT9m"
        },
        {
            "nome": "Reina Renner",
            "email": "reina.renner@email.com",
            "password": "HoTbdojqFdXLH0w",
            "administrador": "true",
            "_id": "SHMQD5ZZPCApK81j"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lcasm@emailteste.com",
            "password": "HqBdizvW",
            "administrador": "true",
            "_id": "SLUqQZsYlye3q9uQ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rtbfl@emailteste.com",
            "password": "YnqNGeFY",
            "administrador": "true",
            "_id": "THC5cWeFNmmBfTKv"
        },
        {
            "nome": "Fulano da Silva",
            "email": "sjlh@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "TZM3LaQdQI3KewWK"
        },
        {
            "nome": "Fulano da Silva",
            "email": "gyaez@emailteste.com",
            "password": "g84c3MJG",
            "administrador": "true",
            "_id": "WNcKwPObdHCTZzZ5"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yxvok@emailteste.com",
            "password": "nUpcDl0G",
            "administrador": "true",
            "_id": "XDZRWlJnfGJ76Dru"
        },
        {
            "nome": "Barney Bailey",
            "email": "barney.bailey@email.com",
            "password": "UAXGPfRrzTAbDxQ",
            "administrador": "true",
            "_id": "bCG2H1mFjmpMKSTh"
        },
        {
            "nome": "Fulano da Silva",
            "email": "uywta@emailteste.com",
            "password": "ReMExARy",
            "administrador": "true",
            "_id": "btfpgQQCQ7m6v9do"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lclyr@emailteste.com",
            "password": "LA8cKmKo",
            "administrador": "true",
            "_id": "cxPSVxU67Xi5JVV7"
        },
        {
            "nome": "Fulano da Silva",
            "email": "momdu@emailteste.com",
            "password": "ZEaYbR2B",
            "administrador": "true",
            "_id": "dCcB281XTFAYIhdU"
        },
        {
            "nome": "Fulano da Silva",
            "email": "kwzbu@emailteste.com",
            "password": "Nb1PzXBB",
            "administrador": "true",
            "_id": "dJeWIwSeYdMVaCnR"
        },
        {
            "nome": "Fulano da Silva",
            "email": "oahfd@emailteste.com",
            "password": "NAhIZr92",
            "administrador": "true",
            "_id": "ecamXNYuteHAu6kX"
        },
        {
            "nome": "Fulano da Silva",
            "email": "tgazu@emailteste.com",
            "password": "HfhrdsHP",
            "administrador": "true",
            "_id": "gJQJRdPInlwXXY1z"
        },
        {
            "nome": "Fulano da Silva",
            "email": "pyjb@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "hfzpmUhFOg1BXClH"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lmioh@emailteste.com",
            "password": "BOKYonkp",
            "administrador": "true",
            "_id": "nRr7GukwI7kzFL8v"
        },
        {
            "nome": "{{nome}}",
            "email": "Reymundo@qa.com.br",
            "password": "PWca7EsUS_1sbV8",
            "administrador": "true",
            "_id": "npgcy1bouXIgJxJl"
        },
        {
            "nome": "Fulano da Silva",
            "email": "smjv@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "pEgZLvf8nfNCkwI4"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ntlya@emailteste.com",
            "password": "LHFAtnIm",
            "administrador": "true",
            "_id": "riRvEpyntNxkuuw0"
        },
        {
            "nome": "Kaelyn",
            "email": "Sandra_Mertz80@gmail.com",
            "password": "oatyrTSpWLIl7iF",
            "administrador": "true",
            "_id": "sGo4cfCFduT2Quki"
        },
        {
            "nome": "Evandro da Cunha Silva",
            "email": "treino-postman@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "sd6zLkQbt1B8uQmU"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rucxl@emailteste.com",
            "password": "8lVSyNtH",
            "administrador": "true",
            "_id": "sg4Dao01RjB36VZD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "wfkf@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "uB03t7gnHiRx8UOV"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yphvz@emailteste.com",
            "password": "H5grdJTn",
            "administrador": "true",
            "_id": "vIaRkQwfNozhMnAs"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ptfzg@emailteste.com",
            "password": "xZR1cHjB",
            "administrador": "true",
            "_id": "wipyHaABlwNRVjb2"
        },
        {
            "nome": "Fulano da Silva",
            "email": "qfkas@emailteste.com",
            "password": "vEzy3BTB",
            "administrador": "true",
            "_id": "wn9EB13CnNA7z3Zq"
        },
        {
            "nome": "Fulano da Silva",
            "email": "aulqe@emailteste.com",
            "password": "yvOQJLkL",
            "administrador": "true",
            "_id": "xnZlBFcfZOHh8P9y"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ctxqs@emailteste.com",
            "password": "kMIQ3bOV",
            "administrador": "true",
            "_id": "zr87hsFr43PF8iKo"
        }
    ]
} 
 </msg>
<msg timestamp="20230619 01:19:51.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.246" endtime="20230619 01:19:51.390"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230619 01:19:51.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.390" endtime="20230619 01:19:51.390"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.245" endtime="20230619 01:19:51.390"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230619 01:19:51.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.391" endtime="20230619 01:19:51.391"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230619 01:19:51.392" endtime="20230619 01:19:51.392"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.390" endtime="20230619 01:19:51.392"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230619 01:19:51.393" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230619 01:19:51.393" endtime="20230619 01:19:51.393"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.392" endtime="20230619 01:19:51.393"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230619 01:19:51.243" endtime="20230619 01:19:51.393"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230619 01:19:51.395" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230619 01:19:51.394" endtime="20230619 01:19:51.395"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.394" endtime="20230619 01:19:51.395"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230619 01:19:51.396" level="INFO">${name} = Jennifer Conrad</msg>
<status status="PASS" starttime="20230619 01:19:51.395" endtime="20230619 01:19:51.396"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230619 01:19:51.396" level="INFO">${email} = robert73@example.net</msg>
<status status="PASS" starttime="20230619 01:19:51.396" endtime="20230619 01:19:51.396"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230619 01:19:51.397" level="INFO">${password} = 38B1nU3i0eZx</msg>
<status status="PASS" starttime="20230619 01:19:51.396" endtime="20230619 01:19:51.397"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230619 01:19:51.397" level="INFO">${name} = Jennifer Conrad</msg>
<status status="PASS" starttime="20230619 01:19:51.397" endtime="20230619 01:19:51.397"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230619 01:19:51.397" level="INFO">${email} = robert73@example.net</msg>
<status status="PASS" starttime="20230619 01:19:51.397" endtime="20230619 01:19:51.397"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230619 01:19:51.398" level="INFO">${password} = 38B1nU3i0eZx</msg>
<status status="PASS" starttime="20230619 01:19:51.398" endtime="20230619 01:19:51.398"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.395" endtime="20230619 01:19:51.398"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230619 01:19:51.399" level="INFO">${payload} = {'nome': 'Jennifer Conrad', 'email': 'robert73@example.net', 'password': '38B1nU3i0eZx', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230619 01:19:51.398" endtime="20230619 01:19:51.399"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230619 01:19:51.399" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230619 01:19:51.399" endtime="20230619 01:19:51.399"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230619 01:19:51.477" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "Jennifer Conrad", "email": "robert73@example.net", "password": "38B1nU3i0eZx", "administrador": "false"}' 
 </msg>
<msg timestamp="20230619 01:19:51.477" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c880e712-d5e7-48d6-920a-0c027a3f8f2b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b4320542dc63944ba3e84e062b8d4922', 'Date': 'Mon, 19 Jun 2023 01:19:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "pZNs6e9jJk0y02hS"
} 
 </msg>
<msg timestamp="20230619 01:19:51.477" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.399" endtime="20230619 01:19:51.477"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230619 01:19:51.478" level="INFO">${user_id} = pZNs6e9jJk0y02hS</msg>
<status status="PASS" starttime="20230619 01:19:51.477" endtime="20230619 01:19:51.478"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230619 01:19:51.478" level="INFO">${USER_ID} = pZNs6e9jJk0y02hS</msg>
<status status="PASS" starttime="20230619 01:19:51.478" endtime="20230619 01:19:51.478"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230619 01:19:51.479" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.478" endtime="20230619 01:19:51.479"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.398" endtime="20230619 01:19:51.479"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230619 01:19:51.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.479" endtime="20230619 01:19:51.480"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230619 01:19:51.480" endtime="20230619 01:19:51.481"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.479" endtime="20230619 01:19:51.481"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230619 01:19:51.482" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230619 01:19:51.481" endtime="20230619 01:19:51.482"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.481" endtime="20230619 01:19:51.482"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230619 01:19:51.394" endtime="20230619 01:19:51.482"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230619 01:19:51.484" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230619 01:19:51.484" endtime="20230619 01:19:51.484"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.484" endtime="20230619 01:19:51.484"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230619 01:19:51.564" level="INFO">GET Request : url=https://serverest.dev/usuarios/pZNs6e9jJk0y02hS 
 path_url=/usuarios/pZNs6e9jJk0y02hS 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230619 01:19:51.564" level="INFO">GET Response : url=https://serverest.dev/usuarios/pZNs6e9jJk0y02hS 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c0429646-d5af-432c-b51d-1dab23c4347e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3506e72cea8276ef31065d0921aede2e', 'Date': 'Mon, 19 Jun 2023 01:19:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "Jennifer Conrad",
    "email": "robert73@example.net",
    "password": "38B1nU3i0eZx",
    "administrador": "false",
    "_id": "pZNs6e9jJk0y02hS"
} 
 </msg>
<msg timestamp="20230619 01:19:51.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.485" endtime="20230619 01:19:51.564"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230619 01:19:51.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.565" endtime="20230619 01:19:51.565"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.484" endtime="20230619 01:19:51.565"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230619 01:19:51.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.566" endtime="20230619 01:19:51.567"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230619 01:19:51.567" endtime="20230619 01:19:51.567"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.565" endtime="20230619 01:19:51.567"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230619 01:19:51.568" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230619 01:19:51.568" endtime="20230619 01:19:51.568"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.567" endtime="20230619 01:19:51.568"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230619 01:19:51.483" endtime="20230619 01:19:51.568"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230619 01:19:51.570" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230619 01:19:51.570" endtime="20230619 01:19:51.570"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.569" endtime="20230619 01:19:51.570"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230619 01:19:51.571" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230619 01:19:51.570" endtime="20230619 01:19:51.571"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230619 01:19:51.571" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230619 01:19:51.571" endtime="20230619 01:19:51.571"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230619 01:19:51.648" level="INFO">PUT Request : url=https://serverest.dev/usuarios/pZNs6e9jJk0y02hS 
 path_url=/usuarios/pZNs6e9jJk0y02hS 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230619 01:19:51.648" level="INFO">PUT Response : url=https://serverest.dev/usuarios/pZNs6e9jJk0y02hS 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b730dd4-43c3-4926-bc58-8b735aab168e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2f626e15b4d4c6a7de50da1fb5ee99f7', 'Date': 'Mon, 19 Jun 2023 01:19:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230619 01:19:51.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.571" endtime="20230619 01:19:51.649"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230619 01:19:51.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.649" endtime="20230619 01:19:51.649"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.570" endtime="20230619 01:19:51.649"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230619 01:19:51.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.650" endtime="20230619 01:19:51.650"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230619 01:19:51.650" endtime="20230619 01:19:51.651"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.649" endtime="20230619 01:19:51.651"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230619 01:19:51.652" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230619 01:19:51.651" endtime="20230619 01:19:51.652"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.651" endtime="20230619 01:19:51.652"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230619 01:19:51.569" endtime="20230619 01:19:51.652"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230619 01:19:51.653" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230619 01:19:51.653" endtime="20230619 01:19:51.654"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.653" endtime="20230619 01:19:51.654"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230619 01:19:51.734" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/pZNs6e9jJk0y02hS 
 path_url=/usuarios/pZNs6e9jJk0y02hS 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230619 01:19:51.734" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/pZNs6e9jJk0y02hS 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dbc88fbb-aead-4321-aab6-bee7b5b44b4d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6bef43122003d795ad80a02b8b2348c5', 'Date': 'Mon, 19 Jun 2023 01:19:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230619 01:19:51.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.654" endtime="20230619 01:19:51.734"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230619 01:19:51.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.734" endtime="20230619 01:19:51.735"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.654" endtime="20230619 01:19:51.735"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230619 01:19:51.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230619 01:19:51.735" endtime="20230619 01:19:51.736"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230619 01:19:51.736" endtime="20230619 01:19:51.737"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.735" endtime="20230619 01:19:51.737"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230619 01:19:51.738" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230619 01:19:51.737" endtime="20230619 01:19:51.738"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.737" endtime="20230619 01:19:51.738"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230619 01:19:51.652" endtime="20230619 01:19:51.738"/>
</test>
<status status="PASS" starttime="20230619 01:19:50.807" endtime="20230619 01:19:51.738"/>
</suite>
<status status="PASS" starttime="20230619 01:19:50.805" endtime="20230619 01:19:51.739"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230619 01:19:51.750" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230619 01:19:51.749" endtime="20230619 01:19:54.308"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230619 01:19:54.308" endtime="20230619 01:19:54.412"/>
</kw>
<status status="PASS" starttime="20230619 01:19:51.749" endtime="20230619 01:19:54.412"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230619 01:19:54.418" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230619 01:19:54.413" endtime="20230619 01:19:54.418"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:54.419" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230619 01:19:54.418" endtime="20230619 01:19:54.478"/>
</kw>
<status status="PASS" starttime="20230619 01:19:54.413" endtime="20230619 01:19:54.478"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:54.479" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230619 01:19:54.479" endtime="20230619 01:19:54.545"/>
</kw>
<status status="PASS" starttime="20230619 01:19:54.478" endtime="20230619 01:19:54.546"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230619 01:19:54.546" endtime="20230619 01:19:54.781"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230619 01:19:54.798" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230619 01:19:54.781" endtime="20230619 01:19:54.798"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230619 01:19:54.812" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230619 01:19:54.798" endtime="20230619 01:19:54.813"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230619 01:19:54.825" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230619 01:19:54.813" endtime="20230619 01:19:54.825"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230619 01:19:54.837" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230619 01:19:54.825" endtime="20230619 01:19:54.838"/>
</kw>
<status status="PASS" starttime="20230619 01:19:54.546" endtime="20230619 01:19:54.838"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230619 01:19:54.838" endtime="20230619 01:19:54.893"/>
</kw>
<status status="PASS" starttime="20230619 01:19:54.838" endtime="20230619 01:19:54.893"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230619 01:19:51.749" endtime="20230619 01:19:54.893"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230619 01:19:54.895" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230619 01:19:54.895" endtime="20230619 01:19:56.187"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230619 01:19:56.187" endtime="20230619 01:19:56.290"/>
</kw>
<status status="PASS" starttime="20230619 01:19:54.894" endtime="20230619 01:19:56.291"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230619 01:19:56.296" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230619 01:19:56.291" endtime="20230619 01:19:56.296"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:56.296" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230619 01:19:56.296" endtime="20230619 01:19:56.348"/>
</kw>
<status status="PASS" starttime="20230619 01:19:56.291" endtime="20230619 01:19:56.348"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230619 01:19:56.349" level="INFO">${name} = James Alvarez</msg>
<status status="PASS" starttime="20230619 01:19:56.349" endtime="20230619 01:19:56.349"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230619 01:19:56.350" level="INFO">${email} = david78@example.org</msg>
<status status="PASS" starttime="20230619 01:19:56.349" endtime="20230619 01:19:56.350"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230619 01:19:56.350" level="INFO">${password} = yE26f26JcRZt</msg>
<status status="PASS" starttime="20230619 01:19:56.350" endtime="20230619 01:19:56.350"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:56.351" level="INFO">Typing text 'James Alvarez' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230619 01:19:56.350" endtime="20230619 01:19:56.465"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:56.466" level="INFO">Typing text 'david78@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230619 01:19:56.465" endtime="20230619 01:19:56.568"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:56.569" level="INFO">Typing text 'yE26f26JcRZt' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230619 01:19:56.569" endtime="20230619 01:19:56.664"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:56.664" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230619 01:19:56.664" endtime="20230619 01:19:56.737"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230619 01:19:56.738" level="INFO">${name} = James Alvarez</msg>
<status status="PASS" starttime="20230619 01:19:56.738" endtime="20230619 01:19:56.738"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230619 01:19:56.738" level="INFO">${email} = david78@example.org</msg>
<status status="PASS" starttime="20230619 01:19:56.738" endtime="20230619 01:19:56.738"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230619 01:19:56.739" level="INFO">${password} = yE26f26JcRZt</msg>
<status status="PASS" starttime="20230619 01:19:56.739" endtime="20230619 01:19:56.739"/>
</kw>
<status status="PASS" starttime="20230619 01:19:56.348" endtime="20230619 01:19:56.739"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:56.740" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230619 01:19:56.739" endtime="20230619 01:19:56.796"/>
</kw>
<status status="PASS" starttime="20230619 01:19:56.739" endtime="20230619 01:19:56.796"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230619 01:19:56.797" endtime="20230619 01:19:57.029"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230619 01:19:57.047" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230619 01:19:57.030" endtime="20230619 01:19:57.047"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230619 01:19:57.060" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230619 01:19:57.047" endtime="20230619 01:19:57.060"/>
</kw>
<status status="PASS" starttime="20230619 01:19:56.796" endtime="20230619 01:19:57.060"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230619 01:19:57.061" endtime="20230619 01:19:57.116"/>
</kw>
<status status="PASS" starttime="20230619 01:19:57.060" endtime="20230619 01:19:57.116"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230619 01:19:54.894" endtime="20230619 01:19:57.117"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230619 01:19:57.119" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230619 01:19:57.118" endtime="20230619 01:19:58.405"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230619 01:19:58.406" endtime="20230619 01:19:58.509"/>
</kw>
<status status="PASS" starttime="20230619 01:19:57.118" endtime="20230619 01:19:58.509"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230619 01:19:58.515" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230619 01:19:58.510" endtime="20230619 01:19:58.515"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:58.515" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230619 01:19:58.515" endtime="20230619 01:19:58.568"/>
</kw>
<status status="PASS" starttime="20230619 01:19:58.510" endtime="20230619 01:19:58.568"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:58.569" level="INFO">Typing text 'James Alvarez' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230619 01:19:58.569" endtime="20230619 01:19:58.677"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:58.678" level="INFO">Typing text 'david78@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230619 01:19:58.677" endtime="20230619 01:19:58.780"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:58.781" level="INFO">Typing text 'yE26f26JcRZt' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230619 01:19:58.780" endtime="20230619 01:19:58.868"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:58.869" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230619 01:19:58.868" endtime="20230619 01:19:58.941"/>
</kw>
<status status="PASS" starttime="20230619 01:19:58.568" endtime="20230619 01:19:58.941"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230619 01:19:58.942" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230619 01:19:58.942" endtime="20230619 01:19:58.998"/>
</kw>
<status status="PASS" starttime="20230619 01:19:58.942" endtime="20230619 01:19:58.998"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230619 01:19:58.999" endtime="20230619 01:19:59.231"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230619 01:19:59.249" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230619 01:19:59.232" endtime="20230619 01:19:59.249"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230619 01:19:59.262" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230619 01:19:59.249" endtime="20230619 01:19:59.262"/>
</kw>
<status status="PASS" starttime="20230619 01:19:58.999" endtime="20230619 01:19:59.262"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230619 01:19:59.262" endtime="20230619 01:19:59.316"/>
</kw>
<status status="PASS" starttime="20230619 01:19:59.262" endtime="20230619 01:19:59.317"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230619 01:19:57.117" endtime="20230619 01:19:59.317"/>
</test>
<status status="PASS" starttime="20230619 01:19:51.742" endtime="20230619 01:19:59.318"/>
</suite>
<status status="PASS" starttime="20230619 01:19:51.740" endtime="20230619 01:19:59.319"/>
</suite>
<status status="PASS" starttime="20230619 01:19:50.787" endtime="20230619 01:19:59.320"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
