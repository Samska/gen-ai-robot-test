<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.8.17 on linux)" generated="20230704 01:10:13.911" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230704 01:10:14.671" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230704 01:10:14.670" endtime="20230704 01:10:14.671"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.670" endtime="20230704 01:10:14.671"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230704 01:10:14.833" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230704 01:10:14.834" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b0300592-5e09-4fab-a20d-7142bbf3ce86', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b8da00182d60ec9894fe17e17c1e690e;o=1', 'Date': 'Tue, 04 Jul 2023 01:10:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '9004'} 
 body={
    "quantidade": 42,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Jacsonsm",
            "email": "bcollier@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "21mrAbibCmwjwNuc"
        },
        {
            "nome": "April Jackson",
            "email": "ashleyvasquez@example.org",
            "password": "(8OxIdbcHt",
            "administrador": "true",
            "_id": "2gv84DZtFXWMTmAn"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ocyy@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "2jrahGZKSQfJMscf"
        },
        {
            "nome": "Jacsonsm",
            "email": "angelica37@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "3Gutn5HtnM8a19Uu"
        },
        {
            "nome": "Jacsonsm",
            "email": "zleblanc@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "6owB3ayPz5lFA3J7"
        },
        {
            "nome": "Evan Mercer",
            "email": "ujohns@example.org",
            "password": "@WIKDlapw3",
            "administrador": "true",
            "_id": "6xjHLdlKNagq3eZM"
        },
        {
            "nome": "Kimberly Whitaker",
            "email": "clintonwood@example.net",
            "password": "8L0%gXzG+w",
            "administrador": "true",
            "_id": "7eu0cEtULpNSzeeB"
        },
        {
            "nome": "Jacsonsm",
            "email": "christophersimpson@example.org",
            "password": "123456",
            "administrador": "true",
            "_id": "7hzbjUkjjGvR9BHx"
        },
        {
            "nome": "Lindsay Ritter",
            "email": "matthew41@example.org",
            "password": "h+9qUJTfpQ",
            "administrador": "true",
            "_id": "7lGbPnrgkVXUKGEX"
        },
        {
            "nome": "Jacsonsm",
            "email": "juan36@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "C7uF7cgi84js98Ri"
        },
        {
            "nome": "Justin Evans",
            "email": "lopezjody@example.net",
            "password": "j&amp;6+J3YcIC",
            "administrador": "true",
            "_id": "ChnxbsnSLoa397Bx"
        },
        {
            "nome": "Fran Qa Teste",
            "email": "f.qateste@qa.com.br",
            "password": "teste1234",
            "administrador": "true",
            "_id": "EPpTAHSIXMMcIjSN"
        },
        {
            "nome": "Jacsonsm",
            "email": "christophercarter@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "G7EGnOBjo2tMBqJg"
        },
        {
            "nome": "Jacsonsm",
            "email": "hernandezjennifer@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "IAl0rFQ2lgokRrOO"
        },
        {
            "nome": "Jacsonsm",
            "email": "laurasawyer@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "KYZGgzA4vcRHiDim"
        },
        {
            "nome": "Jacsonsm",
            "email": "burnettmelanie@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "LElu7Q0Ag7WBxDuR"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ekik@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "NbGIjgsuhyzMYBJe"
        },
        {
            "nome": "Jacsonsm",
            "email": "glennthompson@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "NcWD2O5BTpHKMmCi"
        },
        {
            "nome": "Ashley Nguyen",
            "email": "sandersdennis@example.net",
            "password": "&amp;8Sm25lldd",
            "administrador": "true",
            "_id": "QXAj19xryIsSf3D9"
        },
        {
            "nome": "Richard Brown",
            "email": "ortizmark@example.com",
            "password": "81TgI^vX*2",
            "administrador": "true",
            "_id": "TPoVHDI7ofBgWaSM"
        },
        {
            "nome": "Vanessa Joseph",
            "email": "petersjenny@example.net",
            "password": "D_^m9NYxC)",
            "administrador": "true",
            "_id": "VRNrGdPAbKtkr68w"
        },
        {
            "nome": "Lisa Wells",
            "email": "brandi63@example.org",
            "password": "+HBYEqmlz7",
            "administrador": "true",
            "_id": "XXqJf2UbN6oxPKqA"
        },
        {
            "nome": "Shawn Henderson",
            "email": "amymiller@example.com",
            "password": "_(1FMsoYt^",
            "administrador": "true",
            "_id": "YVneqqqYdiPOsTvc"
        },
        {
            "nome": "Margaret Lee",
            "email": "jefferyolsen@example.org",
            "password": ")(!7ZEqAE^",
            "administrador": "true",
            "_id": "aljXdOD8u219Tt0L"
        },
        {
            "nome": "Sherry Williamson",
            "email": "bethany83@example.org",
            "password": "+1n4CfRuZ7",
            "administrador": "true",
            "_id": "cpMyEbTuz1LuZCDf"
        },
        {
            "nome": "Jacsonsm",
            "email": "baileybeth@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "cy78GnUm1WOw7Nad"
        },
        {
            "nome": "Jacsonsm",
            "email": "john61@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "dJpjSuR0AgbmxYmh"
        },
        {
            "nome": "Fulano da Silva",
            "email": "oecg@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "ibKCyO2beAYo9DMG"
        },
        {
            "nome": "Lues",
            "email": "luguys@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "k7xfwQthFNLuxwap"
        },
        {
            "nome": "Jacsonsm",
            "email": "kevin63@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "lM9Qu231p1zoXih7"
        },
        {
            "nome": "Alexandra Keller",
            "email": "michaelrose@example.org",
            "password": "_77F+gmuLy",
            "administrador": "true",
            "_id": "nVhmPwwDnSQzQNZO"
        },
        {
            "nome": "Ronnie Johnson",
            "email": "allenmichael@example.org",
            "password": "r(i4QtY@lg",
            "administrador": "true",
            "_id": "nk6zsZ9nQGlRB6Lx"
        },
        {
            "nome": "David Wall",
            "email": "adamolson@example.org",
            "password": "oQnITJaL%1",
            "administrador": "true",
            "_id": "nlxk5YYEI4fZNCEF"
        },
        {
            "nome": "Jacsonsm",
            "email": "reynoldsronald@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "oSNSA5JHWyiyEqxZ"
        },
        {
            "nome": "Jacsonsm",
            "email": "danielalvarez@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "pUqSiNTXz7kTLhAb"
        },
        {
            "nome": "Jacsonsm",
            "email": "charles23@example.org",
            "password": "123456",
            "administrador": "true",
            "_id": "qwnedleSSzjPGhcB"
        },
        {
            "nome": "Andrew Smith",
            "email": "susanblake@example.org",
            "password": "$2JPZx4#WP",
            "administrador": "true",
            "_id": "tAsQNWQc6EzMwuOO"
        },
        {
            "nome": "Jacsonsm",
            "email": "xharris@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "wWjRhQCBm3rIuSUy"
        },
        {
            "nome": "Jacsonsm",
            "email": "jamesfowler@example.org",
            "password": "123456",
            "administrador": "true",
            "_id": "xRgqBMYV1pwUHG1m"
        },
        {
            "nome": "Justin Smith",
            "email": "psingh@example.com",
            "password": "+27*rDMke%",
            "administrador": "true",
            "_id": "yk4oSTfTynyDC0DL"
        },
        {
            "nome": "Carla Bell",
            "email": "garciakevin@example.net",
            "password": "O2IxkB1h+g",
            "administrador": "true",
            "_id": "ys38VjTdsCCFGwxA"
        }
    ]
} 
 </msg>
<msg timestamp="20230704 01:10:14.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:14.672" endtime="20230704 01:10:14.834"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230704 01:10:14.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:14.834" endtime="20230704 01:10:14.835"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.671" endtime="20230704 01:10:14.835"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230704 01:10:14.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230704 01:10:14.835" endtime="20230704 01:10:14.836"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 01:10:14.836" endtime="20230704 01:10:14.837"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.835" endtime="20230704 01:10:14.837"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230704 01:10:14.838" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230704 01:10:14.838" endtime="20230704 01:10:14.838"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.837" endtime="20230704 01:10:14.838"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230704 01:10:14.669" endtime="20230704 01:10:14.838"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230704 01:10:14.840" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230704 01:10:14.840" endtime="20230704 01:10:14.840"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.839" endtime="20230704 01:10:14.840"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230704 01:10:14.841" level="INFO">${name} = Louis Miller</msg>
<status status="PASS" starttime="20230704 01:10:14.841" endtime="20230704 01:10:14.841"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230704 01:10:14.842" level="INFO">${email} = brandon16@example.org</msg>
<status status="PASS" starttime="20230704 01:10:14.842" endtime="20230704 01:10:14.842"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230704 01:10:14.843" level="INFO">${password} = nJ0NWt7tKVIt</msg>
<status status="PASS" starttime="20230704 01:10:14.842" endtime="20230704 01:10:14.843"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230704 01:10:14.843" level="INFO">${name} = Louis Miller</msg>
<status status="PASS" starttime="20230704 01:10:14.843" endtime="20230704 01:10:14.843"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230704 01:10:14.843" level="INFO">${email} = brandon16@example.org</msg>
<status status="PASS" starttime="20230704 01:10:14.843" endtime="20230704 01:10:14.843"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230704 01:10:14.844" level="INFO">${password} = nJ0NWt7tKVIt</msg>
<status status="PASS" starttime="20230704 01:10:14.844" endtime="20230704 01:10:14.844"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.840" endtime="20230704 01:10:14.844"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230704 01:10:14.845" level="INFO">${payload} = {'nome': 'Louis Miller', 'email': 'brandon16@example.org', 'password': 'nJ0NWt7tKVIt', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230704 01:10:14.844" endtime="20230704 01:10:14.845"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230704 01:10:14.845" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230704 01:10:14.845" endtime="20230704 01:10:14.845"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230704 01:10:14.919" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Louis Miller", "email": "brandon16@example.org", "password": "nJ0NWt7tKVIt", "administrador": "false"}' 
 </msg>
<msg timestamp="20230704 01:10:14.919" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e1817dfc-af2e-405e-a174-4d7cf974d0d8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd6a629757aeb3706d4f65afd44f00602', 'Date': 'Tue, 04 Jul 2023 01:10:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "I1k9jx7uZDkZd8k8"
} 
 </msg>
<msg timestamp="20230704 01:10:14.919" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:14.845" endtime="20230704 01:10:14.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 01:10:14.920" level="INFO">${user_id} = I1k9jx7uZDkZd8k8</msg>
<status status="PASS" starttime="20230704 01:10:14.919" endtime="20230704 01:10:14.920"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230704 01:10:14.921" level="INFO">${USER_ID} = I1k9jx7uZDkZd8k8</msg>
<status status="PASS" starttime="20230704 01:10:14.920" endtime="20230704 01:10:14.921"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230704 01:10:14.921" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:14.921" endtime="20230704 01:10:14.922"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.844" endtime="20230704 01:10:14.922"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230704 01:10:14.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230704 01:10:14.922" endtime="20230704 01:10:14.923"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 01:10:14.923" endtime="20230704 01:10:14.924"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.922" endtime="20230704 01:10:14.924"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230704 01:10:14.925" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230704 01:10:14.924" endtime="20230704 01:10:14.925"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.924" endtime="20230704 01:10:14.925"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230704 01:10:14.839" endtime="20230704 01:10:14.925"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230704 01:10:14.927" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230704 01:10:14.927" endtime="20230704 01:10:14.928"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.926" endtime="20230704 01:10:14.928"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230704 01:10:15.005" level="INFO">GET Request : url=https://serverest.dev/usuarios/I1k9jx7uZDkZd8k8 
 path_url=/usuarios/I1k9jx7uZDkZd8k8 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230704 01:10:15.005" level="INFO">GET Response : url=https://serverest.dev/usuarios/I1k9jx7uZDkZd8k8 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2aac5d6f-7548-449f-97ad-3c2c341a557e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2895325fcfa142231db785d74229fa12', 'Date': 'Tue, 04 Jul 2023 01:10:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Louis Miller",
    "email": "brandon16@example.org",
    "password": "nJ0NWt7tKVIt",
    "administrador": "false",
    "_id": "I1k9jx7uZDkZd8k8"
} 
 </msg>
<msg timestamp="20230704 01:10:15.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:14.928" endtime="20230704 01:10:15.005"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230704 01:10:15.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:15.005" endtime="20230704 01:10:15.006"/>
</kw>
<status status="PASS" starttime="20230704 01:10:14.928" endtime="20230704 01:10:15.006"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230704 01:10:15.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230704 01:10:15.007" endtime="20230704 01:10:15.008"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 01:10:15.008" endtime="20230704 01:10:15.008"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.006" endtime="20230704 01:10:15.009"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230704 01:10:15.010" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230704 01:10:15.009" endtime="20230704 01:10:15.010"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.009" endtime="20230704 01:10:15.010"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230704 01:10:14.925" endtime="20230704 01:10:15.010"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230704 01:10:15.012" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230704 01:10:15.011" endtime="20230704 01:10:15.012"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.011" endtime="20230704 01:10:15.012"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230704 01:10:15.013" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230704 01:10:15.012" endtime="20230704 01:10:15.013"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230704 01:10:15.013" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230704 01:10:15.013" endtime="20230704 01:10:15.013"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230704 01:10:15.085" level="INFO">PUT Request : url=https://serverest.dev/usuarios/I1k9jx7uZDkZd8k8 
 path_url=/usuarios/I1k9jx7uZDkZd8k8 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230704 01:10:15.085" level="INFO">PUT Response : url=https://serverest.dev/usuarios/I1k9jx7uZDkZd8k8 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2c9ebe1b-1c2f-41ae-a29d-906684b16591', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '68fcd2b6db61395bd9b1eb1b4da68061', 'Date': 'Tue, 04 Jul 2023 01:10:15 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230704 01:10:15.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:15.013" endtime="20230704 01:10:15.085"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230704 01:10:15.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:15.085" endtime="20230704 01:10:15.086"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.012" endtime="20230704 01:10:15.086"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230704 01:10:15.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230704 01:10:15.086" endtime="20230704 01:10:15.087"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 01:10:15.087" endtime="20230704 01:10:15.088"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.086" endtime="20230704 01:10:15.088"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230704 01:10:15.089" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230704 01:10:15.089" endtime="20230704 01:10:15.089"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.088" endtime="20230704 01:10:15.089"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230704 01:10:15.010" endtime="20230704 01:10:15.090"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230704 01:10:15.092" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230704 01:10:15.091" endtime="20230704 01:10:15.092"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.091" endtime="20230704 01:10:15.092"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230704 01:10:15.169" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/I1k9jx7uZDkZd8k8 
 path_url=/usuarios/I1k9jx7uZDkZd8k8 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230704 01:10:15.169" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/I1k9jx7uZDkZd8k8 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '08058ebc-73c6-4bcb-996c-d7ae2d5d5e36', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'eb60a2c7eb40ff719745450c2d1f6f4d', 'Date': 'Tue, 04 Jul 2023 01:10:15 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230704 01:10:15.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:15.092" endtime="20230704 01:10:15.169"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230704 01:10:15.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230704 01:10:15.169" endtime="20230704 01:10:15.170"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.092" endtime="20230704 01:10:15.170"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230704 01:10:15.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230704 01:10:15.171" endtime="20230704 01:10:15.172"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 01:10:15.172" endtime="20230704 01:10:15.172"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.170" endtime="20230704 01:10:15.173"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230704 01:10:15.174" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230704 01:10:15.173" endtime="20230704 01:10:15.174"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.173" endtime="20230704 01:10:15.174"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230704 01:10:15.090" endtime="20230704 01:10:15.174"/>
</test>
<status status="PASS" starttime="20230704 01:10:13.933" endtime="20230704 01:10:15.175"/>
</suite>
<status status="PASS" starttime="20230704 01:10:13.931" endtime="20230704 01:10:15.176"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230704 01:10:15.188" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230704 01:10:15.188" endtime="20230704 01:10:23.826"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230704 01:10:23.826" endtime="20230704 01:10:23.948"/>
</kw>
<status status="PASS" starttime="20230704 01:10:15.187" endtime="20230704 01:10:23.948"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230704 01:10:23.954" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230704 01:10:23.949" endtime="20230704 01:10:23.954"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:23.956" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230704 01:10:23.954" endtime="20230704 01:10:24.162"/>
</kw>
<status status="PASS" starttime="20230704 01:10:23.948" endtime="20230704 01:10:24.163"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:24.164" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230704 01:10:24.163" endtime="20230704 01:10:24.275"/>
</kw>
<status status="PASS" starttime="20230704 01:10:24.163" endtime="20230704 01:10:24.275"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230704 01:10:24.276" endtime="20230704 01:10:24.540"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230704 01:10:24.560" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230704 01:10:24.540" endtime="20230704 01:10:24.561"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230704 01:10:24.607" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230704 01:10:24.561" endtime="20230704 01:10:24.608"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230704 01:10:24.623" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230704 01:10:24.608" endtime="20230704 01:10:24.623"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230704 01:10:24.638" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230704 01:10:24.623" endtime="20230704 01:10:24.638"/>
</kw>
<status status="PASS" starttime="20230704 01:10:24.275" endtime="20230704 01:10:24.638"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230704 01:10:24.639" endtime="20230704 01:10:24.695"/>
</kw>
<status status="PASS" starttime="20230704 01:10:24.638" endtime="20230704 01:10:24.695"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230704 01:10:15.187" endtime="20230704 01:10:24.695"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230704 01:10:24.698" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230704 01:10:24.697" endtime="20230704 01:10:25.893"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230704 01:10:25.893" endtime="20230704 01:10:25.997"/>
</kw>
<status status="PASS" starttime="20230704 01:10:24.697" endtime="20230704 01:10:25.997"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230704 01:10:26.003" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230704 01:10:25.998" endtime="20230704 01:10:26.003"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:26.004" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230704 01:10:26.004" endtime="20230704 01:10:26.087"/>
</kw>
<status status="PASS" starttime="20230704 01:10:25.998" endtime="20230704 01:10:26.088"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230704 01:10:26.089" level="INFO">${name} = Teresa Carson</msg>
<status status="PASS" starttime="20230704 01:10:26.088" endtime="20230704 01:10:26.089"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230704 01:10:26.090" level="INFO">${email} = diazshawn@example.com</msg>
<status status="PASS" starttime="20230704 01:10:26.089" endtime="20230704 01:10:26.090"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230704 01:10:26.090" level="INFO">${password} = 6XWaB7oQpXcX</msg>
<status status="PASS" starttime="20230704 01:10:26.090" endtime="20230704 01:10:26.090"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:26.091" level="INFO">Typing text 'Teresa Carson' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230704 01:10:26.090" endtime="20230704 01:10:26.253"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:26.254" level="INFO">Typing text 'diazshawn@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230704 01:10:26.254" endtime="20230704 01:10:26.367"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:26.368" level="INFO">Typing text '6XWaB7oQpXcX' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230704 01:10:26.367" endtime="20230704 01:10:26.501"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:26.501" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230704 01:10:26.501" endtime="20230704 01:10:26.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230704 01:10:26.580" level="INFO">${name} = Teresa Carson</msg>
<status status="PASS" starttime="20230704 01:10:26.580" endtime="20230704 01:10:26.580"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230704 01:10:26.581" level="INFO">${email} = diazshawn@example.com</msg>
<status status="PASS" starttime="20230704 01:10:26.580" endtime="20230704 01:10:26.581"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230704 01:10:26.581" level="INFO">${password} = 6XWaB7oQpXcX</msg>
<status status="PASS" starttime="20230704 01:10:26.581" endtime="20230704 01:10:26.581"/>
</kw>
<status status="PASS" starttime="20230704 01:10:26.088" endtime="20230704 01:10:26.581"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:26.582" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230704 01:10:26.582" endtime="20230704 01:10:26.646"/>
</kw>
<status status="PASS" starttime="20230704 01:10:26.581" endtime="20230704 01:10:26.646"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230704 01:10:26.646" endtime="20230704 01:10:26.882"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230704 01:10:26.900" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230704 01:10:26.882" endtime="20230704 01:10:26.900"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230704 01:10:26.913" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230704 01:10:26.900" endtime="20230704 01:10:26.913"/>
</kw>
<status status="PASS" starttime="20230704 01:10:26.646" endtime="20230704 01:10:26.913"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230704 01:10:26.914" endtime="20230704 01:10:26.972"/>
</kw>
<status status="PASS" starttime="20230704 01:10:26.913" endtime="20230704 01:10:26.972"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230704 01:10:24.696" endtime="20230704 01:10:26.972"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230704 01:10:26.974" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230704 01:10:26.974" endtime="20230704 01:10:28.145"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230704 01:10:28.145" endtime="20230704 01:10:28.250"/>
</kw>
<status status="PASS" starttime="20230704 01:10:26.973" endtime="20230704 01:10:28.250"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230704 01:10:28.257" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230704 01:10:28.251" endtime="20230704 01:10:28.257"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:28.258" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230704 01:10:28.257" endtime="20230704 01:10:28.343"/>
</kw>
<status status="PASS" starttime="20230704 01:10:28.250" endtime="20230704 01:10:28.344"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:28.345" level="INFO">Typing text 'Teresa Carson' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230704 01:10:28.344" endtime="20230704 01:10:28.462"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:28.463" level="INFO">Typing text 'diazshawn@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230704 01:10:28.463" endtime="20230704 01:10:28.580"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:28.581" level="INFO">Typing text '6XWaB7oQpXcX' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230704 01:10:28.580" endtime="20230704 01:10:28.683"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:28.684" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230704 01:10:28.684" endtime="20230704 01:10:28.762"/>
</kw>
<status status="PASS" starttime="20230704 01:10:28.344" endtime="20230704 01:10:28.762"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230704 01:10:28.763" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230704 01:10:28.763" endtime="20230704 01:10:28.844"/>
</kw>
<status status="PASS" starttime="20230704 01:10:28.763" endtime="20230704 01:10:28.844"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230704 01:10:28.845" endtime="20230704 01:10:29.081"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230704 01:10:29.100" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230704 01:10:29.082" endtime="20230704 01:10:29.101"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230704 01:10:29.114" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230704 01:10:29.101" endtime="20230704 01:10:29.115"/>
</kw>
<status status="PASS" starttime="20230704 01:10:28.844" endtime="20230704 01:10:29.115"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230704 01:10:29.115" endtime="20230704 01:10:29.170"/>
</kw>
<status status="PASS" starttime="20230704 01:10:29.115" endtime="20230704 01:10:29.170"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230704 01:10:26.973" endtime="20230704 01:10:29.170"/>
</test>
<status status="PASS" starttime="20230704 01:10:15.179" endtime="20230704 01:10:29.171"/>
</suite>
<status status="PASS" starttime="20230704 01:10:15.177" endtime="20230704 01:10:29.173"/>
</suite>
<status status="PASS" starttime="20230704 01:10:13.912" endtime="20230704 01:10:29.175"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
