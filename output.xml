<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 16:55:20.790" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:55:21.375" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:55:21.374" endtime="20230601 16:55:21.375"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.374" endtime="20230601 16:55:21.375"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:55:21.615" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 16:55:21.615" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5e146036-2caa-4c10-a920-ce50db3e6da4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f8f62841ef34df11424b6bc53de8193e;o=1', 'Date': 'Thu, 01 Jun 2023 16:55:21 GMT', 'Server': 'Google Frontend', 'Content-Length': '10322'} 
 body={
    "quantidade": 47,
    "usuarios": [
        {
            "nome": "Nicky Crist",
            "email": "nickycrist_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "1vz4kFeZ6nI0oetX"
        },
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Riley Meadows",
            "email": "wardlindsay@example.com",
            "password": "21nem33sV3Wv",
            "administrador": "true",
            "_id": "6ZrbiguZb3H8xbz7"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9gstdMBMAIERTqbi"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0104@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "CPotN3cJwU2ytcC0"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0318@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "Cjii886shOMAPasE"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010601@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "FmAZHqMdTUASVy5E"
        },
        {
            "nome": "Michael Torres",
            "email": "sharonmoore@example.org",
            "password": "t4wu3WWhnqn7",
            "administrador": "true",
            "_id": "GZNbsNpQeHv7ISFa"
        },
        {
            "nome": "Mohamed Hyatt",
            "email": "mohamedhyatt_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "HwZXX3KaO6cdeyb1"
        },
        {
            "nome": "Stephen Reynolds",
            "email": "stephenreynolds_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "JAwEFMxMJ1jzZxEs"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0114@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "MZEGk2tTLklplZrU"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0215@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "NfR9Vy9SIekHqpyG"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "Quinn Orn",
            "email": "quinnorn_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Q4uzpPanjVopwd6z"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Donald Palmer",
            "email": "kshannon@example.net",
            "password": "MN61aKMyY2Zp",
            "administrador": "true",
            "_id": "WJLRKci7u4ThQVZi"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0106@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "anTapQ16J1tEfpW3"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010602@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "bSaFEd9NE00EPTtu"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "{{nome}}",
            "email": "Wade@qa.com.br",
            "password": "75sp8gpG4_cwEJL",
            "administrador": "true",
            "_id": "eiYlTXHzMuezZ3JP"
        },
        {
            "nome": "{{nome}}",
            "email": "Laurianne@qa.com.br",
            "password": "BehI7ZauXa4BWJG",
            "administrador": "true",
            "_id": "fxPPNR85wYe2RWUx"
        },
        {
            "nome": "{{nome}}",
            "email": "Hadley@qa.com.br",
            "password": "cTFFNtgOYHKCveO",
            "administrador": "true",
            "_id": "gP4GN1H0ztPPVm4T"
        },
        {
            "nome": "Jason Rodriguez",
            "email": "tracivang@example.com",
            "password": "tFOdqK1b4bdb",
            "administrador": "true",
            "_id": "hOHsnxKpiWHMWThP"
        },
        {
            "nome": "Stephen Price",
            "email": "schaeferdylan@example.com",
            "password": "8O6ksSdDZp24",
            "administrador": "true",
            "_id": "hgBx9ALEJofc7VxJ"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "Mercedes Gardner",
            "email": "rkoch@example.com",
            "password": "OyTwLmx2r7d6",
            "administrador": "true",
            "_id": "kBYMC5WIZH4pm0RH"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Marshall Crooks",
            "email": "marshallcrooks_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "lw3tGmCfEciJz3Ma"
        },
        {
            "nome": "Cheyenne Knox",
            "email": "connierodriguez@example.org",
            "password": "2XpL75uHis1Y",
            "administrador": "true",
            "_id": "nQr8zF2KskcB67UX"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0317@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "o3SCLJT3keSsKa3V"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0216@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "puDG3E57PsVhHW5z"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano_teste@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "r4MkfwAxanGM2wV0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Eric Adkins",
            "email": "qmcclure@example.org",
            "password": "1JkxKESr0UqK",
            "administrador": "true",
            "_id": "srS7Ou0Du5FNhP2x"
        },
        {
            "nome": "Kenneth Hardy",
            "email": "katieschneider@example.net",
            "password": "efCQm5Pmd34V",
            "administrador": "true",
            "_id": "t4aiT0ZRVdeAqfI0"
        },
        {
            "nome": "Arie Muller",
            "email": "ariemuller_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "u31iJo2xxrHN7E3L"
        },
        {
            "nome": "Troy Ray",
            "email": "debbie39@example.net",
            "password": "di5JjZtW5C2X",
            "administrador": "true",
            "_id": "w6qnBS2wGoSELmzN"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password"... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230601 16:55:21.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.376" endtime="20230601 16:55:21.615"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:55:21.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.616" endtime="20230601 16:55:21.616"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.375" endtime="20230601 16:55:21.616"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:55:21.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230601 16:55:21.618" level="FAIL">200.0 != 201.0</msg>
<status status="FAIL" starttime="20230601 16:55:21.617" endtime="20230601 16:55:21.618"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20230601 16:55:21.618" endtime="20230601 16:55:21.618"/>
</kw>
<status status="FAIL" starttime="20230601 16:55:21.616" endtime="20230601 16:55:21.618"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<status status="NOT RUN" starttime="20230601 16:55:21.618" endtime="20230601 16:55:21.618"/>
</kw>
<tag>api</tag>
<status status="FAIL" starttime="20230601 16:55:21.373" endtime="20230601 16:55:21.618">200.0 != 201.0</status>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:55:21.621" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:55:21.620" endtime="20230601 16:55:21.621"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.620" endtime="20230601 16:55:21.621"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 16:55:21.622" level="INFO">${name} = Dr. Tracey Newton DDS</msg>
<status status="PASS" starttime="20230601 16:55:21.622" endtime="20230601 16:55:21.622"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 16:55:21.623" level="INFO">${email} = grahamdaniel@example.org</msg>
<status status="PASS" starttime="20230601 16:55:21.622" endtime="20230601 16:55:21.623"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 16:55:21.623" level="INFO">${password} = ke8rdOdaCCc1</msg>
<status status="PASS" starttime="20230601 16:55:21.623" endtime="20230601 16:55:21.623"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:55:21.624" level="INFO">${name} = Dr. Tracey Newton DDS</msg>
<status status="PASS" starttime="20230601 16:55:21.624" endtime="20230601 16:55:21.624"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:55:21.624" level="INFO">${email} = grahamdaniel@example.org</msg>
<status status="PASS" starttime="20230601 16:55:21.624" endtime="20230601 16:55:21.624"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:55:21.625" level="INFO">${password} = ke8rdOdaCCc1</msg>
<status status="PASS" starttime="20230601 16:55:21.624" endtime="20230601 16:55:21.625"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.621" endtime="20230601 16:55:21.625"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:55:21.626" level="INFO">${payload} = {'nome': 'Dr. Tracey Newton DDS', 'email': 'grahamdaniel@example.org', 'password': 'ke8rdOdaCCc1', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 16:55:21.625" endtime="20230601 16:55:21.626"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:55:21.626" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 16:55:21.626" endtime="20230601 16:55:21.626"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:55:21.728" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '124'} 
 body=b'{"nome": "Dr. Tracey Newton DDS", "email": "grahamdaniel@example.org", "password": "ke8rdOdaCCc1", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 16:55:21.728" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3a754ea4-1a36-4ff7-8624-b78538264bff', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0b352b73b293f9b45d814e5fe5b7cbb5', 'Date': 'Thu, 01 Jun 2023 16:55:21 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "oBc8BBMtbdgN03I6"
} 
 </msg>
<msg timestamp="20230601 16:55:21.729" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.626" endtime="20230601 16:55:21.729"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 16:55:21.730" level="INFO">${user_id} = oBc8BBMtbdgN03I6</msg>
<status status="PASS" starttime="20230601 16:55:21.729" endtime="20230601 16:55:21.730"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 16:55:21.731" level="INFO">${USER_ID} = oBc8BBMtbdgN03I6</msg>
<status status="PASS" starttime="20230601 16:55:21.731" endtime="20230601 16:55:21.731"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:55:21.732" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.732" endtime="20230601 16:55:21.732"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.625" endtime="20230601 16:55:21.733"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:55:21.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.733" endtime="20230601 16:55:21.735"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:55:21.735" endtime="20230601 16:55:21.735"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.733" endtime="20230601 16:55:21.736"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:55:21.737" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 16:55:21.736" endtime="20230601 16:55:21.737"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.736" endtime="20230601 16:55:21.737"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:55:21.619" endtime="20230601 16:55:21.737"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:55:21.739" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:55:21.738" endtime="20230601 16:55:21.739"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.738" endtime="20230601 16:55:21.739"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:55:21.844" level="INFO">GET Request : url=https://serverest.dev/usuarios/oBc8BBMtbdgN03I6 
 path_url=/usuarios/oBc8BBMtbdgN03I6 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 16:55:21.844" level="INFO">GET Response : url=https://serverest.dev/usuarios/oBc8BBMtbdgN03I6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4638f9c7-d271-4049-8892-6468e7bc4fd6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8aa6cc5bc6ee200a8d7042f50ff4bdd3', 'Date': 'Thu, 01 Jun 2023 16:55:21 GMT', 'Server': 'Google Frontend', 'Content-Length': '173'} 
 body={
    "nome": "Dr. Tracey Newton DDS",
    "email": "grahamdaniel@example.org",
    "password": "ke8rdOdaCCc1",
    "administrador": "false",
    "_id": "oBc8BBMtbdgN03I6"
} 
 </msg>
<msg timestamp="20230601 16:55:21.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.740" endtime="20230601 16:55:21.845"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:55:21.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.845" endtime="20230601 16:55:21.846"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.739" endtime="20230601 16:55:21.846"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:55:21.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.846" endtime="20230601 16:55:21.848"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:55:21.848" endtime="20230601 16:55:21.848"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.846" endtime="20230601 16:55:21.849"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:55:21.850" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 16:55:21.849" endtime="20230601 16:55:21.850"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.849" endtime="20230601 16:55:21.850"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:55:21.738" endtime="20230601 16:55:21.850"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:55:21.851" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:55:21.851" endtime="20230601 16:55:21.852"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.851" endtime="20230601 16:55:21.852"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:55:21.853" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 16:55:21.852" endtime="20230601 16:55:21.853"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:55:21.853" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 16:55:21.853" endtime="20230601 16:55:21.853"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:55:21.957" level="INFO">PUT Request : url=https://serverest.dev/usuarios/oBc8BBMtbdgN03I6 
 path_url=/usuarios/oBc8BBMtbdgN03I6 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 16:55:21.957" level="INFO">PUT Response : url=https://serverest.dev/usuarios/oBc8BBMtbdgN03I6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1f69d654-77e5-4386-928a-0ce388f4cd43', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '93417b3b61c7cbae45a4869848d2e54b', 'Date': 'Thu, 01 Jun 2023 16:55:21 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 16:55:21.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.853" endtime="20230601 16:55:21.957"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:55:21.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.958" endtime="20230601 16:55:21.958"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.852" endtime="20230601 16:55:21.958"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:55:21.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.959" endtime="20230601 16:55:21.960"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:55:21.960" endtime="20230601 16:55:21.961"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.959" endtime="20230601 16:55:21.961"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:55:21.963" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 16:55:21.962" endtime="20230601 16:55:21.963"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.961" endtime="20230601 16:55:21.963"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:55:21.850" endtime="20230601 16:55:21.963"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:55:21.964" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:55:21.964" endtime="20230601 16:55:21.965"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.964" endtime="20230601 16:55:21.965"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:55:22.064" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/oBc8BBMtbdgN03I6 
 path_url=/usuarios/oBc8BBMtbdgN03I6 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 16:55:22.064" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/oBc8BBMtbdgN03I6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4a00e146-87b6-4e46-ad39-d76ae0e32eed', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9c1618795c8738add4bb7d4539e94f91', 'Date': 'Thu, 01 Jun 2023 16:55:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 16:55:22.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:21.965" endtime="20230601 16:55:22.064"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:55:22.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:55:22.064" endtime="20230601 16:55:22.065"/>
</kw>
<status status="PASS" starttime="20230601 16:55:21.965" endtime="20230601 16:55:22.065"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:55:22.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:55:22.066" endtime="20230601 16:55:22.068"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:55:22.068" endtime="20230601 16:55:22.069"/>
</kw>
<status status="PASS" starttime="20230601 16:55:22.066" endtime="20230601 16:55:22.069"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:55:22.071" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 16:55:22.070" endtime="20230601 16:55:22.071"/>
</kw>
<status status="PASS" starttime="20230601 16:55:22.070" endtime="20230601 16:55:22.071"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:55:21.963" endtime="20230601 16:55:22.071"/>
</test>
<status status="FAIL" starttime="20230601 16:55:20.815" endtime="20230601 16:55:22.072"/>
</suite>
<status status="FAIL" starttime="20230601 16:55:20.813" endtime="20230601 16:55:22.074"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 16:55:22.086" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 16:55:22.085" endtime="20230601 16:55:25.032"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 16:55:25.032" endtime="20230601 16:55:25.139"/>
</kw>
<status status="PASS" starttime="20230601 16:55:22.085" endtime="20230601 16:55:25.140"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 16:55:25.146" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 16:55:25.140" endtime="20230601 16:55:25.146"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:25.147" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 16:55:25.146" endtime="20230601 16:55:25.254"/>
</kw>
<status status="PASS" starttime="20230601 16:55:25.140" endtime="20230601 16:55:25.254"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:25.255" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 16:55:25.255" endtime="20230601 16:55:25.330"/>
</kw>
<status status="PASS" starttime="20230601 16:55:25.254" endtime="20230601 16:55:25.330"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 16:55:25.331" endtime="20230601 16:55:25.575"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 16:55:25.599" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 16:55:25.576" endtime="20230601 16:55:25.599"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:55:25.617" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 16:55:25.599" endtime="20230601 16:55:25.617"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:55:25.633" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 16:55:25.617" endtime="20230601 16:55:25.633"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:55:25.649" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 16:55:25.633" endtime="20230601 16:55:25.649"/>
</kw>
<status status="PASS" starttime="20230601 16:55:25.331" endtime="20230601 16:55:25.649"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 16:55:25.650" endtime="20230601 16:55:25.706"/>
</kw>
<status status="PASS" starttime="20230601 16:55:25.650" endtime="20230601 16:55:25.706"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 16:55:22.084" endtime="20230601 16:55:25.706"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 16:55:25.710" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 16:55:25.709" endtime="20230601 16:55:26.673"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 16:55:26.673" endtime="20230601 16:55:26.778"/>
</kw>
<status status="PASS" starttime="20230601 16:55:25.709" endtime="20230601 16:55:26.779"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 16:55:26.796" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 16:55:26.780" endtime="20230601 16:55:26.796"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:26.797" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 16:55:26.796" endtime="20230601 16:55:26.896"/>
</kw>
<status status="PASS" starttime="20230601 16:55:26.779" endtime="20230601 16:55:26.896"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 16:55:26.897" level="INFO">${name} = Crystal Parks</msg>
<status status="PASS" starttime="20230601 16:55:26.896" endtime="20230601 16:55:26.897"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 16:55:26.898" level="INFO">${email} = oolson@example.com</msg>
<status status="PASS" starttime="20230601 16:55:26.897" endtime="20230601 16:55:26.898"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 16:55:26.898" level="INFO">${password} = 1wdCfdPmvGs3</msg>
<status status="PASS" starttime="20230601 16:55:26.898" endtime="20230601 16:55:26.899"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:26.900" level="INFO">Typing text 'Crystal Parks' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 16:55:26.899" endtime="20230601 16:55:27.051"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:27.052" level="INFO">Typing text 'oolson@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 16:55:27.051" endtime="20230601 16:55:27.177"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:27.178" level="INFO">Typing text '1wdCfdPmvGs3' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 16:55:27.177" endtime="20230601 16:55:27.289"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:27.290" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 16:55:27.289" endtime="20230601 16:55:27.380"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:55:27.381" level="INFO">${name} = Crystal Parks</msg>
<status status="PASS" starttime="20230601 16:55:27.380" endtime="20230601 16:55:27.381"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:55:27.381" level="INFO">${email} = oolson@example.com</msg>
<status status="PASS" starttime="20230601 16:55:27.381" endtime="20230601 16:55:27.381"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:55:27.381" level="INFO">${password} = 1wdCfdPmvGs3</msg>
<status status="PASS" starttime="20230601 16:55:27.381" endtime="20230601 16:55:27.382"/>
</kw>
<status status="PASS" starttime="20230601 16:55:26.896" endtime="20230601 16:55:27.382"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:27.383" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 16:55:27.382" endtime="20230601 16:55:27.457"/>
</kw>
<status status="PASS" starttime="20230601 16:55:27.382" endtime="20230601 16:55:27.457"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 16:55:27.458" endtime="20230601 16:55:27.700"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 16:55:27.722" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 16:55:27.701" endtime="20230601 16:55:27.722"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:55:27.737" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 16:55:27.723" endtime="20230601 16:55:27.738"/>
</kw>
<status status="PASS" starttime="20230601 16:55:27.457" endtime="20230601 16:55:27.738"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 16:55:27.739" endtime="20230601 16:55:28.794"/>
</kw>
<status status="PASS" starttime="20230601 16:55:27.738" endtime="20230601 16:55:28.794"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 16:55:25.708" endtime="20230601 16:55:28.794"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 16:55:28.799" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 16:55:28.798" endtime="20230601 16:55:29.763"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 16:55:29.764" endtime="20230601 16:55:29.868"/>
</kw>
<status status="PASS" starttime="20230601 16:55:28.797" endtime="20230601 16:55:29.869"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 16:55:29.875" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 16:55:29.869" endtime="20230601 16:55:29.875"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:29.876" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 16:55:29.875" endtime="20230601 16:55:29.948"/>
</kw>
<status status="PASS" starttime="20230601 16:55:29.869" endtime="20230601 16:55:29.948"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:29.950" level="INFO">Typing text 'Crystal Parks' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 16:55:29.949" endtime="20230601 16:55:30.121"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:30.122" level="INFO">Typing text 'oolson@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 16:55:30.122" endtime="20230601 16:55:30.249"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:30.250" level="INFO">Typing text '1wdCfdPmvGs3' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 16:55:30.249" endtime="20230601 16:55:30.364"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:30.365" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 16:55:30.364" endtime="20230601 16:55:30.462"/>
</kw>
<status status="PASS" starttime="20230601 16:55:29.949" endtime="20230601 16:55:30.462"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 16:55:30.464" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 16:55:30.463" endtime="20230601 16:55:30.539"/>
</kw>
<status status="PASS" starttime="20230601 16:55:30.463" endtime="20230601 16:55:30.539"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 16:55:30.540" endtime="20230601 16:55:30.782"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 16:55:30.803" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 16:55:30.782" endtime="20230601 16:55:30.803"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:55:30.819" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 16:55:30.804" endtime="20230601 16:55:30.819"/>
</kw>
<status status="PASS" starttime="20230601 16:55:30.539" endtime="20230601 16:55:30.819"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 16:55:30.820" endtime="20230601 16:55:30.875"/>
</kw>
<status status="PASS" starttime="20230601 16:55:30.820" endtime="20230601 16:55:30.876"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 16:55:28.795" endtime="20230601 16:55:30.876"/>
</test>
<status status="PASS" starttime="20230601 16:55:22.076" endtime="20230601 16:55:30.876"/>
</suite>
<status status="PASS" starttime="20230601 16:55:22.074" endtime="20230601 16:55:30.878"/>
</suite>
<status status="FAIL" starttime="20230601 16:55:20.791" endtime="20230601 16:55:30.879"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="1" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="7" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="4" fail="1" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="4" fail="1" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
