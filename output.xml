<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230521 21:59:59.697" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:00:00.161" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:00:00.160" endtime="20230521 22:00:00.161"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.160" endtime="20230521 22:00:00.161"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:00:00.273" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 22:00:00.273" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2c9035a4-74bc-46fd-9f13-eb2562b72c55', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1fda8c454d632712d95a9ce05bbb4289;o=1', 'Date': 'Sun, 21 May 2023 22:00:00 GMT', 'Server': 'Google Frontend', 'Content-Length': '2402'} 
 body={
    "quantidade": 11,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "John Bell",
            "email": "ruizevan@example.org",
            "password": "*6OUOdmYrv",
            "administrador": "true",
            "_id": "2IKr7LeKuyL4FtC8"
        },
        {
            "nome": "Nicholas Pacheco",
            "email": "youngkayla@example.com",
            "password": "6)5EZOSrjn",
            "administrador": "true",
            "_id": "38Y0QxwG4PDRWCXi"
        },
        {
            "nome": "Teste",
            "email": "samska@gmail.com",
            "password": "Qw98ed74",
            "administrador": "false",
            "_id": "3Xr3T2ckzgNOAh1F"
        },
        {
            "nome": "Mr. James Peterson PhD",
            "email": "connierivera@example.net",
            "password": "NdU_3!LsKk",
            "administrador": "true",
            "_id": "4pI3IxxAgkZAtnue"
        },
        {
            "nome": "Clifford Price",
            "email": "welchnicholas@example.net",
            "password": "1qY#Rh5L^4",
            "administrador": "true",
            "_id": "CeTenawvCCaAOcoP"
        },
        {
            "nome": "Donald Smith",
            "email": "samanthawells@example.com",
            "password": "+N9BWsoU_y",
            "administrador": "true",
            "_id": "Gv7cXeZoEeMSmJ4b"
        },
        {
            "nome": "teste",
            "email": "testee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "PaihpGw8oseaf7q7"
        },
        {
            "nome": "David Sanders",
            "email": "christopher87@example.com",
            "password": "LNkI#4Ah@_",
            "administrador": "true",
            "_id": "SFEcefct8tA4iHXt"
        },
        {
            "nome": "Heidi Downs",
            "email": "urodriguez@example.com",
            "password": "1HQp3Qp5G#",
            "administrador": "true",
            "_id": "kO3ZvqwVu4B467mM"
        },
        {
            "nome": "testeeee",
            "email": "testeee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "yedZQ0ohrtKKZHdP"
        }
    ]
} 
 </msg>
<msg timestamp="20230521 22:00:00.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.161" endtime="20230521 22:00:00.273"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:00:00.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.273" endtime="20230521 22:00:00.274"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.161" endtime="20230521 22:00:00.274"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:00:00.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.274" endtime="20230521 22:00:00.275"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:00:00.275" endtime="20230521 22:00:00.276"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.274" endtime="20230521 22:00:00.276"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:00:00.277" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 22:00:00.276" endtime="20230521 22:00:00.277"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.276" endtime="20230521 22:00:00.277"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:00:00.159" endtime="20230521 22:00:00.277"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:00:00.279" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:00:00.278" endtime="20230521 22:00:00.279"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.278" endtime="20230521 22:00:00.279"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 22:00:00.280" level="INFO">${name} = Ashley Farmer</msg>
<status status="PASS" starttime="20230521 22:00:00.279" endtime="20230521 22:00:00.280"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 22:00:00.281" level="INFO">${email} = brettmurphy@example.net</msg>
<status status="PASS" starttime="20230521 22:00:00.280" endtime="20230521 22:00:00.281"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 22:00:00.281" level="INFO">${password} = (kUD8YH314</msg>
<status status="PASS" starttime="20230521 22:00:00.281" endtime="20230521 22:00:00.281"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:00:00.281" level="INFO">${name} = Ashley Farmer</msg>
<status status="PASS" starttime="20230521 22:00:00.281" endtime="20230521 22:00:00.281"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:00:00.282" level="INFO">${email} = brettmurphy@example.net</msg>
<status status="PASS" starttime="20230521 22:00:00.281" endtime="20230521 22:00:00.282"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:00:00.282" level="INFO">${password} = (kUD8YH314</msg>
<status status="PASS" starttime="20230521 22:00:00.282" endtime="20230521 22:00:00.282"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.279" endtime="20230521 22:00:00.282"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 22:00:00.283" level="INFO">${payload} = {'nome': 'Ashley Farmer', 'email': 'brettmurphy@example.net', 'password': '(kUD8YH314', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 22:00:00.282" endtime="20230521 22:00:00.283"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 22:00:00.283" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 22:00:00.283" endtime="20230521 22:00:00.283"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:00:00.350" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Ashley Farmer", "email": "brettmurphy@example.net", "password": "(kUD8YH314", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 22:00:00.350" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1691ac8f-c2b9-4971-ae37-9066f389c9cf', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b5db82479e6aaef231720f937c101da4', 'Date': 'Sun, 21 May 2023 22:00:00 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "kdNGyvrqmBkIwcO6"
} 
 </msg>
<msg timestamp="20230521 22:00:00.350" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.283" endtime="20230521 22:00:00.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230521 22:00:00.351" level="INFO">${user_id} = kdNGyvrqmBkIwcO6</msg>
<status status="PASS" starttime="20230521 22:00:00.350" endtime="20230521 22:00:00.351"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230521 22:00:00.351" level="INFO">${USER_ID} = kdNGyvrqmBkIwcO6</msg>
<status status="PASS" starttime="20230521 22:00:00.351" endtime="20230521 22:00:00.351"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:00:00.352" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.352" endtime="20230521 22:00:00.352"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.282" endtime="20230521 22:00:00.352"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:00:00.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.352" endtime="20230521 22:00:00.353"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:00:00.353" endtime="20230521 22:00:00.354"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.352" endtime="20230521 22:00:00.354"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:00:00.355" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 22:00:00.354" endtime="20230521 22:00:00.355"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.354" endtime="20230521 22:00:00.355"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:00:00.278" endtime="20230521 22:00:00.355"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:00:00.357" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:00:00.357" endtime="20230521 22:00:00.357"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.356" endtime="20230521 22:00:00.358"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:00:00.424" level="INFO">GET Request : url=https://serverest.dev/usuarios/kdNGyvrqmBkIwcO6 
 path_url=/usuarios/kdNGyvrqmBkIwcO6 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 22:00:00.424" level="INFO">GET Response : url=https://serverest.dev/usuarios/kdNGyvrqmBkIwcO6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ce66696c-e213-407a-878e-6f7206b2574b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e55c2c195e174f122d83ddcf93f81953', 'Date': 'Sun, 21 May 2023 22:00:00 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Ashley Farmer",
    "email": "brettmurphy@example.net",
    "password": "(kUD8YH314",
    "administrador": "false",
    "_id": "kdNGyvrqmBkIwcO6"
} 
 </msg>
<msg timestamp="20230521 22:00:00.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.358" endtime="20230521 22:00:00.424"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:00:00.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.424" endtime="20230521 22:00:00.424"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.358" endtime="20230521 22:00:00.424"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:00:00.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.425" endtime="20230521 22:00:00.426"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:00:00.426" endtime="20230521 22:00:00.426"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.425" endtime="20230521 22:00:00.427"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:00:00.428" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230521 22:00:00.427" endtime="20230521 22:00:00.428"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.427" endtime="20230521 22:00:00.428"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:00:00.356" endtime="20230521 22:00:00.428"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:00:00.429" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:00:00.429" endtime="20230521 22:00:00.430"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.429" endtime="20230521 22:00:00.430"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 22:00:00.430" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 22:00:00.430" endtime="20230521 22:00:00.430"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 22:00:00.431" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 22:00:00.430" endtime="20230521 22:00:00.431"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:00:00.497" level="INFO">PUT Request : url=https://serverest.dev/usuarios/kdNGyvrqmBkIwcO6 
 path_url=/usuarios/kdNGyvrqmBkIwcO6 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 22:00:00.497" level="INFO">PUT Response : url=https://serverest.dev/usuarios/kdNGyvrqmBkIwcO6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '959afc3d-2638-48d1-b0c6-cb1eb49fc932', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1a02d9819833fc1a6f16d41e8ff096f4', 'Date': 'Sun, 21 May 2023 22:00:00 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230521 22:00:00.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.431" endtime="20230521 22:00:00.497"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:00:00.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.498" endtime="20230521 22:00:00.498"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.430" endtime="20230521 22:00:00.498"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:00:00.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.498" endtime="20230521 22:00:00.499"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:00:00.499" endtime="20230521 22:00:00.500"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.498" endtime="20230521 22:00:00.500"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:00:00.501" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 22:00:00.500" endtime="20230521 22:00:00.501"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.500" endtime="20230521 22:00:00.501"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:00:00.428" endtime="20230521 22:00:00.501"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 22:00:00.503" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 22:00:00.502" endtime="20230521 22:00:00.503"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.502" endtime="20230521 22:00:00.503"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 22:00:00.568" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/kdNGyvrqmBkIwcO6 
 path_url=/usuarios/kdNGyvrqmBkIwcO6 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230521 22:00:00.568" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/kdNGyvrqmBkIwcO6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '66076869-35b2-4529-a0b4-2a6f7bcc8676', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '01ace2fd413f5b9a7b31ccf7e51c6442', 'Date': 'Sun, 21 May 2023 22:00:00 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230521 22:00:00.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.503" endtime="20230521 22:00:00.568"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 22:00:00.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.569" endtime="20230521 22:00:00.569"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.503" endtime="20230521 22:00:00.569"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 22:00:00.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 22:00:00.569" endtime="20230521 22:00:00.570"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 22:00:00.570" endtime="20230521 22:00:00.571"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.569" endtime="20230521 22:00:00.571"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 22:00:00.572" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 22:00:00.571" endtime="20230521 22:00:00.572"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.571" endtime="20230521 22:00:00.572"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 22:00:00.502" endtime="20230521 22:00:00.572"/>
</test>
<status status="PASS" starttime="20230521 21:59:59.719" endtime="20230521 22:00:00.573"/>
</suite>
<status status="PASS" starttime="20230521 21:59:59.718" endtime="20230521 22:00:00.574"/>
</suite>
<status status="PASS" starttime="20230521 21:59:59.716" endtime="20230521 22:00:00.575"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_signup.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 22:00:00.586" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 22:00:00.586" endtime="20230521 22:00:02.938"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 22:00:02.939" endtime="20230521 22:00:03.060"/>
</kw>
<status status="PASS" starttime="20230521 22:00:00.585" endtime="20230521 22:00:03.061"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 22:00:03.066" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 22:00:03.061" endtime="20230521 22:00:03.066"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:03.067" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 22:00:03.066" endtime="20230521 22:00:03.138"/>
</kw>
<status status="PASS" starttime="20230521 22:00:03.061" endtime="20230521 22:00:03.138"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:03.139" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 22:00:03.138" endtime="20230521 22:00:03.200"/>
</kw>
<status status="PASS" starttime="20230521 22:00:03.138" endtime="20230521 22:00:03.200"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 22:00:03.201" endtime="20230521 22:00:03.435"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:00:03.456" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230521 22:00:03.435" endtime="20230521 22:00:03.456"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:00:03.468" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230521 22:00:03.456" endtime="20230521 22:00:03.468"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:00:03.480" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230521 22:00:03.469" endtime="20230521 22:00:03.480"/>
</kw>
<status status="PASS" starttime="20230521 22:00:03.200" endtime="20230521 22:00:03.481"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 22:00:03.481" endtime="20230521 22:00:03.536"/>
</kw>
<status status="PASS" starttime="20230521 22:00:03.481" endtime="20230521 22:00:03.537"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 22:00:00.585" endtime="20230521 22:00:03.537"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 22:00:03.539" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 22:00:03.538" endtime="20230521 22:00:04.821"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 22:00:04.822" endtime="20230521 22:00:04.945"/>
</kw>
<status status="PASS" starttime="20230521 22:00:03.538" endtime="20230521 22:00:04.945"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 22:00:04.951" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 22:00:04.946" endtime="20230521 22:00:04.951"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:04.952" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 22:00:04.951" endtime="20230521 22:00:05.006"/>
</kw>
<status status="PASS" starttime="20230521 22:00:04.946" endtime="20230521 22:00:05.006"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 22:00:05.007" level="INFO">${name} = Micheal Caldwell</msg>
<status status="PASS" starttime="20230521 22:00:05.006" endtime="20230521 22:00:05.007"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 22:00:05.007" level="INFO">${email} = wilsonphilip@example.org</msg>
<status status="PASS" starttime="20230521 22:00:05.007" endtime="20230521 22:00:05.007"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 22:00:05.008" level="INFO">${password} = +BtZAI*Rs9</msg>
<status status="PASS" starttime="20230521 22:00:05.008" endtime="20230521 22:00:05.008"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:05.008" level="INFO">Typing text 'Micheal Caldwell' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 22:00:05.008" endtime="20230521 22:00:05.138"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:05.139" level="INFO">Typing text 'wilsonphilip@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 22:00:05.138" endtime="20230521 22:00:05.253"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:05.254" level="INFO">Typing text '+BtZAI*Rs9' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 22:00:05.254" endtime="20230521 22:00:05.340"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:05.340" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 22:00:05.340" endtime="20230521 22:00:05.407"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:00:05.408" level="INFO">${name} = Micheal Caldwell</msg>
<status status="PASS" starttime="20230521 22:00:05.407" endtime="20230521 22:00:05.408"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:00:05.408" level="INFO">${email} = wilsonphilip@example.org</msg>
<status status="PASS" starttime="20230521 22:00:05.408" endtime="20230521 22:00:05.408"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 22:00:05.408" level="INFO">${password} = +BtZAI*Rs9</msg>
<status status="PASS" starttime="20230521 22:00:05.408" endtime="20230521 22:00:05.409"/>
</kw>
<status status="PASS" starttime="20230521 22:00:05.006" endtime="20230521 22:00:05.409"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:05.409" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 22:00:05.409" endtime="20230521 22:00:05.466"/>
</kw>
<status status="PASS" starttime="20230521 22:00:05.409" endtime="20230521 22:00:05.466"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 22:00:05.467" endtime="20230521 22:00:05.699"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:00:05.711" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230521 22:00:05.699" endtime="20230521 22:00:05.711"/>
</kw>
<status status="PASS" starttime="20230521 22:00:05.467" endtime="20230521 22:00:05.711"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 22:00:05.712" endtime="20230521 22:00:05.768"/>
</kw>
<status status="PASS" starttime="20230521 22:00:05.712" endtime="20230521 22:00:05.769"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 22:00:03.538" endtime="20230521 22:00:05.769"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 22:00:05.771" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 22:00:05.770" endtime="20230521 22:00:07.101"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 22:00:07.101" endtime="20230521 22:00:07.218"/>
</kw>
<status status="PASS" starttime="20230521 22:00:05.770" endtime="20230521 22:00:07.218"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 22:00:07.224" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 22:00:07.219" endtime="20230521 22:00:07.224"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:07.225" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 22:00:07.224" endtime="20230521 22:00:07.278"/>
</kw>
<status status="PASS" starttime="20230521 22:00:07.218" endtime="20230521 22:00:07.278"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:07.279" level="INFO">Typing text 'Micheal Caldwell' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 22:00:07.278" endtime="20230521 22:00:07.390"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:07.391" level="INFO">Typing text 'wilsonphilip@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 22:00:07.390" endtime="20230521 22:00:07.504"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:07.505" level="INFO">Typing text '+BtZAI*Rs9' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 22:00:07.504" endtime="20230521 22:00:07.590"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:07.591" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 22:00:07.590" endtime="20230521 22:00:07.660"/>
</kw>
<status status="PASS" starttime="20230521 22:00:07.278" endtime="20230521 22:00:07.661"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 22:00:07.662" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 22:00:07.661" endtime="20230521 22:00:07.718"/>
</kw>
<status status="PASS" starttime="20230521 22:00:07.661" endtime="20230521 22:00:07.718"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 22:00:07.719" endtime="20230521 22:00:07.953"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 22:00:07.966" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230521 22:00:07.953" endtime="20230521 22:00:07.966"/>
</kw>
<status status="PASS" starttime="20230521 22:00:07.718" endtime="20230521 22:00:07.966"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 22:00:07.967" endtime="20230521 22:00:08.022"/>
</kw>
<status status="PASS" starttime="20230521 22:00:07.967" endtime="20230521 22:00:08.022"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 22:00:05.769" endtime="20230521 22:00:08.022"/>
</test>
<status status="PASS" starttime="20230521 22:00:00.578" endtime="20230521 22:00:08.023"/>
</suite>
<status status="PASS" starttime="20230521 22:00:00.577" endtime="20230521 22:00:08.025"/>
</suite>
<status status="PASS" starttime="20230521 22:00:00.575" endtime="20230521 22:00:08.026"/>
</suite>
<status status="PASS" starttime="20230521 21:59:59.698" endtime="20230521 22:00:08.027"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Signup">Tests.Ui.Login.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
