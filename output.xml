<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.18 on linux)" generated="20230926 00:10:03.397" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230926 00:10:04.035" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230926 00:10:04.034" endtime="20230926 00:10:04.035"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.034" endtime="20230926 00:10:04.035"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230926 00:10:04.251" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230926 00:10:04.251" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '925ca38f93091e1f6355e57b6f693766;o=1', 'Date': 'Tue, 26 Sep 2023 00:10:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '10748'} 
 body={
    "quantidade": 50,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Lyric42",
            "email": "Audrey_Glover66@gmail.com",
            "password": "292581536",
            "administrador": "true",
            "_id": "16mRPaFJIgU8BX2p"
        },
        {
            "nome": "Margarete.Gulgowski96",
            "email": "Sean89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "3FifGrrSTUtFeWg3"
        },
        {
            "nome": "Fulano da Silva",
            "email": "grzd@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "46KdzaXl54cvv36N"
        },
        {
            "nome": "Fulano da Silva",
            "email": "vwkj@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "49ILewb955VNbX4z"
        },
        {
            "nome": "Fulano da Silva",
            "email": "wbhl@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "4Oom3A9Qi0JKC3Jd"
        },
        {
            "nome": "Keon89",
            "email": "Adolph.Heathcote@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "8F6Jh9TixvYVmGWr"
        },
        {
            "nome": "Fulano da Silva",
            "email": "eood@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "8nY1LiSKKRAEHhpx"
        },
        {
            "nome": "Mattie61",
            "email": "Nola.Huels@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "8rrg4ccNB2n7rYHy"
        },
        {
            "nome": "Tiffany51",
            "email": "Clotilde.Cassin@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "9UXKhq49ic1AKSby"
        },
        {
            "nome": "Phoebe6",
            "email": "Ian.Beer39@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "AljeHlH3Ni2DcTQw"
        },
        {
            "nome": "Martin.Fahey98",
            "email": "Ibrahim.Gerlach@yahoo.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "B8oBLSpB3NGSphcr"
        },
        {
            "nome": "Fulano da Silva",
            "email": "aamz@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "FTtF49I8t5mZNtsz"
        },
        {
            "nome": "Tyrique.Hyatt",
            "email": "Nicolas_Ritchie69@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "Fb3I6Zwv5C2p6Rxi"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lbyd@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "GqdP8PLuv2GsvVs8"
        },
        {
            "nome": "Garfield.Klein",
            "email": "Tess.Spencer77@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "HEjapRZjLWdus30R"
        },
        {
            "nome": "Fulano da Silva",
            "email": "hmim@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "J0Oo6bhX8rDxcPfV"
        },
        {
            "nome": "Ross_Renner50",
            "email": "Tre.Becker38@yahoo.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "Lv8jZ7ficGsU6xrS"
        },
        {
            "nome": "Davin61",
            "email": "Robb_Borer@yahoo.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "OUTFMfx3om4TYiX7"
        },
        {
            "nome": "Antwon65",
            "email": "Adalberto.Berge@yahoo.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "PziTUopgNzEhKYJb"
        },
        {
            "nome": "Napoleon43",
            "email": "Krystina.Bauch@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "Q6M4tEjAFanOyq1m"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rhyi@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "Sg3IpmJIQfHQXWaB"
        },
        {
            "nome": "Fulano da Silva",
            "email": "bjbt@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "Sh4MUf0mKxLnr2WP"
        },
        {
            "nome": "Marlee_Macejkovic97",
            "email": "Justina8@yahoo.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "UcggMClX6Z8IS4z2"
        },
        {
            "nome": "Fulano da Silva",
            "email": "prgo@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "ZDBqzw8xmyQO6353"
        },
        {
            "nome": "Thiago Cedro",
            "email": "thiago-joao@terra.net",
            "password": "Cedro-0102",
            "administrador": "true",
            "_id": "cvPFJREDOCWABdWe"
        },
        {
            "nome": "Augustus.Kiehn57",
            "email": "Adriel.Lynch86@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "cvzzC7kMND8OZwRZ"
        },
        {
            "nome": "Estel39",
            "email": "Jacklyn.Crooks@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "d0FxLNIXD80XUgNK"
        },
        {
            "nome": "Thiago Cedro",
            "email": "thiago-joao@terra.com",
            "password": "Cedro-0102",
            "administrador": "false",
            "_id": "f6ZgKPSjc6bo6AFB"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "lDhJZtAjGM7Fjhc",
            "administrador": "true",
            "_id": "fo6hilj4yNEnpIIl"
        },
        {
            "nome": "Katelynn52",
            "email": "Hazel.Kuvalis@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "hnOEuAuDtNIOUWOI"
        },
        {
            "nome": "Fulano da Silva",
            "email": "xpel@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "iVxMjSg4Vf5Yh1SV"
        },
        {
            "nome": "Kailee73",
            "email": "Earnest.Trantow@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "iYfHv7lOX4kW9udW"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yniy@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "iljL0ZEO2IPyVMS4"
        },
        {
            "nome": "Ozella.Lemke",
            "email": "Greyson.Reynolds@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "jOROPWo9luQq5hzI"
        },
        {
            "nome": "Felix24",
            "email": "Viva17@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "lZXDl0bXaUPRhHqB"
        },
        {
            "nome": "Melvin.Marks3",
            "email": "Juwan7@yahoo.com",
            "password": "155789830",
            "administrador": "true",
            "_id": "mErmFzTxNOe8Vod1"
        },
        {
            "nome": "Jedidiah_Yost6",
            "email": "Terence.Gibson97@yahoo.com",
            "password": "991495155",
            "administrador": "true",
            "_id": "nwpfDUuEozq6elLX"
        },
        {
            "nome": "Dorris.Gerhold25",
            "email": "Susanna_McClure@yahoo.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "pVnjSr9c3DJ6zArK"
        },
        {
            "nome": "Joshua_Champlin8",
            "email": "Amelie95@yahoo.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "pWyvTviHuqYFh5x8"
        },
        {
            "nome": "Abdiel77",
            "email": "Rosalind_Romaguera@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "pboloyX4J5kMh3by"
        },
        {
            "nome": "Fulano da Silva",
            "email": "xals@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "qRNQDXR1mF30rpir"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mshr@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "qeLy8pXsCFBqAi8j"
        },
        {
            "nome": "Kirk33",
            "email": "Elvis_Bogisich@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "rW1h0AlEb852XvHW"
        },
        {
            "nome": "Heber_Quigley",
            "email": "Eugene.Carter22@hotmail.com",
            "password": "928772631",
            "administrador": "true",
            "_id": "rcDA4uysD0BXQ7ut"
        },
        {
            "nome": "Fulano da Silva",
            "email": "hgcd@email.com",
            "password": "tst123*",
            "administrador": "true",
            "_id": "rh3W63Rj7XbLjCvB"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mmbg@email.com",
            "password": "tst123... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230926 00:10:04.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.035" endtime="20230926 00:10:04.251"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230926 00:10:04.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.252" endtime="20230926 00:10:04.252"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.035" endtime="20230926 00:10:04.252"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230926 00:10:04.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.253" endtime="20230926 00:10:04.253"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230926 00:10:04.253" endtime="20230926 00:10:04.254"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.252" endtime="20230926 00:10:04.254"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230926 00:10:04.255" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230926 00:10:04.255" endtime="20230926 00:10:04.255"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.254" endtime="20230926 00:10:04.255"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230926 00:10:04.033" endtime="20230926 00:10:04.255"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230926 00:10:04.257" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230926 00:10:04.257" endtime="20230926 00:10:04.257"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.256" endtime="20230926 00:10:04.257"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230926 00:10:04.258" level="INFO">${name} = Veronica Smith</msg>
<status status="PASS" starttime="20230926 00:10:04.258" endtime="20230926 00:10:04.258"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230926 00:10:04.259" level="INFO">${email} = karenwilliams@example.net</msg>
<status status="PASS" starttime="20230926 00:10:04.258" endtime="20230926 00:10:04.259"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230926 00:10:04.259" level="INFO">${password} = SqpKFOYcx2qv</msg>
<status status="PASS" starttime="20230926 00:10:04.259" endtime="20230926 00:10:04.259"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230926 00:10:04.260" level="INFO">${name} = Veronica Smith</msg>
<status status="PASS" starttime="20230926 00:10:04.259" endtime="20230926 00:10:04.260"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230926 00:10:04.260" level="INFO">${email} = karenwilliams@example.net</msg>
<status status="PASS" starttime="20230926 00:10:04.260" endtime="20230926 00:10:04.260"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230926 00:10:04.260" level="INFO">${password} = SqpKFOYcx2qv</msg>
<status status="PASS" starttime="20230926 00:10:04.260" endtime="20230926 00:10:04.260"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.257" endtime="20230926 00:10:04.260"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230926 00:10:04.261" level="INFO">${payload} = {'nome': 'Veronica Smith', 'email': 'karenwilliams@example.net', 'password': 'SqpKFOYcx2qv', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230926 00:10:04.261" endtime="20230926 00:10:04.261"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230926 00:10:04.262" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230926 00:10:04.261" endtime="20230926 00:10:04.262"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230926 00:10:04.361" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '118'} 
 body=b'{"nome": "Veronica Smith", "email": "karenwilliams@example.net", "password": "SqpKFOYcx2qv", "administrador": "false"}' 
 </msg>
<msg timestamp="20230926 00:10:04.361" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f0e8d0280f8d1e2c63442b7bc032b2a2', 'Date': 'Tue, 26 Sep 2023 00:10:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Q5l7IFt3adM73dSx"
} 
 </msg>
<msg timestamp="20230926 00:10:04.362" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.262" endtime="20230926 00:10:04.362"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230926 00:10:04.363" level="INFO">${user_id} = Q5l7IFt3adM73dSx</msg>
<status status="PASS" starttime="20230926 00:10:04.362" endtime="20230926 00:10:04.363"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230926 00:10:04.363" level="INFO">${USER_ID} = Q5l7IFt3adM73dSx</msg>
<status status="PASS" starttime="20230926 00:10:04.363" endtime="20230926 00:10:04.363"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230926 00:10:04.363" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.363" endtime="20230926 00:10:04.364"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.260" endtime="20230926 00:10:04.364"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230926 00:10:04.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.364" endtime="20230926 00:10:04.365"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230926 00:10:04.365" endtime="20230926 00:10:04.365"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.364" endtime="20230926 00:10:04.365"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230926 00:10:04.366" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230926 00:10:04.366" endtime="20230926 00:10:04.366"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.366" endtime="20230926 00:10:04.366"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230926 00:10:04.256" endtime="20230926 00:10:04.367"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230926 00:10:04.368" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230926 00:10:04.368" endtime="20230926 00:10:04.368"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.368" endtime="20230926 00:10:04.368"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230926 00:10:04.457" level="INFO">GET Request : url=https://serverest.dev/usuarios/Q5l7IFt3adM73dSx 
 path_url=/usuarios/Q5l7IFt3adM73dSx 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230926 00:10:04.457" level="INFO">GET Response : url=https://serverest.dev/usuarios/Q5l7IFt3adM73dSx 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1f13666d1a0f40590398e024f7659fe5', 'Date': 'Tue, 26 Sep 2023 00:10:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '167'} 
 body={
    "nome": "Veronica Smith",
    "email": "karenwilliams@example.net",
    "password": "SqpKFOYcx2qv",
    "administrador": "false",
    "_id": "Q5l7IFt3adM73dSx"
} 
 </msg>
<msg timestamp="20230926 00:10:04.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.369" endtime="20230926 00:10:04.458"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230926 00:10:04.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.458" endtime="20230926 00:10:04.458"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.368" endtime="20230926 00:10:04.458"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230926 00:10:04.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.459" endtime="20230926 00:10:04.460"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230926 00:10:04.460" endtime="20230926 00:10:04.460"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.458" endtime="20230926 00:10:04.460"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230926 00:10:04.461" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230926 00:10:04.461" endtime="20230926 00:10:04.461"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.460" endtime="20230926 00:10:04.461"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230926 00:10:04.367" endtime="20230926 00:10:04.461"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230926 00:10:04.463" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230926 00:10:04.462" endtime="20230926 00:10:04.463"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.462" endtime="20230926 00:10:04.463"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230926 00:10:04.464" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230926 00:10:04.463" endtime="20230926 00:10:04.464"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230926 00:10:04.464" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230926 00:10:04.464" endtime="20230926 00:10:04.464"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230926 00:10:04.557" level="INFO">PUT Request : url=https://serverest.dev/usuarios/Q5l7IFt3adM73dSx 
 path_url=/usuarios/Q5l7IFt3adM73dSx 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230926 00:10:04.557" level="INFO">PUT Response : url=https://serverest.dev/usuarios/Q5l7IFt3adM73dSx 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'aca5f69c52821090f007c30086591e3e', 'Date': 'Tue, 26 Sep 2023 00:10:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230926 00:10:04.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.464" endtime="20230926 00:10:04.557"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230926 00:10:04.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.557" endtime="20230926 00:10:04.557"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.463" endtime="20230926 00:10:04.557"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230926 00:10:04.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.558" endtime="20230926 00:10:04.559"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230926 00:10:04.559" endtime="20230926 00:10:04.559"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.557" endtime="20230926 00:10:04.559"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230926 00:10:04.560" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230926 00:10:04.560" endtime="20230926 00:10:04.560"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.559" endtime="20230926 00:10:04.560"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230926 00:10:04.462" endtime="20230926 00:10:04.560"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230926 00:10:04.562" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230926 00:10:04.561" endtime="20230926 00:10:04.562"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.561" endtime="20230926 00:10:04.562"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230926 00:10:04.767" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/Q5l7IFt3adM73dSx 
 path_url=/usuarios/Q5l7IFt3adM73dSx 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230926 00:10:04.767" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/Q5l7IFt3adM73dSx 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '22394efc949aef2479f2a7cbde175b07', 'Date': 'Tue, 26 Sep 2023 00:10:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230926 00:10:04.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.562" endtime="20230926 00:10:04.768"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230926 00:10:04.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.768" endtime="20230926 00:10:04.768"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.562" endtime="20230926 00:10:04.768"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230926 00:10:04.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230926 00:10:04.769" endtime="20230926 00:10:04.770"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230926 00:10:04.770" endtime="20230926 00:10:04.770"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.768" endtime="20230926 00:10:04.770"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230926 00:10:04.771" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230926 00:10:04.771" endtime="20230926 00:10:04.771"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.770" endtime="20230926 00:10:04.771"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230926 00:10:04.561" endtime="20230926 00:10:04.772"/>
</test>
<status status="PASS" starttime="20230926 00:10:03.419" endtime="20230926 00:10:04.772"/>
</suite>
<status status="PASS" starttime="20230926 00:10:03.417" endtime="20230926 00:10:04.773"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230926 00:10:04.784" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230926 00:10:04.783" endtime="20230926 00:10:15.670"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230926 00:10:15.670" endtime="20230926 00:10:15.789"/>
</kw>
<status status="PASS" starttime="20230926 00:10:04.783" endtime="20230926 00:10:15.789"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230926 00:10:15.834" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230926 00:10:15.790" endtime="20230926 00:10:15.834"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:15.835" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230926 00:10:15.834" endtime="20230926 00:10:16.005"/>
</kw>
<status status="PASS" starttime="20230926 00:10:15.789" endtime="20230926 00:10:16.005"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:16.006" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230926 00:10:16.006" endtime="20230926 00:10:16.134"/>
</kw>
<status status="PASS" starttime="20230926 00:10:16.005" endtime="20230926 00:10:16.134"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230926 00:10:16.135" endtime="20230926 00:10:16.367"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230926 00:10:16.386" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230926 00:10:16.367" endtime="20230926 00:10:16.386"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230926 00:10:16.449" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230926 00:10:16.386" endtime="20230926 00:10:16.450"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230926 00:10:16.462" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230926 00:10:16.450" endtime="20230926 00:10:16.463"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230926 00:10:16.475" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230926 00:10:16.463" endtime="20230926 00:10:16.475"/>
</kw>
<status status="PASS" starttime="20230926 00:10:16.134" endtime="20230926 00:10:16.475"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230926 00:10:16.476" endtime="20230926 00:10:16.531"/>
</kw>
<status status="PASS" starttime="20230926 00:10:16.475" endtime="20230926 00:10:16.531"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230926 00:10:04.783" endtime="20230926 00:10:16.531"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230926 00:10:16.534" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230926 00:10:16.533" endtime="20230926 00:10:17.815"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230926 00:10:17.815" endtime="20230926 00:10:17.918"/>
</kw>
<status status="PASS" starttime="20230926 00:10:16.533" endtime="20230926 00:10:17.918"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230926 00:10:17.924" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230926 00:10:17.919" endtime="20230926 00:10:17.924"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:17.925" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230926 00:10:17.924" endtime="20230926 00:10:17.977"/>
</kw>
<status status="PASS" starttime="20230926 00:10:17.919" endtime="20230926 00:10:17.977"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230926 00:10:17.978" level="INFO">${name} = Susan Chen</msg>
<status status="PASS" starttime="20230926 00:10:17.978" endtime="20230926 00:10:17.978"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230926 00:10:17.979" level="INFO">${email} = gardnerlaura@example.org</msg>
<status status="PASS" starttime="20230926 00:10:17.979" endtime="20230926 00:10:17.979"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230926 00:10:17.980" level="INFO">${password} = jouRt4SovFhK</msg>
<status status="PASS" starttime="20230926 00:10:17.979" endtime="20230926 00:10:17.980"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:17.980" level="INFO">Typing text 'Susan Chen' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230926 00:10:17.980" endtime="20230926 00:10:18.156"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:18.157" level="INFO">Typing text 'gardnerlaura@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230926 00:10:18.156" endtime="20230926 00:10:18.267"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:18.268" level="INFO">Typing text 'jouRt4SovFhK' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230926 00:10:18.267" endtime="20230926 00:10:18.357"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:18.358" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230926 00:10:18.357" endtime="20230926 00:10:18.446"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230926 00:10:18.446" level="INFO">${name} = Susan Chen</msg>
<status status="PASS" starttime="20230926 00:10:18.446" endtime="20230926 00:10:18.446"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230926 00:10:18.447" level="INFO">${email} = gardnerlaura@example.org</msg>
<status status="PASS" starttime="20230926 00:10:18.447" endtime="20230926 00:10:18.447"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230926 00:10:18.447" level="INFO">${password} = jouRt4SovFhK</msg>
<status status="PASS" starttime="20230926 00:10:18.447" endtime="20230926 00:10:18.447"/>
</kw>
<status status="PASS" starttime="20230926 00:10:17.977" endtime="20230926 00:10:18.447"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:18.449" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230926 00:10:18.448" endtime="20230926 00:10:18.505"/>
</kw>
<status status="PASS" starttime="20230926 00:10:18.447" endtime="20230926 00:10:18.505"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230926 00:10:18.506" endtime="20230926 00:10:18.740"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230926 00:10:18.758" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230926 00:10:18.740" endtime="20230926 00:10:18.758"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230926 00:10:18.771" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230926 00:10:18.758" endtime="20230926 00:10:18.771"/>
</kw>
<status status="PASS" starttime="20230926 00:10:18.505" endtime="20230926 00:10:18.771"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230926 00:10:18.771" endtime="20230926 00:10:18.827"/>
</kw>
<status status="PASS" starttime="20230926 00:10:18.771" endtime="20230926 00:10:18.827"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230926 00:10:16.532" endtime="20230926 00:10:18.827"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230926 00:10:18.829" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230926 00:10:18.829" endtime="20230926 00:10:20.016"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230926 00:10:20.016" endtime="20230926 00:10:20.134"/>
</kw>
<status status="PASS" starttime="20230926 00:10:18.828" endtime="20230926 00:10:20.134"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230926 00:10:20.139" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230926 00:10:20.134" endtime="20230926 00:10:20.139"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:20.140" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230926 00:10:20.139" endtime="20230926 00:10:20.193"/>
</kw>
<status status="PASS" starttime="20230926 00:10:20.134" endtime="20230926 00:10:20.193"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:20.194" level="INFO">Typing text 'Susan Chen' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230926 00:10:20.194" endtime="20230926 00:10:20.308"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:20.309" level="INFO">Typing text 'gardnerlaura@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230926 00:10:20.308" endtime="20230926 00:10:20.415"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:20.416" level="INFO">Typing text 'jouRt4SovFhK' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230926 00:10:20.416" endtime="20230926 00:10:20.501"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:20.501" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230926 00:10:20.501" endtime="20230926 00:10:20.575"/>
</kw>
<status status="PASS" starttime="20230926 00:10:20.193" endtime="20230926 00:10:20.575"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230926 00:10:20.576" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230926 00:10:20.576" endtime="20230926 00:10:20.633"/>
</kw>
<status status="PASS" starttime="20230926 00:10:20.575" endtime="20230926 00:10:20.634"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230926 00:10:20.634" endtime="20230926 00:10:20.865"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230926 00:10:20.884" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230926 00:10:20.866" endtime="20230926 00:10:20.884"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230926 00:10:20.897" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230926 00:10:20.884" endtime="20230926 00:10:20.897"/>
</kw>
<status status="PASS" starttime="20230926 00:10:20.634" endtime="20230926 00:10:20.897"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230926 00:10:20.898" endtime="20230926 00:10:20.954"/>
</kw>
<status status="PASS" starttime="20230926 00:10:20.898" endtime="20230926 00:10:20.954"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230926 00:10:18.828" endtime="20230926 00:10:20.954"/>
</test>
<status status="PASS" starttime="20230926 00:10:04.776" endtime="20230926 00:10:20.955"/>
</suite>
<status status="PASS" starttime="20230926 00:10:04.774" endtime="20230926 00:10:20.956"/>
</suite>
<status status="PASS" starttime="20230926 00:10:03.398" endtime="20230926 00:10:20.957"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
