<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230522 13:26:05.869" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:26:06.338" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:26:06.338" endtime="20230522 13:26:06.338"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.337" endtime="20230522 13:26:06.338"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:26:06.543" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:26:06.543" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6d244deb-dddd-47c0-8969-5bba0b7272c2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6089b8543ee7b583586608b06d2b6ddb;o=1', 'Date': 'Mon, 22 May 2023 13:26:06 GMT', 'Server': 'Google Frontend', 'Content-Length': '2215'} 
 body={
    "quantidade": 10,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "cwkpuktx",
            "email": "cwkpuktx@qa.com",
            "password": "cwkpuktx",
            "administrador": "false",
            "_id": "8GMc4wczqMQBOBZx"
        },
        {
            "nome": "Alexis Burnett",
            "email": "torresdebbie@example.com",
            "password": "FHdMznir6YzJ",
            "administrador": "true",
            "_id": "8JRlCuRqRwWothGu"
        },
        {
            "nome": "Hailey Joseph",
            "email": "ericareynolds@example.org",
            "password": "2mblVzBFHBLD",
            "administrador": "true",
            "_id": "C1pJhnzw6V7liP5i"
        },
        {
            "nome": "Mariah Vaughan",
            "email": "michael84@example.com",
            "password": "MsdhntXM0Bo3",
            "administrador": "true",
            "_id": "Cng5QlDV2dmwnaD6"
        },
        {
            "nome": "David Walton",
            "email": "jmiller@example.com",
            "password": "m33CxzZc6BiA",
            "administrador": "true",
            "_id": "MPSxGdwNDmcX3Kos"
        },
        {
            "nome": "{{nome}}",
            "email": "Annabell@qa.com.br",
            "password": "rsufMwpMdtzksgs",
            "administrador": "true",
            "_id": "PoEdyv8dPUQ7S1Xn"
        },
        {
            "nome": "Timothy Werner",
            "email": "ebailey@example.com",
            "password": "1Rx@4DrMJi",
            "administrador": "true",
            "_id": "VoVnSiPQ9t1MBWuE"
        },
        {
            "nome": "Kimberly Sanchez",
            "email": "paula66@example.net",
            "password": "LZuFA3p11ISr",
            "administrador": "true",
            "_id": "abcp5gB9qDVVkHhF"
        },
        {
            "nome": "Jose Milton",
            "email": "milton@1234578923101010271109.com",
            "password": "test123",
            "administrador": "true",
            "_id": "gVP9mDqHqLvFeI2W"
        }
    ]
} 
 </msg>
<msg timestamp="20230522 13:26:06.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.339" endtime="20230522 13:26:06.543"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:26:06.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.544" endtime="20230522 13:26:06.544"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.338" endtime="20230522 13:26:06.544"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:26:06.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.545" endtime="20230522 13:26:06.545"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:26:06.545" endtime="20230522 13:26:06.546"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.544" endtime="20230522 13:26:06.546"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:26:06.547" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 13:26:06.546" endtime="20230522 13:26:06.547"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.546" endtime="20230522 13:26:06.547"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:26:06.336" endtime="20230522 13:26:06.547"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:26:06.549" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:26:06.548" endtime="20230522 13:26:06.549"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.548" endtime="20230522 13:26:06.549"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 13:26:06.550" level="INFO">${name} = Joshua Palmer</msg>
<status status="PASS" starttime="20230522 13:26:06.549" endtime="20230522 13:26:06.550"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 13:26:06.550" level="INFO">${email} = rivasronnie@example.org</msg>
<status status="PASS" starttime="20230522 13:26:06.550" endtime="20230522 13:26:06.550"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 13:26:06.551" level="INFO">${password} = 3If9bwJJKhjU</msg>
<status status="PASS" starttime="20230522 13:26:06.550" endtime="20230522 13:26:06.551"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:26:06.551" level="INFO">${name} = Joshua Palmer</msg>
<status status="PASS" starttime="20230522 13:26:06.551" endtime="20230522 13:26:06.551"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:26:06.552" level="INFO">${email} = rivasronnie@example.org</msg>
<status status="PASS" starttime="20230522 13:26:06.551" endtime="20230522 13:26:06.552"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:26:06.552" level="INFO">${password} = 3If9bwJJKhjU</msg>
<status status="PASS" starttime="20230522 13:26:06.552" endtime="20230522 13:26:06.552"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.549" endtime="20230522 13:26:06.552"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:26:06.553" level="INFO">${payload} = {'nome': 'Joshua Palmer', 'email': 'rivasronnie@example.org', 'password': '3If9bwJJKhjU', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 13:26:06.552" endtime="20230522 13:26:06.553"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:26:06.553" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 13:26:06.553" endtime="20230522 13:26:06.553"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:26:06.636" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Joshua Palmer", "email": "rivasronnie@example.org", "password": "3If9bwJJKhjU", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 13:26:06.637" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '00010737-1b73-4d48-a11b-cd25c920467f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '34de6a2f8602ab77893d148890188d2c', 'Date': 'Mon, 22 May 2023 13:26:06 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "kHObq3DeHXyPuRrc"
} 
 </msg>
<msg timestamp="20230522 13:26:06.637" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.553" endtime="20230522 13:26:06.637"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230522 13:26:06.638" level="INFO">${user_id} = kHObq3DeHXyPuRrc</msg>
<status status="PASS" starttime="20230522 13:26:06.637" endtime="20230522 13:26:06.638"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230522 13:26:06.638" level="INFO">${USER_ID} = kHObq3DeHXyPuRrc</msg>
<status status="PASS" starttime="20230522 13:26:06.638" endtime="20230522 13:26:06.638"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:26:06.639" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.638" endtime="20230522 13:26:06.639"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.552" endtime="20230522 13:26:06.639"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:26:06.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.639" endtime="20230522 13:26:06.640"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:26:06.640" endtime="20230522 13:26:06.640"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.639" endtime="20230522 13:26:06.640"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:26:06.641" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 13:26:06.641" endtime="20230522 13:26:06.641"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.641" endtime="20230522 13:26:06.642"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:26:06.548" endtime="20230522 13:26:06.642"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:26:06.643" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:26:06.643" endtime="20230522 13:26:06.643"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.642" endtime="20230522 13:26:06.643"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:26:06.726" level="INFO">GET Request : url=https://serverest.dev/usuarios/kHObq3DeHXyPuRrc 
 path_url=/usuarios/kHObq3DeHXyPuRrc 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:26:06.726" level="INFO">GET Response : url=https://serverest.dev/usuarios/kHObq3DeHXyPuRrc 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c7ec1777-df65-4f69-a470-693c9127df5d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1c4e168356ba65d6f413931b4dff5a26', 'Date': 'Mon, 22 May 2023 13:26:06 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Joshua Palmer",
    "email": "rivasronnie@example.org",
    "password": "3If9bwJJKhjU",
    "administrador": "false",
    "_id": "kHObq3DeHXyPuRrc"
} 
 </msg>
<msg timestamp="20230522 13:26:06.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.644" endtime="20230522 13:26:06.726"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:26:06.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.726" endtime="20230522 13:26:06.727"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.644" endtime="20230522 13:26:06.727"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:26:06.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.727" endtime="20230522 13:26:06.728"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:26:06.728" endtime="20230522 13:26:06.729"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.727" endtime="20230522 13:26:06.729"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:26:06.730" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230522 13:26:06.729" endtime="20230522 13:26:06.730"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.729" endtime="20230522 13:26:06.730"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:26:06.642" endtime="20230522 13:26:06.730"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:26:06.732" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:26:06.731" endtime="20230522 13:26:06.732"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.731" endtime="20230522 13:26:06.732"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:26:06.733" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 13:26:06.732" endtime="20230522 13:26:06.733"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:26:06.733" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 13:26:06.733" endtime="20230522 13:26:06.733"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:26:06.821" level="INFO">PUT Request : url=https://serverest.dev/usuarios/kHObq3DeHXyPuRrc 
 path_url=/usuarios/kHObq3DeHXyPuRrc 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 13:26:06.822" level="INFO">PUT Response : url=https://serverest.dev/usuarios/kHObq3DeHXyPuRrc 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e2a1724c-47a3-41ba-8ea8-bbbaf31a5d94', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3a531a75324f4a7bbd9c50c6cf551371', 'Date': 'Mon, 22 May 2023 13:26:06 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230522 13:26:06.822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.733" endtime="20230522 13:26:06.822"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:26:06.822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.822" endtime="20230522 13:26:06.822"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.732" endtime="20230522 13:26:06.822"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:26:06.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.823" endtime="20230522 13:26:06.823"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:26:06.824" endtime="20230522 13:26:06.824"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.822" endtime="20230522 13:26:06.824"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:26:06.825" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 13:26:06.825" endtime="20230522 13:26:06.825"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.824" endtime="20230522 13:26:06.825"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:26:06.731" endtime="20230522 13:26:06.826"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:26:06.827" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:26:06.827" endtime="20230522 13:26:06.827"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.826" endtime="20230522 13:26:06.827"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:26:06.908" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/kHObq3DeHXyPuRrc 
 path_url=/usuarios/kHObq3DeHXyPuRrc 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:26:06.908" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/kHObq3DeHXyPuRrc 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2cb80e19-ad18-44a1-8563-ae34fab4cf55', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0ba5d05ed7f95488f01b609a6e29acfd', 'Date': 'Mon, 22 May 2023 13:26:06 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230522 13:26:06.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.828" endtime="20230522 13:26:06.908"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:26:06.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.908" endtime="20230522 13:26:06.908"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.828" endtime="20230522 13:26:06.909"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:26:06.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:26:06.909" endtime="20230522 13:26:06.910"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:26:06.910" endtime="20230522 13:26:06.910"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.909" endtime="20230522 13:26:06.910"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:26:06.911" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 13:26:06.911" endtime="20230522 13:26:06.911"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.911" endtime="20230522 13:26:06.911"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:26:06.826" endtime="20230522 13:26:06.912"/>
</test>
<status status="PASS" starttime="20230522 13:26:05.890" endtime="20230522 13:26:06.913"/>
</suite>
<status status="PASS" starttime="20230522 13:26:05.888" endtime="20230522 13:26:06.914"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:26:06.924" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:26:06.924" endtime="20230522 13:26:08.888"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:26:08.888" endtime="20230522 13:26:08.993"/>
</kw>
<status status="PASS" starttime="20230522 13:26:06.923" endtime="20230522 13:26:08.993"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:26:08.998" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:26:08.994" endtime="20230522 13:26:08.999"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:09.000" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:26:08.999" endtime="20230522 13:26:09.080"/>
</kw>
<status status="PASS" starttime="20230522 13:26:08.993" endtime="20230522 13:26:09.081"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:09.082" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:26:09.081" endtime="20230522 13:26:09.148"/>
</kw>
<status status="PASS" starttime="20230522 13:26:09.081" endtime="20230522 13:26:09.148"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:26:09.149" endtime="20230522 13:26:09.382"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:26:09.401" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:26:09.382" endtime="20230522 13:26:09.401"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:26:09.416" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:26:09.401" endtime="20230522 13:26:09.416"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:26:09.429" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:26:09.416" endtime="20230522 13:26:09.429"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:26:09.442" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:26:09.429" endtime="20230522 13:26:09.442"/>
</kw>
<status status="PASS" starttime="20230522 13:26:09.148" endtime="20230522 13:26:09.442"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:26:09.442" endtime="20230522 13:26:09.497"/>
</kw>
<status status="PASS" starttime="20230522 13:26:09.442" endtime="20230522 13:26:09.498"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:26:06.923" endtime="20230522 13:26:09.498"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:26:09.500" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:26:09.499" endtime="20230522 13:26:10.741"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:26:10.742" endtime="20230522 13:26:10.864"/>
</kw>
<status status="PASS" starttime="20230522 13:26:09.499" endtime="20230522 13:26:10.864"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:26:10.869" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:26:10.865" endtime="20230522 13:26:10.869"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:10.870" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:26:10.870" endtime="20230522 13:26:10.923"/>
</kw>
<status status="PASS" starttime="20230522 13:26:10.864" endtime="20230522 13:26:10.923"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 13:26:10.924" level="INFO">${name} = Audrey Rogers</msg>
<status status="PASS" starttime="20230522 13:26:10.924" endtime="20230522 13:26:10.924"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 13:26:10.925" level="INFO">${email} = franktanner@example.net</msg>
<status status="PASS" starttime="20230522 13:26:10.924" endtime="20230522 13:26:10.925"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 13:26:10.925" level="INFO">${password} = Tkop7UGmLc0W</msg>
<status status="PASS" starttime="20230522 13:26:10.925" endtime="20230522 13:26:10.925"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:10.926" level="INFO">Typing text 'Audrey Rogers' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 13:26:10.926" endtime="20230522 13:26:11.041"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:11.041" level="INFO">Typing text 'franktanner@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 13:26:11.041" endtime="20230522 13:26:11.151"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:11.152" level="INFO">Typing text 'Tkop7UGmLc0W' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 13:26:11.152" endtime="20230522 13:26:11.240"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:11.241" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 13:26:11.241" endtime="20230522 13:26:11.314"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:26:11.315" level="INFO">${name} = Audrey Rogers</msg>
<status status="PASS" starttime="20230522 13:26:11.315" endtime="20230522 13:26:11.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:26:11.315" level="INFO">${email} = franktanner@example.net</msg>
<status status="PASS" starttime="20230522 13:26:11.315" endtime="20230522 13:26:11.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:26:11.316" level="INFO">${password} = Tkop7UGmLc0W</msg>
<status status="PASS" starttime="20230522 13:26:11.316" endtime="20230522 13:26:11.316"/>
</kw>
<status status="PASS" starttime="20230522 13:26:10.923" endtime="20230522 13:26:11.316"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:11.317" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:26:11.316" endtime="20230522 13:26:11.376"/>
</kw>
<status status="PASS" starttime="20230522 13:26:11.316" endtime="20230522 13:26:11.376"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:26:11.377" endtime="20230522 13:26:11.610"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:26:11.628" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:26:11.610" endtime="20230522 13:26:11.628"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:26:11.641" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230522 13:26:11.629" endtime="20230522 13:26:11.641"/>
</kw>
<status status="PASS" starttime="20230522 13:26:11.376" endtime="20230522 13:26:11.641"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:26:11.642" endtime="20230522 13:26:11.697"/>
</kw>
<status status="PASS" starttime="20230522 13:26:11.642" endtime="20230522 13:26:11.697"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:26:09.498" endtime="20230522 13:26:11.698"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:26:11.700" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:26:11.699" endtime="20230522 13:26:12.874"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:26:12.874" endtime="20230522 13:26:12.996"/>
</kw>
<status status="PASS" starttime="20230522 13:26:11.699" endtime="20230522 13:26:12.997"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:26:13.002" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:26:12.997" endtime="20230522 13:26:13.002"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:13.003" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:26:13.002" endtime="20230522 13:26:13.055"/>
</kw>
<status status="PASS" starttime="20230522 13:26:12.997" endtime="20230522 13:26:13.055"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:13.056" level="INFO">Typing text 'Audrey Rogers' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 13:26:13.056" endtime="20230522 13:26:13.173"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:13.174" level="INFO">Typing text 'franktanner@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 13:26:13.174" endtime="20230522 13:26:13.274"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:13.274" level="INFO">Typing text 'Tkop7UGmLc0W' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 13:26:13.274" endtime="20230522 13:26:13.368"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:13.369" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 13:26:13.369" endtime="20230522 13:26:13.440"/>
</kw>
<status status="PASS" starttime="20230522 13:26:13.055" endtime="20230522 13:26:13.440"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:26:13.441" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:26:13.441" endtime="20230522 13:26:13.500"/>
</kw>
<status status="PASS" starttime="20230522 13:26:13.440" endtime="20230522 13:26:13.500"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:26:13.501" endtime="20230522 13:26:13.734"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:26:13.752" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:26:13.734" endtime="20230522 13:26:13.752"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:26:13.765" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230522 13:26:13.752" endtime="20230522 13:26:13.765"/>
</kw>
<status status="PASS" starttime="20230522 13:26:13.501" endtime="20230522 13:26:13.765"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:26:13.766" endtime="20230522 13:26:13.820"/>
</kw>
<status status="PASS" starttime="20230522 13:26:13.765" endtime="20230522 13:26:13.820"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:26:11.698" endtime="20230522 13:26:13.820"/>
</test>
<status status="PASS" starttime="20230522 13:26:06.916" endtime="20230522 13:26:13.821"/>
</suite>
<status status="PASS" starttime="20230522 13:26:06.915" endtime="20230522 13:26:13.823"/>
</suite>
<status status="PASS" starttime="20230522 13:26:05.870" endtime="20230522 13:26:13.824"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
