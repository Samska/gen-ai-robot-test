<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230427 01:04:04.509" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230427 01:04:05.090" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230427 01:04:05.090" endtime="20230427 01:04:05.090"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.089" endtime="20230427 01:04:05.090"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230427 01:04:05.246" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230427 01:04:05.246" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '50139d44-36e3-4c64-8ab2-6e91a050acab', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fc8941d64656d8453dc27c3f600e8ecb;o=1', 'Date': 'Thu, 27 Apr 2023 01:04:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '6899'} 
 body={
    "quantidade": 32,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "jdey@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "0BmaHC4VTusslYQs"
        },
        {
            "nome": "Fabianofda",
            "email": "qalexander@example.com",
            "password": "pwd123",
            "administrador": "true",
            "_id": "0PVFzhfzREgSWvP0"
        },
        {
            "nome": "Fulano da Silva",
            "email": "gstx@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "4q6ExUOdmem1FESW"
        },
        {
            "nome": "Fulano da Silva",
            "email": "bwmi@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "6hOTZ2X5arDscE6H"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "6nzXSAynG8QSfyDM"
        },
        {
            "nome": "Fabiano Dias de Andrade",
            "email": "fabiano@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "7UnLEmNkycAAYjDF"
        },
        {
            "nome": "Janice_Rohan31",
            "email": "Anthony.Rogahn67@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "7xyaFlbJOHMPRiZk"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mijs@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "Ak6xJdB2TTvH4eTs"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yfel@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "EmVTCRYdc3eUF4Mf"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lyow@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "Hc6B4oWdBJnHJe9z"
        },
        {
            "nome": "Arnulfo.OConnell",
            "email": "Lamar_Ritchie66@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "I4K0C5flodpNP71L"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yoqc@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "JMpXS8Rs6YF0eInv"
        },
        {
            "nome": "Fabianofda",
            "email": "vturner@example.net",
            "password": "pwd123",
            "administrador": "true",
            "_id": "KCFntAtMH1hDfIqP"
        },
        {
            "nome": "Fulano da Silva",
            "email": "jhch@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "NgJCmGLK34peJkWv"
        },
        {
            "nome": "Fabianofda",
            "email": "smithmichele@example.net",
            "password": "pwd123",
            "administrador": "true",
            "_id": "PygLtODlbXBwhkQs"
        },
        {
            "nome": "Fulano da Silva",
            "email": "msdk@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "Tz9odvrEZrTkC2RV"
        },
        {
            "nome": "Fabianofda",
            "email": "mblack@example.com",
            "password": "pwd123",
            "administrador": "true",
            "_id": "Uk3jPbzuwt309yDw"
        },
        {
            "nome": "Fulano da Silva",
            "email": "wgke@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "YFS2v16gIjeKfCiC"
        },
        {
            "nome": "Fabianofda",
            "email": "monica48@example.org",
            "password": "pwd123",
            "administrador": "true",
            "_id": "bNZcUj2cm2AtEaQS"
        },
        {
            "nome": "Fulano da Silva",
            "email": "oozf@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "d4r13UFAIsAWhdfB"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rmqk@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "eIxWhBkG5mRatMpV"
        },
        {
            "nome": "Fabianofda",
            "email": "qlivingston@example.net",
            "password": "pwd123",
            "administrador": "true",
            "_id": "g05UhJ8KDLiET4UU"
        },
        {
            "nome": "Cordia.Cronin54",
            "email": "Aisha_Hettinger@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "hzGwTqsXOg7dfElc"
        },
        {
            "nome": "Fulano da Silva",
            "email": "tyhi@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "jepqgVlfqBDD3jip"
        },
        {
            "nome": "Fabiano Fda",
            "email": "susandaniel@example.org",
            "password": "pwd123",
            "administrador": "true",
            "_id": "qYWakodKWDHyG1ip"
        },
        {
            "nome": "Ila86",
            "email": "Alta23@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "ru5AkK7DRJOtMcj2"
        },
        {
            "nome": "Jermain43",
            "email": "Abigayle_Mills@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "tLStjZj6YkVFW2PW"
        },
        {
            "nome": "Fabiano Fda",
            "email": "wmorales@example.org",
            "password": "pwd123",
            "administrador": "true",
            "_id": "tompTPsRcOXLHSnn"
        },
        {
            "nome": "Fulano da Silva",
            "email": "uvld@emailteste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "veqh0rUI2RcrQTNm"
        },
        {
            "nome": "Fabiano Fda",
            "email": "harrisonstacey@example.org",
            "password": "pwd123",
            "administrador": "true",
            "_id": "wGbOd6L3ugJS1HDN"
        },
        {
            "nome": "Fabianofda",
            "email": "jenniferalexander@example.org",
            "password": "pwd123",
            "administrador": "true",
            "_id": "xkYufggMlCcMwATI"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Ella_Schultz48@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "yhwJnFi91HvTZHbH"
        }
    ]
} 
 </msg>
<msg timestamp="20230427 01:04:05.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.091" endtime="20230427 01:04:05.246"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230427 01:04:05.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.247" endtime="20230427 01:04:05.247"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.091" endtime="20230427 01:04:05.247"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230427 01:04:05.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.248" endtime="20230427 01:04:05.249"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230427 01:04:05.249" endtime="20230427 01:04:05.249"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.247" endtime="20230427 01:04:05.249"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230427 01:04:05.250" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230427 01:04:05.250" endtime="20230427 01:04:05.250"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.249" endtime="20230427 01:04:05.251"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230427 01:04:05.088" endtime="20230427 01:04:05.251"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230427 01:04:05.252" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230427 01:04:05.252" endtime="20230427 01:04:05.253"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.252" endtime="20230427 01:04:05.253"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230427 01:04:05.254" level="INFO">${name} = Jared Johnston</msg>
<status status="PASS" starttime="20230427 01:04:05.253" endtime="20230427 01:04:05.254"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230427 01:04:05.254" level="INFO">${email} = tpatterson@example.net</msg>
<status status="PASS" starttime="20230427 01:04:05.254" endtime="20230427 01:04:05.254"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230427 01:04:05.255" level="INFO">${password} = Z(19YICgC)</msg>
<status status="PASS" starttime="20230427 01:04:05.254" endtime="20230427 01:04:05.255"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230427 01:04:05.255" level="INFO">${name} = Jared Johnston</msg>
<status status="PASS" starttime="20230427 01:04:05.255" endtime="20230427 01:04:05.255"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230427 01:04:05.255" level="INFO">${email} = tpatterson@example.net</msg>
<status status="PASS" starttime="20230427 01:04:05.255" endtime="20230427 01:04:05.255"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230427 01:04:05.256" level="INFO">${password} = Z(19YICgC)</msg>
<status status="PASS" starttime="20230427 01:04:05.255" endtime="20230427 01:04:05.256"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.253" endtime="20230427 01:04:05.256"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230427 01:04:05.257" level="INFO">${payload} = {'nome': 'Jared Johnston', 'email': 'tpatterson@example.net', 'password': 'Z(19YICgC)', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230427 01:04:05.256" endtime="20230427 01:04:05.257"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230427 01:04:05.257" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230427 01:04:05.257" endtime="20230427 01:04:05.257"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230427 01:04:05.324" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Jared Johnston", "email": "tpatterson@example.net", "password": "Z(19YICgC)", "administrador": "false"}' 
 </msg>
<msg timestamp="20230427 01:04:05.325" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '39e80572-7b56-454e-ade7-fdd53733c62c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0cf35fb3e0324409350861ca7251e7d0', 'Date': 'Thu, 27 Apr 2023 01:04:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "GhUBiV6y81IxSgmg"
} 
 </msg>
<msg timestamp="20230427 01:04:05.325" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.257" endtime="20230427 01:04:05.325"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230427 01:04:05.326" level="INFO">${user_id} = GhUBiV6y81IxSgmg</msg>
<status status="PASS" starttime="20230427 01:04:05.325" endtime="20230427 01:04:05.326"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230427 01:04:05.326" level="INFO">${USER_ID} = GhUBiV6y81IxSgmg</msg>
<status status="PASS" starttime="20230427 01:04:05.326" endtime="20230427 01:04:05.327"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230427 01:04:05.327" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.327" endtime="20230427 01:04:05.327"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.256" endtime="20230427 01:04:05.327"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230427 01:04:05.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.328" endtime="20230427 01:04:05.328"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230427 01:04:05.329" endtime="20230427 01:04:05.329"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.327" endtime="20230427 01:04:05.329"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230427 01:04:05.330" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230427 01:04:05.330" endtime="20230427 01:04:05.330"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.329" endtime="20230427 01:04:05.331"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230427 01:04:05.251" endtime="20230427 01:04:05.331"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230427 01:04:05.332" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230427 01:04:05.332" endtime="20230427 01:04:05.333"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.332" endtime="20230427 01:04:05.333"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230427 01:04:05.403" level="INFO">GET Request : url=https://serverest.dev/usuarios/GhUBiV6y81IxSgmg 
 path_url=/usuarios/GhUBiV6y81IxSgmg 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230427 01:04:05.403" level="INFO">GET Response : url=https://serverest.dev/usuarios/GhUBiV6y81IxSgmg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e56ccc92-1695-436d-9f57-a5c77d950f1b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b3062847c9b38b2e88e5ac307c0fdd4a', 'Date': 'Thu, 27 Apr 2023 01:04:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Jared Johnston",
    "email": "tpatterson@example.net",
    "password": "Z(19YICgC)",
    "administrador": "false",
    "_id": "GhUBiV6y81IxSgmg"
} 
 </msg>
<msg timestamp="20230427 01:04:05.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.333" endtime="20230427 01:04:05.403"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230427 01:04:05.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.404" endtime="20230427 01:04:05.404"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.333" endtime="20230427 01:04:05.404"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230427 01:04:05.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.405" endtime="20230427 01:04:05.406"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230427 01:04:05.406" endtime="20230427 01:04:05.406"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.404" endtime="20230427 01:04:05.406"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230427 01:04:05.407" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230427 01:04:05.407" endtime="20230427 01:04:05.407"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.406" endtime="20230427 01:04:05.407"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230427 01:04:05.331" endtime="20230427 01:04:05.408"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230427 01:04:05.409" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230427 01:04:05.409" endtime="20230427 01:04:05.410"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.409" endtime="20230427 01:04:05.410"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230427 01:04:05.410" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230427 01:04:05.410" endtime="20230427 01:04:05.410"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230427 01:04:05.411" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230427 01:04:05.411" endtime="20230427 01:04:05.411"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230427 01:04:05.489" level="INFO">PUT Request : url=https://serverest.dev/usuarios/GhUBiV6y81IxSgmg 
 path_url=/usuarios/GhUBiV6y81IxSgmg 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230427 01:04:05.489" level="INFO">PUT Response : url=https://serverest.dev/usuarios/GhUBiV6y81IxSgmg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0c8b1bee-268f-41bb-a344-bff789b7d67f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '493b774df06a3675f66f4732cad5d0c1', 'Date': 'Thu, 27 Apr 2023 01:04:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230427 01:04:05.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.411" endtime="20230427 01:04:05.489"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230427 01:04:05.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.490" endtime="20230427 01:04:05.490"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.410" endtime="20230427 01:04:05.490"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230427 01:04:05.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.491" endtime="20230427 01:04:05.492"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230427 01:04:05.492" endtime="20230427 01:04:05.492"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.490" endtime="20230427 01:04:05.493"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230427 01:04:05.494" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230427 01:04:05.493" endtime="20230427 01:04:05.494"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.493" endtime="20230427 01:04:05.494"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230427 01:04:05.408" endtime="20230427 01:04:05.494"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230427 01:04:05.496" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230427 01:04:05.495" endtime="20230427 01:04:05.496"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.495" endtime="20230427 01:04:05.496"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230427 01:04:05.567" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/GhUBiV6y81IxSgmg 
 path_url=/usuarios/GhUBiV6y81IxSgmg 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230427 01:04:05.567" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/GhUBiV6y81IxSgmg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9915b271-7619-4822-b2b8-979a991b9db7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5b0141aef5eaa10628735000ce29b251', 'Date': 'Thu, 27 Apr 2023 01:04:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230427 01:04:05.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.496" endtime="20230427 01:04:05.567"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230427 01:04:05.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.567" endtime="20230427 01:04:05.568"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.496" endtime="20230427 01:04:05.568"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230427 01:04:05.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230427 01:04:05.568" endtime="20230427 01:04:05.570"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230427 01:04:05.570" endtime="20230427 01:04:05.570"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.568" endtime="20230427 01:04:05.570"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230427 01:04:05.572" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230427 01:04:05.571" endtime="20230427 01:04:05.572"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.571" endtime="20230427 01:04:05.572"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230427 01:04:05.494" endtime="20230427 01:04:05.572"/>
</test>
<status status="PASS" starttime="20230427 01:04:04.533" endtime="20230427 01:04:05.573"/>
</suite>
<status status="PASS" starttime="20230427 01:04:04.532" endtime="20230427 01:04:05.574"/>
</suite>
<status status="PASS" starttime="20230427 01:04:04.530" endtime="20230427 01:04:05.575"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230427 01:04:05.587" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230427 01:04:05.586" endtime="20230427 01:04:14.199"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230427 01:04:14.200" endtime="20230427 01:04:14.323"/>
</kw>
<status status="PASS" starttime="20230427 01:04:05.586" endtime="20230427 01:04:14.323"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230427 01:04:14.324" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230427 01:04:14.324" endtime="20230427 01:04:14.414"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230427 01:04:14.419" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230427 01:04:14.415" endtime="20230427 01:04:14.419"/>
</kw>
<status status="PASS" starttime="20230427 01:04:14.324" endtime="20230427 01:04:14.419"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:14.422" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230427 01:04:14.420" endtime="20230427 01:04:14.653"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:14.653" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230427 01:04:14.653" endtime="20230427 01:04:14.802"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:14.803" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230427 01:04:14.802" endtime="20230427 01:04:15.051"/>
</kw>
<status status="PASS" starttime="20230427 01:04:14.419" endtime="20230427 01:04:15.051"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230427 01:04:15.058" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230427 01:04:15.052" endtime="20230427 01:04:15.058"/>
</kw>
<status status="PASS" starttime="20230427 01:04:15.052" endtime="20230427 01:04:15.058"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230427 01:04:15.094" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230427 01:04:15.059" endtime="20230427 01:04:15.094"/>
</kw>
<status status="PASS" starttime="20230427 01:04:15.058" endtime="20230427 01:04:15.095"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230427 01:04:15.095" endtime="20230427 01:04:15.153"/>
</kw>
<status status="PASS" starttime="20230427 01:04:15.095" endtime="20230427 01:04:15.153"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230427 01:04:05.585" endtime="20230427 01:04:15.153"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230427 01:04:15.156" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230427 01:04:15.155" endtime="20230427 01:04:16.018"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230427 01:04:16.019" endtime="20230427 01:04:16.123"/>
</kw>
<status status="PASS" starttime="20230427 01:04:15.154" endtime="20230427 01:04:16.123"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230427 01:04:16.124" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230427 01:04:16.124" endtime="20230427 01:04:16.184"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230427 01:04:16.191" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230427 01:04:16.184" endtime="20230427 01:04:16.191"/>
</kw>
<status status="PASS" starttime="20230427 01:04:16.123" endtime="20230427 01:04:16.191"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:16.192" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230427 01:04:16.192" endtime="20230427 01:04:16.294"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:16.295" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230427 01:04:16.294" endtime="20230427 01:04:16.377"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:16.378" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230427 01:04:16.377" endtime="20230427 01:04:16.440"/>
</kw>
<status status="PASS" starttime="20230427 01:04:16.191" endtime="20230427 01:04:16.440"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230427 01:04:16.463" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230427 01:04:16.441" endtime="20230427 01:04:16.463"/>
</kw>
<status status="PASS" starttime="20230427 01:04:16.440" endtime="20230427 01:04:16.463"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230427 01:04:16.464" endtime="20230427 01:04:16.521"/>
</kw>
<status status="PASS" starttime="20230427 01:04:16.464" endtime="20230427 01:04:16.521"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230427 01:04:15.154" endtime="20230427 01:04:16.521"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230427 01:04:16.524" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230427 01:04:16.523" endtime="20230427 01:04:17.396"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230427 01:04:17.397" endtime="20230427 01:04:17.502"/>
</kw>
<status status="PASS" starttime="20230427 01:04:16.523" endtime="20230427 01:04:17.502"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230427 01:04:17.503" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230427 01:04:17.503" endtime="20230427 01:04:17.565"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230427 01:04:17.570" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230427 01:04:17.565" endtime="20230427 01:04:17.570"/>
</kw>
<status status="PASS" starttime="20230427 01:04:17.503" endtime="20230427 01:04:17.570"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:17.573" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230427 01:04:17.571" endtime="20230427 01:04:17.670"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:17.671" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230427 01:04:17.671" endtime="20230427 01:04:17.754"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:17.755" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230427 01:04:17.755" endtime="20230427 01:04:17.843"/>
</kw>
<status status="PASS" starttime="20230427 01:04:17.571" endtime="20230427 01:04:17.844"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230427 01:04:17.854" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230427 01:04:17.844" endtime="20230427 01:04:17.854"/>
</kw>
<status status="PASS" starttime="20230427 01:04:17.844" endtime="20230427 01:04:17.854"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230427 01:04:17.870" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230427 01:04:17.855" endtime="20230427 01:04:17.870"/>
</kw>
<status status="PASS" starttime="20230427 01:04:17.855" endtime="20230427 01:04:17.870"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230427 01:04:17.871" endtime="20230427 01:04:17.929"/>
</kw>
<status status="PASS" starttime="20230427 01:04:17.871" endtime="20230427 01:04:17.929"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230427 01:04:16.522" endtime="20230427 01:04:17.929"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230427 01:04:17.931" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230427 01:04:17.931" endtime="20230427 01:04:18.817"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230427 01:04:18.817" endtime="20230427 01:04:18.922"/>
</kw>
<status status="PASS" starttime="20230427 01:04:17.930" endtime="20230427 01:04:18.922"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230427 01:04:18.923" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230427 01:04:18.923" endtime="20230427 01:04:18.980"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230427 01:04:18.985" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230427 01:04:18.980" endtime="20230427 01:04:18.985"/>
</kw>
<status status="PASS" starttime="20230427 01:04:18.922" endtime="20230427 01:04:18.985"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:18.986" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230427 01:04:18.986" endtime="20230427 01:04:19.103"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:19.104" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230427 01:04:19.103" endtime="20230427 01:04:19.192"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230427 01:04:19.193" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230427 01:04:19.192" endtime="20230427 01:04:24.291"/>
</kw>
<status status="PASS" starttime="20230427 01:04:18.985" endtime="20230427 01:04:24.292"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230427 01:04:24.309" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230427 01:04:24.292" endtime="20230427 01:04:24.309"/>
</kw>
<status status="PASS" starttime="20230427 01:04:24.292" endtime="20230427 01:04:24.310"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230427 01:04:24.323" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230427 01:04:24.310" endtime="20230427 01:04:24.323"/>
</kw>
<status status="PASS" starttime="20230427 01:04:24.310" endtime="20230427 01:04:24.323"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230427 01:04:24.324" endtime="20230427 01:04:24.381"/>
</kw>
<status status="PASS" starttime="20230427 01:04:24.324" endtime="20230427 01:04:24.381"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230427 01:04:17.930" endtime="20230427 01:04:24.382"/>
</test>
<status status="PASS" starttime="20230427 01:04:05.579" endtime="20230427 01:04:24.383"/>
</suite>
<status status="PASS" starttime="20230427 01:04:05.578" endtime="20230427 01:04:24.386"/>
</suite>
<status status="PASS" starttime="20230427 01:04:05.576" endtime="20230427 01:04:24.388"/>
</suite>
<status status="PASS" starttime="20230427 01:04:04.510" endtime="20230427 01:04:24.390"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
