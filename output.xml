<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230516 01:03:07.303" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230516 01:03:07.781" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230516 01:03:07.781" endtime="20230516 01:03:07.781"/>
</kw>
<status status="PASS" starttime="20230516 01:03:07.780" endtime="20230516 01:03:07.782"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230516 01:03:11.981" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230516 01:03:11.982" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '44b8f10d-1188-4cc6-b119-dece698c93d3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e515b6f8dc07deeec704e40ee9726293;o=1', 'Date': 'Tue, 16 May 2023 01:03:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230516 01:03:11.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:07.782" endtime="20230516 01:03:11.982"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230516 01:03:11.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:11.982" endtime="20230516 01:03:11.982"/>
</kw>
<status status="PASS" starttime="20230516 01:03:07.782" endtime="20230516 01:03:11.983"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 01:03:11.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230516 01:03:11.983" endtime="20230516 01:03:11.984"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230516 01:03:11.984" endtime="20230516 01:03:11.985"/>
</kw>
<status status="PASS" starttime="20230516 01:03:11.983" endtime="20230516 01:03:11.985"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230516 01:03:11.986" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230516 01:03:11.985" endtime="20230516 01:03:11.986"/>
</kw>
<status status="PASS" starttime="20230516 01:03:11.985" endtime="20230516 01:03:11.986"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230516 01:03:07.780" endtime="20230516 01:03:11.986"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230516 01:03:11.988" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230516 01:03:11.987" endtime="20230516 01:03:11.988"/>
</kw>
<status status="PASS" starttime="20230516 01:03:11.987" endtime="20230516 01:03:11.988"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230516 01:03:11.989" level="INFO">${name} = John Beasley</msg>
<status status="PASS" starttime="20230516 01:03:11.988" endtime="20230516 01:03:11.989"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230516 01:03:11.989" level="INFO">${email} = qstone@example.net</msg>
<status status="PASS" starttime="20230516 01:03:11.989" endtime="20230516 01:03:11.989"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230516 01:03:11.990" level="INFO">${password} = +V09RjDhxY</msg>
<status status="PASS" starttime="20230516 01:03:11.989" endtime="20230516 01:03:11.990"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230516 01:03:11.990" level="INFO">${name} = John Beasley</msg>
<status status="PASS" starttime="20230516 01:03:11.990" endtime="20230516 01:03:11.990"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230516 01:03:11.990" level="INFO">${email} = qstone@example.net</msg>
<status status="PASS" starttime="20230516 01:03:11.990" endtime="20230516 01:03:11.990"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230516 01:03:11.991" level="INFO">${password} = +V09RjDhxY</msg>
<status status="PASS" starttime="20230516 01:03:11.990" endtime="20230516 01:03:11.991"/>
</kw>
<status status="PASS" starttime="20230516 01:03:11.988" endtime="20230516 01:03:11.991"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230516 01:03:11.992" level="INFO">${payload} = {'nome': 'John Beasley', 'email': 'qstone@example.net', 'password': '+V09RjDhxY', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230516 01:03:11.991" endtime="20230516 01:03:11.992"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230516 01:03:11.992" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230516 01:03:11.992" endtime="20230516 01:03:11.992"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230516 01:03:12.078" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '107'} 
 body=b'{"nome": "John Beasley", "email": "qstone@example.net", "password": "+V09RjDhxY", "administrador": "false"}' 
 </msg>
<msg timestamp="20230516 01:03:12.078" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '32949a52-a687-4660-884d-6bff36f288ed', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7672960fe1f1af12e30572998d262645', 'Date': 'Tue, 16 May 2023 01:03:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "FtCNf7jcPsiwwDjV"
} 
 </msg>
<msg timestamp="20230516 01:03:12.078" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:11.992" endtime="20230516 01:03:12.078"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230516 01:03:12.079" level="INFO">${user_id} = FtCNf7jcPsiwwDjV</msg>
<status status="PASS" starttime="20230516 01:03:12.078" endtime="20230516 01:03:12.079"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230516 01:03:12.080" level="INFO">${USER_ID} = FtCNf7jcPsiwwDjV</msg>
<status status="PASS" starttime="20230516 01:03:12.079" endtime="20230516 01:03:12.080"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230516 01:03:12.080" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.080" endtime="20230516 01:03:12.080"/>
</kw>
<status status="PASS" starttime="20230516 01:03:11.991" endtime="20230516 01:03:12.080"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 01:03:12.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.081" endtime="20230516 01:03:12.081"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230516 01:03:12.082" endtime="20230516 01:03:12.082"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.080" endtime="20230516 01:03:12.082"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230516 01:03:12.083" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230516 01:03:12.083" endtime="20230516 01:03:12.083"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.082" endtime="20230516 01:03:12.084"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230516 01:03:11.986" endtime="20230516 01:03:12.084"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230516 01:03:12.085" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230516 01:03:12.085" endtime="20230516 01:03:12.086"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.085" endtime="20230516 01:03:12.086"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230516 01:03:12.152" level="INFO">GET Request : url=https://serverest.dev/usuarios/FtCNf7jcPsiwwDjV 
 path_url=/usuarios/FtCNf7jcPsiwwDjV 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230516 01:03:12.153" level="INFO">GET Response : url=https://serverest.dev/usuarios/FtCNf7jcPsiwwDjV 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '139d2846-4065-45fb-82d5-ac018aee6af1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5fa4d05f3269b65a220b0073219f79ed', 'Date': 'Tue, 16 May 2023 01:03:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '156'} 
 body={
    "nome": "John Beasley",
    "email": "qstone@example.net",
    "password": "+V09RjDhxY",
    "administrador": "false",
    "_id": "FtCNf7jcPsiwwDjV"
} 
 </msg>
<msg timestamp="20230516 01:03:12.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.086" endtime="20230516 01:03:12.153"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230516 01:03:12.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.153" endtime="20230516 01:03:12.153"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.086" endtime="20230516 01:03:12.153"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 01:03:12.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.154" endtime="20230516 01:03:12.155"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230516 01:03:12.155" endtime="20230516 01:03:12.156"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.154" endtime="20230516 01:03:12.156"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230516 01:03:12.157" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230516 01:03:12.156" endtime="20230516 01:03:12.157"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.156" endtime="20230516 01:03:12.157"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230516 01:03:12.084" endtime="20230516 01:03:12.157"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230516 01:03:12.159" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230516 01:03:12.158" endtime="20230516 01:03:12.159"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.158" endtime="20230516 01:03:12.159"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230516 01:03:12.160" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230516 01:03:12.159" endtime="20230516 01:03:12.160"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230516 01:03:12.160" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230516 01:03:12.160" endtime="20230516 01:03:12.160"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230516 01:03:12.229" level="INFO">PUT Request : url=https://serverest.dev/usuarios/FtCNf7jcPsiwwDjV 
 path_url=/usuarios/FtCNf7jcPsiwwDjV 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230516 01:03:12.230" level="INFO">PUT Response : url=https://serverest.dev/usuarios/FtCNf7jcPsiwwDjV 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '39406ef5-7802-4048-a9d5-c14287c9a956', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '712023dd6756290f28d8c68572dbb45c', 'Date': 'Tue, 16 May 2023 01:03:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230516 01:03:12.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.160" endtime="20230516 01:03:12.230"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230516 01:03:12.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.230" endtime="20230516 01:03:12.230"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.159" endtime="20230516 01:03:12.231"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 01:03:12.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.231" endtime="20230516 01:03:12.232"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230516 01:03:12.232" endtime="20230516 01:03:12.232"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.231" endtime="20230516 01:03:12.233"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230516 01:03:12.233" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230516 01:03:12.233" endtime="20230516 01:03:12.234"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.233" endtime="20230516 01:03:12.234"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230516 01:03:12.158" endtime="20230516 01:03:12.234"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230516 01:03:12.235" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230516 01:03:12.235" endtime="20230516 01:03:12.236"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.235" endtime="20230516 01:03:12.236"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230516 01:03:12.310" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/FtCNf7jcPsiwwDjV 
 path_url=/usuarios/FtCNf7jcPsiwwDjV 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230516 01:03:12.310" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/FtCNf7jcPsiwwDjV 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2d0cf737-e8f3-41ea-8b67-8b5f3d9f0291', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7c03248dc0bc64338383d362927c76a4', 'Date': 'Tue, 16 May 2023 01:03:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230516 01:03:12.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.236" endtime="20230516 01:03:12.310"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230516 01:03:12.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.310" endtime="20230516 01:03:12.311"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.236" endtime="20230516 01:03:12.311"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 01:03:12.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230516 01:03:12.311" endtime="20230516 01:03:12.312"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230516 01:03:12.312" endtime="20230516 01:03:12.313"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.311" endtime="20230516 01:03:12.313"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230516 01:03:12.314" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230516 01:03:12.313" endtime="20230516 01:03:12.314"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.313" endtime="20230516 01:03:12.314"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230516 01:03:12.234" endtime="20230516 01:03:12.314"/>
</test>
<status status="PASS" starttime="20230516 01:03:07.325" endtime="20230516 01:03:12.315"/>
</suite>
<status status="PASS" starttime="20230516 01:03:07.324" endtime="20230516 01:03:12.316"/>
</suite>
<status status="PASS" starttime="20230516 01:03:07.322" endtime="20230516 01:03:12.317"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230516 01:03:12.328" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230516 01:03:12.328" endtime="20230516 01:03:13.650"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230516 01:03:13.650" endtime="20230516 01:03:13.757"/>
</kw>
<status status="PASS" starttime="20230516 01:03:12.327" endtime="20230516 01:03:13.758"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230516 01:03:13.759" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230516 01:03:13.758" endtime="20230516 01:03:13.822"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230516 01:03:13.827" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230516 01:03:13.822" endtime="20230516 01:03:13.827"/>
</kw>
<status status="PASS" starttime="20230516 01:03:13.758" endtime="20230516 01:03:13.827"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:13.829" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230516 01:03:13.827" endtime="20230516 01:03:13.956"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:13.956" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230516 01:03:13.956" endtime="20230516 01:03:14.050"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:14.050" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230516 01:03:14.050" endtime="20230516 01:03:14.206"/>
</kw>
<status status="PASS" starttime="20230516 01:03:13.827" endtime="20230516 01:03:14.206"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230516 01:03:14.219" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230516 01:03:14.207" endtime="20230516 01:03:14.219"/>
</kw>
<status status="PASS" starttime="20230516 01:03:14.206" endtime="20230516 01:03:14.219"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230516 01:03:14.234" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230516 01:03:14.220" endtime="20230516 01:03:14.234"/>
</kw>
<status status="PASS" starttime="20230516 01:03:14.219" endtime="20230516 01:03:14.234"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230516 01:03:14.235" endtime="20230516 01:03:14.292"/>
</kw>
<status status="PASS" starttime="20230516 01:03:14.234" endtime="20230516 01:03:14.292"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230516 01:03:12.327" endtime="20230516 01:03:14.292"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230516 01:03:14.294" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230516 01:03:14.294" endtime="20230516 01:03:15.101"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230516 01:03:15.101" endtime="20230516 01:03:15.207"/>
</kw>
<status status="PASS" starttime="20230516 01:03:14.293" endtime="20230516 01:03:15.207"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230516 01:03:15.208" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230516 01:03:15.208" endtime="20230516 01:03:15.273"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230516 01:03:15.278" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230516 01:03:15.273" endtime="20230516 01:03:15.278"/>
</kw>
<status status="PASS" starttime="20230516 01:03:15.208" endtime="20230516 01:03:15.278"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:15.279" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230516 01:03:15.278" endtime="20230516 01:03:15.391"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:15.392" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230516 01:03:15.391" endtime="20230516 01:03:15.476"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:15.477" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230516 01:03:15.477" endtime="20230516 01:03:15.540"/>
</kw>
<status status="PASS" starttime="20230516 01:03:15.278" endtime="20230516 01:03:15.540"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230516 01:03:15.565" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230516 01:03:15.541" endtime="20230516 01:03:15.565"/>
</kw>
<status status="PASS" starttime="20230516 01:03:15.540" endtime="20230516 01:03:15.566"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230516 01:03:15.566" endtime="20230516 01:03:15.624"/>
</kw>
<status status="PASS" starttime="20230516 01:03:15.566" endtime="20230516 01:03:15.624"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230516 01:03:14.293" endtime="20230516 01:03:15.624"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230516 01:03:15.627" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230516 01:03:15.626" endtime="20230516 01:03:16.433"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230516 01:03:16.434" endtime="20230516 01:03:16.537"/>
</kw>
<status status="PASS" starttime="20230516 01:03:15.626" endtime="20230516 01:03:16.538"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230516 01:03:16.539" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230516 01:03:16.538" endtime="20230516 01:03:16.603"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230516 01:03:16.610" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230516 01:03:16.603" endtime="20230516 01:03:16.610"/>
</kw>
<status status="PASS" starttime="20230516 01:03:16.538" endtime="20230516 01:03:16.610"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:16.611" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230516 01:03:16.610" endtime="20230516 01:03:16.719"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:16.720" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230516 01:03:16.719" endtime="20230516 01:03:16.804"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:16.805" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230516 01:03:16.804" endtime="20230516 01:03:16.897"/>
</kw>
<status status="PASS" starttime="20230516 01:03:16.610" endtime="20230516 01:03:16.898"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230516 01:03:16.910" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230516 01:03:16.898" endtime="20230516 01:03:16.910"/>
</kw>
<status status="PASS" starttime="20230516 01:03:16.898" endtime="20230516 01:03:16.910"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230516 01:03:16.924" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230516 01:03:16.911" endtime="20230516 01:03:16.924"/>
</kw>
<status status="PASS" starttime="20230516 01:03:16.910" endtime="20230516 01:03:16.924"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230516 01:03:16.925" endtime="20230516 01:03:16.982"/>
</kw>
<status status="PASS" starttime="20230516 01:03:16.925" endtime="20230516 01:03:16.982"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230516 01:03:15.625" endtime="20230516 01:03:16.982"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230516 01:03:16.985" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230516 01:03:16.984" endtime="20230516 01:03:17.779"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230516 01:03:17.780" endtime="20230516 01:03:17.885"/>
</kw>
<status status="PASS" starttime="20230516 01:03:16.984" endtime="20230516 01:03:17.885"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230516 01:03:17.886" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230516 01:03:17.886" endtime="20230516 01:03:17.943"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230516 01:03:17.947" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230516 01:03:17.943" endtime="20230516 01:03:17.947"/>
</kw>
<status status="PASS" starttime="20230516 01:03:17.885" endtime="20230516 01:03:17.948"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:17.949" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230516 01:03:17.948" endtime="20230516 01:03:18.074"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:18.075" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230516 01:03:18.074" endtime="20230516 01:03:18.162"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230516 01:03:18.163" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230516 01:03:18.163" endtime="20230516 01:03:23.260"/>
</kw>
<status status="PASS" starttime="20230516 01:03:17.948" endtime="20230516 01:03:23.260"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230516 01:03:23.281" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230516 01:03:23.260" endtime="20230516 01:03:23.281"/>
</kw>
<status status="PASS" starttime="20230516 01:03:23.260" endtime="20230516 01:03:23.281"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230516 01:03:23.296" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230516 01:03:23.281" endtime="20230516 01:03:23.296"/>
</kw>
<status status="PASS" starttime="20230516 01:03:23.281" endtime="20230516 01:03:23.296"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230516 01:03:23.297" endtime="20230516 01:03:23.353"/>
</kw>
<status status="PASS" starttime="20230516 01:03:23.296" endtime="20230516 01:03:23.353"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230516 01:03:16.983" endtime="20230516 01:03:23.354"/>
</test>
<status status="PASS" starttime="20230516 01:03:12.321" endtime="20230516 01:03:23.355"/>
</suite>
<status status="PASS" starttime="20230516 01:03:12.319" endtime="20230516 01:03:23.357"/>
</suite>
<status status="PASS" starttime="20230516 01:03:12.318" endtime="20230516 01:03:23.358"/>
</suite>
<status status="PASS" starttime="20230516 01:03:07.304" endtime="20230516 01:03:23.360"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
