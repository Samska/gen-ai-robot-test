<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 17:14:45.893" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 17:14:46.495" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 17:14:46.495" endtime="20230601 17:14:46.496"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.494" endtime="20230601 17:14:46.496"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 17:14:46.631" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 17:14:46.632" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd7eb2bcd-c461-4860-b0fa-654b0adf319d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '13a0625d3760d297e6d4da41e84fe554;o=1', 'Date': 'Thu, 01 Jun 2023 17:14:46 GMT', 'Server': 'Google Frontend', 'Content-Length': '12773'} 
 body={
    "quantidade": 58,
    "usuarios": [
        {
            "nome": "Nicky Crist",
            "email": "nickycrist_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "1vz4kFeZ6nI0oetX"
        },
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Tonya Robinson MD",
            "email": "waltertracy@example.org",
            "password": "BVU6Qads5Idg",
            "administrador": "true",
            "_id": "5VNrB0GpqKXGQxsQ"
        },
        {
            "nome": "Riley Meadows",
            "email": "wardlindsay@example.com",
            "password": "21nem33sV3Wv",
            "administrador": "true",
            "_id": "6ZrbiguZb3H8xbz7"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulaninhodasilva@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "8GV85HRf3fvz3bA6"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9gstdMBMAIERTqbi"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0104@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "CPotN3cJwU2ytcC0"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0318@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "Cjii886shOMAPasE"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010601@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "FmAZHqMdTUASVy5E"
        },
        {
            "nome": "Michael Torres",
            "email": "sharonmoore@example.org",
            "password": "t4wu3WWhnqn7",
            "administrador": "true",
            "_id": "GZNbsNpQeHv7ISFa"
        },
        {
            "nome": "Crystal Parks",
            "email": "oolson@example.com",
            "password": "1wdCfdPmvGs3",
            "administrador": "true",
            "_id": "HkeCIJyLaeKC4tfA"
        },
        {
            "nome": "Mohamed Hyatt",
            "email": "mohamedhyatt_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "HwZXX3KaO6cdeyb1"
        },
        {
            "nome": "Stephen Reynolds",
            "email": "stephenreynolds_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "JAwEFMxMJ1jzZxEs"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0114@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "MZEGk2tTLklplZrU"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0215@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "NfR9Vy9SIekHqpyG"
        },
        {
            "nome": "Ellis Cremin I",
            "email": "elliscremini_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "OagcOXL77fcQcJcl"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "Quinn Orn",
            "email": "quinnorn_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Q4uzpPanjVopwd6z"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010603@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "QGQCKYrf91pHsUXF"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Donald Palmer",
            "email": "kshannon@example.net",
            "password": "MN61aKMyY2Zp",
            "administrador": "true",
            "_id": "WJLRKci7u4ThQVZi"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0106@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "anTapQ16J1tEfpW3"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010602@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "bSaFEd9NE00EPTtu"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010605@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "dMa0rPV71rwl2jNq"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "{{nome}}",
            "email": "Wade@qa.com.br",
            "password": "75sp8gpG4_cwEJL",
            "administrador": "true",
            "_id": "eiYlTXHzMuezZ3JP"
        },
        {
            "nome": "{{nome}}",
            "email": "Laurianne@qa.com.br",
            "password": "BehI7ZauXa4BWJG",
            "administrador": "true",
            "_id": "fxPPNR85wYe2RWUx"
        },
        {
            "nome": "{{nome}}",
            "email": "Hadley@qa.com.br",
            "password": "cTFFNtgOYHKCveO",
            "administrador": "true",
            "_id": "gP4GN1H0ztPPVm4T"
        },
        {
            "nome": "Jason Rodriguez",
            "email": "tracivang@example.com",
            "password": "tFOdqK1b4bdb",
            "administrador": "true",
            "_id": "hOHsnxKpiWHMWThP"
        },
        {
            "nome": "Stephen Price",
            "email": "schaeferdylan@example.com",
            "password": "8O6ksSdDZp24",
            "administrador": "true",
            "_id": "hgBx9ALEJofc7VxJ"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010606@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "i9dg7KZpLWpvAqKM"
        },
        {
            "nome": "Tommye Hahn",
            "email": "tommyehahn_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "j1a7jpqQ5dVsTERw"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "Mercedes Gardner",
            "email": "rkoch@example.com",
            "password": "OyTwLmx2r7d6",
            "administrador": "true",
            "_id": "kBYMC5WIZH4pm0RH"
        },
        {
            "nome": "Marshall Crooks",
            "email": "marshallcrooks_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "lw3tGmCfEciJz3Ma"
        },
        {
            "nome": "Bud Ritchie",
            "email": "budritchie_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "n7tq6nGQuXEx8FxH"
        },
        {
            "nome": "Cheyenne Knox",
            "email": "connierodriguez@example.org",
            "password": "2XpL75uHis1Y",
            "administrador": "true",
            "_id": "nQr8zF2KskcB67UX"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt03... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230601 17:14:46.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.496" endtime="20230601 17:14:46.632"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 17:14:46.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.632" endtime="20230601 17:14:46.633"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.496" endtime="20230601 17:14:46.633"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 17:14:46.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.633" endtime="20230601 17:14:46.635"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 17:14:46.635" endtime="20230601 17:14:46.635"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.633" endtime="20230601 17:14:46.636"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 17:14:46.638" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 17:14:46.636" endtime="20230601 17:14:46.638"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.636" endtime="20230601 17:14:46.638"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 17:14:46.493" endtime="20230601 17:14:46.638"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 17:14:46.640" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 17:14:46.639" endtime="20230601 17:14:46.640"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.639" endtime="20230601 17:14:46.640"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 17:14:46.641" level="INFO">${name} = Susan Fuller</msg>
<status status="PASS" starttime="20230601 17:14:46.641" endtime="20230601 17:14:46.641"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 17:14:46.642" level="INFO">${email} = kristen58@example.net</msg>
<status status="PASS" starttime="20230601 17:14:46.641" endtime="20230601 17:14:46.642"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 17:14:46.642" level="INFO">${password} = 1vEtLb5c8TPT</msg>
<status status="PASS" starttime="20230601 17:14:46.642" endtime="20230601 17:14:46.642"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 17:14:46.643" level="INFO">${name} = Susan Fuller</msg>
<status status="PASS" starttime="20230601 17:14:46.642" endtime="20230601 17:14:46.643"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 17:14:46.643" level="INFO">${email} = kristen58@example.net</msg>
<status status="PASS" starttime="20230601 17:14:46.643" endtime="20230601 17:14:46.643"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 17:14:46.644" level="INFO">${password} = 1vEtLb5c8TPT</msg>
<status status="PASS" starttime="20230601 17:14:46.643" endtime="20230601 17:14:46.644"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.640" endtime="20230601 17:14:46.644"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 17:14:46.645" level="INFO">${payload} = {'nome': 'Susan Fuller', 'email': 'kristen58@example.net', 'password': '1vEtLb5c8TPT', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 17:14:46.644" endtime="20230601 17:14:46.645"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 17:14:46.645" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 17:14:46.645" endtime="20230601 17:14:46.645"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 17:14:46.727" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Susan Fuller", "email": "kristen58@example.net", "password": "1vEtLb5c8TPT", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 17:14:46.727" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c17d8008-7b10-410e-a8d2-6f61015aa573', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9ffb6589f1aae9c2ccdf996a7b81872a', 'Date': 'Thu, 01 Jun 2023 17:14:46 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "9QcuEqZK0NVJk8bU"
} 
 </msg>
<msg timestamp="20230601 17:14:46.727" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.645" endtime="20230601 17:14:46.727"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 17:14:46.729" level="INFO">${user_id} = 9QcuEqZK0NVJk8bU</msg>
<status status="PASS" starttime="20230601 17:14:46.728" endtime="20230601 17:14:46.729"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 17:14:46.729" level="INFO">${USER_ID} = 9QcuEqZK0NVJk8bU</msg>
<status status="PASS" starttime="20230601 17:14:46.729" endtime="20230601 17:14:46.729"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 17:14:46.730" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.730" endtime="20230601 17:14:46.730"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.644" endtime="20230601 17:14:46.730"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 17:14:46.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.731" endtime="20230601 17:14:46.733"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 17:14:46.733" endtime="20230601 17:14:46.734"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.730" endtime="20230601 17:14:46.735"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 17:14:46.737" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 17:14:46.735" endtime="20230601 17:14:46.737"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.735" endtime="20230601 17:14:46.737"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 17:14:46.639" endtime="20230601 17:14:46.737"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 17:14:46.740" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 17:14:46.740" endtime="20230601 17:14:46.741"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.739" endtime="20230601 17:14:46.741"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 17:14:46.826" level="INFO">GET Request : url=https://serverest.dev/usuarios/9QcuEqZK0NVJk8bU 
 path_url=/usuarios/9QcuEqZK0NVJk8bU 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 17:14:46.826" level="INFO">GET Response : url=https://serverest.dev/usuarios/9QcuEqZK0NVJk8bU 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '784b6703-c1ab-4910-a014-9799b3c5f1b4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7d682d57b438c065369985991bde14a0', 'Date': 'Thu, 01 Jun 2023 17:14:46 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Susan Fuller",
    "email": "kristen58@example.net",
    "password": "1vEtLb5c8TPT",
    "administrador": "false",
    "_id": "9QcuEqZK0NVJk8bU"
} 
 </msg>
<msg timestamp="20230601 17:14:46.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.742" endtime="20230601 17:14:46.826"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 17:14:46.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.827" endtime="20230601 17:14:46.827"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.741" endtime="20230601 17:14:46.827"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 17:14:46.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.828" endtime="20230601 17:14:46.829"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 17:14:46.829" endtime="20230601 17:14:46.829"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.827" endtime="20230601 17:14:46.830"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 17:14:46.831" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 17:14:46.830" endtime="20230601 17:14:46.831"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.830" endtime="20230601 17:14:46.831"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 17:14:46.738" endtime="20230601 17:14:46.831"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 17:14:46.833" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 17:14:46.832" endtime="20230601 17:14:46.833"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.832" endtime="20230601 17:14:46.833"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 17:14:46.834" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 17:14:46.833" endtime="20230601 17:14:46.834"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 17:14:46.834" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 17:14:46.834" endtime="20230601 17:14:46.834"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 17:14:46.908" level="INFO">PUT Request : url=https://serverest.dev/usuarios/9QcuEqZK0NVJk8bU 
 path_url=/usuarios/9QcuEqZK0NVJk8bU 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 17:14:46.908" level="INFO">PUT Response : url=https://serverest.dev/usuarios/9QcuEqZK0NVJk8bU 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e9deb257-03f4-4c72-a2b8-2ffe0fcf7236', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1f2efe5c823bb22d180430425ad35a37', 'Date': 'Thu, 01 Jun 2023 17:14:46 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 17:14:46.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.834" endtime="20230601 17:14:46.908"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 17:14:46.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.908" endtime="20230601 17:14:46.909"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.833" endtime="20230601 17:14:46.909"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 17:14:46.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.910" endtime="20230601 17:14:46.911"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 17:14:46.912" endtime="20230601 17:14:46.913"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.910" endtime="20230601 17:14:46.913"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 17:14:46.914" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 17:14:46.914" endtime="20230601 17:14:46.915"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.913" endtime="20230601 17:14:46.915"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 17:14:46.831" endtime="20230601 17:14:46.915"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 17:14:46.917" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 17:14:46.916" endtime="20230601 17:14:46.917"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.916" endtime="20230601 17:14:46.917"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 17:14:46.988" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/9QcuEqZK0NVJk8bU 
 path_url=/usuarios/9QcuEqZK0NVJk8bU 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 17:14:46.988" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/9QcuEqZK0NVJk8bU 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '78470071-ae7d-41f0-a627-14129976c061', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '87eb0510ae666282b2e0a74864378c00', 'Date': 'Thu, 01 Jun 2023 17:14:46 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 17:14:46.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.918" endtime="20230601 17:14:46.988"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 17:14:46.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.988" endtime="20230601 17:14:46.989"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.917" endtime="20230601 17:14:46.989"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 17:14:46.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 17:14:46.989" endtime="20230601 17:14:46.990"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 17:14:46.990" endtime="20230601 17:14:46.991"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.989" endtime="20230601 17:14:46.991"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 17:14:46.992" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 17:14:46.992" endtime="20230601 17:14:46.993"/>
</kw>
<status status="PASS" starttime="20230601 17:14:46.991" endtime="20230601 17:14:46.993"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 17:14:46.916" endtime="20230601 17:14:46.993"/>
</test>
<status status="PASS" starttime="20230601 17:14:45.921" endtime="20230601 17:14:46.994"/>
</suite>
<status status="PASS" starttime="20230601 17:14:45.918" endtime="20230601 17:14:46.995"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 17:14:47.012" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 17:14:47.011" endtime="20230601 17:14:50.313"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 17:14:50.314" endtime="20230601 17:14:50.453"/>
</kw>
<status status="PASS" starttime="20230601 17:14:47.011" endtime="20230601 17:14:50.453"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 17:14:50.461" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 17:14:50.454" endtime="20230601 17:14:50.461"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:50.463" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 17:14:50.462" endtime="20230601 17:14:50.564"/>
</kw>
<status status="PASS" starttime="20230601 17:14:50.453" endtime="20230601 17:14:50.564"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:50.565" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 17:14:50.565" endtime="20230601 17:14:50.648"/>
</kw>
<status status="PASS" starttime="20230601 17:14:50.564" endtime="20230601 17:14:50.648"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 17:14:50.649" endtime="20230601 17:14:50.891"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 17:14:50.914" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 17:14:50.891" endtime="20230601 17:14:50.914"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 17:14:50.934" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 17:14:50.914" endtime="20230601 17:14:50.935"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 17:14:50.950" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 17:14:50.935" endtime="20230601 17:14:50.950"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 17:14:50.965" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 17:14:50.950" endtime="20230601 17:14:50.965"/>
</kw>
<status status="PASS" starttime="20230601 17:14:50.648" endtime="20230601 17:14:50.965"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 17:14:50.966" endtime="20230601 17:14:51.022"/>
</kw>
<status status="PASS" starttime="20230601 17:14:50.965" endtime="20230601 17:14:51.022"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 17:14:47.010" endtime="20230601 17:14:51.022"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 17:14:51.025" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 17:14:51.024" endtime="20230601 17:14:52.374"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 17:14:52.374" endtime="20230601 17:14:52.479"/>
</kw>
<status status="PASS" starttime="20230601 17:14:51.023" endtime="20230601 17:14:52.479"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 17:14:52.486" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 17:14:52.480" endtime="20230601 17:14:52.486"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:52.487" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 17:14:52.486" endtime="20230601 17:14:52.585"/>
</kw>
<status status="PASS" starttime="20230601 17:14:52.479" endtime="20230601 17:14:52.585"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 17:14:52.586" level="INFO">${name} = Edward Jones</msg>
<status status="PASS" starttime="20230601 17:14:52.586" endtime="20230601 17:14:52.587"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 17:14:52.587" level="INFO">${email} = bphillips@example.org</msg>
<status status="PASS" starttime="20230601 17:14:52.587" endtime="20230601 17:14:52.587"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 17:14:52.588" level="INFO">${password} = g04o0dMkekzU</msg>
<status status="PASS" starttime="20230601 17:14:52.587" endtime="20230601 17:14:52.588"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:52.589" level="INFO">Typing text 'Edward Jones' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 17:14:52.588" endtime="20230601 17:14:52.737"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:52.738" level="INFO">Typing text 'bphillips@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 17:14:52.737" endtime="20230601 17:14:52.880"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:52.881" level="INFO">Typing text 'g04o0dMkekzU' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 17:14:52.881" endtime="20230601 17:14:52.997"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:52.998" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 17:14:52.998" endtime="20230601 17:14:53.100"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 17:14:53.100" level="INFO">${name} = Edward Jones</msg>
<status status="PASS" starttime="20230601 17:14:53.100" endtime="20230601 17:14:53.100"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 17:14:53.101" level="INFO">${email} = bphillips@example.org</msg>
<status status="PASS" starttime="20230601 17:14:53.101" endtime="20230601 17:14:53.101"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 17:14:53.101" level="INFO">${password} = g04o0dMkekzU</msg>
<status status="PASS" starttime="20230601 17:14:53.101" endtime="20230601 17:14:53.101"/>
</kw>
<status status="PASS" starttime="20230601 17:14:52.585" endtime="20230601 17:14:53.102"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:53.103" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 17:14:53.102" endtime="20230601 17:14:53.174"/>
</kw>
<status status="PASS" starttime="20230601 17:14:53.102" endtime="20230601 17:14:53.174"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 17:14:53.175" endtime="20230601 17:14:53.413"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 17:14:53.436" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 17:14:53.414" endtime="20230601 17:14:53.436"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 17:14:53.455" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 17:14:53.436" endtime="20230601 17:14:53.455"/>
</kw>
<status status="PASS" starttime="20230601 17:14:53.174" endtime="20230601 17:14:53.455"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 17:14:53.456" endtime="20230601 17:14:54.511"/>
</kw>
<status status="PASS" starttime="20230601 17:14:53.455" endtime="20230601 17:14:54.512"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 17:14:51.023" endtime="20230601 17:14:54.512"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 17:14:54.514" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 17:14:54.513" endtime="20230601 17:14:55.892"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 17:14:55.893" endtime="20230601 17:14:55.999"/>
</kw>
<status status="PASS" starttime="20230601 17:14:54.513" endtime="20230601 17:14:55.999"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 17:14:56.006" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 17:14:56.000" endtime="20230601 17:14:56.006"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:56.007" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 17:14:56.006" endtime="20230601 17:14:56.099"/>
</kw>
<status status="PASS" starttime="20230601 17:14:55.999" endtime="20230601 17:14:56.099"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:56.101" level="INFO">Typing text 'Edward Jones' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 17:14:56.100" endtime="20230601 17:14:56.241"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:56.242" level="INFO">Typing text 'bphillips@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 17:14:56.241" endtime="20230601 17:14:56.370"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:56.371" level="INFO">Typing text 'g04o0dMkekzU' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 17:14:56.370" endtime="20230601 17:14:56.500"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:56.501" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 17:14:56.501" endtime="20230601 17:14:56.589"/>
</kw>
<status status="PASS" starttime="20230601 17:14:56.099" endtime="20230601 17:14:56.589"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 17:14:56.591" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 17:14:56.590" endtime="20230601 17:14:56.662"/>
</kw>
<status status="PASS" starttime="20230601 17:14:56.590" endtime="20230601 17:14:56.662"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 17:14:56.663" endtime="20230601 17:14:56.902"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 17:14:56.923" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 17:14:56.902" endtime="20230601 17:14:56.923"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 17:14:56.940" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 17:14:56.924" endtime="20230601 17:14:56.940"/>
</kw>
<status status="PASS" starttime="20230601 17:14:56.662" endtime="20230601 17:14:56.940"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 17:14:56.941" endtime="20230601 17:14:56.997"/>
</kw>
<status status="PASS" starttime="20230601 17:14:56.941" endtime="20230601 17:14:56.997"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 17:14:54.512" endtime="20230601 17:14:56.998"/>
</test>
<status status="PASS" starttime="20230601 17:14:47.001" endtime="20230601 17:14:56.999"/>
</suite>
<status status="PASS" starttime="20230601 17:14:46.996" endtime="20230601 17:14:57.001"/>
</suite>
<status status="PASS" starttime="20230601 17:14:45.894" endtime="20230601 17:14:57.002"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
