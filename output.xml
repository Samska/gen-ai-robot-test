<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230426 01:02:00.343" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 01:02:00.821" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 01:02:00.821" endtime="20230426 01:02:00.822"/>
</kw>
<status status="PASS" starttime="20230426 01:02:00.821" endtime="20230426 01:02:00.822"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230426 01:02:00.928" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230426 01:02:00.928" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f98de4c7-035e-497e-863b-4c23b184015f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'df59b9a75b36bd551dee20921986f4ef;o=1', 'Date': 'Wed, 26 Apr 2023 01:02:00 GMT', 'Server': 'Google Frontend', 'Content-Length': '3702'} 
 body={
    "quantidade": 17,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Mario_Beier@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1M12yCUTv0mGxtBj"
        },
        {
            "nome": "Carlos Fernandes",
            "email": "carlos@qa.com.br",
            "password": "1234",
            "administrador": "false",
            "_id": "1SLdaHZxFZYl8bYw"
        },
        {
            "nome": "Valentina.Predovic",
            "email": "Noble51@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "2YzUrv6eRqkcsxf6"
        },
        {
            "nome": "Fabianofda",
            "email": "margaretvalentine@example.org",
            "password": "pwd123",
            "administrador": "true",
            "_id": "47Lq1JLgj6OB4Gp0"
        },
        {
            "nome": "Fulano da SilvaAAAAAAA",
            "email": "Roy.Hessel@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "7GwzZtVS3EAGzTSu"
        },
        {
            "nome": "Samuel Fernandes",
            "email": "samuel@qa.com.br",
            "password": "1234",
            "administrador": "false",
            "_id": "7MQTlMXyK1Exs3fx"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "7tqy8tFPtyKGxxff"
        },
        {
            "nome": "Clint Barton",
            "email": "clint@barton.com.br",
            "password": "pwd123",
            "administrador": "true",
            "_id": "BHOrQynNo5lzE0ba"
        },
        {
            "nome": "Fulano da SilvaAAAAAAA",
            "email": "Rahul_Harvey@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "LAwHVJWZRB7Vug9a"
        },
        {
            "nome": "Trent11",
            "email": "Cordie.Spinka87@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "QCjFejPKjYAIN0SF"
        },
        {
            "nome": "Fulano da SilvaAAAAAAA",
            "email": "Zoe.Kilback@yahoo.com",
            "password": "teste",
            "administrador": "true",
            "_id": "UYSy9wO2rhU5UGhF"
        },
        {
            "nome": "Marlen55",
            "email": "Ola56@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "YqVdgvLLOHNVIxco"
        },
        {
            "nome": "Fulano da SilvaAAAAAAA",
            "email": "Tyrique.Padberg39@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "clXFaBh631tqfaPq"
        },
        {
            "nome": "Fulano da SilvaAAAAAAA",
            "email": "Destinee.Bashirian@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "i1HcHrQKO0oknvu0"
        },
        {
            "nome": "Gabriel Fernandes",
            "email": "gabriel@qa.com.br",
            "password": "1234",
            "administrador": "false",
            "_id": "kYeBP9I6hM0unIdv"
        },
        {
            "nome": "Tais Amanda",
            "email": "tais@qa.com.br",
            "password": "1234",
            "administrador": "false",
            "_id": "pO9EvnEAZq473wCR"
        }
    ]
} 
 </msg>
<msg timestamp="20230426 01:02:00.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:00.822" endtime="20230426 01:02:00.928"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230426 01:02:00.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:00.928" endtime="20230426 01:02:00.929"/>
</kw>
<status status="PASS" starttime="20230426 01:02:00.822" endtime="20230426 01:02:00.929"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230426 01:02:00.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 01:02:00.929" endtime="20230426 01:02:00.930"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230426 01:02:00.930" endtime="20230426 01:02:00.931"/>
</kw>
<status status="PASS" starttime="20230426 01:02:00.929" endtime="20230426 01:02:00.931"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230426 01:02:00.932" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230426 01:02:00.931" endtime="20230426 01:02:00.932"/>
</kw>
<status status="PASS" starttime="20230426 01:02:00.931" endtime="20230426 01:02:00.932"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230426 01:02:00.820" endtime="20230426 01:02:00.932"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 01:02:00.934" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 01:02:00.934" endtime="20230426 01:02:00.934"/>
</kw>
<status status="PASS" starttime="20230426 01:02:00.933" endtime="20230426 01:02:00.934"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230426 01:02:00.935" level="INFO">${name} = Richard Foley</msg>
<status status="PASS" starttime="20230426 01:02:00.935" endtime="20230426 01:02:00.935"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230426 01:02:00.936" level="INFO">${email} = kaylawolf@example.net</msg>
<status status="PASS" starttime="20230426 01:02:00.935" endtime="20230426 01:02:00.936"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230426 01:02:00.936" level="INFO">${password} = J40)KUvA#R</msg>
<status status="PASS" starttime="20230426 01:02:00.936" endtime="20230426 01:02:00.936"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 01:02:00.937" level="INFO">${name} = Richard Foley</msg>
<status status="PASS" starttime="20230426 01:02:00.936" endtime="20230426 01:02:00.937"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 01:02:00.937" level="INFO">${email} = kaylawolf@example.net</msg>
<status status="PASS" starttime="20230426 01:02:00.937" endtime="20230426 01:02:00.937"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 01:02:00.937" level="INFO">${password} = J40)KUvA#R</msg>
<status status="PASS" starttime="20230426 01:02:00.937" endtime="20230426 01:02:00.938"/>
</kw>
<status status="PASS" starttime="20230426 01:02:00.934" endtime="20230426 01:02:00.938"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 01:02:00.938" level="INFO">${payload} = {'nome': 'Richard Foley', 'email': 'kaylawolf@example.net', 'password': 'J40)KUvA#R', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230426 01:02:00.938" endtime="20230426 01:02:00.938"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 01:02:00.939" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 01:02:00.939" endtime="20230426 01:02:00.939"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230426 01:02:01.020" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Richard Foley", "email": "kaylawolf@example.net", "password": "J40)KUvA#R", "administrador": "false"}' 
 </msg>
<msg timestamp="20230426 01:02:01.020" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6e4081d7-6d8e-4f6c-a13b-ae1b6baa682f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3f44b8b34aafeb34055699dc1962269a', 'Date': 'Wed, 26 Apr 2023 01:02:01 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "SxCeJHqteQ2beui8"
} 
 </msg>
<msg timestamp="20230426 01:02:01.020" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:00.939" endtime="20230426 01:02:01.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230426 01:02:01.021" level="INFO">${user_id} = SxCeJHqteQ2beui8</msg>
<status status="PASS" starttime="20230426 01:02:01.020" endtime="20230426 01:02:01.021"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230426 01:02:01.021" level="INFO">${USER_ID} = SxCeJHqteQ2beui8</msg>
<status status="PASS" starttime="20230426 01:02:01.021" endtime="20230426 01:02:01.021"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230426 01:02:01.022" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.021" endtime="20230426 01:02:01.022"/>
</kw>
<status status="PASS" starttime="20230426 01:02:00.938" endtime="20230426 01:02:01.022"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230426 01:02:01.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.022" endtime="20230426 01:02:01.023"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230426 01:02:01.023" endtime="20230426 01:02:01.024"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.022" endtime="20230426 01:02:01.024"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230426 01:02:01.025" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230426 01:02:01.024" endtime="20230426 01:02:01.025"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.024" endtime="20230426 01:02:01.025"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230426 01:02:00.933" endtime="20230426 01:02:01.025"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 01:02:01.027" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 01:02:01.026" endtime="20230426 01:02:01.027"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.026" endtime="20230426 01:02:01.027"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230426 01:02:01.093" level="INFO">GET Request : url=https://serverest.dev/usuarios/SxCeJHqteQ2beui8 
 path_url=/usuarios/SxCeJHqteQ2beui8 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230426 01:02:01.093" level="INFO">GET Response : url=https://serverest.dev/usuarios/SxCeJHqteQ2beui8 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b0ab6fc-d59c-4faa-b158-d36e458947fd', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0834210eaa1ea4ecd0c5336d26e2652e', 'Date': 'Wed, 26 Apr 2023 01:02:01 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Richard Foley",
    "email": "kaylawolf@example.net",
    "password": "J40)KUvA#R",
    "administrador": "false",
    "_id": "SxCeJHqteQ2beui8"
} 
 </msg>
<msg timestamp="20230426 01:02:01.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.028" endtime="20230426 01:02:01.093"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230426 01:02:01.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.093" endtime="20230426 01:02:01.094"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.027" endtime="20230426 01:02:01.094"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230426 01:02:01.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.095" endtime="20230426 01:02:01.095"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230426 01:02:01.096" endtime="20230426 01:02:01.096"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.094" endtime="20230426 01:02:01.096"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230426 01:02:01.097" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230426 01:02:01.097" endtime="20230426 01:02:01.097"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.096" endtime="20230426 01:02:01.098"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230426 01:02:01.026" endtime="20230426 01:02:01.098"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 01:02:01.099" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 01:02:01.099" endtime="20230426 01:02:01.099"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.098" endtime="20230426 01:02:01.099"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 01:02:01.100" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230426 01:02:01.100" endtime="20230426 01:02:01.100"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 01:02:01.101" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 01:02:01.100" endtime="20230426 01:02:01.101"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230426 01:02:01.178" level="INFO">PUT Request : url=https://serverest.dev/usuarios/SxCeJHqteQ2beui8 
 path_url=/usuarios/SxCeJHqteQ2beui8 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230426 01:02:01.178" level="INFO">PUT Response : url=https://serverest.dev/usuarios/SxCeJHqteQ2beui8 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ed7175bd-5321-473f-aa62-96ebdafa3dae', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b4fc800d47679e5b676f01b943c9e633', 'Date': 'Wed, 26 Apr 2023 01:02:01 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230426 01:02:01.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.101" endtime="20230426 01:02:01.178"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230426 01:02:01.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.178" endtime="20230426 01:02:01.179"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.100" endtime="20230426 01:02:01.179"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230426 01:02:01.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.179" endtime="20230426 01:02:01.180"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230426 01:02:01.180" endtime="20230426 01:02:01.181"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.179" endtime="20230426 01:02:01.181"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230426 01:02:01.182" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230426 01:02:01.181" endtime="20230426 01:02:01.182"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.181" endtime="20230426 01:02:01.182"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230426 01:02:01.098" endtime="20230426 01:02:01.182"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 01:02:01.183" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 01:02:01.183" endtime="20230426 01:02:01.183"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.183" endtime="20230426 01:02:01.184"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230426 01:02:01.271" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/SxCeJHqteQ2beui8 
 path_url=/usuarios/SxCeJHqteQ2beui8 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230426 01:02:01.272" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/SxCeJHqteQ2beui8 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f119b2d8-1ae2-4712-a078-1e0207a61748', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5942db16a1226fa2e4bfe422d993408d', 'Date': 'Wed, 26 Apr 2023 01:02:01 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230426 01:02:01.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.184" endtime="20230426 01:02:01.272"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230426 01:02:01.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.272" endtime="20230426 01:02:01.272"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.184" endtime="20230426 01:02:01.272"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230426 01:02:01.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 01:02:01.273" endtime="20230426 01:02:01.274"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230426 01:02:01.274" endtime="20230426 01:02:01.274"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.272" endtime="20230426 01:02:01.274"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230426 01:02:01.275" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230426 01:02:01.275" endtime="20230426 01:02:01.275"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.275" endtime="20230426 01:02:01.275"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230426 01:02:01.182" endtime="20230426 01:02:01.276"/>
</test>
<status status="PASS" starttime="20230426 01:02:00.366" endtime="20230426 01:02:01.276"/>
</suite>
<status status="PASS" starttime="20230426 01:02:00.364" endtime="20230426 01:02:01.277"/>
</suite>
<status status="PASS" starttime="20230426 01:02:00.362" endtime="20230426 01:02:01.278"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230426 01:02:01.289" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230426 01:02:01.289" endtime="20230426 01:02:02.673"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230426 01:02:02.674" endtime="20230426 01:02:02.780"/>
</kw>
<status status="PASS" starttime="20230426 01:02:01.288" endtime="20230426 01:02:02.781"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230426 01:02:02.782" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230426 01:02:02.781" endtime="20230426 01:02:02.854"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230426 01:02:02.859" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230426 01:02:02.855" endtime="20230426 01:02:02.859"/>
</kw>
<status status="PASS" starttime="20230426 01:02:02.781" endtime="20230426 01:02:02.859"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:02.862" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230426 01:02:02.860" endtime="20230426 01:02:02.956"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:02.957" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230426 01:02:02.956" endtime="20230426 01:02:03.043"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:03.044" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230426 01:02:03.044" endtime="20230426 01:02:03.142"/>
</kw>
<status status="PASS" starttime="20230426 01:02:02.859" endtime="20230426 01:02:03.142"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230426 01:02:03.152" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230426 01:02:03.143" endtime="20230426 01:02:03.153"/>
</kw>
<status status="PASS" starttime="20230426 01:02:03.142" endtime="20230426 01:02:03.154"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230426 01:02:03.167" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230426 01:02:03.154" endtime="20230426 01:02:03.167"/>
</kw>
<status status="PASS" starttime="20230426 01:02:03.154" endtime="20230426 01:02:03.168"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230426 01:02:03.168" endtime="20230426 01:02:03.224"/>
</kw>
<status status="PASS" starttime="20230426 01:02:03.168" endtime="20230426 01:02:03.225"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230426 01:02:01.288" endtime="20230426 01:02:03.225"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230426 01:02:03.227" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230426 01:02:03.226" endtime="20230426 01:02:04.031"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230426 01:02:04.031" endtime="20230426 01:02:04.139"/>
</kw>
<status status="PASS" starttime="20230426 01:02:03.226" endtime="20230426 01:02:04.139"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230426 01:02:04.140" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230426 01:02:04.140" endtime="20230426 01:02:04.217"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230426 01:02:04.221" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230426 01:02:04.217" endtime="20230426 01:02:04.221"/>
</kw>
<status status="PASS" starttime="20230426 01:02:04.140" endtime="20230426 01:02:04.221"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:04.222" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230426 01:02:04.221" endtime="20230426 01:02:04.310"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:04.311" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230426 01:02:04.310" endtime="20230426 01:02:04.392"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:04.393" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230426 01:02:04.393" endtime="20230426 01:02:04.445"/>
</kw>
<status status="PASS" starttime="20230426 01:02:04.221" endtime="20230426 01:02:04.445"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230426 01:02:04.469" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230426 01:02:04.446" endtime="20230426 01:02:04.469"/>
</kw>
<status status="PASS" starttime="20230426 01:02:04.445" endtime="20230426 01:02:04.469"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230426 01:02:04.470" endtime="20230426 01:02:04.527"/>
</kw>
<status status="PASS" starttime="20230426 01:02:04.469" endtime="20230426 01:02:04.528"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230426 01:02:03.225" endtime="20230426 01:02:04.528"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230426 01:02:04.530" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230426 01:02:04.529" endtime="20230426 01:02:05.334"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230426 01:02:05.335" endtime="20230426 01:02:05.440"/>
</kw>
<status status="PASS" starttime="20230426 01:02:04.529" endtime="20230426 01:02:05.440"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230426 01:02:05.441" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230426 01:02:05.441" endtime="20230426 01:02:05.495"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230426 01:02:05.499" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230426 01:02:05.495" endtime="20230426 01:02:05.499"/>
</kw>
<status status="PASS" starttime="20230426 01:02:05.440" endtime="20230426 01:02:05.499"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:05.500" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230426 01:02:05.500" endtime="20230426 01:02:05.584"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:05.584" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230426 01:02:05.584" endtime="20230426 01:02:05.666"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:05.667" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230426 01:02:05.666" endtime="20230426 01:02:05.753"/>
</kw>
<status status="PASS" starttime="20230426 01:02:05.499" endtime="20230426 01:02:05.753"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230426 01:02:05.764" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230426 01:02:05.753" endtime="20230426 01:02:05.764"/>
</kw>
<status status="PASS" starttime="20230426 01:02:05.753" endtime="20230426 01:02:05.765"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230426 01:02:05.779" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230426 01:02:05.765" endtime="20230426 01:02:05.779"/>
</kw>
<status status="PASS" starttime="20230426 01:02:05.765" endtime="20230426 01:02:05.779"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230426 01:02:05.780" endtime="20230426 01:02:05.837"/>
</kw>
<status status="PASS" starttime="20230426 01:02:05.779" endtime="20230426 01:02:05.837"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230426 01:02:04.529" endtime="20230426 01:02:05.837"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230426 01:02:05.839" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230426 01:02:05.838" endtime="20230426 01:02:06.649"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230426 01:02:06.650" endtime="20230426 01:02:06.757"/>
</kw>
<status status="PASS" starttime="20230426 01:02:05.838" endtime="20230426 01:02:06.757"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230426 01:02:06.758" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230426 01:02:06.758" endtime="20230426 01:02:06.810"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230426 01:02:06.814" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230426 01:02:06.810" endtime="20230426 01:02:06.815"/>
</kw>
<status status="PASS" starttime="20230426 01:02:06.757" endtime="20230426 01:02:06.815"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:06.816" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230426 01:02:06.815" endtime="20230426 01:02:06.917"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:06.918" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230426 01:02:06.917" endtime="20230426 01:02:07.003"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230426 01:02:07.004" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230426 01:02:07.003" endtime="20230426 01:02:12.095"/>
</kw>
<status status="PASS" starttime="20230426 01:02:06.815" endtime="20230426 01:02:12.095"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230426 01:02:12.108" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230426 01:02:12.096" endtime="20230426 01:02:12.108"/>
</kw>
<status status="PASS" starttime="20230426 01:02:12.096" endtime="20230426 01:02:12.108"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230426 01:02:12.124" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230426 01:02:12.109" endtime="20230426 01:02:12.124"/>
</kw>
<status status="PASS" starttime="20230426 01:02:12.109" endtime="20230426 01:02:12.124"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230426 01:02:12.125" endtime="20230426 01:02:12.182"/>
</kw>
<status status="PASS" starttime="20230426 01:02:12.125" endtime="20230426 01:02:12.182"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230426 01:02:05.837" endtime="20230426 01:02:12.182"/>
</test>
<status status="PASS" starttime="20230426 01:02:01.282" endtime="20230426 01:02:12.184"/>
</suite>
<status status="PASS" starttime="20230426 01:02:01.281" endtime="20230426 01:02:12.186"/>
</suite>
<status status="PASS" starttime="20230426 01:02:01.279" endtime="20230426 01:02:12.189"/>
</suite>
<status status="PASS" starttime="20230426 01:02:00.344" endtime="20230426 01:02:12.191"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
