<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 21:07:21.737" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:07:22.215" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:07:22.215" endtime="20230526 21:07:22.216"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.214" endtime="20230526 21:07:22.216"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:07:22.374" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:07:22.374" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '30c46a41-2d51-40b3-bbd2-bf634a5c24c8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6f7c9bc786734ad07f588332430f2e0a;o=1', 'Date': 'Fri, 26 May 2023 21:07:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '2866'} 
 body={
    "quantidade": 13,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Nichole White",
            "email": "garciastephen@example.com",
            "password": "mSEXXw1MQ1q2",
            "administrador": "true",
            "_id": "8DygXGzSxgFKifQv"
        },
        {
            "nome": "Carol Smith",
            "email": "yguzman@example.com",
            "password": "Z8OOhg3tOyqQ",
            "administrador": "true",
            "_id": "HXPaxOE28NFgzgJh"
        },
        {
            "nome": "Dillon Gibson",
            "email": "jeffreymitchell@example.com",
            "password": "P7jYMEnhP5om",
            "administrador": "true",
            "_id": "HzusPP4B294O7zVO"
        },
        {
            "nome": "Lawrence Hanson",
            "email": "michelle11@example.org",
            "password": "7feQ4sbxy6Ie",
            "administrador": "true",
            "_id": "MgBVcaaQYuq5SEYk"
        },
        {
            "nome": "sadas",
            "email": "mill2@mil.com",
            "password": "123",
            "administrador": "true",
            "_id": "OvyYUousDsG4JYeX"
        },
        {
            "nome": "Mr. Matthew Collins",
            "email": "wanglauren@example.org",
            "password": "xIuLyrW2E8fs",
            "administrador": "true",
            "_id": "Pd9cZNjcG1eWfUMQ"
        },
        {
            "nome": "Cody Valentine",
            "email": "todd72@example.org",
            "password": "do58Eoup2qUy",
            "administrador": "true",
            "_id": "T2V5t8ZpKz0PTqGQ"
        },
        {
            "nome": "Brendan George",
            "email": "leslie86@example.com",
            "password": "1GiqcZl305aG",
            "administrador": "true",
            "_id": "TMKqdrqnRTNFOyht"
        },
        {
            "nome": "Hayley Byrd",
            "email": "kimberlymartin@example.com",
            "password": "q78F3X1rG3oF",
            "administrador": "true",
            "_id": "bLBFKECXSYeoPEjz"
        },
        {
            "nome": "Sheila Esparza",
            "email": "ycarter@example.org",
            "password": "gX9w2NckaW0K",
            "administrador": "true",
            "_id": "jSiHSVUpLmNpts8M"
        },
        {
            "nome": "Juan Reese",
            "email": "stephen03@example.com",
            "password": "STxJqTlLO5Ok",
            "administrador": "true",
            "_id": "v1MH0Jry6qPgJ0Gd"
        },
        {
            "nome": "Kyle Cooper",
            "email": "yflores@example.org",
            "password": "k7JpINT2Qek2",
            "administrador": "true",
            "_id": "vbb2T2tN8byhWgGI"
        }
    ]
} 
 </msg>
<msg timestamp="20230526 21:07:22.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.216" endtime="20230526 21:07:22.374"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:07:22.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.375" endtime="20230526 21:07:22.375"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.216" endtime="20230526 21:07:22.375"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:07:22.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.375" endtime="20230526 21:07:22.376"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:07:22.376" endtime="20230526 21:07:22.377"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.375" endtime="20230526 21:07:22.377"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:07:22.378" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:07:22.377" endtime="20230526 21:07:22.378"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.377" endtime="20230526 21:07:22.378"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:07:22.214" endtime="20230526 21:07:22.378"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:07:22.380" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:07:22.379" endtime="20230526 21:07:22.380"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.379" endtime="20230526 21:07:22.380"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:07:22.381" level="INFO">${name} = John Schneider</msg>
<status status="PASS" starttime="20230526 21:07:22.380" endtime="20230526 21:07:22.381"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:07:22.381" level="INFO">${email} = cjackson@example.org</msg>
<status status="PASS" starttime="20230526 21:07:22.381" endtime="20230526 21:07:22.381"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:07:22.382" level="INFO">${password} = 6bJYqAcEKp5V</msg>
<status status="PASS" starttime="20230526 21:07:22.381" endtime="20230526 21:07:22.382"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:07:22.382" level="INFO">${name} = John Schneider</msg>
<status status="PASS" starttime="20230526 21:07:22.382" endtime="20230526 21:07:22.382"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:07:22.383" level="INFO">${email} = cjackson@example.org</msg>
<status status="PASS" starttime="20230526 21:07:22.382" endtime="20230526 21:07:22.383"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:07:22.383" level="INFO">${password} = 6bJYqAcEKp5V</msg>
<status status="PASS" starttime="20230526 21:07:22.383" endtime="20230526 21:07:22.383"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.380" endtime="20230526 21:07:22.383"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:07:22.384" level="INFO">${payload} = {'nome': 'John Schneider', 'email': 'cjackson@example.org', 'password': '6bJYqAcEKp5V', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:07:22.383" endtime="20230526 21:07:22.384"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:07:22.384" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:07:22.384" endtime="20230526 21:07:22.384"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:07:22.464" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "John Schneider", "email": "cjackson@example.org", "password": "6bJYqAcEKp5V", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:07:22.465" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4bc7aa95-3e2c-48f0-b0a0-9e91082f4941', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '136c13626deffa2cd11ffa5d4ff93335', 'Date': 'Fri, 26 May 2023 21:07:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "DrVSnSA6at3DwZ62"
} 
 </msg>
<msg timestamp="20230526 21:07:22.465" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.384" endtime="20230526 21:07:22.465"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 21:07:22.466" level="INFO">${user_id} = DrVSnSA6at3DwZ62</msg>
<status status="PASS" starttime="20230526 21:07:22.465" endtime="20230526 21:07:22.466"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 21:07:22.466" level="INFO">${USER_ID} = DrVSnSA6at3DwZ62</msg>
<status status="PASS" starttime="20230526 21:07:22.466" endtime="20230526 21:07:22.466"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:07:22.467" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.466" endtime="20230526 21:07:22.467"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.383" endtime="20230526 21:07:22.467"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:07:22.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.467" endtime="20230526 21:07:22.468"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:07:22.468" endtime="20230526 21:07:22.468"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.467" endtime="20230526 21:07:22.469"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:07:22.469" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:07:22.469" endtime="20230526 21:07:22.470"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.469" endtime="20230526 21:07:22.470"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:07:22.379" endtime="20230526 21:07:22.470"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:07:22.471" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:07:22.471" endtime="20230526 21:07:22.472"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.471" endtime="20230526 21:07:22.472"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:07:22.557" level="INFO">GET Request : url=https://serverest.dev/usuarios/DrVSnSA6at3DwZ62 
 path_url=/usuarios/DrVSnSA6at3DwZ62 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:07:22.557" level="INFO">GET Response : url=https://serverest.dev/usuarios/DrVSnSA6at3DwZ62 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5b2b540d-2219-4178-b3fb-a1fe3403329d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e53e9a4450eeffaafa9980ac714e3f8f', 'Date': 'Fri, 26 May 2023 21:07:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "John Schneider",
    "email": "cjackson@example.org",
    "password": "6bJYqAcEKp5V",
    "administrador": "false",
    "_id": "DrVSnSA6at3DwZ62"
} 
 </msg>
<msg timestamp="20230526 21:07:22.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.472" endtime="20230526 21:07:22.557"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:07:22.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.557" endtime="20230526 21:07:22.557"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.472" endtime="20230526 21:07:22.558"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:07:22.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.558" endtime="20230526 21:07:22.559"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:07:22.559" endtime="20230526 21:07:22.559"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.558" endtime="20230526 21:07:22.559"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:07:22.560" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 21:07:22.560" endtime="20230526 21:07:22.560"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.560" endtime="20230526 21:07:22.561"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:07:22.470" endtime="20230526 21:07:22.561"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:07:22.562" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:07:22.562" endtime="20230526 21:07:22.562"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.561" endtime="20230526 21:07:22.562"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:07:22.563" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:07:22.563" endtime="20230526 21:07:22.563"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:07:22.563" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:07:22.563" endtime="20230526 21:07:22.563"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:07:22.643" level="INFO">PUT Request : url=https://serverest.dev/usuarios/DrVSnSA6at3DwZ62 
 path_url=/usuarios/DrVSnSA6at3DwZ62 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:07:22.643" level="INFO">PUT Response : url=https://serverest.dev/usuarios/DrVSnSA6at3DwZ62 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6a876d48-49e8-4391-9b43-04208c5c25cd', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0ce5989d668e36c427555a27b4e50156', 'Date': 'Fri, 26 May 2023 21:07:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:07:22.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.563" endtime="20230526 21:07:22.643"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:07:22.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.643" endtime="20230526 21:07:22.644"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.562" endtime="20230526 21:07:22.644"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:07:22.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.644" endtime="20230526 21:07:22.645"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:07:22.645" endtime="20230526 21:07:22.646"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.644" endtime="20230526 21:07:22.646"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:07:22.647" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:07:22.646" endtime="20230526 21:07:22.648"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.646" endtime="20230526 21:07:22.648"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:07:22.561" endtime="20230526 21:07:22.648"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:07:22.650" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:07:22.650" endtime="20230526 21:07:22.651"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.650" endtime="20230526 21:07:22.651"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:07:22.732" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/DrVSnSA6at3DwZ62 
 path_url=/usuarios/DrVSnSA6at3DwZ62 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:07:22.733" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/DrVSnSA6at3DwZ62 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '49d7df8f-49c6-4607-9087-e84cc5ee7d8a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8d646ccb3bf505b43270bbeeb49f6e61', 'Date': 'Fri, 26 May 2023 21:07:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:07:22.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.651" endtime="20230526 21:07:22.733"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:07:22.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.733" endtime="20230526 21:07:22.733"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.651" endtime="20230526 21:07:22.733"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:07:22.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:07:22.734" endtime="20230526 21:07:22.735"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:07:22.735" endtime="20230526 21:07:22.735"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.733" endtime="20230526 21:07:22.735"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:07:22.736" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:07:22.736" endtime="20230526 21:07:22.736"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.735" endtime="20230526 21:07:22.736"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:07:22.649" endtime="20230526 21:07:22.737"/>
</test>
<status status="PASS" starttime="20230526 21:07:21.759" endtime="20230526 21:07:22.737"/>
</suite>
<status status="PASS" starttime="20230526 21:07:21.757" endtime="20230526 21:07:22.739"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:07:22.750" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:07:22.749" endtime="20230526 21:07:24.601"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:07:24.602" endtime="20230526 21:07:24.706"/>
</kw>
<status status="PASS" starttime="20230526 21:07:22.749" endtime="20230526 21:07:24.707"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:07:24.712" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:07:24.707" endtime="20230526 21:07:24.712"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:24.713" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:07:24.712" endtime="20230526 21:07:24.776"/>
</kw>
<status status="PASS" starttime="20230526 21:07:24.707" endtime="20230526 21:07:24.776"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:24.777" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:07:24.777" endtime="20230526 21:07:24.843"/>
</kw>
<status status="PASS" starttime="20230526 21:07:24.777" endtime="20230526 21:07:24.843"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:07:24.843" endtime="20230526 21:07:25.079"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:07:25.098" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:07:25.079" endtime="20230526 21:07:25.098"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:07:25.114" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:07:25.099" endtime="20230526 21:07:25.114"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:07:25.127" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:07:25.114" endtime="20230526 21:07:25.127"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:07:25.140" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:07:25.127" endtime="20230526 21:07:25.141"/>
</kw>
<status status="PASS" starttime="20230526 21:07:24.843" endtime="20230526 21:07:25.141"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:07:25.141" endtime="20230526 21:07:25.197"/>
</kw>
<status status="PASS" starttime="20230526 21:07:25.141" endtime="20230526 21:07:25.197"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:07:22.749" endtime="20230526 21:07:25.197"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:07:25.199" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:07:25.198" endtime="20230526 21:07:26.582"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:07:26.583" endtime="20230526 21:07:26.686"/>
</kw>
<status status="PASS" starttime="20230526 21:07:25.198" endtime="20230526 21:07:26.686"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:07:26.692" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:07:26.687" endtime="20230526 21:07:26.692"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:26.693" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:07:26.692" endtime="20230526 21:07:26.748"/>
</kw>
<status status="PASS" starttime="20230526 21:07:26.687" endtime="20230526 21:07:26.748"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:07:26.749" level="INFO">${name} = Lisa Greene</msg>
<status status="PASS" starttime="20230526 21:07:26.749" endtime="20230526 21:07:26.749"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:07:26.750" level="INFO">${email} = john32@example.net</msg>
<status status="PASS" starttime="20230526 21:07:26.750" endtime="20230526 21:07:26.750"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:07:26.751" level="INFO">${password} = JXimtd1w7Jdd</msg>
<status status="PASS" starttime="20230526 21:07:26.750" endtime="20230526 21:07:26.751"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:26.751" level="INFO">Typing text 'Lisa Greene' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:07:26.751" endtime="20230526 21:07:26.871"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:26.872" level="INFO">Typing text 'john32@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:07:26.871" endtime="20230526 21:07:26.977"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:26.977" level="INFO">Typing text 'JXimtd1w7Jdd' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:07:26.977" endtime="20230526 21:07:27.069"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:27.070" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:07:27.069" endtime="20230526 21:07:27.147"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:07:27.148" level="INFO">${name} = Lisa Greene</msg>
<status status="PASS" starttime="20230526 21:07:27.148" endtime="20230526 21:07:27.148"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:07:27.148" level="INFO">${email} = john32@example.net</msg>
<status status="PASS" starttime="20230526 21:07:27.148" endtime="20230526 21:07:27.148"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:07:27.149" level="INFO">${password} = JXimtd1w7Jdd</msg>
<status status="PASS" starttime="20230526 21:07:27.148" endtime="20230526 21:07:27.149"/>
</kw>
<status status="PASS" starttime="20230526 21:07:26.748" endtime="20230526 21:07:27.149"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:27.150" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:07:27.149" endtime="20230526 21:07:27.211"/>
</kw>
<status status="PASS" starttime="20230526 21:07:27.149" endtime="20230526 21:07:27.211"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:07:27.212" endtime="20230526 21:07:27.445"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:07:27.463" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:07:27.445" endtime="20230526 21:07:27.464"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:07:27.477" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 21:07:27.464" endtime="20230526 21:07:27.477"/>
</kw>
<status status="PASS" starttime="20230526 21:07:27.211" endtime="20230526 21:07:27.477"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:07:27.478" endtime="20230526 21:07:27.532"/>
</kw>
<status status="PASS" starttime="20230526 21:07:27.477" endtime="20230526 21:07:27.532"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:07:25.197" endtime="20230526 21:07:27.532"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:07:27.534" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:07:27.534" endtime="20230526 21:07:28.921"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:07:28.922" endtime="20230526 21:07:29.025"/>
</kw>
<status status="PASS" starttime="20230526 21:07:27.534" endtime="20230526 21:07:29.025"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:07:29.031" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:07:29.026" endtime="20230526 21:07:29.031"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:29.032" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:07:29.031" endtime="20230526 21:07:29.088"/>
</kw>
<status status="PASS" starttime="20230526 21:07:29.025" endtime="20230526 21:07:29.088"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:29.089" level="INFO">Typing text 'Lisa Greene' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:07:29.089" endtime="20230526 21:07:29.199"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:29.200" level="INFO">Typing text 'john32@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:07:29.200" endtime="20230526 21:07:29.295"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:29.296" level="INFO">Typing text 'JXimtd1w7Jdd' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:07:29.295" endtime="20230526 21:07:29.388"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:29.389" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:07:29.388" endtime="20230526 21:07:29.464"/>
</kw>
<status status="PASS" starttime="20230526 21:07:29.089" endtime="20230526 21:07:29.464"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:07:29.465" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:07:29.464" endtime="20230526 21:07:29.526"/>
</kw>
<status status="PASS" starttime="20230526 21:07:29.464" endtime="20230526 21:07:29.526"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:07:29.526" endtime="20230526 21:07:29.761"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:07:29.780" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:07:29.762" endtime="20230526 21:07:29.780"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:07:29.794" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 21:07:29.781" endtime="20230526 21:07:29.794"/>
</kw>
<status status="PASS" starttime="20230526 21:07:29.526" endtime="20230526 21:07:29.794"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:07:29.795" endtime="20230526 21:07:29.849"/>
</kw>
<status status="PASS" starttime="20230526 21:07:29.795" endtime="20230526 21:07:29.850"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:07:27.533" endtime="20230526 21:07:29.850"/>
</test>
<status status="PASS" starttime="20230526 21:07:22.742" endtime="20230526 21:07:29.851"/>
</suite>
<status status="PASS" starttime="20230526 21:07:22.740" endtime="20230526 21:07:29.852"/>
</suite>
<status status="PASS" starttime="20230526 21:07:21.738" endtime="20230526 21:07:29.854"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
