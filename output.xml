<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230512 01:02:10.096" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230512 01:02:10.623" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230512 01:02:10.622" endtime="20230512 01:02:10.623"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.622" endtime="20230512 01:02:10.623"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230512 01:02:10.776" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230512 01:02:10.776" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5acda07b-fa73-405b-bcba-85074e3a98da', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8856864ebcb52aaa55ad730d1f98e27b;o=1', 'Date': 'Fri, 12 May 2023 01:02:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230512 01:02:10.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.623" endtime="20230512 01:02:10.776"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230512 01:02:10.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.776" endtime="20230512 01:02:10.777"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.623" endtime="20230512 01:02:10.777"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230512 01:02:10.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.777" endtime="20230512 01:02:10.778"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230512 01:02:10.778" endtime="20230512 01:02:10.779"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.777" endtime="20230512 01:02:10.779"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230512 01:02:10.780" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230512 01:02:10.779" endtime="20230512 01:02:10.780"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.779" endtime="20230512 01:02:10.780"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230512 01:02:10.621" endtime="20230512 01:02:10.780"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230512 01:02:10.781" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230512 01:02:10.781" endtime="20230512 01:02:10.781"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.781" endtime="20230512 01:02:10.781"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230512 01:02:10.782" level="INFO">${name} = Deanna Willis</msg>
<status status="PASS" starttime="20230512 01:02:10.782" endtime="20230512 01:02:10.782"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230512 01:02:10.783" level="INFO">${email} = stevenkelley@example.org</msg>
<status status="PASS" starttime="20230512 01:02:10.782" endtime="20230512 01:02:10.783"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230512 01:02:10.783" level="INFO">${password} = 3%c9KOLq$c</msg>
<status status="PASS" starttime="20230512 01:02:10.783" endtime="20230512 01:02:10.783"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230512 01:02:10.783" level="INFO">${name} = Deanna Willis</msg>
<status status="PASS" starttime="20230512 01:02:10.783" endtime="20230512 01:02:10.784"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230512 01:02:10.784" level="INFO">${email} = stevenkelley@example.org</msg>
<status status="PASS" starttime="20230512 01:02:10.784" endtime="20230512 01:02:10.784"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230512 01:02:10.784" level="INFO">${password} = 3%c9KOLq$c</msg>
<status status="PASS" starttime="20230512 01:02:10.784" endtime="20230512 01:02:10.784"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.782" endtime="20230512 01:02:10.784"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230512 01:02:10.785" level="INFO">${payload} = {'nome': 'Deanna Willis', 'email': 'stevenkelley@example.org', 'password': '3%c9KOLq$c', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230512 01:02:10.785" endtime="20230512 01:02:10.785"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230512 01:02:10.785" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230512 01:02:10.785" endtime="20230512 01:02:10.785"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230512 01:02:10.895" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "Deanna Willis", "email": "stevenkelley@example.org", "password": "3%c9KOLq$c", "administrador": "false"}' 
 </msg>
<msg timestamp="20230512 01:02:10.895" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3aecd734-24ad-4458-8ddc-b8cf78524b45', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b182d5182a4efae4446429a684278cb4', 'Date': 'Fri, 12 May 2023 01:02:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "uYxSpeTuPcGXelzb"
} 
 </msg>
<msg timestamp="20230512 01:02:10.895" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.786" endtime="20230512 01:02:10.895"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230512 01:02:10.896" level="INFO">${user_id} = uYxSpeTuPcGXelzb</msg>
<status status="PASS" starttime="20230512 01:02:10.896" endtime="20230512 01:02:10.896"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230512 01:02:10.897" level="INFO">${USER_ID} = uYxSpeTuPcGXelzb</msg>
<status status="PASS" starttime="20230512 01:02:10.896" endtime="20230512 01:02:10.897"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230512 01:02:10.897" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.897" endtime="20230512 01:02:10.897"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.784" endtime="20230512 01:02:10.897"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230512 01:02:10.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.898" endtime="20230512 01:02:10.898"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230512 01:02:10.898" endtime="20230512 01:02:10.899"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.897" endtime="20230512 01:02:10.899"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230512 01:02:10.900" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230512 01:02:10.899" endtime="20230512 01:02:10.900"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.899" endtime="20230512 01:02:10.900"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230512 01:02:10.780" endtime="20230512 01:02:10.900"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230512 01:02:10.901" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230512 01:02:10.901" endtime="20230512 01:02:10.902"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.901" endtime="20230512 01:02:10.902"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230512 01:02:10.980" level="INFO">GET Request : url=https://serverest.dev/usuarios/uYxSpeTuPcGXelzb 
 path_url=/usuarios/uYxSpeTuPcGXelzb 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230512 01:02:10.980" level="INFO">GET Response : url=https://serverest.dev/usuarios/uYxSpeTuPcGXelzb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a73661c2-622d-45ee-a388-8549a67f35b6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '33ec79d8cce1d7cec30cab0191970b3f', 'Date': 'Fri, 12 May 2023 01:02:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "Deanna Willis",
    "email": "stevenkelley@example.org",
    "password": "3%c9KOLq$c",
    "administrador": "false",
    "_id": "uYxSpeTuPcGXelzb"
} 
 </msg>
<msg timestamp="20230512 01:02:10.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.902" endtime="20230512 01:02:10.980"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230512 01:02:10.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.980" endtime="20230512 01:02:10.981"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.902" endtime="20230512 01:02:10.981"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230512 01:02:10.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.981" endtime="20230512 01:02:10.982"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230512 01:02:10.982" endtime="20230512 01:02:10.983"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.981" endtime="20230512 01:02:10.983"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230512 01:02:10.984" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230512 01:02:10.983" endtime="20230512 01:02:10.984"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.983" endtime="20230512 01:02:10.984"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230512 01:02:10.901" endtime="20230512 01:02:10.984"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230512 01:02:10.985" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230512 01:02:10.985" endtime="20230512 01:02:10.985"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.985" endtime="20230512 01:02:10.985"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230512 01:02:10.986" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230512 01:02:10.986" endtime="20230512 01:02:10.986"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230512 01:02:10.986" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230512 01:02:10.986" endtime="20230512 01:02:10.986"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230512 01:02:11.074" level="INFO">PUT Request : url=https://serverest.dev/usuarios/uYxSpeTuPcGXelzb 
 path_url=/usuarios/uYxSpeTuPcGXelzb 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230512 01:02:11.074" level="INFO">PUT Response : url=https://serverest.dev/usuarios/uYxSpeTuPcGXelzb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1002e0ce-e61c-4ee2-94d1-15fc119a48ba', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fdd4ec1b1a6755867df64e0b68d69213', 'Date': 'Fri, 12 May 2023 01:02:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230512 01:02:11.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:10.986" endtime="20230512 01:02:11.074"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230512 01:02:11.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:11.075" endtime="20230512 01:02:11.075"/>
</kw>
<status status="PASS" starttime="20230512 01:02:10.985" endtime="20230512 01:02:11.075"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230512 01:02:11.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230512 01:02:11.075" endtime="20230512 01:02:11.076"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230512 01:02:11.076" endtime="20230512 01:02:11.077"/>
</kw>
<status status="PASS" starttime="20230512 01:02:11.075" endtime="20230512 01:02:11.077"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230512 01:02:11.078" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230512 01:02:11.077" endtime="20230512 01:02:11.078"/>
</kw>
<status status="PASS" starttime="20230512 01:02:11.077" endtime="20230512 01:02:11.078"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230512 01:02:10.984" endtime="20230512 01:02:11.078"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230512 01:02:11.079" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230512 01:02:11.079" endtime="20230512 01:02:11.080"/>
</kw>
<status status="PASS" starttime="20230512 01:02:11.079" endtime="20230512 01:02:11.080"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230512 01:02:11.159" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/uYxSpeTuPcGXelzb 
 path_url=/usuarios/uYxSpeTuPcGXelzb 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230512 01:02:11.159" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/uYxSpeTuPcGXelzb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3525b0c6-cf21-4c76-a72a-80732a3fcad7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8cab667e42204f49b07e52637b5ae6d6', 'Date': 'Fri, 12 May 2023 01:02:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230512 01:02:11.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:11.080" endtime="20230512 01:02:11.159"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230512 01:02:11.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230512 01:02:11.159" endtime="20230512 01:02:11.160"/>
</kw>
<status status="PASS" starttime="20230512 01:02:11.080" endtime="20230512 01:02:11.160"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230512 01:02:11.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230512 01:02:11.160" endtime="20230512 01:02:11.161"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230512 01:02:11.161" endtime="20230512 01:02:11.162"/>
</kw>
<status status="PASS" starttime="20230512 01:02:11.160" endtime="20230512 01:02:11.162"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230512 01:02:11.163" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230512 01:02:11.162" endtime="20230512 01:02:11.163"/>
</kw>
<status status="PASS" starttime="20230512 01:02:11.162" endtime="20230512 01:02:11.163"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230512 01:02:11.078" endtime="20230512 01:02:11.163"/>
</test>
<status status="PASS" starttime="20230512 01:02:10.117" endtime="20230512 01:02:11.163"/>
</suite>
<status status="PASS" starttime="20230512 01:02:10.116" endtime="20230512 01:02:11.165"/>
</suite>
<status status="PASS" starttime="20230512 01:02:10.115" endtime="20230512 01:02:11.165"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230512 01:02:11.176" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230512 01:02:11.175" endtime="20230512 01:02:13.086"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230512 01:02:13.086" endtime="20230512 01:02:13.200"/>
</kw>
<status status="PASS" starttime="20230512 01:02:11.175" endtime="20230512 01:02:13.200"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230512 01:02:13.201" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230512 01:02:13.201" endtime="20230512 01:02:13.267"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230512 01:02:13.277" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230512 01:02:13.267" endtime="20230512 01:02:13.277"/>
</kw>
<status status="PASS" starttime="20230512 01:02:13.200" endtime="20230512 01:02:13.277"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:13.280" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230512 01:02:13.278" endtime="20230512 01:02:13.386"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:13.387" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230512 01:02:13.387" endtime="20230512 01:02:13.469"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:13.470" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230512 01:02:13.469" endtime="20230512 01:02:13.564"/>
</kw>
<status status="PASS" starttime="20230512 01:02:13.278" endtime="20230512 01:02:13.564"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230512 01:02:13.575" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230512 01:02:13.565" endtime="20230512 01:02:13.575"/>
</kw>
<status status="PASS" starttime="20230512 01:02:13.565" endtime="20230512 01:02:13.575"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230512 01:02:13.589" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230512 01:02:13.576" endtime="20230512 01:02:13.589"/>
</kw>
<status status="PASS" starttime="20230512 01:02:13.575" endtime="20230512 01:02:13.589"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230512 01:02:13.590" endtime="20230512 01:02:13.646"/>
</kw>
<status status="PASS" starttime="20230512 01:02:13.590" endtime="20230512 01:02:13.646"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230512 01:02:11.175" endtime="20230512 01:02:13.646"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230512 01:02:13.648" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230512 01:02:13.647" endtime="20230512 01:02:14.463"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230512 01:02:14.463" endtime="20230512 01:02:14.569"/>
</kw>
<status status="PASS" starttime="20230512 01:02:13.647" endtime="20230512 01:02:14.569"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230512 01:02:14.570" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230512 01:02:14.570" endtime="20230512 01:02:14.625"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230512 01:02:14.630" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230512 01:02:14.626" endtime="20230512 01:02:14.630"/>
</kw>
<status status="PASS" starttime="20230512 01:02:14.570" endtime="20230512 01:02:14.630"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:14.632" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230512 01:02:14.631" endtime="20230512 01:02:14.734"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:14.735" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230512 01:02:14.734" endtime="20230512 01:02:14.812"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:14.813" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230512 01:02:14.812" endtime="20230512 01:02:14.870"/>
</kw>
<status status="PASS" starttime="20230512 01:02:14.631" endtime="20230512 01:02:14.870"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230512 01:02:14.892" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230512 01:02:14.870" endtime="20230512 01:02:14.892"/>
</kw>
<status status="PASS" starttime="20230512 01:02:14.870" endtime="20230512 01:02:14.893"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230512 01:02:14.893" endtime="20230512 01:02:14.950"/>
</kw>
<status status="PASS" starttime="20230512 01:02:14.893" endtime="20230512 01:02:14.950"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230512 01:02:13.647" endtime="20230512 01:02:14.950"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230512 01:02:14.952" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230512 01:02:14.952" endtime="20230512 01:02:15.784"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230512 01:02:15.784" endtime="20230512 01:02:15.889"/>
</kw>
<status status="PASS" starttime="20230512 01:02:14.951" endtime="20230512 01:02:15.889"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230512 01:02:15.890" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230512 01:02:15.890" endtime="20230512 01:02:15.945"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230512 01:02:15.954" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230512 01:02:15.945" endtime="20230512 01:02:15.954"/>
</kw>
<status status="PASS" starttime="20230512 01:02:15.889" endtime="20230512 01:02:15.954"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:15.955" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230512 01:02:15.954" endtime="20230512 01:02:16.057"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:16.057" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230512 01:02:16.057" endtime="20230512 01:02:16.143"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:16.144" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230512 01:02:16.143" endtime="20230512 01:02:16.231"/>
</kw>
<status status="PASS" starttime="20230512 01:02:15.954" endtime="20230512 01:02:16.232"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230512 01:02:16.245" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230512 01:02:16.232" endtime="20230512 01:02:16.245"/>
</kw>
<status status="PASS" starttime="20230512 01:02:16.232" endtime="20230512 01:02:16.245"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230512 01:02:16.258" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230512 01:02:16.245" endtime="20230512 01:02:16.258"/>
</kw>
<status status="PASS" starttime="20230512 01:02:16.245" endtime="20230512 01:02:16.259"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230512 01:02:16.259" endtime="20230512 01:02:16.316"/>
</kw>
<status status="PASS" starttime="20230512 01:02:16.259" endtime="20230512 01:02:16.316"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230512 01:02:14.951" endtime="20230512 01:02:16.316"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230512 01:02:16.318" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230512 01:02:16.317" endtime="20230512 01:02:17.136"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230512 01:02:17.136" endtime="20230512 01:02:17.240"/>
</kw>
<status status="PASS" starttime="20230512 01:02:16.317" endtime="20230512 01:02:17.240"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230512 01:02:17.241" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230512 01:02:17.241" endtime="20230512 01:02:17.299"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230512 01:02:17.303" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230512 01:02:17.299" endtime="20230512 01:02:17.303"/>
</kw>
<status status="PASS" starttime="20230512 01:02:17.240" endtime="20230512 01:02:17.304"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:17.305" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230512 01:02:17.304" endtime="20230512 01:02:17.418"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:17.419" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230512 01:02:17.418" endtime="20230512 01:02:17.495"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230512 01:02:17.495" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230512 01:02:17.495" endtime="20230512 01:02:22.586"/>
</kw>
<status status="PASS" starttime="20230512 01:02:17.304" endtime="20230512 01:02:22.586"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230512 01:02:22.601" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230512 01:02:22.587" endtime="20230512 01:02:22.601"/>
</kw>
<status status="PASS" starttime="20230512 01:02:22.587" endtime="20230512 01:02:22.601"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230512 01:02:22.614" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230512 01:02:22.601" endtime="20230512 01:02:22.615"/>
</kw>
<status status="PASS" starttime="20230512 01:02:22.601" endtime="20230512 01:02:22.615"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230512 01:02:22.615" endtime="20230512 01:02:22.672"/>
</kw>
<status status="PASS" starttime="20230512 01:02:22.615" endtime="20230512 01:02:22.672"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230512 01:02:16.317" endtime="20230512 01:02:22.672"/>
</test>
<status status="PASS" starttime="20230512 01:02:11.169" endtime="20230512 01:02:22.673"/>
</suite>
<status status="PASS" starttime="20230512 01:02:11.168" endtime="20230512 01:02:22.675"/>
</suite>
<status status="PASS" starttime="20230512 01:02:11.166" endtime="20230512 01:02:22.676"/>
</suite>
<status status="PASS" starttime="20230512 01:02:10.097" endtime="20230512 01:02:22.677"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
