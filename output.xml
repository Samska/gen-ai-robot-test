<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 16:07:46.792" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 16:07:47.366" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 16:07:47.366" endtime="20230526 16:07:47.367"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.365" endtime="20230526 16:07:47.367"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 16:07:47.474" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 16:07:47.475" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'eae49d8f-6748-480e-9321-a1be0d665fa9', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e408a7108f2fa10414773a5c3b35d25b;o=1', 'Date': 'Fri, 26 May 2023 16:07:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '27277'} 
 body={
    "quantidade": 126,
    "usuarios": [
        {
            "nome": "Orville Murazik",
            "email": "Jonathon92@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "0Lt6iKxvRotpQ2z2"
        },
        {
            "nome": "Maria Hyatt",
            "email": "Tremaine.MacGyver@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "0m6ql0I1EmQHoJQw"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Laurence Gleichner",
            "email": "Francisco.Kilback16@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "1UYRX7tlgBp4p7fh"
        },
        {
            "nome": "Lyle Macejkovic",
            "email": "Hyman.Lindgren84@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "202fWYabdx7zxIpd"
        },
        {
            "nome": "Leon Hansen",
            "email": "Breanne_Lang@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "2EZmJJ2B5Icy8DaC"
        },
        {
            "nome": "Patty Heidenreich",
            "email": "Thad74@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "2u776xA4jTRYjIxL"
        },
        {
            "nome": "Nicolas Rowe MD",
            "email": "Cecil_Wilderman32@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "2uq0Q81m0u4iGXpq"
        },
        {
            "nome": "Rodney Stehr",
            "email": "Myrtis.Murphy13@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "44ON0UQXEvDZTzSB"
        },
        {
            "nome": "{{nome}}",
            "email": "Keira@qa.com.br",
            "password": "_BwioQm0i94Nglu",
            "administrador": "true",
            "_id": "4L3Gm0earWQXo2iu"
        },
        {
            "nome": "{{nome}}",
            "email": "Roma@qa.com.br",
            "password": "nkVzPZqnsOZyuxT",
            "administrador": "true",
            "_id": "4fboRd3YxTTE3dlQ"
        },
        {
            "nome": "Gwen Rempel",
            "email": "Hettie_Kub17@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "4mrrcESonPKUrDwZ"
        },
        {
            "nome": "Alex Bishop",
            "email": "mrangel@example.com",
            "password": "w033kaULjwTK",
            "administrador": "true",
            "_id": "5FFk2p132ErQtGIF"
        },
        {
            "nome": "Alfredo Torphy",
            "email": "Trudie84@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "65wnL5koGPcqSnrY"
        },
        {
            "nome": "Annabelle Hoeger",
            "email": "Abdiel.Rutherford91@yahoo.com",
            "password": "URb9PsGvrCiLeu5",
            "administrador": "false",
            "_id": "6O5011HNw1nWaDyf"
        },
        {
            "nome": "Kristopher Schiller",
            "email": "Garth87@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "6hJBmCjysHnAoDMW"
        },
        {
            "nome": "Bridget Kunze I",
            "email": "Emmet.Weissnat93@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "7PYs5Uw0YmxEGGZL"
        },
        {
            "nome": "{{nome}}",
            "email": "Ulises@qa.com.br",
            "password": "A9OLlW9de92LzKT",
            "administrador": "true",
            "_id": "7SrQWKSE6HG1BHXN"
        },
        {
            "nome": "Donnie Rowe",
            "email": "Nikki_Robel51@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "7nDRZkzRPTrCSroB"
        },
        {
            "nome": "Mrs. Maureen Runte",
            "email": "Cindy_Kohler34@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "85QUKzgIvzo9EF90"
        },
        {
            "nome": "{{nome}}",
            "email": "Kevon@qa.com.br",
            "password": "58MuUDUYa8Af8eP",
            "administrador": "true",
            "_id": "9NpqafEqTLXM61qi"
        },
        {
            "nome": "April Hansen",
            "email": "Rhoda_Hauck59@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "9XxBiVUYBCreawyC"
        },
        {
            "nome": "{{nome}}",
            "email": "Vernice@qa.com.br",
            "password": "6GbJJXgpgtrYQyG",
            "administrador": "true",
            "_id": "9ekSSBqJKfk26kVQ"
        },
        {
            "nome": "Bennie Connelly-Hilll",
            "email": "Jaiden_Schamberger67@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "9zVRvnfBzaklO9zE"
        },
        {
            "nome": "Gustavo Deckow",
            "email": "Jaime.Greenfelder96@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "AiurS8gwvceQ65A5"
        },
        {
            "nome": "Jaime Flatley DVM",
            "email": "Kassandra85@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "AvBZtpSldI66U9ZY"
        },
        {
            "nome": "Mark Knapp",
            "email": "garzavincent@example.com",
            "password": "esv9geLnlgLi",
            "administrador": "true",
            "_id": "BBzPSzjGnsmS8HxE"
        },
        {
            "nome": "Gerald Rutherford",
            "email": "Salvador41@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "BHMOyfrpv7rC1DeS"
        },
        {
            "nome": "Pedro Thiel DDS",
            "email": "Braeden_Gutmann2@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "CNkhvNrBTXw2lbEC"
        },
        {
            "nome": "Christopher Flores",
            "email": "joshua76@example.com",
            "password": "LfkEGynI5OW5",
            "administrador": "true",
            "_id": "CrmsXitI4BbQXLKv"
        },
        {
            "nome": "Arthur Beer",
            "email": "arthurbeer@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "DCOAWkktwjBOWruI"
        },
        {
            "nome": "Ms. Ernestine Swift",
            "email": "Lina.Wiegand@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "DcU58EqeTq9c63DS"
        },
        {
            "nome": "Daisy Erdman",
            "email": "Hassie.Kozey@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "EcEY0xlBIkD5navT"
        },
        {
            "nome": "Dr. Marian Jacobs",
            "email": "Augustine22@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "F4EhDZLcFGLNXPGQ"
        },
        {
            "nome": "Michael Cain",
            "email": "gmcpherson@example.org",
            "password": "sNV4FUHjAPRK",
            "administrador": "true",
            "_id": "F6t4G0HGaejjjeTt"
        },
        {
            "nome": "Marion Ortiz",
            "email": "Keenan.Roob@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "FAf0aeUNQb3vShdc"
        },
        {
            "nome": "{{nome}}",
            "email": "Seth@qa.com.br",
            "password": "ko4eCB9jxsJ5ISS",
            "administrador": "true",
            "_id": "FTlDthfljDtNXNE6"
        },
        {
            "nome": "{{nome}}",
            "email": "Vaughn@qa.com.br",
            "password": "sdLXl85riMyY9WC",
            "administrador": "true",
            "_id": "Fi7h1dagIWglTefe"
        },
        {
            "nome": "Mr. Jamie Witting-Marquardt",
            "email": "Kurt_Ferry18@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "GkT67xTKiC0Aaq45"
        },
        {
            "nome": "{{nome}}",
            "email": "Peter@qa.com.br",
            "password": "pcXG0yxpwHWOLWG",
            "administrador": "true",
            "_id": "H0kyRRvMxM1HkO5f"
        },
        {
            "nome": "Elias Corwin III",
            "email": "Desiree_Nitzsche18@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "HNNUXOGfJqBoO4h1"
        },
        {
            "nome": "Jaclyn_Monahan77",
            "email": "Alice_Kautzer@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "HrstOomEjJQqC3QD"
        },
        {
            "nome": "{{nome}}",
            "email": "Emile@qa.com.br",
            "password": "5ghTQfpLAvxFYfE",
            "administrador": "true",
            "_id": "IRRs7uwAKD9IVas0"
        },
        {
            "nome": "Edwin Marvin",
            "email": "Jayson.Thompson@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "IohZZMr4q0vJNUMB"
        },
        {
            "nome": "Roland Feil",
            "email": "Daisy_Wilderman10@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "Ip8gptReUAnOZpN3"
        },
        {
            "nome": "Jean Champlin",
            "email": "Reyes.Fahey92@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "JPkpj0P4x... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230526 16:07:47.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.367" endtime="20230526 16:07:47.475"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 16:07:47.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.475" endtime="20230526 16:07:47.476"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.367" endtime="20230526 16:07:47.476"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 16:07:47.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.476" endtime="20230526 16:07:47.477"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 16:07:47.477" endtime="20230526 16:07:47.478"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.476" endtime="20230526 16:07:47.478"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 16:07:47.480" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 16:07:47.479" endtime="20230526 16:07:47.480"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.479" endtime="20230526 16:07:47.480"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 16:07:47.365" endtime="20230526 16:07:47.480"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 16:07:47.481" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 16:07:47.481" endtime="20230526 16:07:47.482"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.481" endtime="20230526 16:07:47.482"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 16:07:47.483" level="INFO">${name} = Taylor Clark</msg>
<status status="PASS" starttime="20230526 16:07:47.482" endtime="20230526 16:07:47.483"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 16:07:47.483" level="INFO">${email} = lhurley@example.net</msg>
<status status="PASS" starttime="20230526 16:07:47.483" endtime="20230526 16:07:47.483"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 16:07:47.484" level="INFO">${password} = qmRSrqmSL63q</msg>
<status status="PASS" starttime="20230526 16:07:47.483" endtime="20230526 16:07:47.484"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 16:07:47.484" level="INFO">${name} = Taylor Clark</msg>
<status status="PASS" starttime="20230526 16:07:47.484" endtime="20230526 16:07:47.484"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 16:07:47.484" level="INFO">${email} = lhurley@example.net</msg>
<status status="PASS" starttime="20230526 16:07:47.484" endtime="20230526 16:07:47.484"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 16:07:47.485" level="INFO">${password} = qmRSrqmSL63q</msg>
<status status="PASS" starttime="20230526 16:07:47.484" endtime="20230526 16:07:47.485"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.482" endtime="20230526 16:07:47.485"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 16:07:47.486" level="INFO">${payload} = {'nome': 'Taylor Clark', 'email': 'lhurley@example.net', 'password': 'qmRSrqmSL63q', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 16:07:47.485" endtime="20230526 16:07:47.486"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 16:07:47.486" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 16:07:47.486" endtime="20230526 16:07:47.486"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 16:07:47.549" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Taylor Clark", "email": "lhurley@example.net", "password": "qmRSrqmSL63q", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 16:07:47.549" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8b5ed8c8-2e82-4ee2-94c2-db8774c67af4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7b2682db5430359d642e54ad6e1da2e9', 'Date': 'Fri, 26 May 2023 16:07:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "2ZeiUootehezXYh0"
} 
 </msg>
<msg timestamp="20230526 16:07:47.550" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.486" endtime="20230526 16:07:47.550"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 16:07:47.551" level="INFO">${user_id} = 2ZeiUootehezXYh0</msg>
<status status="PASS" starttime="20230526 16:07:47.550" endtime="20230526 16:07:47.551"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 16:07:47.551" level="INFO">${USER_ID} = 2ZeiUootehezXYh0</msg>
<status status="PASS" starttime="20230526 16:07:47.551" endtime="20230526 16:07:47.551"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 16:07:47.552" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.551" endtime="20230526 16:07:47.552"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.485" endtime="20230526 16:07:47.552"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 16:07:47.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.552" endtime="20230526 16:07:47.553"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 16:07:47.553" endtime="20230526 16:07:47.554"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.552" endtime="20230526 16:07:47.554"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 16:07:47.555" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 16:07:47.554" endtime="20230526 16:07:47.555"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.554" endtime="20230526 16:07:47.555"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 16:07:47.480" endtime="20230526 16:07:47.555"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 16:07:47.557" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 16:07:47.557" endtime="20230526 16:07:47.557"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.556" endtime="20230526 16:07:47.557"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 16:07:47.624" level="INFO">GET Request : url=https://serverest.dev/usuarios/2ZeiUootehezXYh0 
 path_url=/usuarios/2ZeiUootehezXYh0 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 16:07:47.624" level="INFO">GET Response : url=https://serverest.dev/usuarios/2ZeiUootehezXYh0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '551751c6-f40a-449c-a124-41fc18dcff6e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b6c80858e585ca9e9822e369cdc04a07', 'Date': 'Fri, 26 May 2023 16:07:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '159'} 
 body={
    "nome": "Taylor Clark",
    "email": "lhurley@example.net",
    "password": "qmRSrqmSL63q",
    "administrador": "false",
    "_id": "2ZeiUootehezXYh0"
} 
 </msg>
<msg timestamp="20230526 16:07:47.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.558" endtime="20230526 16:07:47.624"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 16:07:47.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.624" endtime="20230526 16:07:47.625"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.557" endtime="20230526 16:07:47.625"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 16:07:47.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.625" endtime="20230526 16:07:47.626"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 16:07:47.626" endtime="20230526 16:07:47.627"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.625" endtime="20230526 16:07:47.627"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 16:07:47.628" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 16:07:47.628" endtime="20230526 16:07:47.628"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.627" endtime="20230526 16:07:47.628"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 16:07:47.556" endtime="20230526 16:07:47.628"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 16:07:47.630" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 16:07:47.630" endtime="20230526 16:07:47.630"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.630" endtime="20230526 16:07:47.631"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 16:07:47.631" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 16:07:47.631" endtime="20230526 16:07:47.631"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 16:07:47.632" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 16:07:47.631" endtime="20230526 16:07:47.632"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 16:07:47.702" level="INFO">PUT Request : url=https://serverest.dev/usuarios/2ZeiUootehezXYh0 
 path_url=/usuarios/2ZeiUootehezXYh0 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 16:07:47.703" level="INFO">PUT Response : url=https://serverest.dev/usuarios/2ZeiUootehezXYh0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '192f2a4e-c436-462f-b36b-0b7b2b28e42d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '158e62f5066a58e9a6c0ffd2c7b25ce2', 'Date': 'Fri, 26 May 2023 16:07:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 16:07:47.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.632" endtime="20230526 16:07:47.703"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 16:07:47.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.703" endtime="20230526 16:07:47.703"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.631" endtime="20230526 16:07:47.703"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 16:07:47.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.704" endtime="20230526 16:07:47.705"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 16:07:47.705" endtime="20230526 16:07:47.705"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.704" endtime="20230526 16:07:47.705"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 16:07:47.707" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 16:07:47.706" endtime="20230526 16:07:47.707"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.706" endtime="20230526 16:07:47.707"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 16:07:47.629" endtime="20230526 16:07:47.707"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 16:07:47.708" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 16:07:47.708" endtime="20230526 16:07:47.708"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.708" endtime="20230526 16:07:47.709"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 16:07:47.776" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/2ZeiUootehezXYh0 
 path_url=/usuarios/2ZeiUootehezXYh0 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 16:07:47.776" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/2ZeiUootehezXYh0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7b9a14ed-b967-4f07-9896-f323cc6933b5', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6b07b718afaee90552662690229a964a', 'Date': 'Fri, 26 May 2023 16:07:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 16:07:47.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.709" endtime="20230526 16:07:47.776"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 16:07:47.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.776" endtime="20230526 16:07:47.777"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.709" endtime="20230526 16:07:47.777"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 16:07:47.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 16:07:47.777" endtime="20230526 16:07:47.778"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 16:07:47.778" endtime="20230526 16:07:47.779"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.777" endtime="20230526 16:07:47.779"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 16:07:47.780" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 16:07:47.779" endtime="20230526 16:07:47.780"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.779" endtime="20230526 16:07:47.780"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 16:07:47.707" endtime="20230526 16:07:47.780"/>
</test>
<status status="PASS" starttime="20230526 16:07:46.814" endtime="20230526 16:07:47.781"/>
</suite>
<status status="PASS" starttime="20230526 16:07:46.812" endtime="20230526 16:07:47.782"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 16:07:47.793" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 16:07:47.793" endtime="20230526 16:07:56.920"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 16:07:56.921" endtime="20230526 16:07:57.053"/>
</kw>
<status status="PASS" starttime="20230526 16:07:47.792" endtime="20230526 16:07:57.053"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 16:07:57.059" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 16:07:57.054" endtime="20230526 16:07:57.059"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 16:07:57.062" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 16:07:57.059" endtime="20230526 16:07:57.286"/>
</kw>
<status status="PASS" starttime="20230526 16:07:57.054" endtime="20230526 16:07:57.287"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 16:07:57.288" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 16:07:57.287" endtime="20230526 16:07:57.442"/>
</kw>
<status status="PASS" starttime="20230526 16:07:57.287" endtime="20230526 16:07:57.442"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 16:07:57.443" endtime="20230526 16:07:57.681"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 16:07:57.701" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 16:07:57.682" endtime="20230526 16:07:57.701"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 16:07:57.767" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 16:07:57.702" endtime="20230526 16:07:57.767"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 16:07:57.781" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 16:07:57.767" endtime="20230526 16:07:57.781"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 16:07:57.795" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 16:07:57.782" endtime="20230526 16:07:57.795"/>
</kw>
<status status="PASS" starttime="20230526 16:07:57.443" endtime="20230526 16:07:57.795"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 16:07:57.796" endtime="20230526 16:07:57.853"/>
</kw>
<status status="PASS" starttime="20230526 16:07:57.795" endtime="20230526 16:07:57.854"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 16:07:47.792" endtime="20230526 16:07:57.854"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 16:07:57.857" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 16:07:57.856" endtime="20230526 16:07:59.273"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 16:07:59.273" endtime="20230526 16:07:59.391"/>
</kw>
<status status="PASS" starttime="20230526 16:07:57.856" endtime="20230526 16:07:59.391"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 16:07:59.397" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 16:07:59.392" endtime="20230526 16:07:59.397"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 16:07:59.398" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 16:07:59.397" endtime="20230526 16:07:59.454"/>
</kw>
<status status="PASS" starttime="20230526 16:07:59.392" endtime="20230526 16:07:59.454"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 16:07:59.455" level="INFO">${name} = Brett Cameron</msg>
<status status="PASS" starttime="20230526 16:07:59.455" endtime="20230526 16:07:59.455"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 16:07:59.456" level="INFO">${email} = markmelendez@example.net</msg>
<status status="PASS" starttime="20230526 16:07:59.455" endtime="20230526 16:07:59.456"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 16:07:59.456" level="INFO">${password} = SM9et6US2aBS</msg>
<status status="PASS" starttime="20230526 16:07:59.456" endtime="20230526 16:07:59.456"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 16:07:59.457" level="INFO">Typing text 'Brett Cameron' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 16:07:59.457" endtime="20230526 16:07:59.672"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 16:07:59.673" level="INFO">Typing text 'markmelendez@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 16:07:59.672" endtime="20230526 16:07:59.823"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 16:07:59.823" level="INFO">Typing text 'SM9et6US2aBS' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 16:07:59.823" endtime="20230526 16:07:59.954"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 16:07:59.955" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 16:07:59.954" endtime="20230526 16:08:00.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 16:08:00.035" level="INFO">${name} = Brett Cameron</msg>
<status status="PASS" starttime="20230526 16:08:00.035" endtime="20230526 16:08:00.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 16:08:00.036" level="INFO">${email} = markmelendez@example.net</msg>
<status status="PASS" starttime="20230526 16:08:00.035" endtime="20230526 16:08:00.036"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 16:08:00.036" level="INFO">${password} = SM9et6US2aBS</msg>
<status status="PASS" starttime="20230526 16:08:00.036" endtime="20230526 16:08:00.036"/>
</kw>
<status status="PASS" starttime="20230526 16:07:59.454" endtime="20230526 16:08:00.036"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 16:08:00.037" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 16:08:00.037" endtime="20230526 16:08:00.101"/>
</kw>
<status status="PASS" starttime="20230526 16:08:00.036" endtime="20230526 16:08:00.101"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 16:08:00.102" endtime="20230526 16:08:00.337"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 16:08:00.356" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 16:08:00.337" endtime="20230526 16:08:00.356"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 16:08:00.370" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 16:08:00.356" endtime="20230526 16:08:00.370"/>
</kw>
<status status="PASS" starttime="20230526 16:08:00.101" endtime="20230526 16:08:00.370"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 16:08:00.371" endtime="20230526 16:08:00.426"/>
</kw>
<status status="PASS" starttime="20230526 16:08:00.370" endtime="20230526 16:08:00.426"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 16:07:57.855" endtime="20230526 16:08:00.426"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 16:08:00.428" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 16:08:00.427" endtime="20230526 16:08:01.779"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 16:08:01.779" endtime="20230526 16:08:01.897"/>
</kw>
<status status="PASS" starttime="20230526 16:08:00.427" endtime="20230526 16:08:01.898"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 16:08:01.903" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 16:08:01.898" endtime="20230526 16:08:01.903"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 16:08:01.904" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 16:08:01.904" endtime="20230526 16:08:01.959"/>
</kw>
<status status="PASS" starttime="20230526 16:08:01.898" endtime="20230526 16:08:01.959"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 16:08:01.960" level="INFO">Typing text 'Brett Cameron' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 16:08:01.960" endtime="20230526 16:08:02.075"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 16:08:02.076" level="INFO">Typing text 'markmelendez@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 16:08:02.076" endtime="20230526 16:08:02.196"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 16:08:02.197" level="INFO">Typing text 'SM9et6US2aBS' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 16:08:02.196" endtime="20230526 16:08:02.296"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 16:08:02.297" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 16:08:02.296" endtime="20230526 16:08:02.374"/>
</kw>
<status status="PASS" starttime="20230526 16:08:01.959" endtime="20230526 16:08:02.374"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 16:08:02.375" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 16:08:02.374" endtime="20230526 16:08:02.434"/>
</kw>
<status status="PASS" starttime="20230526 16:08:02.374" endtime="20230526 16:08:02.434"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 16:08:02.435" endtime="20230526 16:08:02.674"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 16:08:02.693" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 16:08:02.674" endtime="20230526 16:08:02.693"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 16:08:02.708" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 16:08:02.694" endtime="20230526 16:08:02.708"/>
</kw>
<status status="PASS" starttime="20230526 16:08:02.435" endtime="20230526 16:08:02.708"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 16:08:02.709" endtime="20230526 16:08:02.763"/>
</kw>
<status status="PASS" starttime="20230526 16:08:02.708" endtime="20230526 16:08:02.764"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 16:08:00.426" endtime="20230526 16:08:02.764"/>
</test>
<status status="PASS" starttime="20230526 16:07:47.785" endtime="20230526 16:08:02.765"/>
</suite>
<status status="PASS" starttime="20230526 16:07:47.783" endtime="20230526 16:08:02.766"/>
</suite>
<status status="PASS" starttime="20230526 16:07:46.793" endtime="20230526 16:08:02.767"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
