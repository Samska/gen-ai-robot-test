<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 18:54:58.709" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 18:54:59.249" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 18:54:59.249" endtime="20230601 18:54:59.250"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.248" endtime="20230601 18:54:59.250"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 18:54:59.404" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 18:54:59.405" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f34c80c5-0cad-400b-a41e-c17f7ac1cfc7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '69587b0df42f82af146dfac90570207b;o=1', 'Date': 'Thu, 01 Jun 2023 18:54:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '19336'} 
 body={
    "quantidade": 88,
    "usuarios": [
        {
            "nome": "Edward Jones",
            "email": "bphillips@example.org",
            "password": "g04o0dMkekzU",
            "administrador": "true",
            "_id": "0NF5phDpupxhrHxN"
        },
        {
            "nome": "Lyman Muller I",
            "email": "lymanmulleri_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "1Iz4EuY2IqGVVJfz"
        },
        {
            "nome": "Nicky Crist",
            "email": "nickycrist_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "1vz4kFeZ6nI0oetX"
        },
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Tonya Robinson MD",
            "email": "waltertracy@example.org",
            "password": "BVU6Qads5Idg",
            "administrador": "true",
            "_id": "5VNrB0GpqKXGQxsQ"
        },
        {
            "nome": "Riley Meadows",
            "email": "wardlindsay@example.com",
            "password": "21nem33sV3Wv",
            "administrador": "true",
            "_id": "6ZrbiguZb3H8xbz7"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulaninhodasilva@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "8GV85HRf3fvz3bA6"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9gstdMBMAIERTqbi"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Gertie Marvin IV",
            "email": "gertiemarviniv_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "BGj6VzTFs5OHYXz3"
        },
        {
            "nome": "Rep. Marcus Zulauf",
            "email": "repmarcuszulauf_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "C2oIa3elkZu8OgCh"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0104@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "CPotN3cJwU2ytcC0"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0318@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "Cjii886shOMAPasE"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Vickie Green",
            "email": "vickiegreen_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "FgPTX49i1n7EY9IK"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010601@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "FmAZHqMdTUASVy5E"
        },
        {
            "nome": "Michael Torres",
            "email": "sharonmoore@example.org",
            "password": "t4wu3WWhnqn7",
            "administrador": "true",
            "_id": "GZNbsNpQeHv7ISFa"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulaninhodasilv@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "GenOWVanmZjX7iNC"
        },
        {
            "nome": "Crystal Parks",
            "email": "oolson@example.com",
            "password": "1wdCfdPmvGs3",
            "administrador": "true",
            "_id": "HkeCIJyLaeKC4tfA"
        },
        {
            "nome": "Mohamed Hyatt",
            "email": "mohamedhyatt_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "HwZXX3KaO6cdeyb1"
        },
        {
            "nome": "Stephen Reynolds",
            "email": "stephenreynolds_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "JAwEFMxMJ1jzZxEs"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0114@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "MZEGk2tTLklplZrU"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0215@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "NfR9Vy9SIekHqpyG"
        },
        {
            "nome": "Ellis Cremin I",
            "email": "elliscremini_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "OagcOXL77fcQcJcl"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "Quinn Orn",
            "email": "quinnorn_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Q4uzpPanjVopwd6z"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010603@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "QGQCKYrf91pHsUXF"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Gleyciana Campelo",
            "email": "rkjur30mt1@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "TD5vVEbjmAoCuqIP"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Long Turner",
            "email": "longturner_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "UPJUP841x0xSyuFj"
        },
        {
            "nome": "Fulano da Silva",
            "email": "okns@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "UpSlcfVu8O5cbeOj"
        },
        {
            "nome": "Lindsey Berge",
            "email": "testeteste@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "UswUbgHnjznYal0u"
        },
        {
            "nome": "Sharon Larson",
            "email": "sharonlarson_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "V8M05NI0POHw0e7p"
        },
        {
            "nome": "Randolph Anderson",
            "email": "randolphanderson_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Ve8YZlGTMPqS9tor"
        },
        {
            "nome": "Miss Mohamed Brakus",
            "email": "missmohamedbrakus_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "VyMVbdglg5ieZjSf"
        },
        {
            "nome": "Donald Palmer",
            "email": "kshannon@example.net",
            "password": "MN61aKMyY2Zp",
            "administrador": "true",
            "_id": "WJLRKci7u4ThQVZi"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Shenika Hettinger",
            "email": "shenikahettinger_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Ym3pyIp54aDSMhMn"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0106@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "anTapQ16J1tEfpW3"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "bIWgM5nAF8xOakiX"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010602@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "bSaFEd9NE00EPTtu"
        },
        {
            "nome": "Annika Mayert",
            "email": "annikamayert_... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230601 18:54:59.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.250" endtime="20230601 18:54:59.405"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 18:54:59.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.405" endtime="20230601 18:54:59.406"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.250" endtime="20230601 18:54:59.406"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 18:54:59.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.406" endtime="20230601 18:54:59.407"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 18:54:59.407" endtime="20230601 18:54:59.408"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.406" endtime="20230601 18:54:59.408"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 18:54:59.409" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 18:54:59.409" endtime="20230601 18:54:59.409"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.408" endtime="20230601 18:54:59.410"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 18:54:59.248" endtime="20230601 18:54:59.410"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 18:54:59.411" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 18:54:59.411" endtime="20230601 18:54:59.411"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.410" endtime="20230601 18:54:59.411"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 18:54:59.412" level="INFO">${name} = Ryan Edwards</msg>
<status status="PASS" starttime="20230601 18:54:59.412" endtime="20230601 18:54:59.412"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 18:54:59.413" level="INFO">${email} = douglashernandez@example.com</msg>
<status status="PASS" starttime="20230601 18:54:59.412" endtime="20230601 18:54:59.413"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 18:54:59.413" level="INFO">${password} = 8tENday16N33</msg>
<status status="PASS" starttime="20230601 18:54:59.413" endtime="20230601 18:54:59.413"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 18:54:59.414" level="INFO">${name} = Ryan Edwards</msg>
<status status="PASS" starttime="20230601 18:54:59.414" endtime="20230601 18:54:59.414"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 18:54:59.414" level="INFO">${email} = douglashernandez@example.com</msg>
<status status="PASS" starttime="20230601 18:54:59.414" endtime="20230601 18:54:59.414"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 18:54:59.415" level="INFO">${password} = 8tENday16N33</msg>
<status status="PASS" starttime="20230601 18:54:59.414" endtime="20230601 18:54:59.415"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.412" endtime="20230601 18:54:59.415"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 18:54:59.416" level="INFO">${payload} = {'nome': 'Ryan Edwards', 'email': 'douglashernandez@example.com', 'password': '8tENday16N33', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 18:54:59.415" endtime="20230601 18:54:59.416"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 18:54:59.416" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 18:54:59.416" endtime="20230601 18:54:59.416"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 18:54:59.481" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '119'} 
 body=b'{"nome": "Ryan Edwards", "email": "douglashernandez@example.com", "password": "8tENday16N33", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 18:54:59.481" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '11ad5179-b718-4821-aeea-b84120307349', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '47e9a285afa3fc03beeccff785d0cdfe', 'Date': 'Thu, 01 Jun 2023 18:54:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "PFcBI0ETW7IaghBY"
} 
 </msg>
<msg timestamp="20230601 18:54:59.482" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.416" endtime="20230601 18:54:59.482"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 18:54:59.483" level="INFO">${user_id} = PFcBI0ETW7IaghBY</msg>
<status status="PASS" starttime="20230601 18:54:59.482" endtime="20230601 18:54:59.483"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 18:54:59.483" level="INFO">${USER_ID} = PFcBI0ETW7IaghBY</msg>
<status status="PASS" starttime="20230601 18:54:59.483" endtime="20230601 18:54:59.484"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 18:54:59.484" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.484" endtime="20230601 18:54:59.484"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.415" endtime="20230601 18:54:59.484"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 18:54:59.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.485" endtime="20230601 18:54:59.485"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 18:54:59.485" endtime="20230601 18:54:59.486"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.484" endtime="20230601 18:54:59.486"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 18:54:59.487" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 18:54:59.486" endtime="20230601 18:54:59.487"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.486" endtime="20230601 18:54:59.487"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 18:54:59.410" endtime="20230601 18:54:59.487"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 18:54:59.489" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 18:54:59.489" endtime="20230601 18:54:59.489"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.488" endtime="20230601 18:54:59.489"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 18:54:59.565" level="INFO">GET Request : url=https://serverest.dev/usuarios/PFcBI0ETW7IaghBY 
 path_url=/usuarios/PFcBI0ETW7IaghBY 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 18:54:59.565" level="INFO">GET Response : url=https://serverest.dev/usuarios/PFcBI0ETW7IaghBY 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '71ae4350-da34-41c6-afa0-cdd3cdd1776d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ffea32ba261a9dc27ac35600cf41d4d2', 'Date': 'Thu, 01 Jun 2023 18:54:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '168'} 
 body={
    "nome": "Ryan Edwards",
    "email": "douglashernandez@example.com",
    "password": "8tENday16N33",
    "administrador": "false",
    "_id": "PFcBI0ETW7IaghBY"
} 
 </msg>
<msg timestamp="20230601 18:54:59.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.490" endtime="20230601 18:54:59.565"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 18:54:59.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.566" endtime="20230601 18:54:59.566"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.489" endtime="20230601 18:54:59.566"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 18:54:59.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.567" endtime="20230601 18:54:59.567"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 18:54:59.568" endtime="20230601 18:54:59.568"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.566" endtime="20230601 18:54:59.568"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 18:54:59.569" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 18:54:59.569" endtime="20230601 18:54:59.569"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.568" endtime="20230601 18:54:59.569"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 18:54:59.488" endtime="20230601 18:54:59.569"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 18:54:59.571" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 18:54:59.571" endtime="20230601 18:54:59.571"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.570" endtime="20230601 18:54:59.571"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 18:54:59.572" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 18:54:59.572" endtime="20230601 18:54:59.572"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 18:54:59.572" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 18:54:59.572" endtime="20230601 18:54:59.572"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 18:54:59.637" level="INFO">PUT Request : url=https://serverest.dev/usuarios/PFcBI0ETW7IaghBY 
 path_url=/usuarios/PFcBI0ETW7IaghBY 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 18:54:59.637" level="INFO">PUT Response : url=https://serverest.dev/usuarios/PFcBI0ETW7IaghBY 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '498e0ee7-3793-47dd-8b74-8bacebe8e248', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f78ba4002ef6172796a584314ea04933', 'Date': 'Thu, 01 Jun 2023 18:54:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 18:54:59.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.572" endtime="20230601 18:54:59.637"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 18:54:59.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.637" endtime="20230601 18:54:59.638"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.571" endtime="20230601 18:54:59.638"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 18:54:59.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.638" endtime="20230601 18:54:59.639"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 18:54:59.639" endtime="20230601 18:54:59.640"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.638" endtime="20230601 18:54:59.640"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 18:54:59.641" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 18:54:59.640" endtime="20230601 18:54:59.641"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.640" endtime="20230601 18:54:59.641"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 18:54:59.570" endtime="20230601 18:54:59.641"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 18:54:59.643" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 18:54:59.642" endtime="20230601 18:54:59.643"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.642" endtime="20230601 18:54:59.643"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 18:54:59.715" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/PFcBI0ETW7IaghBY 
 path_url=/usuarios/PFcBI0ETW7IaghBY 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 18:54:59.715" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/PFcBI0ETW7IaghBY 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bc177ccf-53d3-4942-99e3-2384a9075c23', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '53da0d8e8b0f28311b181f0b53636993', 'Date': 'Thu, 01 Jun 2023 18:54:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 18:54:59.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.644" endtime="20230601 18:54:59.716"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 18:54:59.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.716" endtime="20230601 18:54:59.716"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.643" endtime="20230601 18:54:59.716"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 18:54:59.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 18:54:59.717" endtime="20230601 18:54:59.718"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 18:54:59.718" endtime="20230601 18:54:59.719"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.717" endtime="20230601 18:54:59.719"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 18:54:59.720" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 18:54:59.719" endtime="20230601 18:54:59.720"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.719" endtime="20230601 18:54:59.720"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 18:54:59.642" endtime="20230601 18:54:59.720"/>
</test>
<status status="PASS" starttime="20230601 18:54:58.731" endtime="20230601 18:54:59.721"/>
</suite>
<status status="PASS" starttime="20230601 18:54:58.729" endtime="20230601 18:54:59.725"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 18:54:59.736" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 18:54:59.735" endtime="20230601 18:55:01.583"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 18:55:01.583" endtime="20230601 18:55:01.698"/>
</kw>
<status status="PASS" starttime="20230601 18:54:59.735" endtime="20230601 18:55:01.699"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 18:55:01.731" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 18:55:01.699" endtime="20230601 18:55:01.731"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:01.732" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 18:55:01.731" endtime="20230601 18:55:01.806"/>
</kw>
<status status="PASS" starttime="20230601 18:55:01.699" endtime="20230601 18:55:01.807"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:01.808" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 18:55:01.807" endtime="20230601 18:55:01.877"/>
</kw>
<status status="PASS" starttime="20230601 18:55:01.807" endtime="20230601 18:55:01.878"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 18:55:01.878" endtime="20230601 18:55:02.118"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 18:55:02.138" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 18:55:02.118" endtime="20230601 18:55:02.138"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 18:55:02.161" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 18:55:02.138" endtime="20230601 18:55:02.161"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 18:55:02.175" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 18:55:02.161" endtime="20230601 18:55:02.175"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 18:55:02.189" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 18:55:02.175" endtime="20230601 18:55:02.189"/>
</kw>
<status status="PASS" starttime="20230601 18:55:01.878" endtime="20230601 18:55:02.190"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 18:55:02.190" endtime="20230601 18:55:02.246"/>
</kw>
<status status="PASS" starttime="20230601 18:55:02.190" endtime="20230601 18:55:02.247"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 18:54:59.735" endtime="20230601 18:55:02.247"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 18:55:02.249" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 18:55:02.249" endtime="20230601 18:55:03.510"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 18:55:03.511" endtime="20230601 18:55:03.615"/>
</kw>
<status status="PASS" starttime="20230601 18:55:02.248" endtime="20230601 18:55:03.615"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 18:55:03.622" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 18:55:03.616" endtime="20230601 18:55:03.622"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:03.623" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 18:55:03.623" endtime="20230601 18:55:03.709"/>
</kw>
<status status="PASS" starttime="20230601 18:55:03.616" endtime="20230601 18:55:03.709"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 18:55:03.711" level="INFO">${name} = Jacob Green</msg>
<status status="PASS" starttime="20230601 18:55:03.710" endtime="20230601 18:55:03.711"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 18:55:03.711" level="INFO">${email} = fishermichael@example.net</msg>
<status status="PASS" starttime="20230601 18:55:03.711" endtime="20230601 18:55:03.711"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 18:55:03.712" level="INFO">${password} = 3PZDCPb9061P</msg>
<status status="PASS" starttime="20230601 18:55:03.711" endtime="20230601 18:55:03.712"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:03.713" level="INFO">Typing text 'Jacob Green' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 18:55:03.712" endtime="20230601 18:55:03.859"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:03.860" level="INFO">Typing text 'fishermichael@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 18:55:03.859" endtime="20230601 18:55:03.982"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:03.983" level="INFO">Typing text '3PZDCPb9061P' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 18:55:03.982" endtime="20230601 18:55:04.079"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:04.080" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 18:55:04.079" endtime="20230601 18:55:04.163"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 18:55:04.164" level="INFO">${name} = Jacob Green</msg>
<status status="PASS" starttime="20230601 18:55:04.163" endtime="20230601 18:55:04.164"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 18:55:04.164" level="INFO">${email} = fishermichael@example.net</msg>
<status status="PASS" starttime="20230601 18:55:04.164" endtime="20230601 18:55:04.164"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 18:55:04.165" level="INFO">${password} = 3PZDCPb9061P</msg>
<status status="PASS" starttime="20230601 18:55:04.164" endtime="20230601 18:55:04.165"/>
</kw>
<status status="PASS" starttime="20230601 18:55:03.710" endtime="20230601 18:55:04.165"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:04.166" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 18:55:04.165" endtime="20230601 18:55:04.232"/>
</kw>
<status status="PASS" starttime="20230601 18:55:04.165" endtime="20230601 18:55:04.232"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 18:55:04.233" endtime="20230601 18:55:04.470"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 18:55:04.489" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 18:55:04.470" endtime="20230601 18:55:04.490"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 18:55:04.504" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 18:55:04.490" endtime="20230601 18:55:04.504"/>
</kw>
<status status="PASS" starttime="20230601 18:55:04.232" endtime="20230601 18:55:04.505"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 18:55:04.505" endtime="20230601 18:55:04.560"/>
</kw>
<status status="PASS" starttime="20230601 18:55:04.505" endtime="20230601 18:55:04.561"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 18:55:02.248" endtime="20230601 18:55:04.561"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 18:55:04.563" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 18:55:04.562" endtime="20230601 18:55:05.759"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 18:55:05.760" endtime="20230601 18:55:05.864"/>
</kw>
<status status="PASS" starttime="20230601 18:55:04.562" endtime="20230601 18:55:05.864"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 18:55:05.870" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 18:55:05.865" endtime="20230601 18:55:05.870"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:05.871" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 18:55:05.871" endtime="20230601 18:55:05.956"/>
</kw>
<status status="PASS" starttime="20230601 18:55:05.864" endtime="20230601 18:55:05.956"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:05.958" level="INFO">Typing text 'Jacob Green' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 18:55:05.957" endtime="20230601 18:55:06.084"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:06.085" level="INFO">Typing text 'fishermichael@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 18:55:06.084" endtime="20230601 18:55:06.208"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:06.209" level="INFO">Typing text '3PZDCPb9061P' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 18:55:06.208" endtime="20230601 18:55:06.306"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:06.307" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 18:55:06.306" endtime="20230601 18:55:06.387"/>
</kw>
<status status="PASS" starttime="20230601 18:55:05.957" endtime="20230601 18:55:06.387"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 18:55:06.388" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 18:55:06.388" endtime="20230601 18:55:06.453"/>
</kw>
<status status="PASS" starttime="20230601 18:55:06.387" endtime="20230601 18:55:06.454"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 18:55:06.454" endtime="20230601 18:55:06.692"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 18:55:06.711" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 18:55:06.693" endtime="20230601 18:55:06.712"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 18:55:06.725" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 18:55:06.712" endtime="20230601 18:55:06.726"/>
</kw>
<status status="PASS" starttime="20230601 18:55:06.454" endtime="20230601 18:55:06.726"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 18:55:06.726" endtime="20230601 18:55:06.781"/>
</kw>
<status status="PASS" starttime="20230601 18:55:06.726" endtime="20230601 18:55:06.781"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 18:55:04.561" endtime="20230601 18:55:06.782"/>
</test>
<status status="PASS" starttime="20230601 18:54:59.727" endtime="20230601 18:55:06.783"/>
</suite>
<status status="PASS" starttime="20230601 18:54:59.726" endtime="20230601 18:55:06.784"/>
</suite>
<status status="PASS" starttime="20230601 18:54:58.710" endtime="20230601 18:55:06.785"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
