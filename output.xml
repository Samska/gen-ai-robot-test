<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.18 on linux)" generated="20230919 00:09:57.311" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230919 00:09:57.825" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230919 00:09:57.824" endtime="20230919 00:09:57.825"/>
</kw>
<status status="PASS" starttime="20230919 00:09:57.824" endtime="20230919 00:09:57.825"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230919 00:09:57.997" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230919 00:09:57.997" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '63fc2a6c18882ea51edfed691f365f5b;o=1', 'Date': 'Tue, 19 Sep 2023 00:09:57 GMT', 'Server': 'Google Frontend', 'Content-Length': '28035'} 
 body={
    "quantidade": 129,
    "usuarios": [
        {
            "nome": "Pedro Iago",
            "email": "fulano2023@qa.com",
            "password": "teste9",
            "administrador": "true",
            "_id": "07f5zVzGhzoj57Vv"
        },
        {
            "nome": "Newton Stehr",
            "email": "willian@example.org",
            "password": "awCb7A3m",
            "administrador": "false",
            "_id": "0d3teODHvMr0mlqP"
        },
        {
            "nome": "Carroll Jest Supertest",
            "email": "Aurelio.Dickens@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "0dCeToJXrXoVza3R"
        },
        {
            "nome": "Tess_Herman29",
            "email": "Brad_Strosin66@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "0ttKnbERHg3GLX7h"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Wm Jacobi",
            "email": "WmJacobi93@hotmail.com",
            "password": "3yD9ovJw4oG1glr",
            "administrador": "true",
            "_id": "1CRjccEWCemLqVYI"
        },
        {
            "nome": "Dr. Sylvester Nader",
            "email": "Dr.SylvesterNader_Mraz39@gmail.com",
            "password": "_QKTuXc0rQR12Ba",
            "administrador": "true",
            "_id": "1ZcK7btQ03hcCNOb"
        },
        {
            "nome": "Maria Cecília Nascimento",
            "email": "vinicius22@example.net",
            "password": "hGmA9(f#^0",
            "administrador": "true",
            "_id": "1y9AIWVxbKotNuoO"
        },
        {
            "nome": "Fulano da Silva",
            "email": "tird@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "2W4KJqtxsUW8jXGG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "Ashlee_Prohaska@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "2z7fRrBzSLokU42E"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rhix@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "3O0PqkngGiWTCrhq"
        },
        {
            "nome": "Casey Jest Supertest",
            "email": "Abagail_Jacobson41@yahoo.com",
            "password": "1234",
            "administrador": "true",
            "_id": "3RzAYz1HJ6WYtodu"
        },
        {
            "nome": "Fulano da Silva",
            "email": "iyjd@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "3jKkonYPXzRNtu7d"
        },
        {
            "nome": "Caio Duarte",
            "email": "benjamin67@example.org",
            "password": "P((52kZtgP",
            "administrador": "true",
            "_id": "4hpEet7RxccVJkv6"
        },
        {
            "nome": "Helene.Strosin",
            "email": "Calista_Powlowski16@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "5GmgEPwBOhvYat4V"
        },
        {
            "nome": "Gabriela Araújo",
            "email": "vicentealmeida@example.com",
            "password": "_x7+tnHopf",
            "administrador": "true",
            "_id": "6RmKLMeIJ257bq2A"
        },
        {
            "nome": "Tracy Jest Supertest Sr.",
            "email": "Jamil_Kuhic@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "6YXaztFv6p52Ztjq"
        },
        {
            "nome": "a",
            "email": "a1s2d3@teste.com",
            "password": "teste",
            "administrador": "false",
            "_id": "7B4VbNyxXME5pid9"
        },
        {
            "nome": "Jean Jest Supertest",
            "email": "Ike52@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "7gtfkH1QDswxzqyE"
        },
        {
            "nome": "Fulano da Silva",
            "email": "bdnp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "7okogUH0e1GbNSaD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ovww@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "8ZktVBEkiK48tRKW"
        },
        {
            "nome": "Sophia Fernandes",
            "email": "rodrigo71@example.net",
            "password": "*2!SZHd#HC",
            "administrador": "true",
            "_id": "98gKWRiBO3utHwph"
        },
        {
            "nome": "Dr. Jacob Weissnat",
            "email": "Dr.JacobWeissnat_Bins11@yahoo.com",
            "password": "C9uQkf9R4afNspP",
            "administrador": "true",
            "_id": "9BvnjCQ1xhsGgD0q"
        },
        {
            "nome": "Regina Jest Supertest",
            "email": "Jamison_Lubowitz@yahoo.com",
            "password": "1234",
            "administrador": "true",
            "_id": "B8pL3RVuaJYv6JVz"
        },
        {
            "nome": "Luna_Lind",
            "email": "Darwin_Langworth16@yahoo.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "BMmSzJsd0BEtMLik"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lnlgulyg@emailtest.com",
            "password": "1234",
            "administrador": "true",
            "_id": "Bn8eAiYVf6qUiM0m"
        },
        {
            "nome": "Neva.Wisozk",
            "email": "Etha.Lemke99@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "C1F07DYAmHCQSBQb"
        },
        {
            "nome": "Fulano da Silva",
            "email": "xvlgvexv@emailtest.com",
            "password": "1234",
            "administrador": "true",
            "_id": "Cf6U6osDOpAhMG74"
        },
        {
            "nome": "a",
            "email": "tester@teste.com",
            "password": "teste",
            "administrador": "false",
            "_id": "Cmz5COnHGIrQ0D9A"
        },
        {
            "nome": "a",
            "email": "silva@teste.com",
            "password": "1",
            "administrador": "false",
            "_id": "DG1pwLjGfYBl66Hg"
        },
        {
            "nome": "Pedro Iago",
            "email": "piago3@qa.com",
            "password": "teste9",
            "administrador": "true",
            "_id": "DylBJr1gI3Y1ykhG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "h1sb9vgu@emailtest.com",
            "password": "wSQ39jiiye7Br",
            "administrador": "true",
            "_id": "ETY48o8NbgtU49Zr"
        },
        {
            "nome": "Gabriel Duarte",
            "email": "ysantos@example.com",
            "password": "Bo8BxAQ&amp;4%",
            "administrador": "true",
            "_id": "EW9O8WyUlWax3TS9"
        },
        {
            "nome": "Emmett Jest Supertest",
            "email": "Markus.Dietrich39@yahoo.com",
            "password": "1234",
            "administrador": "true",
            "_id": "ElsS14TjmsS8CGTd"
        },
        {
            "nome": "Misty Jest Supertest",
            "email": "Anastacio_Mills@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "FNCZ37YKBmhyxRzA"
        },
        {
            "nome": "a",
            "email": "testan@teste.com",
            "password": "teste",
            "administrador": "false",
            "_id": "FYUW51fMrVcfXEuk"
        },
        {
            "nome": "Jermaine Cummings JD",
            "email": "pearline@example.org",
            "password": "WNr0d1WZoPSFy0",
            "administrador": "false",
            "_id": "GkJy9bK0k57HaVQm"
        },
        {
            "nome": "Demario.Morar9",
            "email": "Jayne.Zemlak@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "GzjJnxgdwYLALiYz"
        },
        {
            "nome": "teste",
            "email": "zteste@teste.com",
            "password": "teste",
            "administrador": "false",
            "_id": "HHwAeSzbwi3xDgHN"
        },
        {
            "nome": "Fulano da Silva",
            "email": "pnjl@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "HMTnqZxOvvTgMJjR"
        },
        {
            "nome": "Fulano da Silva",
            "email": "xuii@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "I3mntBzS9yW4Aro6"
        },
        {
            "nome": "Teste IESB",
            "email": "alunoiesb.qa@qa.com.br",
            "password": "engenhenharia",
            "administrador": "true",
            "_id": "IF7qcxswHTLSE8ty"
        },
        {
            "nome": "Rebecca Jest Supertest",
            "email": "Lazaro_Bernier@yahoo.com",
            "password": "1234",
            "administrador": "true",
            "_id": "IMPulCODQB8SUsWg"
        },
        {
            "nome": "Tammy Jest Supertest",
            "email": "Domenica_Gerhold5@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "IjLFhTnR877K1bFM"
        },
        {
            "nome": "Betsy Collier",
            "email": "BetsyCollier.Wiegand86@gmail.com",
            "password": "b2PnGNCNatdxFQ8",
            "administrador": "true",
            "_id": "InjqxRf2gHE9SFRq"
        },
        {
            "nome": "Uriah86",
            "email": "Arturo.Howe@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "IvJX5LNXnYRYHVV3"
        },
... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230919 00:09:57.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:57.826" endtime="20230919 00:09:57.997"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230919 00:09:57.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:57.997" endtime="20230919 00:09:57.998"/>
</kw>
<status status="PASS" starttime="20230919 00:09:57.825" endtime="20230919 00:09:57.998"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230919 00:09:57.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 00:09:57.998" endtime="20230919 00:09:57.999"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230919 00:09:57.999" endtime="20230919 00:09:58.000"/>
</kw>
<status status="PASS" starttime="20230919 00:09:57.998" endtime="20230919 00:09:58.000"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230919 00:09:58.003" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230919 00:09:58.001" endtime="20230919 00:09:58.003"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.000" endtime="20230919 00:09:58.003"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230919 00:09:57.823" endtime="20230919 00:09:58.003"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230919 00:09:58.005" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230919 00:09:58.004" endtime="20230919 00:09:58.005"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.004" endtime="20230919 00:09:58.005"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230919 00:09:58.006" level="INFO">${name} = Lauren Patterson</msg>
<status status="PASS" starttime="20230919 00:09:58.005" endtime="20230919 00:09:58.006"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230919 00:09:58.007" level="INFO">${email} = kruegererin@example.org</msg>
<status status="PASS" starttime="20230919 00:09:58.006" endtime="20230919 00:09:58.007"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230919 00:09:58.007" level="INFO">${password} = JyTxnNS95I64</msg>
<status status="PASS" starttime="20230919 00:09:58.007" endtime="20230919 00:09:58.007"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 00:09:58.008" level="INFO">${name} = Lauren Patterson</msg>
<status status="PASS" starttime="20230919 00:09:58.007" endtime="20230919 00:09:58.008"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 00:09:58.008" level="INFO">${email} = kruegererin@example.org</msg>
<status status="PASS" starttime="20230919 00:09:58.008" endtime="20230919 00:09:58.008"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 00:09:58.008" level="INFO">${password} = JyTxnNS95I64</msg>
<status status="PASS" starttime="20230919 00:09:58.008" endtime="20230919 00:09:58.008"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.005" endtime="20230919 00:09:58.009"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230919 00:09:58.009" level="INFO">${payload} = {'nome': 'Lauren Patterson', 'email': 'kruegererin@example.org', 'password': 'JyTxnNS95I64', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230919 00:09:58.009" endtime="20230919 00:09:58.009"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230919 00:09:58.010" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230919 00:09:58.010" endtime="20230919 00:09:58.010"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230919 00:09:58.084" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '118'} 
 body=b'{"nome": "Lauren Patterson", "email": "kruegererin@example.org", "password": "JyTxnNS95I64", "administrador": "false"}' 
 </msg>
<msg timestamp="20230919 00:09:58.084" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a88ec8c7a50d131dfe1e30482faeabb8', 'Date': 'Tue, 19 Sep 2023 00:09:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "RG2hlKzNzrQ8REFO"
} 
 </msg>
<msg timestamp="20230919 00:09:58.084" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.010" endtime="20230919 00:09:58.084"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230919 00:09:58.085" level="INFO">${user_id} = RG2hlKzNzrQ8REFO</msg>
<status status="PASS" starttime="20230919 00:09:58.084" endtime="20230919 00:09:58.085"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230919 00:09:58.086" level="INFO">${USER_ID} = RG2hlKzNzrQ8REFO</msg>
<status status="PASS" starttime="20230919 00:09:58.086" endtime="20230919 00:09:58.086"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230919 00:09:58.087" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.086" endtime="20230919 00:09:58.087"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.009" endtime="20230919 00:09:58.087"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230919 00:09:58.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.087" endtime="20230919 00:09:58.088"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230919 00:09:58.088" endtime="20230919 00:09:58.089"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.087" endtime="20230919 00:09:58.089"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230919 00:09:58.090" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230919 00:09:58.089" endtime="20230919 00:09:58.090"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.089" endtime="20230919 00:09:58.090"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230919 00:09:58.004" endtime="20230919 00:09:58.090"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230919 00:09:58.092" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230919 00:09:58.092" endtime="20230919 00:09:58.092"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.091" endtime="20230919 00:09:58.092"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230919 00:09:58.161" level="INFO">GET Request : url=https://serverest.dev/usuarios/RG2hlKzNzrQ8REFO 
 path_url=/usuarios/RG2hlKzNzrQ8REFO 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230919 00:09:58.161" level="INFO">GET Response : url=https://serverest.dev/usuarios/RG2hlKzNzrQ8REFO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'db848e128c1333217cc67b6c0f448cf2', 'Date': 'Tue, 19 Sep 2023 00:09:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '167'} 
 body={
    "nome": "Lauren Patterson",
    "email": "kruegererin@example.org",
    "password": "JyTxnNS95I64",
    "administrador": "false",
    "_id": "RG2hlKzNzrQ8REFO"
} 
 </msg>
<msg timestamp="20230919 00:09:58.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.093" endtime="20230919 00:09:58.162"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230919 00:09:58.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.162" endtime="20230919 00:09:58.162"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.092" endtime="20230919 00:09:58.162"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230919 00:09:58.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.163" endtime="20230919 00:09:58.164"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230919 00:09:58.164" endtime="20230919 00:09:58.165"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.162" endtime="20230919 00:09:58.165"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230919 00:09:58.166" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230919 00:09:58.165" endtime="20230919 00:09:58.166"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.165" endtime="20230919 00:09:58.166"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230919 00:09:58.091" endtime="20230919 00:09:58.166"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230919 00:09:58.168" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230919 00:09:58.168" endtime="20230919 00:09:58.168"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.168" endtime="20230919 00:09:58.169"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230919 00:09:58.169" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230919 00:09:58.169" endtime="20230919 00:09:58.169"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230919 00:09:58.170" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230919 00:09:58.169" endtime="20230919 00:09:58.170"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230919 00:09:58.239" level="INFO">PUT Request : url=https://serverest.dev/usuarios/RG2hlKzNzrQ8REFO 
 path_url=/usuarios/RG2hlKzNzrQ8REFO 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230919 00:09:58.239" level="INFO">PUT Response : url=https://serverest.dev/usuarios/RG2hlKzNzrQ8REFO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '92287ea7b6db983fe0541e6cd0693e12', 'Date': 'Tue, 19 Sep 2023 00:09:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230919 00:09:58.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.170" endtime="20230919 00:09:58.239"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230919 00:09:58.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.239" endtime="20230919 00:09:58.240"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.169" endtime="20230919 00:09:58.240"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230919 00:09:58.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.240" endtime="20230919 00:09:58.241"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230919 00:09:58.242" endtime="20230919 00:09:58.242"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.240" endtime="20230919 00:09:58.242"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230919 00:09:58.243" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230919 00:09:58.243" endtime="20230919 00:09:58.243"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.242" endtime="20230919 00:09:58.244"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230919 00:09:58.167" endtime="20230919 00:09:58.244"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230919 00:09:58.245" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230919 00:09:58.245" endtime="20230919 00:09:58.246"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.245" endtime="20230919 00:09:58.246"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230919 00:09:58.332" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/RG2hlKzNzrQ8REFO 
 path_url=/usuarios/RG2hlKzNzrQ8REFO 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230919 00:09:58.332" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/RG2hlKzNzrQ8REFO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a4ebb2264ddd5ca697eeb3d4086bee05', 'Date': 'Tue, 19 Sep 2023 00:09:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230919 00:09:58.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.246" endtime="20230919 00:09:58.332"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230919 00:09:58.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.333" endtime="20230919 00:09:58.333"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.246" endtime="20230919 00:09:58.333"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230919 00:09:58.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230919 00:09:58.334" endtime="20230919 00:09:58.335"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230919 00:09:58.335" endtime="20230919 00:09:58.336"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.333" endtime="20230919 00:09:58.336"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230919 00:09:58.337" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230919 00:09:58.336" endtime="20230919 00:09:58.337"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.336" endtime="20230919 00:09:58.337"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230919 00:09:58.244" endtime="20230919 00:09:58.337"/>
</test>
<status status="PASS" starttime="20230919 00:09:57.335" endtime="20230919 00:09:58.338"/>
</suite>
<status status="PASS" starttime="20230919 00:09:57.333" endtime="20230919 00:09:58.340"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230919 00:09:58.352" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230919 00:09:58.351" endtime="20230919 00:10:00.753"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230919 00:10:00.753" endtime="20230919 00:10:00.881"/>
</kw>
<status status="PASS" starttime="20230919 00:09:58.351" endtime="20230919 00:10:00.881"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230919 00:10:00.887" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230919 00:10:00.882" endtime="20230919 00:10:00.887"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:00.888" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230919 00:10:00.887" endtime="20230919 00:10:00.950"/>
</kw>
<status status="PASS" starttime="20230919 00:10:00.881" endtime="20230919 00:10:00.950"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:00.952" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230919 00:10:00.951" endtime="20230919 00:10:01.021"/>
</kw>
<status status="PASS" starttime="20230919 00:10:00.951" endtime="20230919 00:10:01.021"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230919 00:10:01.022" endtime="20230919 00:10:01.257"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230919 00:10:01.276" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230919 00:10:01.257" endtime="20230919 00:10:01.277"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230919 00:10:01.293" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230919 00:10:01.277" endtime="20230919 00:10:01.293"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230919 00:10:01.306" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230919 00:10:01.293" endtime="20230919 00:10:01.307"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230919 00:10:01.320" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230919 00:10:01.307" endtime="20230919 00:10:01.320"/>
</kw>
<status status="PASS" starttime="20230919 00:10:01.021" endtime="20230919 00:10:01.320"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230919 00:10:01.321" endtime="20230919 00:10:01.377"/>
</kw>
<status status="PASS" starttime="20230919 00:10:01.320" endtime="20230919 00:10:01.377"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230919 00:09:58.350" endtime="20230919 00:10:01.377"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230919 00:10:01.379" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230919 00:10:01.379" endtime="20230919 00:10:02.726"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230919 00:10:02.727" endtime="20230919 00:10:02.849"/>
</kw>
<status status="PASS" starttime="20230919 00:10:01.378" endtime="20230919 00:10:02.849"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230919 00:10:02.855" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230919 00:10:02.850" endtime="20230919 00:10:02.855"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:02.856" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230919 00:10:02.856" endtime="20230919 00:10:02.912"/>
</kw>
<status status="PASS" starttime="20230919 00:10:02.849" endtime="20230919 00:10:02.912"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230919 00:10:02.913" level="INFO">${name} = Connie Callahan</msg>
<status status="PASS" starttime="20230919 00:10:02.913" endtime="20230919 00:10:02.913"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230919 00:10:02.914" level="INFO">${email} = ritamorris@example.org</msg>
<status status="PASS" starttime="20230919 00:10:02.914" endtime="20230919 00:10:02.914"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230919 00:10:02.915" level="INFO">${password} = BVBPIim479gg</msg>
<status status="PASS" starttime="20230919 00:10:02.914" endtime="20230919 00:10:02.915"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:02.915" level="INFO">Typing text 'Connie Callahan' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230919 00:10:02.915" endtime="20230919 00:10:03.044"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:03.045" level="INFO">Typing text 'ritamorris@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230919 00:10:03.044" endtime="20230919 00:10:03.156"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:03.158" level="INFO">Typing text 'BVBPIim479gg' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230919 00:10:03.157" endtime="20230919 00:10:03.259"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:03.260" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230919 00:10:03.260" endtime="20230919 00:10:03.339"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 00:10:03.340" level="INFO">${name} = Connie Callahan</msg>
<status status="PASS" starttime="20230919 00:10:03.340" endtime="20230919 00:10:03.340"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 00:10:03.341" level="INFO">${email} = ritamorris@example.org</msg>
<status status="PASS" starttime="20230919 00:10:03.340" endtime="20230919 00:10:03.341"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230919 00:10:03.341" level="INFO">${password} = BVBPIim479gg</msg>
<status status="PASS" starttime="20230919 00:10:03.341" endtime="20230919 00:10:03.341"/>
</kw>
<status status="PASS" starttime="20230919 00:10:02.912" endtime="20230919 00:10:03.341"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:03.342" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230919 00:10:03.342" endtime="20230919 00:10:03.403"/>
</kw>
<status status="PASS" starttime="20230919 00:10:03.341" endtime="20230919 00:10:03.404"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230919 00:10:03.404" endtime="20230919 00:10:03.639"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230919 00:10:03.658" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230919 00:10:03.640" endtime="20230919 00:10:03.659"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230919 00:10:03.672" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230919 00:10:03.659" endtime="20230919 00:10:03.672"/>
</kw>
<status status="PASS" starttime="20230919 00:10:03.404" endtime="20230919 00:10:03.672"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230919 00:10:03.673" endtime="20230919 00:10:03.728"/>
</kw>
<status status="PASS" starttime="20230919 00:10:03.673" endtime="20230919 00:10:03.728"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230919 00:10:01.378" endtime="20230919 00:10:03.728"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230919 00:10:03.731" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230919 00:10:03.730" endtime="20230919 00:10:05.038"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230919 00:10:05.038" endtime="20230919 00:10:05.142"/>
</kw>
<status status="PASS" starttime="20230919 00:10:03.730" endtime="20230919 00:10:05.142"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230919 00:10:05.175" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230919 00:10:05.143" endtime="20230919 00:10:05.175"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:05.176" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230919 00:10:05.175" endtime="20230919 00:10:05.235"/>
</kw>
<status status="PASS" starttime="20230919 00:10:05.143" endtime="20230919 00:10:05.235"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:05.236" level="INFO">Typing text 'Connie Callahan' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230919 00:10:05.235" endtime="20230919 00:10:05.362"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:05.363" level="INFO">Typing text 'ritamorris@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230919 00:10:05.362" endtime="20230919 00:10:05.469"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:05.470" level="INFO">Typing text 'BVBPIim479gg' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230919 00:10:05.470" endtime="20230919 00:10:05.565"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:05.566" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230919 00:10:05.565" endtime="20230919 00:10:05.645"/>
</kw>
<status status="PASS" starttime="20230919 00:10:05.235" endtime="20230919 00:10:05.645"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230919 00:10:05.646" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230919 00:10:05.646" endtime="20230919 00:10:05.707"/>
</kw>
<status status="PASS" starttime="20230919 00:10:05.645" endtime="20230919 00:10:05.707"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230919 00:10:05.708" endtime="20230919 00:10:05.942"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230919 00:10:05.961" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230919 00:10:05.943" endtime="20230919 00:10:05.961"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230919 00:10:05.975" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230919 00:10:05.961" endtime="20230919 00:10:05.976"/>
</kw>
<status status="PASS" starttime="20230919 00:10:05.707" endtime="20230919 00:10:05.976"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230919 00:10:05.976" endtime="20230919 00:10:06.031"/>
</kw>
<status status="PASS" starttime="20230919 00:10:05.976" endtime="20230919 00:10:06.031"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230919 00:10:03.729" endtime="20230919 00:10:06.031"/>
</test>
<status status="PASS" starttime="20230919 00:09:58.342" endtime="20230919 00:10:06.032"/>
</suite>
<status status="PASS" starttime="20230919 00:09:58.340" endtime="20230919 00:10:06.034"/>
</suite>
<status status="PASS" starttime="20230919 00:09:57.312" endtime="20230919 00:10:06.035"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
