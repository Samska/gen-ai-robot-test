<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230522 13:23:03.277" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:23:04.109" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:23:04.108" endtime="20230522 13:23:04.109"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.108" endtime="20230522 13:23:04.109"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:23:04.263" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:23:04.263" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7bb79089-106a-458a-a428-273bc300c597', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7782eafc805be037ac67911e6c27dc4d;o=1', 'Date': 'Mon, 22 May 2023 13:23:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '1771'} 
 body={
    "quantidade": 8,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "cwkpuktx",
            "email": "cwkpuktx@qa.com",
            "password": "cwkpuktx",
            "administrador": "false",
            "_id": "8GMc4wczqMQBOBZx"
        },
        {
            "nome": "Alexis Burnett",
            "email": "torresdebbie@example.com",
            "password": "FHdMznir6YzJ",
            "administrador": "true",
            "_id": "8JRlCuRqRwWothGu"
        },
        {
            "nome": "Mariah Vaughan",
            "email": "michael84@example.com",
            "password": "MsdhntXM0Bo3",
            "administrador": "true",
            "_id": "Cng5QlDV2dmwnaD6"
        },
        {
            "nome": "David Walton",
            "email": "jmiller@example.com",
            "password": "m33CxzZc6BiA",
            "administrador": "true",
            "_id": "MPSxGdwNDmcX3Kos"
        },
        {
            "nome": "{{nome}}",
            "email": "Annabell@qa.com.br",
            "password": "rsufMwpMdtzksgs",
            "administrador": "true",
            "_id": "PoEdyv8dPUQ7S1Xn"
        },
        {
            "nome": "Timothy Werner",
            "email": "ebailey@example.com",
            "password": "1Rx@4DrMJi",
            "administrador": "true",
            "_id": "VoVnSiPQ9t1MBWuE"
        },
        {
            "nome": "Jose Milton",
            "email": "milton@1234578923101010271109.com",
            "password": "test123",
            "administrador": "true",
            "_id": "gVP9mDqHqLvFeI2W"
        }
    ]
} 
 </msg>
<msg timestamp="20230522 13:23:04.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.110" endtime="20230522 13:23:04.263"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:23:04.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.264" endtime="20230522 13:23:04.264"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.110" endtime="20230522 13:23:04.264"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:23:04.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.265" endtime="20230522 13:23:04.266"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:23:04.266" endtime="20230522 13:23:04.267"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.264" endtime="20230522 13:23:04.267"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:23:04.268" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 13:23:04.268" endtime="20230522 13:23:04.268"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.267" endtime="20230522 13:23:04.269"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:23:04.106" endtime="20230522 13:23:04.269"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:23:04.271" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:23:04.270" endtime="20230522 13:23:04.271"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.270" endtime="20230522 13:23:04.271"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 13:23:04.273" level="INFO">${name} = Dean Owen</msg>
<status status="PASS" starttime="20230522 13:23:04.272" endtime="20230522 13:23:04.273"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 13:23:04.273" level="INFO">${email} = milleralicia@example.com</msg>
<status status="PASS" starttime="20230522 13:23:04.273" endtime="20230522 13:23:04.273"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 13:23:04.274" level="INFO">${password} = A6sZT6SqJvP3</msg>
<status status="PASS" starttime="20230522 13:23:04.273" endtime="20230522 13:23:04.274"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:23:04.275" level="INFO">${name} = Dean Owen</msg>
<status status="PASS" starttime="20230522 13:23:04.274" endtime="20230522 13:23:04.275"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:23:04.275" level="INFO">${email} = milleralicia@example.com</msg>
<status status="PASS" starttime="20230522 13:23:04.275" endtime="20230522 13:23:04.275"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:23:04.276" level="INFO">${password} = A6sZT6SqJvP3</msg>
<status status="PASS" starttime="20230522 13:23:04.275" endtime="20230522 13:23:04.276"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.271" endtime="20230522 13:23:04.276"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:23:04.277" level="INFO">${payload} = {'nome': 'Dean Owen', 'email': 'milleralicia@example.com', 'password': 'A6sZT6SqJvP3', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 13:23:04.276" endtime="20230522 13:23:04.277"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:23:04.277" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 13:23:04.277" endtime="20230522 13:23:04.278"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:23:04.349" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Dean Owen", "email": "milleralicia@example.com", "password": "A6sZT6SqJvP3", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 13:23:04.349" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3ee10e5d-e0f8-494d-9ac8-e42813f5d0e4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8daf87dc1b1bb3c2eb1333b7245006e2', 'Date': 'Mon, 22 May 2023 13:23:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Yxn0UT9ZcE31XMrO"
} 
 </msg>
<msg timestamp="20230522 13:23:04.350" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.278" endtime="20230522 13:23:04.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230522 13:23:04.351" level="INFO">${user_id} = Yxn0UT9ZcE31XMrO</msg>
<status status="PASS" starttime="20230522 13:23:04.350" endtime="20230522 13:23:04.351"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230522 13:23:04.352" level="INFO">${USER_ID} = Yxn0UT9ZcE31XMrO</msg>
<status status="PASS" starttime="20230522 13:23:04.352" endtime="20230522 13:23:04.352"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:23:04.353" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.352" endtime="20230522 13:23:04.353"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.276" endtime="20230522 13:23:04.353"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:23:04.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.354" endtime="20230522 13:23:04.355"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:23:04.355" endtime="20230522 13:23:04.356"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.353" endtime="20230522 13:23:04.356"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:23:04.357" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 13:23:04.356" endtime="20230522 13:23:04.357"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.356" endtime="20230522 13:23:04.357"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:23:04.269" endtime="20230522 13:23:04.358"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:23:04.360" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:23:04.359" endtime="20230522 13:23:04.360"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.359" endtime="20230522 13:23:04.361"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:23:04.429" level="INFO">GET Request : url=https://serverest.dev/usuarios/Yxn0UT9ZcE31XMrO 
 path_url=/usuarios/Yxn0UT9ZcE31XMrO 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:23:04.430" level="INFO">GET Response : url=https://serverest.dev/usuarios/Yxn0UT9ZcE31XMrO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e94dc401-4b5b-4a46-94d6-5b4eb320f1f4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '06f3b7d01f4c96b8de52a281496aaa26', 'Date': 'Mon, 22 May 2023 13:23:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Dean Owen",
    "email": "milleralicia@example.com",
    "password": "A6sZT6SqJvP3",
    "administrador": "false",
    "_id": "Yxn0UT9ZcE31XMrO"
} 
 </msg>
<msg timestamp="20230522 13:23:04.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.361" endtime="20230522 13:23:04.430"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:23:04.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.430" endtime="20230522 13:23:04.431"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.361" endtime="20230522 13:23:04.431"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:23:04.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.431" endtime="20230522 13:23:04.432"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:23:04.432" endtime="20230522 13:23:04.433"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.431" endtime="20230522 13:23:04.433"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:23:04.435" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230522 13:23:04.434" endtime="20230522 13:23:04.435"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.434" endtime="20230522 13:23:04.435"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:23:04.358" endtime="20230522 13:23:04.435"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:23:04.437" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:23:04.437" endtime="20230522 13:23:04.438"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.436" endtime="20230522 13:23:04.438"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:23:04.439" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 13:23:04.438" endtime="20230522 13:23:04.439"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:23:04.439" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 13:23:04.439" endtime="20230522 13:23:04.439"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:23:04.511" level="INFO">PUT Request : url=https://serverest.dev/usuarios/Yxn0UT9ZcE31XMrO 
 path_url=/usuarios/Yxn0UT9ZcE31XMrO 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 13:23:04.511" level="INFO">PUT Response : url=https://serverest.dev/usuarios/Yxn0UT9ZcE31XMrO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c01f576b-8261-4f51-a101-d66555b44a9f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '38c8922e779febba0540fcec068cfc26', 'Date': 'Mon, 22 May 2023 13:23:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230522 13:23:04.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.439" endtime="20230522 13:23:04.511"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:23:04.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.511" endtime="20230522 13:23:04.512"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.438" endtime="20230522 13:23:04.512"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:23:04.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.513" endtime="20230522 13:23:04.514"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:23:04.514" endtime="20230522 13:23:04.515"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.512" endtime="20230522 13:23:04.515"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:23:04.516" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 13:23:04.516" endtime="20230522 13:23:04.516"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.515" endtime="20230522 13:23:04.517"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:23:04.436" endtime="20230522 13:23:04.517"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:23:04.519" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:23:04.518" endtime="20230522 13:23:04.520"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.518" endtime="20230522 13:23:04.520"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:23:04.589" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/Yxn0UT9ZcE31XMrO 
 path_url=/usuarios/Yxn0UT9ZcE31XMrO 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:23:04.589" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/Yxn0UT9ZcE31XMrO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '71bbe1fe-7163-4c6f-a8ae-ea31a65e46a5', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8dd934378261f59511a06589b95a9930', 'Date': 'Mon, 22 May 2023 13:23:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230522 13:23:04.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.520" endtime="20230522 13:23:04.589"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:23:04.590" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.590" endtime="20230522 13:23:04.590"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.520" endtime="20230522 13:23:04.590"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:23:04.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:23:04.591" endtime="20230522 13:23:04.592"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:23:04.592" endtime="20230522 13:23:04.593"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.590" endtime="20230522 13:23:04.593"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:23:04.594" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 13:23:04.593" endtime="20230522 13:23:04.594"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.593" endtime="20230522 13:23:04.594"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:23:04.517" endtime="20230522 13:23:04.594"/>
</test>
<status status="PASS" starttime="20230522 13:23:03.313" endtime="20230522 13:23:04.596"/>
</suite>
<status status="PASS" starttime="20230522 13:23:03.311" endtime="20230522 13:23:04.598"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:23:04.613" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:23:04.612" endtime="20230522 13:23:07.251"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:23:07.251" endtime="20230522 13:23:07.358"/>
</kw>
<status status="PASS" starttime="20230522 13:23:04.611" endtime="20230522 13:23:07.358"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:23:07.366" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:23:07.359" endtime="20230522 13:23:07.366"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:07.367" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:23:07.366" endtime="20230522 13:23:07.503"/>
</kw>
<status status="PASS" starttime="20230522 13:23:07.358" endtime="20230522 13:23:07.503"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:07.504" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:23:07.504" endtime="20230522 13:23:07.592"/>
</kw>
<status status="PASS" starttime="20230522 13:23:07.503" endtime="20230522 13:23:07.593"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:23:07.593" endtime="20230522 13:23:07.837"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:23:07.861" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:23:07.838" endtime="20230522 13:23:07.861"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:23:07.882" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:23:07.861" endtime="20230522 13:23:07.882"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:23:07.904" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:23:07.882" endtime="20230522 13:23:07.904"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:23:07.921" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:23:07.904" endtime="20230522 13:23:07.921"/>
</kw>
<status status="PASS" starttime="20230522 13:23:07.593" endtime="20230522 13:23:07.922"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:23:07.923" endtime="20230522 13:23:07.980"/>
</kw>
<status status="PASS" starttime="20230522 13:23:07.922" endtime="20230522 13:23:07.980"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:23:04.611" endtime="20230522 13:23:07.980"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:23:07.983" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:23:07.982" endtime="20230522 13:23:09.256"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:23:09.256" endtime="20230522 13:23:09.362"/>
</kw>
<status status="PASS" starttime="20230522 13:23:07.981" endtime="20230522 13:23:09.362"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:23:09.383" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:23:09.363" endtime="20230522 13:23:09.383"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:09.385" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:23:09.384" endtime="20230522 13:23:09.502"/>
</kw>
<status status="PASS" starttime="20230522 13:23:09.362" endtime="20230522 13:23:09.503"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 13:23:09.504" level="INFO">${name} = Hailey Joseph</msg>
<status status="PASS" starttime="20230522 13:23:09.503" endtime="20230522 13:23:09.504"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 13:23:09.505" level="INFO">${email} = ericareynolds@example.org</msg>
<status status="PASS" starttime="20230522 13:23:09.504" endtime="20230522 13:23:09.505"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 13:23:09.506" level="INFO">${password} = 2mblVzBFHBLD</msg>
<status status="PASS" starttime="20230522 13:23:09.505" endtime="20230522 13:23:09.506"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:09.507" level="INFO">Typing text 'Hailey Joseph' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 13:23:09.506" endtime="20230522 13:23:09.679"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:09.680" level="INFO">Typing text 'ericareynolds@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 13:23:09.680" endtime="20230522 13:23:09.848"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:09.850" level="INFO">Typing text '2mblVzBFHBLD' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 13:23:09.849" endtime="20230522 13:23:09.977"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:09.978" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 13:23:09.977" endtime="20230522 13:23:10.088"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:23:10.089" level="INFO">${name} = Hailey Joseph</msg>
<status status="PASS" starttime="20230522 13:23:10.089" endtime="20230522 13:23:10.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:23:10.090" level="INFO">${email} = ericareynolds@example.org</msg>
<status status="PASS" starttime="20230522 13:23:10.089" endtime="20230522 13:23:10.090"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:23:10.090" level="INFO">${password} = 2mblVzBFHBLD</msg>
<status status="PASS" starttime="20230522 13:23:10.090" endtime="20230522 13:23:10.090"/>
</kw>
<status status="PASS" starttime="20230522 13:23:09.503" endtime="20230522 13:23:10.090"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:10.092" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:23:10.091" endtime="20230522 13:23:10.184"/>
</kw>
<status status="PASS" starttime="20230522 13:23:10.091" endtime="20230522 13:23:10.184"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucessor&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:23:10.185" endtime="20230522 13:23:10.430"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:23:10.454" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:23:10.431" endtime="20230522 13:23:10.454"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:23:10.656" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230522 13:23:10.656" level="FAIL">Page should have contained text 'Cadastro realizado com sucessor' but did not.</msg>
<status status="FAIL" starttime="20230522 13:23:10.454" endtime="20230522 13:23:10.657"/>
</kw>
<status status="FAIL" starttime="20230522 13:23:10.185" endtime="20230522 13:23:10.657"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:23:10.659" endtime="20230522 13:23:10.718"/>
</kw>
<status status="PASS" starttime="20230522 13:23:10.658" endtime="20230522 13:23:10.718"/>
</kw>
<tag>ui</tag>
<status status="FAIL" starttime="20230522 13:23:07.981" endtime="20230522 13:23:10.718">Page should have contained text 'Cadastro realizado com sucessor' but did not.</status>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:23:10.721" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:23:10.720" endtime="20230522 13:23:11.965"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:23:11.965" endtime="20230522 13:23:12.071"/>
</kw>
<status status="PASS" starttime="20230522 13:23:10.720" endtime="20230522 13:23:12.071"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:23:12.079" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:23:12.072" endtime="20230522 13:23:12.079"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:12.080" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:23:12.079" endtime="20230522 13:23:12.168"/>
</kw>
<status status="PASS" starttime="20230522 13:23:12.072" endtime="20230522 13:23:12.168"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:12.170" level="INFO">Typing text 'Hailey Joseph' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 13:23:12.169" endtime="20230522 13:23:12.371"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:12.372" level="INFO">Typing text 'ericareynolds@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 13:23:12.371" endtime="20230522 13:23:12.543"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:12.544" level="INFO">Typing text '2mblVzBFHBLD' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 13:23:12.543" endtime="20230522 13:23:12.681"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:12.682" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 13:23:12.681" endtime="20230522 13:23:12.791"/>
</kw>
<status status="PASS" starttime="20230522 13:23:12.168" endtime="20230522 13:23:12.792"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:23:12.793" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:23:12.793" endtime="20230522 13:23:12.882"/>
</kw>
<status status="PASS" starttime="20230522 13:23:12.792" endtime="20230522 13:23:12.882"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:23:12.883" endtime="20230522 13:23:13.127"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:23:13.154" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:23:13.127" endtime="20230522 13:23:13.155"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:23:13.175" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230522 13:23:13.155" endtime="20230522 13:23:13.175"/>
</kw>
<status status="PASS" starttime="20230522 13:23:12.883" endtime="20230522 13:23:13.175"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:23:13.176" endtime="20230522 13:23:13.232"/>
</kw>
<status status="PASS" starttime="20230522 13:23:13.175" endtime="20230522 13:23:13.232"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:23:10.719" endtime="20230522 13:23:13.232"/>
</test>
<status status="FAIL" starttime="20230522 13:23:04.601" endtime="20230522 13:23:13.234"/>
</suite>
<status status="FAIL" starttime="20230522 13:23:04.598" endtime="20230522 13:23:13.236"/>
</suite>
<status status="FAIL" starttime="20230522 13:23:03.278" endtime="20230522 13:23:13.238"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="2" fail="1" skip="0">ui</stat>
</tag>
<suite>
<stat pass="7" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="2" fail="1" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="2" fail="1" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
