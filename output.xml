<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230525 21:30:26.934" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:30:27.612" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:30:27.612" endtime="20230525 21:30:27.613"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.611" endtime="20230525 21:30:27.613"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:30:27.843" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230525 21:30:27.843" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '124421cd-f9f7-4f92-8aea-ff68bd31dcc7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '90b7040ec8f4549ba193525fedb617f9;o=1', 'Date': 'Thu, 25 May 2023 21:30:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '2622'} 
 body={
    "quantidade": 12,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "cryz@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5Wlo4mCHoDjNaP5x"
        },
        {
            "nome": "Patrick Allen",
            "email": "danielle42@example.net",
            "password": "rw5IP9oHPT6s",
            "administrador": "true",
            "_id": "GOf0OqoDNkcDuurY"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "ujxn@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "HfpK4LAx1RO9mZ3S"
        },
        {
            "nome": "Nancy Brown",
            "email": "walterdavis@example.com",
            "password": "qKZjeZoSb6PD",
            "administrador": "true",
            "_id": "ORRSONnYKEYQe6c8"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "czll@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "YOgJidev4MpmkvO2"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "bksi@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "d9dfzIbziIntlQrT"
        },
        {
            "nome": "Timothy Buchanan",
            "email": "kallen@example.org",
            "password": "KRUDTtcR4pCe",
            "administrador": "true",
            "_id": "oixvdj6ujFoOkGdt"
        },
        {
            "nome": "{{nome}}",
            "email": "Kaia@qa.com.br",
            "password": "R9tZkf9cCyWYexP",
            "administrador": "true",
            "_id": "prHe7mOKBshMbPuU"
        },
        {
            "nome": "Robin Gallagher DVM",
            "email": "melissa56@example.com",
            "password": "1bTScLAQ87Rk",
            "administrador": "true",
            "_id": "re6Zfuq7Tv3kKF0K"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "qijl@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "rmQfGTfsl3IptIaP"
        },
        {
            "nome": "{{nome}}",
            "email": "Coty@qa.com.br",
            "password": "ohUPWAS_LS3Kq3k",
            "administrador": "true",
            "_id": "rx49xrrBzkIZWoMz"
        }
    ]
} 
 </msg>
<msg timestamp="20230525 21:30:27.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:27.613" endtime="20230525 21:30:27.843"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:30:27.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:27.844" endtime="20230525 21:30:27.845"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.613" endtime="20230525 21:30:27.845"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:30:27.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:30:27.845" endtime="20230525 21:30:27.846"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:30:27.846" endtime="20230525 21:30:27.847"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.845" endtime="20230525 21:30:27.847"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:30:27.848" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230525 21:30:27.848" endtime="20230525 21:30:27.848"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.847" endtime="20230525 21:30:27.849"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:30:27.610" endtime="20230525 21:30:27.849"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:30:27.851" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:30:27.851" endtime="20230525 21:30:27.852"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.850" endtime="20230525 21:30:27.852"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230525 21:30:27.853" level="INFO">${name} = Sandra Carter</msg>
<status status="PASS" starttime="20230525 21:30:27.852" endtime="20230525 21:30:27.853"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230525 21:30:27.854" level="INFO">${email} = fritzjeremy@example.net</msg>
<status status="PASS" starttime="20230525 21:30:27.853" endtime="20230525 21:30:27.854"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230525 21:30:27.854" level="INFO">${password} = ha5hwXneryqV</msg>
<status status="PASS" starttime="20230525 21:30:27.854" endtime="20230525 21:30:27.854"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:30:27.855" level="INFO">${name} = Sandra Carter</msg>
<status status="PASS" starttime="20230525 21:30:27.855" endtime="20230525 21:30:27.855"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:30:27.855" level="INFO">${email} = fritzjeremy@example.net</msg>
<status status="PASS" starttime="20230525 21:30:27.855" endtime="20230525 21:30:27.855"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:30:27.856" level="INFO">${password} = ha5hwXneryqV</msg>
<status status="PASS" starttime="20230525 21:30:27.856" endtime="20230525 21:30:27.856"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.852" endtime="20230525 21:30:27.856"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:30:27.857" level="INFO">${payload} = {'nome': 'Sandra Carter', 'email': 'fritzjeremy@example.net', 'password': 'ha5hwXneryqV', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230525 21:30:27.856" endtime="20230525 21:30:27.857"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:30:27.858" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230525 21:30:27.857" endtime="20230525 21:30:27.858"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:30:27.955" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Sandra Carter", "email": "fritzjeremy@example.net", "password": "ha5hwXneryqV", "administrador": "false"}' 
 </msg>
<msg timestamp="20230525 21:30:27.956" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9ba67366-ed0e-4a59-b0de-fe695d5a9d9c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '08f040fbbf6d3386c62761d68abe459e', 'Date': 'Thu, 25 May 2023 21:30:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "3ww4jIFgx3HExthw"
} 
 </msg>
<msg timestamp="20230525 21:30:27.956" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:27.858" endtime="20230525 21:30:27.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230525 21:30:27.957" level="INFO">${user_id} = 3ww4jIFgx3HExthw</msg>
<status status="PASS" starttime="20230525 21:30:27.956" endtime="20230525 21:30:27.957"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230525 21:30:27.958" level="INFO">${USER_ID} = 3ww4jIFgx3HExthw</msg>
<status status="PASS" starttime="20230525 21:30:27.957" endtime="20230525 21:30:27.958"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:30:27.958" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:27.958" endtime="20230525 21:30:27.958"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.856" endtime="20230525 21:30:27.959"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:30:27.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:30:27.959" endtime="20230525 21:30:27.960"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:30:27.960" endtime="20230525 21:30:27.961"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.959" endtime="20230525 21:30:27.961"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:30:27.962" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230525 21:30:27.962" endtime="20230525 21:30:27.962"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.961" endtime="20230525 21:30:27.962"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:30:27.850" endtime="20230525 21:30:27.963"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:30:27.965" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:30:27.964" endtime="20230525 21:30:27.965"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.964" endtime="20230525 21:30:27.966"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:30:28.067" level="INFO">GET Request : url=https://serverest.dev/usuarios/3ww4jIFgx3HExthw 
 path_url=/usuarios/3ww4jIFgx3HExthw 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230525 21:30:28.067" level="INFO">GET Response : url=https://serverest.dev/usuarios/3ww4jIFgx3HExthw 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2e6908e0-6bf1-4d9a-ad89-24ce11a725f0', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2dc2ce9a551f4fc993ae82f67b6f1101', 'Date': 'Thu, 25 May 2023 21:30:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Sandra Carter",
    "email": "fritzjeremy@example.net",
    "password": "ha5hwXneryqV",
    "administrador": "false",
    "_id": "3ww4jIFgx3HExthw"
} 
 </msg>
<msg timestamp="20230525 21:30:28.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:27.966" endtime="20230525 21:30:28.068"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:30:28.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:28.068" endtime="20230525 21:30:28.068"/>
</kw>
<status status="PASS" starttime="20230525 21:30:27.966" endtime="20230525 21:30:28.068"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:30:28.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:30:28.069" endtime="20230525 21:30:28.070"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:30:28.070" endtime="20230525 21:30:28.071"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.069" endtime="20230525 21:30:28.071"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:30:28.073" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230525 21:30:28.072" endtime="20230525 21:30:28.073"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.071" endtime="20230525 21:30:28.073"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:30:27.963" endtime="20230525 21:30:28.073"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:30:28.075" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:30:28.075" endtime="20230525 21:30:28.076"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.075" endtime="20230525 21:30:28.076"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:30:28.077" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230525 21:30:28.076" endtime="20230525 21:30:28.077"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:30:28.078" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230525 21:30:28.077" endtime="20230525 21:30:28.078"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:30:28.184" level="INFO">PUT Request : url=https://serverest.dev/usuarios/3ww4jIFgx3HExthw 
 path_url=/usuarios/3ww4jIFgx3HExthw 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230525 21:30:28.185" level="INFO">PUT Response : url=https://serverest.dev/usuarios/3ww4jIFgx3HExthw 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '26e76cba-703c-455c-8e03-84d6cd9ee674', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'afa3ebc3e273cd0508e8e05bec42799e', 'Date': 'Thu, 25 May 2023 21:30:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230525 21:30:28.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:28.078" endtime="20230525 21:30:28.185"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:30:28.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:28.185" endtime="20230525 21:30:28.186"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.076" endtime="20230525 21:30:28.186"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:30:28.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:30:28.187" endtime="20230525 21:30:28.188"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:30:28.188" endtime="20230525 21:30:28.189"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.186" endtime="20230525 21:30:28.189"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:30:28.191" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230525 21:30:28.190" endtime="20230525 21:30:28.191"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.189" endtime="20230525 21:30:28.191"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:30:28.074" endtime="20230525 21:30:28.191"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:30:28.194" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:30:28.193" endtime="20230525 21:30:28.195"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.192" endtime="20230525 21:30:28.195"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:30:28.300" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/3ww4jIFgx3HExthw 
 path_url=/usuarios/3ww4jIFgx3HExthw 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230525 21:30:28.300" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/3ww4jIFgx3HExthw 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2305f3ab-1afb-4b66-98bc-7c85a90a3e72', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e73e7693c63393dbb278ca5c87bd4bd7', 'Date': 'Thu, 25 May 2023 21:30:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230525 21:30:28.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:28.195" endtime="20230525 21:30:28.300"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:30:28.301" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:30:28.301" endtime="20230525 21:30:28.301"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.195" endtime="20230525 21:30:28.301"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:30:28.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:30:28.302" endtime="20230525 21:30:28.303"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:30:28.303" endtime="20230525 21:30:28.304"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.301" endtime="20230525 21:30:28.304"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:30:28.305" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230525 21:30:28.304" endtime="20230525 21:30:28.305"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.304" endtime="20230525 21:30:28.305"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:30:28.192" endtime="20230525 21:30:28.306"/>
</test>
<status status="PASS" starttime="20230525 21:30:26.963" endtime="20230525 21:30:28.307"/>
</suite>
<status status="PASS" starttime="20230525 21:30:26.961" endtime="20230525 21:30:28.309"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:30:28.324" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:30:28.323" endtime="20230525 21:30:31.023"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:30:31.023" endtime="20230525 21:30:31.129"/>
</kw>
<status status="PASS" starttime="20230525 21:30:28.323" endtime="20230525 21:30:31.130"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230525 21:30:31.137" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230525 21:30:31.131" endtime="20230525 21:30:31.137"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:31.138" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230525 21:30:31.137" endtime="20230525 21:30:31.245"/>
</kw>
<status status="PASS" starttime="20230525 21:30:31.130" endtime="20230525 21:30:31.245"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:31.247" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230525 21:30:31.246" endtime="20230525 21:30:31.374"/>
</kw>
<status status="PASS" starttime="20230525 21:30:31.245" endtime="20230525 21:30:31.375"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230525 21:30:31.375" endtime="20230525 21:30:31.619"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230525 21:30:31.643" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230525 21:30:31.619" endtime="20230525 21:30:31.643"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:30:31.664" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230525 21:30:31.644" endtime="20230525 21:30:31.664"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:30:31.680" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230525 21:30:31.664" endtime="20230525 21:30:31.680"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:30:31.699" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230525 21:30:31.681" endtime="20230525 21:30:31.699"/>
</kw>
<status status="PASS" starttime="20230525 21:30:31.375" endtime="20230525 21:30:31.700"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230525 21:30:31.700" endtime="20230525 21:30:31.757"/>
</kw>
<status status="PASS" starttime="20230525 21:30:31.700" endtime="20230525 21:30:31.757"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230525 21:30:28.322" endtime="20230525 21:30:31.757"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:30:31.760" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:30:31.759" endtime="20230525 21:30:32.810"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:30:32.810" endtime="20230525 21:30:32.917"/>
</kw>
<status status="PASS" starttime="20230525 21:30:31.759" endtime="20230525 21:30:32.917"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230525 21:30:32.925" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230525 21:30:32.918" endtime="20230525 21:30:32.925"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:32.925" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230525 21:30:32.925" endtime="20230525 21:30:33.007"/>
</kw>
<status status="PASS" starttime="20230525 21:30:32.917" endtime="20230525 21:30:33.007"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230525 21:30:33.009" level="INFO">${name} = Paula Garcia</msg>
<status status="PASS" starttime="20230525 21:30:33.008" endtime="20230525 21:30:33.009"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230525 21:30:33.010" level="INFO">${email} = jeffweber@example.net</msg>
<status status="PASS" starttime="20230525 21:30:33.009" endtime="20230525 21:30:33.010"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230525 21:30:33.011" level="INFO">${password} = aRKOOdNHM9N9</msg>
<status status="PASS" starttime="20230525 21:30:33.010" endtime="20230525 21:30:33.011"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:33.011" level="INFO">Typing text 'Paula Garcia' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230525 21:30:33.011" endtime="20230525 21:30:33.229"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:33.231" level="INFO">Typing text 'jeffweber@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230525 21:30:33.230" endtime="20230525 21:30:33.384"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:33.385" level="INFO">Typing text 'aRKOOdNHM9N9' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230525 21:30:33.385" endtime="20230525 21:30:33.527"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:33.528" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230525 21:30:33.527" endtime="20230525 21:30:33.680"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:30:33.682" level="INFO">${name} = Paula Garcia</msg>
<status status="PASS" starttime="20230525 21:30:33.681" endtime="20230525 21:30:33.682"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:30:33.682" level="INFO">${email} = jeffweber@example.net</msg>
<status status="PASS" starttime="20230525 21:30:33.682" endtime="20230525 21:30:33.682"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:30:33.683" level="INFO">${password} = aRKOOdNHM9N9</msg>
<status status="PASS" starttime="20230525 21:30:33.683" endtime="20230525 21:30:33.683"/>
</kw>
<status status="PASS" starttime="20230525 21:30:33.008" endtime="20230525 21:30:33.683"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:33.684" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230525 21:30:33.684" endtime="20230525 21:30:33.782"/>
</kw>
<status status="PASS" starttime="20230525 21:30:33.683" endtime="20230525 21:30:33.782"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230525 21:30:33.783" endtime="20230525 21:30:34.027"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230525 21:30:34.054" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230525 21:30:34.028" endtime="20230525 21:30:34.054"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:30:34.081" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230525 21:30:34.055" endtime="20230525 21:30:34.081"/>
</kw>
<status status="PASS" starttime="20230525 21:30:33.783" endtime="20230525 21:30:34.081"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230525 21:30:34.082" endtime="20230525 21:30:34.194"/>
</kw>
<status status="PASS" starttime="20230525 21:30:34.082" endtime="20230525 21:30:34.195"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230525 21:30:31.758" endtime="20230525 21:30:34.195"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:30:34.197" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:30:34.197" endtime="20230525 21:30:35.213"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:30:35.213" endtime="20230525 21:30:35.319"/>
</kw>
<status status="PASS" starttime="20230525 21:30:34.196" endtime="20230525 21:30:35.319"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230525 21:30:35.327" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230525 21:30:35.320" endtime="20230525 21:30:35.327"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:35.328" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230525 21:30:35.327" endtime="20230525 21:30:35.418"/>
</kw>
<status status="PASS" starttime="20230525 21:30:35.320" endtime="20230525 21:30:35.418"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:35.419" level="INFO">Typing text 'Paula Garcia' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230525 21:30:35.419" endtime="20230525 21:30:35.602"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:35.603" level="INFO">Typing text 'jeffweber@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230525 21:30:35.603" endtime="20230525 21:30:35.750"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:35.751" level="INFO">Typing text 'aRKOOdNHM9N9' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230525 21:30:35.751" endtime="20230525 21:30:35.879"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:35.880" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230525 21:30:35.879" endtime="20230525 21:30:35.977"/>
</kw>
<status status="PASS" starttime="20230525 21:30:35.418" endtime="20230525 21:30:35.978"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230525 21:30:35.979" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230525 21:30:35.978" endtime="20230525 21:30:36.063"/>
</kw>
<status status="PASS" starttime="20230525 21:30:35.978" endtime="20230525 21:30:36.063"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230525 21:30:36.064" endtime="20230525 21:30:36.306"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230525 21:30:36.329" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230525 21:30:36.306" endtime="20230525 21:30:36.329"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:30:36.346" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230525 21:30:36.330" endtime="20230525 21:30:36.346"/>
</kw>
<status status="PASS" starttime="20230525 21:30:36.063" endtime="20230525 21:30:36.346"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230525 21:30:36.347" endtime="20230525 21:30:36.402"/>
</kw>
<status status="PASS" starttime="20230525 21:30:36.347" endtime="20230525 21:30:36.403"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230525 21:30:34.195" endtime="20230525 21:30:36.403"/>
</test>
<status status="PASS" starttime="20230525 21:30:28.313" endtime="20230525 21:30:36.404"/>
</suite>
<status status="PASS" starttime="20230525 21:30:28.310" endtime="20230525 21:30:36.406"/>
</suite>
<suite id="s1-s3" name="Visual" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual">
<suite id="s1-s3-s1" name="Test Visual Check" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual/test_visual_check.robot">
<test id="s1-s3-s1-t1" name="Scenario: Visual check login page" line="11">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:30:37.692" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:30:37.691" endtime="20230525 21:30:38.801"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:30:38.802" endtime="20230525 21:30:38.909"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<msg timestamp="20230525 21:30:41.105" level="ERROR">Re-raising an error received from SDK server: USDKFailure('Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)', '    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)\n    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)\n    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)\n    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)\n    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)\n    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)\n    at async openEyes (/snapshot/core/dist/open-eyes.js)\n    at async /snapshot/core/dist/make-manager.js')</msg>
<msg timestamp="20230525 21:30:41.107" level="FAIL">EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 145, in open
    return eyes.open(self.fetch_driver())
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 92, in open
    self._eyes_ref = self._commands.manager_open_eyes(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 151, in manager_open_eyes
    return self._checked_command(context, "EyesManager.openEyes", payload)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 271, in _checked_command
    _check_error(response_payload)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 281, in _check_error
    raise usdk_error
applitools.common.errors.USDKFailure: Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)
    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)
    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)
    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)
    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)
    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)
    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)
    at async openEyes (/snapshot/core/dist/open-eyes.js)
    at async /snapshot/core/dist/make-manager.js
</msg>
<status status="FAIL" starttime="20230525 21:30:38.909" endtime="20230525 21:30:41.108"/>
</kw>
<status status="FAIL" starttime="20230525 21:30:37.690" endtime="20230525 21:30:41.108"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<msg timestamp="20230525 21:30:41.109" level="FAIL">EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 164, in close
    return self.current_eyes.close_async()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 199, in close_async
    return self._close(False, False)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 528, in _close
    raise EyesError("Eyes not open")
applitools.common.errors.EyesError: Eyes not open
</msg>
<status status="FAIL" starttime="20230525 21:30:41.109" endtime="20230525 21:30:41.110"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="NOT RUN" starttime="20230525 21:30:41.110" endtime="20230525 21:30:41.110"/>
</kw>
<status status="FAIL" starttime="20230525 21:30:41.109" endtime="20230525 21:30:41.110">EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 164, in close
    return self.current_eyes.close_async()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 199, in close_async
    return self._close(False, False)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 528, in _close
    raise EyesError("Eyes not open")
applitools.common.errors.EyesError: Eyes not open
</status>
</kw>
<tag>visual</tag>
<status status="FAIL" starttime="20230525 21:30:37.688" endtime="20230525 21:30:41.110">Setup failed:
EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 145, in open
    return eyes.open(self.fetch_driver())
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 92, in open
    self._eyes_ref = self._commands.manager_open_eyes(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 151, in manager_open_eyes
    return self._checked_command(context, "EyesManager.openEyes", payload)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 271, in _checked_command
    _check_error(response_payload)
    [ Message content over the limit has been removed. ]
...ackages/applitools/selenium/command_executor.py", line 281, in _check_error
    raise usdk_error
applitools.common.errors.USDKFailure: Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)
    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)
    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)
    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)
    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)
    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)
    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)
    at async openEyes (/snapshot/core/dist/open-eyes.js)
    at async /snapshot/core/dist/make-manager.js

Also teardown failed:
EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 164, in close
    return self.current_eyes.close_async()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 199, in close_async
    return self._close(False, False)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 528, in _close
    raise EyesError("Eyes not open")
applitools.common.errors.EyesError: Eyes not open
</status>
</test>
<test id="s1-s3-s1-t2" name="Scenario: Visual check signup page" line="16">
<tag>robot:exit</tag>
<tag>visual</tag>
<status status="FAIL" starttime="20230525 21:30:41.111" endtime="20230525 21:30:41.112">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-t3" name="Scenario: Visual check signup with empty fields" line="21">
<tag>robot:exit</tag>
<tag>visual</tag>
<status status="FAIL" starttime="20230525 21:30:41.113" endtime="20230525 21:30:41.114">Test execution stopped due to a fatal error.</status>
</test>
<meta name="Applitools TestResults Path">/tmp/tmp80vl500w/EyesTestResults-8b6b7a1f16684c2a94df3f4debe6e1ee.json</meta>
<status status="FAIL" starttime="20230525 21:30:36.411" endtime="20230525 21:30:41.115"/>
</suite>
<status status="FAIL" starttime="20230525 21:30:36.408" endtime="20230525 21:30:41.117"/>
</suite>
<status status="FAIL" starttime="20230525 21:30:26.935" endtime="20230525 21:30:41.119"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="1" skip="0" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
<stat pass="0" fail="3" skip="0">visual</stat>
</tag>
<suite>
<stat pass="8" fail="3" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
<stat pass="0" fail="3" skip="0" id="s1-s3" name="Visual">Tests.Visual</stat>
<stat pass="0" fail="3" skip="0" id="s1-s3-s1" name="Test Visual Check">Tests.Visual.Test Visual Check</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230525 21:30:41.105" level="ERROR">Re-raising an error received from SDK server: USDKFailure('Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)', '    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)\n    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)\n    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)\n    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)\n    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)\n    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)\n    at async openEyes (/snapshot/core/dist/open-eyes.js)\n    at async /snapshot/core/dist/make-manager.js')</msg>
</errors>
</robot>
