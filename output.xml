<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 02:11:48.929" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 02:11:49.591" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 02:11:49.590" endtime="20230601 02:11:49.591"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.590" endtime="20230601 02:11:49.591"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 02:11:49.878" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 02:11:49.878" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2d71571f-63e2-49bd-b706-99286a7b10e4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a284936a3d3a57e0ad7c33f383785c2c;o=1', 'Date': 'Thu, 01 Jun 2023 02:11:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '6759'} 
 body={
    "quantidade": 32,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "ffej@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "0SgPTAOkAqyJOD1E"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Lugburz Durbatuluk",
            "email": "beps@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "1lvfJcI28VMY8sCm"
        },
        {
            "nome": "Fulano da Silva",
            "email": "xzlb@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "46S9nWqH5BO0Jd2t"
        },
        {
            "nome": "Fulano da Silva",
            "email": "jzjr@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "5lWMEFevdZy7oLoU"
        },
        {
            "nome": "Fulano da Silva",
            "email": "cevy@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "7zo9VR2RMwwFYGrG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rzkn@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "8QqAdNMHCvfch8vP"
        },
        {
            "nome": "Fulano da Silva",
            "email": "aexg@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "92ATb6pT0YtY5Xi0"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ddru@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "Aw8f49GeCaHvyFy1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "suhl@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "DUkE7ra415XUhjWq"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mhzr@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "EzaKfbc8qhangVWx"
        },
        {
            "nome": "Lugburz Durbatuluk",
            "email": "pgob@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "IEsxK4hJMjnpvefc"
        },
        {
            "nome": "Fulano da Silva",
            "email": "htza@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "Itn17QD1l9foBRDc"
        },
        {
            "nome": "Fulano da Silva",
            "email": "zlpu@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "LYFiMtcztVl1yIgG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "dgas@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "Nz6phHZL5CoXfVoe"
        },
        {
            "nome": "Fulano da Silva",
            "email": "uiaf@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "Pc4RVzZlGNt3aRjV"
        },
        {
            "nome": "Lugburz Durbatuluk",
            "email": "lvab@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "Q8OoYgxuucMdtdyY"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fveh@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "RXkSiVGB79VTwTDy"
        },
        {
            "nome": "Fulano da Silva",
            "email": "niie@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "SyU2tJ12rgQvpr4f"
        },
        {
            "nome": "Fulano da Silva",
            "email": "adjo@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "X3eTsPnYYEoC7PP6"
        },
        {
            "nome": "{{nome}}",
            "email": "Kara@qa.com.br",
            "password": "20ldVEFlk5ewCvI",
            "administrador": "true",
            "_id": "XQu0f9cKB0k5eBr6"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mkvy@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "YihIkQnyFxIBQBX4"
        },
        {
            "nome": "Lugburz Durbatuluk",
            "email": "euzd@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "dq6MIK2yLfrA7nri"
        },
        {
            "nome": "Fulano da Silva",
            "email": "xkvp@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "iJcpQ5WBgmB5C0mI"
        },
        {
            "nome": "Lugburz Durbatuluk",
            "email": "cdvy@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "jPmQPA8YrVyG2GXz"
        },
        {
            "nome": "Fulano da Silva",
            "email": "omkn@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "jwgvd9szSXbmEJdP"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yyes@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "mFeaeLjw71U2hENb"
        },
        {
            "nome": "Fulano da Silva",
            "email": "pmrf@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "oJH2PrQ0tlercMQZ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ctxt@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "r7Igw75339KWkfwg"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ozwi@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "sIrwcPYuSwFEQSJf"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rmon@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "sr0LBaUVUJXF6b0c"
        },
        {
            "nome": "Fulano da Silva",
            "email": "nrqz@teste.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "t9sbLjKJ3554I15B"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 02:11:49.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:49.592" endtime="20230601 02:11:49.879"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 02:11:49.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:49.879" endtime="20230601 02:11:49.880"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.591" endtime="20230601 02:11:49.880"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 02:11:49.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 02:11:49.881" endtime="20230601 02:11:49.882"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 02:11:49.882" endtime="20230601 02:11:49.883"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.880" endtime="20230601 02:11:49.883"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 02:11:49.884" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 02:11:49.884" endtime="20230601 02:11:49.884"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.883" endtime="20230601 02:11:49.884"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 02:11:49.589" endtime="20230601 02:11:49.885"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 02:11:49.887" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 02:11:49.886" endtime="20230601 02:11:49.887"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.886" endtime="20230601 02:11:49.887"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 02:11:49.888" level="INFO">${name} = Katrina Avery</msg>
<status status="PASS" starttime="20230601 02:11:49.887" endtime="20230601 02:11:49.888"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 02:11:49.889" level="INFO">${email} = derrickross@example.net</msg>
<status status="PASS" starttime="20230601 02:11:49.888" endtime="20230601 02:11:49.889"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 02:11:49.889" level="INFO">${password} = 4xxFiSBo01wE</msg>
<status status="PASS" starttime="20230601 02:11:49.889" endtime="20230601 02:11:49.889"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 02:11:49.890" level="INFO">${name} = Katrina Avery</msg>
<status status="PASS" starttime="20230601 02:11:49.889" endtime="20230601 02:11:49.890"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 02:11:49.890" level="INFO">${email} = derrickross@example.net</msg>
<status status="PASS" starttime="20230601 02:11:49.890" endtime="20230601 02:11:49.890"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 02:11:49.891" level="INFO">${password} = 4xxFiSBo01wE</msg>
<status status="PASS" starttime="20230601 02:11:49.890" endtime="20230601 02:11:49.891"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.887" endtime="20230601 02:11:49.891"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 02:11:49.892" level="INFO">${payload} = {'nome': 'Katrina Avery', 'email': 'derrickross@example.net', 'password': '4xxFiSBo01wE', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 02:11:49.891" endtime="20230601 02:11:49.892"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 02:11:49.892" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 02:11:49.892" endtime="20230601 02:11:49.892"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 02:11:49.991" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Katrina Avery", "email": "derrickross@example.net", "password": "4xxFiSBo01wE", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 02:11:49.991" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a5803763-3ce2-47d5-ac8e-486b8f75ba52', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '88b363381d8810518754ddc26f4ce453', 'Date': 'Thu, 01 Jun 2023 02:11:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "pSOtB932D5Nq0T5h"
} 
 </msg>
<msg timestamp="20230601 02:11:49.991" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:49.892" endtime="20230601 02:11:49.991"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 02:11:49.993" level="INFO">${user_id} = pSOtB932D5Nq0T5h</msg>
<status status="PASS" starttime="20230601 02:11:49.992" endtime="20230601 02:11:49.993"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 02:11:49.993" level="INFO">${USER_ID} = pSOtB932D5Nq0T5h</msg>
<status status="PASS" starttime="20230601 02:11:49.993" endtime="20230601 02:11:49.993"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 02:11:49.994" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:49.994" endtime="20230601 02:11:49.994"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.891" endtime="20230601 02:11:49.994"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 02:11:49.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 02:11:49.995" endtime="20230601 02:11:49.995"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 02:11:49.995" endtime="20230601 02:11:49.996"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.994" endtime="20230601 02:11:49.996"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 02:11:49.997" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 02:11:49.997" endtime="20230601 02:11:49.997"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.996" endtime="20230601 02:11:49.997"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 02:11:49.885" endtime="20230601 02:11:49.998"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 02:11:49.999" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 02:11:49.999" endtime="20230601 02:11:50.000"/>
</kw>
<status status="PASS" starttime="20230601 02:11:49.999" endtime="20230601 02:11:50.000"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 02:11:50.098" level="INFO">GET Request : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h 
 path_url=/usuarios/pSOtB932D5Nq0T5h 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 02:11:50.098" level="INFO">GET Response : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '638ff464-1bd0-4f56-b7fa-f6f2f5548530', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '835a94b178ab342ff0be03119f1d1458', 'Date': 'Thu, 01 Jun 2023 02:11:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Katrina Avery",
    "email": "derrickross@example.net",
    "password": "4xxFiSBo01wE",
    "administrador": "false",
    "_id": "pSOtB932D5Nq0T5h"
} 
 </msg>
<msg timestamp="20230601 02:11:50.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:50.000" endtime="20230601 02:11:50.098"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 02:11:50.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:50.098" endtime="20230601 02:11:50.099"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.000" endtime="20230601 02:11:50.099"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 02:11:50.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 02:11:50.099" endtime="20230601 02:11:50.100"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 02:11:50.100" endtime="20230601 02:11:50.101"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.099" endtime="20230601 02:11:50.101"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 02:11:50.103" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 02:11:50.102" endtime="20230601 02:11:50.103"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.101" endtime="20230601 02:11:50.103"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 02:11:49.998" endtime="20230601 02:11:50.103"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 02:11:50.105" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 02:11:50.104" endtime="20230601 02:11:50.105"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.104" endtime="20230601 02:11:50.105"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 02:11:50.106" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 02:11:50.105" endtime="20230601 02:11:50.106"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 02:11:50.106" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 02:11:50.106" endtime="20230601 02:11:50.106"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 02:11:50.207" level="INFO">PUT Request : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h 
 path_url=/usuarios/pSOtB932D5Nq0T5h 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 02:11:50.208" level="INFO">PUT Response : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd98afc41-51f7-439a-9728-bb59dc7dfe54', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a4897fee88172e63ca3b8ee490ed4273', 'Date': 'Thu, 01 Jun 2023 02:11:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 02:11:50.208" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:50.106" endtime="20230601 02:11:50.208"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 02:11:50.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:50.208" endtime="20230601 02:11:50.209"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.105" endtime="20230601 02:11:50.209"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 02:11:50.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 02:11:50.210" endtime="20230601 02:11:50.211"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 02:11:50.211" endtime="20230601 02:11:50.213"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.209" endtime="20230601 02:11:50.213"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 02:11:50.215" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 02:11:50.214" endtime="20230601 02:11:50.215"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.213" endtime="20230601 02:11:50.215"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 02:11:50.103" endtime="20230601 02:11:50.215"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 02:11:50.217" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 02:11:50.217" endtime="20230601 02:11:50.218"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.216" endtime="20230601 02:11:50.218"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 02:11:50.317" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h 
 path_url=/usuarios/pSOtB932D5Nq0T5h 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 02:11:50.317" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/pSOtB932D5Nq0T5h 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4d69bc7c-243d-4092-bac3-1763a0faa4d1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '28f892a2ccdf7aabeca1bb8725790cd6', 'Date': 'Thu, 01 Jun 2023 02:11:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 02:11:50.317" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:50.218" endtime="20230601 02:11:50.318"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 02:11:50.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 02:11:50.318" endtime="20230601 02:11:50.318"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.218" endtime="20230601 02:11:50.319"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 02:11:50.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 02:11:50.319" endtime="20230601 02:11:50.321"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 02:11:50.321" endtime="20230601 02:11:50.322"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.319" endtime="20230601 02:11:50.322"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 02:11:50.324" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 02:11:50.323" endtime="20230601 02:11:50.324"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.322" endtime="20230601 02:11:50.324"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 02:11:50.216" endtime="20230601 02:11:50.324"/>
</test>
<status status="PASS" starttime="20230601 02:11:48.952" endtime="20230601 02:11:50.325"/>
</suite>
<status status="PASS" starttime="20230601 02:11:48.951" endtime="20230601 02:11:50.327"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 02:11:50.339" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 02:11:50.339" endtime="20230601 02:11:53.734"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 02:11:53.734" endtime="20230601 02:11:53.841"/>
</kw>
<status status="PASS" starttime="20230601 02:11:50.338" endtime="20230601 02:11:53.841"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 02:11:53.848" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 02:11:53.842" endtime="20230601 02:11:53.848"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:53.849" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 02:11:53.848" endtime="20230601 02:11:53.959"/>
</kw>
<status status="PASS" starttime="20230601 02:11:53.842" endtime="20230601 02:11:53.959"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:53.961" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 02:11:53.960" endtime="20230601 02:11:54.034"/>
</kw>
<status status="PASS" starttime="20230601 02:11:53.960" endtime="20230601 02:11:54.035"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 02:11:54.035" endtime="20230601 02:11:54.279"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 02:11:54.300" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 02:11:54.279" endtime="20230601 02:11:54.300"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 02:11:54.317" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 02:11:54.300" endtime="20230601 02:11:54.318"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 02:11:54.332" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 02:11:54.318" endtime="20230601 02:11:54.332"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 02:11:54.346" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 02:11:54.332" endtime="20230601 02:11:54.347"/>
</kw>
<status status="PASS" starttime="20230601 02:11:54.035" endtime="20230601 02:11:54.347"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 02:11:54.347" endtime="20230601 02:11:54.403"/>
</kw>
<status status="PASS" starttime="20230601 02:11:54.347" endtime="20230601 02:11:54.403"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 02:11:50.338" endtime="20230601 02:11:54.403"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 02:11:54.406" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 02:11:54.405" endtime="20230601 02:11:55.399"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 02:11:55.400" endtime="20230601 02:11:55.508"/>
</kw>
<status status="PASS" starttime="20230601 02:11:54.404" endtime="20230601 02:11:55.508"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 02:11:55.515" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 02:11:55.509" endtime="20230601 02:11:55.515"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:55.516" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 02:11:55.515" endtime="20230601 02:11:55.623"/>
</kw>
<status status="PASS" starttime="20230601 02:11:55.508" endtime="20230601 02:11:55.623"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 02:11:55.625" level="INFO">${name} = Kevin Burns</msg>
<status status="PASS" starttime="20230601 02:11:55.624" endtime="20230601 02:11:55.625"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 02:11:55.625" level="INFO">${email} = zochoa@example.com</msg>
<status status="PASS" starttime="20230601 02:11:55.625" endtime="20230601 02:11:55.625"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 02:11:55.626" level="INFO">${password} = 8XIQ0uUQR2M1</msg>
<status status="PASS" starttime="20230601 02:11:55.625" endtime="20230601 02:11:55.626"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:55.627" level="INFO">Typing text 'Kevin Burns' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 02:11:55.626" endtime="20230601 02:11:55.760"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:55.761" level="INFO">Typing text 'zochoa@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 02:11:55.761" endtime="20230601 02:11:55.885"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:55.886" level="INFO">Typing text '8XIQ0uUQR2M1' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 02:11:55.885" endtime="20230601 02:11:55.994"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:55.994" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 02:11:55.994" endtime="20230601 02:11:56.080"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 02:11:56.081" level="INFO">${name} = Kevin Burns</msg>
<status status="PASS" starttime="20230601 02:11:56.081" endtime="20230601 02:11:56.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 02:11:56.082" level="INFO">${email} = zochoa@example.com</msg>
<status status="PASS" starttime="20230601 02:11:56.081" endtime="20230601 02:11:56.082"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 02:11:56.082" level="INFO">${password} = 8XIQ0uUQR2M1</msg>
<status status="PASS" starttime="20230601 02:11:56.082" endtime="20230601 02:11:56.082"/>
</kw>
<status status="PASS" starttime="20230601 02:11:55.623" endtime="20230601 02:11:56.082"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:56.083" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 02:11:56.083" endtime="20230601 02:11:56.153"/>
</kw>
<status status="PASS" starttime="20230601 02:11:56.082" endtime="20230601 02:11:56.153"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 02:11:56.154" endtime="20230601 02:11:56.394"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 02:11:56.415" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 02:11:56.394" endtime="20230601 02:11:56.415"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 02:11:56.430" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 02:11:56.415" endtime="20230601 02:11:56.430"/>
</kw>
<status status="PASS" starttime="20230601 02:11:56.153" endtime="20230601 02:11:56.430"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 02:11:56.431" endtime="20230601 02:11:56.486"/>
</kw>
<status status="PASS" starttime="20230601 02:11:56.430" endtime="20230601 02:11:56.486"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 02:11:54.404" endtime="20230601 02:11:56.486"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 02:11:56.488" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 02:11:56.488" endtime="20230601 02:11:57.479"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 02:11:57.479" endtime="20230601 02:11:57.583"/>
</kw>
<status status="PASS" starttime="20230601 02:11:56.487" endtime="20230601 02:11:57.584"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 02:11:57.590" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 02:11:57.584" endtime="20230601 02:11:57.590"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:57.591" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 02:11:57.591" endtime="20230601 02:11:57.696"/>
</kw>
<status status="PASS" starttime="20230601 02:11:57.584" endtime="20230601 02:11:57.696"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:57.697" level="INFO">Typing text 'Kevin Burns' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 02:11:57.696" endtime="20230601 02:11:57.828"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:57.829" level="INFO">Typing text 'zochoa@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 02:11:57.829" endtime="20230601 02:11:57.959"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:57.960" level="INFO">Typing text '8XIQ0uUQR2M1' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 02:11:57.959" endtime="20230601 02:11:58.068"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:58.069" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 02:11:58.068" endtime="20230601 02:11:58.156"/>
</kw>
<status status="PASS" starttime="20230601 02:11:57.696" endtime="20230601 02:11:58.156"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 02:11:58.157" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 02:11:58.156" endtime="20230601 02:11:58.225"/>
</kw>
<status status="PASS" starttime="20230601 02:11:58.156" endtime="20230601 02:11:58.226"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 02:11:58.226" endtime="20230601 02:11:58.474"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 02:11:58.496" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 02:11:58.474" endtime="20230601 02:11:58.496"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 02:11:58.512" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 02:11:58.496" endtime="20230601 02:11:58.512"/>
</kw>
<status status="PASS" starttime="20230601 02:11:58.226" endtime="20230601 02:11:58.512"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 02:11:58.513" endtime="20230601 02:11:58.569"/>
</kw>
<status status="PASS" starttime="20230601 02:11:58.512" endtime="20230601 02:11:58.569"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 02:11:56.487" endtime="20230601 02:11:58.569"/>
</test>
<status status="PASS" starttime="20230601 02:11:50.330" endtime="20230601 02:11:58.570"/>
</suite>
<status status="PASS" starttime="20230601 02:11:50.328" endtime="20230601 02:11:58.572"/>
</suite>
<status status="PASS" starttime="20230601 02:11:48.930" endtime="20230601 02:11:58.574"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
