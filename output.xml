<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230609 20:08:02.518" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230609 20:08:02.983" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230609 20:08:02.983" endtime="20230609 20:08:02.983"/>
</kw>
<status status="PASS" starttime="20230609 20:08:02.982" endtime="20230609 20:08:02.983"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230609 20:08:03.272" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230609 20:08:03.272" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '64ed7610-b4e6-459f-9063-03f69b914c20', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b62e86bdabb5eadf69f5ed59aadc4215;o=1', 'Date': 'Fri, 09 Jun 2023 20:08:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '15421'} 
 body={
    "quantidade": 70,
    "usuarios": [
        {
            "nome": "Cristiano Mothe",
            "email": "caldwellbrandon@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "0MzBt83AcqEgVUmL"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Kim Wiza",
            "email": "Joe.Friesen5@yahoo.com",
            "password": "OT6rvvC3UjwWiLG",
            "administrador": "true",
            "_id": "3qmO0rl7hDDd5KLw"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "teresamurray@example.net",
            "password": "Abc@123",
            "administrador": "true",
            "_id": "3uepkMHkNg4J5YO9"
        },
        {
            "nome": "Ignacio Luettgen",
            "email": "Brando.Auer8@hotmail.com",
            "password": "PuuImMAUOQUzzrA",
            "administrador": "false",
            "_id": "4xslwSUw9sa3xOJb"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "timothy32@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "6wuNI1hraRoTFb3H"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "huntercarly@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "6zWeWSaFx3TSCtiR"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "greenestacey@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "7715459OciKSPiru"
        },
        {
            "nome": "Doreen Simonis",
            "email": "Leo_Mante@yahoo.com",
            "password": "X6GGbEsmVvGy1JE",
            "administrador": "false",
            "_id": "7reyRrO03VXhRcqz"
        },
        {
            "nome": "Dr. Susie McLaughlin",
            "email": "Arvid.OKon@gmail.com",
            "password": "SdYEwalt8P0tYgR",
            "administrador": "true",
            "_id": "9bYCFt8A2zP2R7PM"
        },
        {
            "nome": "Francis Beahan",
            "email": "Joan.Skiles95@hotmail.com",
            "password": "WWvdO0sqLICUn90",
            "administrador": "true",
            "_id": "CLJn8Q6S7hp5dUUK"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "frankmendoza@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "ELUy1lD549cbah6t"
        },
        {
            "nome": "Raul Balistreri",
            "email": "Lyda_Harber@hotmail.com",
            "password": "do5eDuQ1i9CKhHi",
            "administrador": "true",
            "_id": "EvYF5KUlGVb4JPfs"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "brittanybrown@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "Ezybfrlr1tNm4u1T"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "wwilkinson@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "FRxjGwiYvzH12MFD"
        },
        {
            "nome": "Terrell Rowe",
            "email": "Helene_Altenwerth6@yahoo.com",
            "password": "K9pydJVIwNP2gfi",
            "administrador": "true",
            "_id": "FSjdFCvZFpdwY2Oa"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "karenmiller@example.com",
            "password": "Abc@123",
            "administrador": "true",
            "_id": "Iko77fuqyqlQWaV4"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "ggarcia@example.com",
            "password": "Abc@123",
            "administrador": "true",
            "_id": "JPpFVC88dKhY1mhc"
        },
        {
            "nome": "Kim Gibbs",
            "email": "scottwilson@example.net",
            "password": "EuWA9JrY98ss",
            "administrador": "true",
            "_id": "Jwud4g7yo05MD7eL"
        },
        {
            "nome": "Debbie Wunsch",
            "email": "Kellen.Bauch14@yahoo.com",
            "password": "Yz73jTegcTRLy_L",
            "administrador": "false",
            "_id": "KqRbUTAFIekKtz7g"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "kathleen10@example.com",
            "password": "Abc@123",
            "administrador": "true",
            "_id": "LGkSTG2af4gOtaMg"
        },
        {
            "nome": "Andrew Anderson IV",
            "email": "Kasandra_Prohaska@yahoo.com",
            "password": "GNo73MIa78sPVAZ",
            "administrador": "false",
            "_id": "LhEX4lVju3cfTv8q"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "jasminewaters@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "N2TD03yZyvrvfJNK"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "janet71@example.com",
            "password": "Abc@123",
            "administrador": "true",
            "_id": "OBu016gXVerIWUMd"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "ktaylor@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "ON3JEnMav27cfIHU"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "scott12@example.org",
            "password": "123456",
            "administrador": "true",
            "_id": "P8y9I7oJ1IEqJ035"
        },
        {
            "nome": "Larry Murray",
            "email": "Mackenzie29@gmail.com",
            "password": "IQz2R8Xtdrh4j_7",
            "administrador": "true",
            "_id": "PsMIlS2tC2s1cEG1"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "kelseynavarro@example.com",
            "password": "Abc@123",
            "administrador": "true",
            "_id": "QRpQlLZ9XxpsTlm4"
        },
        {
            "nome": "Tammy Quitzon",
            "email": "Logan.Hilll45@yahoo.com",
            "password": "ulKpeX0f_T5HLHX",
            "administrador": "true",
            "_id": "RSIk27au0BxsVe4U"
        },
        {
            "nome": "Doug Wunsch",
            "email": "Jensen.Hessel95@hotmail.com",
            "password": "SaMqhRcaiSEupmt",
            "administrador": "false",
            "_id": "SgTnEnEzGhNjUv0F"
        },
        {
            "nome": "Dr. Tomas Waelchi",
            "email": "Elisa_Prohaska@hotmail.com",
            "password": "NPKspfXUaoHE7cx",
            "administrador": "true",
            "_id": "SklBjVPW6tPP0HhU"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "roblesbrittany@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "SzbqLTl1O606CMCl"
        },
        {
            "nome": "Jimmy Parker",
            "email": "Geo.Larson89@yahoo.com",
            "password": "6PJXesRPDKoMeNP",
            "administrador": "true",
            "_id": "TLuXQfXACPgdfr2v"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "kathy05@example.org",
            "password": "Abc@123",
            "administrador": "true",
            "_id": "Tu8tQpglSmc1Skpd"
        },
        {
            "nome": "Mary Shields",
            "email": "Alfred73@gmail.com",
            "password": "S34cChB2SBKxYot",
            "administrador": "true",
            "_id": "U4c8d9EgsZvCtxx9"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "scottflores@example.org",
            "password": "123456",
            "administrador": "true",
            "_id": "UCAPiqV2OIJhLjzH"
        },
        {
            "nome": "Celia Gibson",
            "email": "Crystal28@gmail.com",
            "password": "eXDeVW4AYw94D6U",
            "administrador": "true",
            "_id": "Us9ddN29rxsDjCj6"
        },
        {
            "nome": "Nathan Haag",
            "email": "Corbin_Collins82@hotmail.com",
            "password": "F7lEZOYZVcHI4N2",
            "administrador": "true",
            "_id": "V7J9PpNjbWxPEUwl"
        },
        {
            "nome": "Angel Howell",
            "email": "Oran_Herman@gmail.com",
            "password": "uWvz5kploQsWeRx",
            "administrador": "false",
            "_id": "V89pnmOAXhwEHbkE"
        },
        {
            "nome": "Cameron Harmon",
            "email": "ablevins@example.com",
            "password": "3NBlRudO8qrn",
            "administrador": "true",
            "_id": "X7gTLE9vLrX70dmb"
        },
        {
            "nome": "Mr. Aubrey Keebler",
            "email": "Lillie_Moore77@gmail.com",
            "password": "PWmf4rVUIdJ5XtY",
            "administrador": "true",
            "_id": "ZnaW9DxsG6LbDCmC"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "nathanprince@example.com",
            "password": "Abc@123",
            "administrador": "true",
            "_id": "aLLGvUE1gxvvgWUn"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "keithroger@example.net",
            "password": "Abc@123",
            "administrador": "true",
            "_id": "badgMyefn7udcfQf"
        },
        {
            "nome": "Stella Fadel",
            "email": "Kody.Rempel95@gmail.com",
            "password": "EhbY1K7K6IOtXeN",
            "administrador": "true",
            "_id": "c0AyMNKWyZbALGW6"
        },
        {
            "nome": "Cristiano Mothe",
            "email": "millerthomas@example.com",
            "password": "123456",
            "administrador": "true",
            "_id": "cO2vaFWVe0DIQVkE"
        },
        {
            "nome": "Cristia... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230609 20:08:03.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:02.984" endtime="20230609 20:08:03.272"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230609 20:08:03.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.272" endtime="20230609 20:08:03.273"/>
</kw>
<status status="PASS" starttime="20230609 20:08:02.984" endtime="20230609 20:08:03.273"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230609 20:08:03.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.273" endtime="20230609 20:08:03.274"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230609 20:08:03.274" endtime="20230609 20:08:03.275"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.273" endtime="20230609 20:08:03.275"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230609 20:08:03.277" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230609 20:08:03.276" endtime="20230609 20:08:03.277"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.276" endtime="20230609 20:08:03.277"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230609 20:08:02.982" endtime="20230609 20:08:03.277"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230609 20:08:03.279" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230609 20:08:03.279" endtime="20230609 20:08:03.279"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.278" endtime="20230609 20:08:03.279"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230609 20:08:03.280" level="INFO">${name} = Holly Bell MD</msg>
<status status="PASS" starttime="20230609 20:08:03.280" endtime="20230609 20:08:03.280"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230609 20:08:03.281" level="INFO">${email} = ivanyoung@example.com</msg>
<status status="PASS" starttime="20230609 20:08:03.280" endtime="20230609 20:08:03.281"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230609 20:08:03.281" level="INFO">${password} = D3ZwMHxzgT4Z</msg>
<status status="PASS" starttime="20230609 20:08:03.281" endtime="20230609 20:08:03.281"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230609 20:08:03.282" level="INFO">${name} = Holly Bell MD</msg>
<status status="PASS" starttime="20230609 20:08:03.282" endtime="20230609 20:08:03.282"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230609 20:08:03.282" level="INFO">${email} = ivanyoung@example.com</msg>
<status status="PASS" starttime="20230609 20:08:03.282" endtime="20230609 20:08:03.282"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230609 20:08:03.282" level="INFO">${password} = D3ZwMHxzgT4Z</msg>
<status status="PASS" starttime="20230609 20:08:03.282" endtime="20230609 20:08:03.283"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.279" endtime="20230609 20:08:03.283"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230609 20:08:03.283" level="INFO">${payload} = {'nome': 'Holly Bell MD', 'email': 'ivanyoung@example.com', 'password': 'D3ZwMHxzgT4Z', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230609 20:08:03.283" endtime="20230609 20:08:03.284"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230609 20:08:03.284" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230609 20:08:03.284" endtime="20230609 20:08:03.284"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230609 20:08:03.363" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Holly Bell MD", "email": "ivanyoung@example.com", "password": "D3ZwMHxzgT4Z", "administrador": "false"}' 
 </msg>
<msg timestamp="20230609 20:08:03.363" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '176f5f2e-d6e0-4b37-9da7-4851f5b59c06', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'adcddf5bc14b6a4b137dbbb10a28da0e', 'Date': 'Fri, 09 Jun 2023 20:08:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "FlcgzAzMpzimqUXg"
} 
 </msg>
<msg timestamp="20230609 20:08:03.363" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.284" endtime="20230609 20:08:03.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230609 20:08:03.364" level="INFO">${user_id} = FlcgzAzMpzimqUXg</msg>
<status status="PASS" starttime="20230609 20:08:03.364" endtime="20230609 20:08:03.364"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230609 20:08:03.365" level="INFO">${USER_ID} = FlcgzAzMpzimqUXg</msg>
<status status="PASS" starttime="20230609 20:08:03.365" endtime="20230609 20:08:03.365"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230609 20:08:03.365" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.365" endtime="20230609 20:08:03.365"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.283" endtime="20230609 20:08:03.366"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230609 20:08:03.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.366" endtime="20230609 20:08:03.367"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230609 20:08:03.367" endtime="20230609 20:08:03.368"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.366" endtime="20230609 20:08:03.368"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230609 20:08:03.369" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230609 20:08:03.368" endtime="20230609 20:08:03.369"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.368" endtime="20230609 20:08:03.369"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230609 20:08:03.278" endtime="20230609 20:08:03.369"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230609 20:08:03.371" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230609 20:08:03.370" endtime="20230609 20:08:03.371"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.370" endtime="20230609 20:08:03.371"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230609 20:08:03.451" level="INFO">GET Request : url=https://serverest.dev/usuarios/FlcgzAzMpzimqUXg 
 path_url=/usuarios/FlcgzAzMpzimqUXg 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230609 20:08:03.451" level="INFO">GET Response : url=https://serverest.dev/usuarios/FlcgzAzMpzimqUXg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4119362a-d878-48f7-a54d-7bb1fb555c3e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '410b39d254ea5c978118aaca027db6d4', 'Date': 'Fri, 09 Jun 2023 20:08:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Holly Bell MD",
    "email": "ivanyoung@example.com",
    "password": "D3ZwMHxzgT4Z",
    "administrador": "false",
    "_id": "FlcgzAzMpzimqUXg"
} 
 </msg>
<msg timestamp="20230609 20:08:03.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.371" endtime="20230609 20:08:03.451"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230609 20:08:03.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.452" endtime="20230609 20:08:03.452"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.371" endtime="20230609 20:08:03.452"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230609 20:08:03.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.453" endtime="20230609 20:08:03.453"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230609 20:08:03.453" endtime="20230609 20:08:03.454"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.452" endtime="20230609 20:08:03.454"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230609 20:08:03.455" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230609 20:08:03.454" endtime="20230609 20:08:03.455"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.454" endtime="20230609 20:08:03.455"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230609 20:08:03.369" endtime="20230609 20:08:03.455"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230609 20:08:03.457" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230609 20:08:03.457" endtime="20230609 20:08:03.457"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.456" endtime="20230609 20:08:03.457"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230609 20:08:03.458" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230609 20:08:03.458" endtime="20230609 20:08:03.458"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230609 20:08:03.458" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230609 20:08:03.458" endtime="20230609 20:08:03.458"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230609 20:08:03.538" level="INFO">PUT Request : url=https://serverest.dev/usuarios/FlcgzAzMpzimqUXg 
 path_url=/usuarios/FlcgzAzMpzimqUXg 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230609 20:08:03.538" level="INFO">PUT Response : url=https://serverest.dev/usuarios/FlcgzAzMpzimqUXg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5e82d0d1-2eca-43db-a028-c76d52c883f6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7360448b2cd5cf14a8ab31a0b5b66583', 'Date': 'Fri, 09 Jun 2023 20:08:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230609 20:08:03.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.459" endtime="20230609 20:08:03.538"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230609 20:08:03.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.538" endtime="20230609 20:08:03.539"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.457" endtime="20230609 20:08:03.539"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230609 20:08:03.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.539" endtime="20230609 20:08:03.540"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230609 20:08:03.540" endtime="20230609 20:08:03.541"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.539" endtime="20230609 20:08:03.541"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230609 20:08:03.542" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230609 20:08:03.541" endtime="20230609 20:08:03.542"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.541" endtime="20230609 20:08:03.542"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230609 20:08:03.456" endtime="20230609 20:08:03.542"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230609 20:08:03.544" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230609 20:08:03.544" endtime="20230609 20:08:03.545"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.544" endtime="20230609 20:08:03.545"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230609 20:08:03.623" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/FlcgzAzMpzimqUXg 
 path_url=/usuarios/FlcgzAzMpzimqUXg 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230609 20:08:03.623" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/FlcgzAzMpzimqUXg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a6f827f9-4cdf-48b9-9db6-4227ec890668', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '97aadd1b7c51457dd02793e2b57d5fc2', 'Date': 'Fri, 09 Jun 2023 20:08:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230609 20:08:03.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.545" endtime="20230609 20:08:03.623"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230609 20:08:03.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.623" endtime="20230609 20:08:03.624"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.545" endtime="20230609 20:08:03.624"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230609 20:08:03.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230609 20:08:03.624" endtime="20230609 20:08:03.625"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230609 20:08:03.625" endtime="20230609 20:08:03.626"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.624" endtime="20230609 20:08:03.626"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230609 20:08:03.627" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230609 20:08:03.626" endtime="20230609 20:08:03.627"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.626" endtime="20230609 20:08:03.627"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230609 20:08:03.543" endtime="20230609 20:08:03.627"/>
</test>
<status status="PASS" starttime="20230609 20:08:02.539" endtime="20230609 20:08:03.627"/>
</suite>
<status status="PASS" starttime="20230609 20:08:02.537" endtime="20230609 20:08:03.629"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230609 20:08:03.639" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230609 20:08:03.638" endtime="20230609 20:08:06.237"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230609 20:08:06.238" endtime="20230609 20:08:06.356"/>
</kw>
<status status="PASS" starttime="20230609 20:08:03.638" endtime="20230609 20:08:06.357"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230609 20:08:06.362" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230609 20:08:06.357" endtime="20230609 20:08:06.363"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:06.364" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230609 20:08:06.363" endtime="20230609 20:08:06.520"/>
</kw>
<status status="PASS" starttime="20230609 20:08:06.357" endtime="20230609 20:08:06.521"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:06.522" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230609 20:08:06.521" endtime="20230609 20:08:06.591"/>
</kw>
<status status="PASS" starttime="20230609 20:08:06.521" endtime="20230609 20:08:06.591"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230609 20:08:06.591" endtime="20230609 20:08:06.855"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230609 20:08:06.873" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230609 20:08:06.856" endtime="20230609 20:08:06.873"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230609 20:08:06.894" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230609 20:08:06.873" endtime="20230609 20:08:06.894"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230609 20:08:06.906" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230609 20:08:06.894" endtime="20230609 20:08:06.906"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230609 20:08:06.918" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230609 20:08:06.906" endtime="20230609 20:08:06.919"/>
</kw>
<status status="PASS" starttime="20230609 20:08:06.591" endtime="20230609 20:08:06.919"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230609 20:08:06.919" endtime="20230609 20:08:06.974"/>
</kw>
<status status="PASS" starttime="20230609 20:08:06.919" endtime="20230609 20:08:06.974"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230609 20:08:03.638" endtime="20230609 20:08:06.974"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230609 20:08:06.976" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230609 20:08:06.976" endtime="20230609 20:08:08.320"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230609 20:08:08.320" endtime="20230609 20:08:08.443"/>
</kw>
<status status="PASS" starttime="20230609 20:08:06.975" endtime="20230609 20:08:08.443"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230609 20:08:08.450" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230609 20:08:08.444" endtime="20230609 20:08:08.450"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:08.450" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230609 20:08:08.450" endtime="20230609 20:08:08.503"/>
</kw>
<status status="PASS" starttime="20230609 20:08:08.443" endtime="20230609 20:08:08.503"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230609 20:08:08.504" level="INFO">${name} = Lawrence Griffin</msg>
<status status="PASS" starttime="20230609 20:08:08.504" endtime="20230609 20:08:08.504"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230609 20:08:08.505" level="INFO">${email} = jonathonjohnson@example.org</msg>
<status status="PASS" starttime="20230609 20:08:08.504" endtime="20230609 20:08:08.505"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230609 20:08:08.505" level="INFO">${password} = 2Fyd3lvFgIDb</msg>
<status status="PASS" starttime="20230609 20:08:08.505" endtime="20230609 20:08:08.505"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:08.506" level="INFO">Typing text 'Lawrence Griffin' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230609 20:08:08.506" endtime="20230609 20:08:08.669"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:08.670" level="INFO">Typing text 'jonathonjohnson@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230609 20:08:08.670" endtime="20230609 20:08:08.794"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:08.795" level="INFO">Typing text '2Fyd3lvFgIDb' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230609 20:08:08.794" endtime="20230609 20:08:08.891"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:08.892" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230609 20:08:08.892" endtime="20230609 20:08:08.974"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230609 20:08:08.974" level="INFO">${name} = Lawrence Griffin</msg>
<status status="PASS" starttime="20230609 20:08:08.974" endtime="20230609 20:08:08.974"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230609 20:08:08.975" level="INFO">${email} = jonathonjohnson@example.org</msg>
<status status="PASS" starttime="20230609 20:08:08.974" endtime="20230609 20:08:08.975"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230609 20:08:08.975" level="INFO">${password} = 2Fyd3lvFgIDb</msg>
<status status="PASS" starttime="20230609 20:08:08.975" endtime="20230609 20:08:08.975"/>
</kw>
<status status="PASS" starttime="20230609 20:08:08.503" endtime="20230609 20:08:08.975"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:08.976" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230609 20:08:08.976" endtime="20230609 20:08:09.036"/>
</kw>
<status status="PASS" starttime="20230609 20:08:08.975" endtime="20230609 20:08:09.036"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230609 20:08:09.037" endtime="20230609 20:08:09.268"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230609 20:08:09.286" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230609 20:08:09.268" endtime="20230609 20:08:09.286"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230609 20:08:09.299" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230609 20:08:09.286" endtime="20230609 20:08:09.299"/>
</kw>
<status status="PASS" starttime="20230609 20:08:09.036" endtime="20230609 20:08:09.299"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230609 20:08:09.299" endtime="20230609 20:08:09.354"/>
</kw>
<status status="PASS" starttime="20230609 20:08:09.299" endtime="20230609 20:08:09.354"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230609 20:08:06.975" endtime="20230609 20:08:09.354"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230609 20:08:09.356" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230609 20:08:09.355" endtime="20230609 20:08:10.672"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230609 20:08:10.673" endtime="20230609 20:08:10.786"/>
</kw>
<status status="PASS" starttime="20230609 20:08:09.355" endtime="20230609 20:08:10.786"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230609 20:08:10.792" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230609 20:08:10.787" endtime="20230609 20:08:10.792"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:10.793" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230609 20:08:10.792" endtime="20230609 20:08:10.845"/>
</kw>
<status status="PASS" starttime="20230609 20:08:10.787" endtime="20230609 20:08:10.845"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:10.846" level="INFO">Typing text 'Lawrence Griffin' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230609 20:08:10.846" endtime="20230609 20:08:10.972"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:10.973" level="INFO">Typing text 'jonathonjohnson@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230609 20:08:10.972" endtime="20230609 20:08:11.090"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:11.091" level="INFO">Typing text '2Fyd3lvFgIDb' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230609 20:08:11.090" endtime="20230609 20:08:11.183"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:11.184" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230609 20:08:11.184" endtime="20230609 20:08:11.261"/>
</kw>
<status status="PASS" starttime="20230609 20:08:10.846" endtime="20230609 20:08:11.261"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230609 20:08:11.262" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230609 20:08:11.262" endtime="20230609 20:08:11.320"/>
</kw>
<status status="PASS" starttime="20230609 20:08:11.262" endtime="20230609 20:08:11.320"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230609 20:08:11.321" endtime="20230609 20:08:11.762"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230609 20:08:11.780" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230609 20:08:11.762" endtime="20230609 20:08:11.780"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230609 20:08:11.793" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230609 20:08:11.780" endtime="20230609 20:08:11.793"/>
</kw>
<status status="PASS" starttime="20230609 20:08:11.320" endtime="20230609 20:08:11.793"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230609 20:08:11.793" endtime="20230609 20:08:11.849"/>
</kw>
<status status="PASS" starttime="20230609 20:08:11.793" endtime="20230609 20:08:11.849"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230609 20:08:09.354" endtime="20230609 20:08:11.849"/>
</test>
<status status="PASS" starttime="20230609 20:08:03.631" endtime="20230609 20:08:11.850"/>
</suite>
<status status="PASS" starttime="20230609 20:08:03.629" endtime="20230609 20:08:11.852"/>
</suite>
<status status="PASS" starttime="20230609 20:08:02.519" endtime="20230609 20:08:11.853"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
