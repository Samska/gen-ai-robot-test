<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 16:11:30.943" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:11:31.511" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:11:31.511" endtime="20230601 16:11:31.511"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.510" endtime="20230601 16:11:31.511"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:11:31.677" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 16:11:31.677" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8e954d44-f9af-45b0-a6ee-78da3de79fba', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ec7eff84102798accbbad823517c5325;o=1', 'Date': 'Thu, 01 Jun 2023 16:11:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '6780'} 
 body={
    "quantidade": 31,
    "usuarios": [
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Riley Meadows",
            "email": "wardlindsay@example.com",
            "password": "21nem33sV3Wv",
            "administrador": "true",
            "_id": "6ZrbiguZb3H8xbz7"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9gstdMBMAIERTqbi"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0114@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "MZEGk2tTLklplZrU"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Donald Palmer",
            "email": "kshannon@example.net",
            "password": "MN61aKMyY2Zp",
            "administrador": "true",
            "_id": "WJLRKci7u4ThQVZi"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "{{nome}}",
            "email": "Wade@qa.com.br",
            "password": "75sp8gpG4_cwEJL",
            "administrador": "true",
            "_id": "eiYlTXHzMuezZ3JP"
        },
        {
            "nome": "{{nome}}",
            "email": "Laurianne@qa.com.br",
            "password": "BehI7ZauXa4BWJG",
            "administrador": "true",
            "_id": "fxPPNR85wYe2RWUx"
        },
        {
            "nome": "{{nome}}",
            "email": "Hadley@qa.com.br",
            "password": "cTFFNtgOYHKCveO",
            "administrador": "true",
            "_id": "gP4GN1H0ztPPVm4T"
        },
        {
            "nome": "Jason Rodriguez",
            "email": "tracivang@example.com",
            "password": "tFOdqK1b4bdb",
            "administrador": "true",
            "_id": "hOHsnxKpiWHMWThP"
        },
        {
            "nome": "Stephen Price",
            "email": "schaeferdylan@example.com",
            "password": "8O6ksSdDZp24",
            "administrador": "true",
            "_id": "hgBx9ALEJofc7VxJ"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "Mercedes Gardner",
            "email": "rkoch@example.com",
            "password": "OyTwLmx2r7d6",
            "administrador": "true",
            "_id": "kBYMC5WIZH4pm0RH"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Cheyenne Knox",
            "email": "connierodriguez@example.org",
            "password": "2XpL75uHis1Y",
            "administrador": "true",
            "_id": "nQr8zF2KskcB67UX"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano_teste@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "r4MkfwAxanGM2wV0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Eric Adkins",
            "email": "qmcclure@example.org",
            "password": "1JkxKESr0UqK",
            "administrador": "true",
            "_id": "srS7Ou0Du5FNhP2x"
        },
        {
            "nome": "Troy Ray",
            "email": "debbie39@example.net",
            "password": "di5JjZtW5C2X",
            "administrador": "true",
            "_id": "w6qnBS2wGoSELmzN"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "wbGsZa5vMrOWAm7a"
        },
        {
            "nome": "julia",
            "email": "contatojuliasena2@gmail.com",
            "password": "07101995",
            "administrador": "false",
            "_id": "x5hhnzNB64soj1IS"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 16:11:31.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.512" endtime="20230601 16:11:31.678"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:11:31.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.678" endtime="20230601 16:11:31.678"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.512" endtime="20230601 16:11:31.678"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:11:31.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.679" endtime="20230601 16:11:31.680"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:11:31.680" endtime="20230601 16:11:31.680"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.679" endtime="20230601 16:11:31.680"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:11:31.681" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 16:11:31.681" endtime="20230601 16:11:31.681"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.681" endtime="20230601 16:11:31.682"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:11:31.510" endtime="20230601 16:11:31.682"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:11:31.683" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:11:31.683" endtime="20230601 16:11:31.683"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.683" endtime="20230601 16:11:31.683"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 16:11:31.684" level="INFO">${name} = Nathan Humphrey</msg>
<status status="PASS" starttime="20230601 16:11:31.684" endtime="20230601 16:11:31.684"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 16:11:31.685" level="INFO">${email} = qwagner@example.org</msg>
<status status="PASS" starttime="20230601 16:11:31.684" endtime="20230601 16:11:31.685"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 16:11:31.685" level="INFO">${password} = me1RivBJtq3T</msg>
<status status="PASS" starttime="20230601 16:11:31.685" endtime="20230601 16:11:31.685"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:11:31.685" level="INFO">${name} = Nathan Humphrey</msg>
<status status="PASS" starttime="20230601 16:11:31.685" endtime="20230601 16:11:31.685"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:11:31.686" level="INFO">${email} = qwagner@example.org</msg>
<status status="PASS" starttime="20230601 16:11:31.686" endtime="20230601 16:11:31.686"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:11:31.686" level="INFO">${password} = me1RivBJtq3T</msg>
<status status="PASS" starttime="20230601 16:11:31.686" endtime="20230601 16:11:31.686"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.684" endtime="20230601 16:11:31.686"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:11:31.687" level="INFO">${payload} = {'nome': 'Nathan Humphrey', 'email': 'qwagner@example.org', 'password': 'me1RivBJtq3T', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 16:11:31.687" endtime="20230601 16:11:31.687"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:11:31.687" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 16:11:31.687" endtime="20230601 16:11:31.687"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:11:31.754" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Nathan Humphrey", "email": "qwagner@example.org", "password": "me1RivBJtq3T", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 16:11:31.754" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e00aa04d-96a4-4175-aac2-82ba4a36ba0c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '756c3399881ab030fd47c4cc3da84ced', 'Date': 'Thu, 01 Jun 2023 16:11:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "6Y4yLnZG6lsfNY2C"
} 
 </msg>
<msg timestamp="20230601 16:11:31.754" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.688" endtime="20230601 16:11:31.754"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 16:11:31.755" level="INFO">${user_id} = 6Y4yLnZG6lsfNY2C</msg>
<status status="PASS" starttime="20230601 16:11:31.754" endtime="20230601 16:11:31.755"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 16:11:31.755" level="INFO">${USER_ID} = 6Y4yLnZG6lsfNY2C</msg>
<status status="PASS" starttime="20230601 16:11:31.755" endtime="20230601 16:11:31.755"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:11:31.756" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.756" endtime="20230601 16:11:31.756"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.686" endtime="20230601 16:11:31.756"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:11:31.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.756" endtime="20230601 16:11:31.757"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:11:31.757" endtime="20230601 16:11:31.758"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.756" endtime="20230601 16:11:31.758"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:11:31.759" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 16:11:31.758" endtime="20230601 16:11:31.759"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.758" endtime="20230601 16:11:31.759"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:11:31.682" endtime="20230601 16:11:31.759"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:11:31.760" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:11:31.760" endtime="20230601 16:11:31.761"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.760" endtime="20230601 16:11:31.761"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:11:31.830" level="INFO">GET Request : url=https://serverest.dev/usuarios/6Y4yLnZG6lsfNY2C 
 path_url=/usuarios/6Y4yLnZG6lsfNY2C 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 16:11:31.830" level="INFO">GET Response : url=https://serverest.dev/usuarios/6Y4yLnZG6lsfNY2C 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '19579978-e651-46c9-8412-435e6805bc78', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fd81ee21ef2578075c12d0a9d87b663d', 'Date': 'Thu, 01 Jun 2023 16:11:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Nathan Humphrey",
    "email": "qwagner@example.org",
    "password": "me1RivBJtq3T",
    "administrador": "false",
    "_id": "6Y4yLnZG6lsfNY2C"
} 
 </msg>
<msg timestamp="20230601 16:11:31.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.761" endtime="20230601 16:11:31.830"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:11:31.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.830" endtime="20230601 16:11:31.830"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.761" endtime="20230601 16:11:31.830"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:11:31.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.831" endtime="20230601 16:11:31.832"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:11:31.832" endtime="20230601 16:11:31.832"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.831" endtime="20230601 16:11:31.832"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:11:31.833" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 16:11:31.833" endtime="20230601 16:11:31.833"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.832" endtime="20230601 16:11:31.833"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:11:31.759" endtime="20230601 16:11:31.834"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:11:31.835" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:11:31.834" endtime="20230601 16:11:31.835"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.834" endtime="20230601 16:11:31.835"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:11:31.836" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 16:11:31.835" endtime="20230601 16:11:31.836"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:11:31.836" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 16:11:31.836" endtime="20230601 16:11:31.836"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:11:31.904" level="INFO">PUT Request : url=https://serverest.dev/usuarios/6Y4yLnZG6lsfNY2C 
 path_url=/usuarios/6Y4yLnZG6lsfNY2C 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 16:11:31.904" level="INFO">PUT Response : url=https://serverest.dev/usuarios/6Y4yLnZG6lsfNY2C 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b00c566d-1683-4ed4-bae8-10a8dfc2f46e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c9b87d0140a710743268766ba51d3e3d', 'Date': 'Thu, 01 Jun 2023 16:11:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 16:11:31.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.836" endtime="20230601 16:11:31.904"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:11:31.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.904" endtime="20230601 16:11:31.905"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.835" endtime="20230601 16:11:31.905"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:11:31.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.905" endtime="20230601 16:11:31.906"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:11:31.906" endtime="20230601 16:11:31.907"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.905" endtime="20230601 16:11:31.907"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:11:31.908" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 16:11:31.907" endtime="20230601 16:11:31.908"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.907" endtime="20230601 16:11:31.908"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:11:31.834" endtime="20230601 16:11:31.908"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:11:31.909" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:11:31.909" endtime="20230601 16:11:31.910"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.909" endtime="20230601 16:11:31.910"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:11:31.975" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/6Y4yLnZG6lsfNY2C 
 path_url=/usuarios/6Y4yLnZG6lsfNY2C 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 16:11:31.975" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/6Y4yLnZG6lsfNY2C 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '786f597b-12d0-440c-af70-92acd01136ec', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '54c3ad7c3555a6a43f58b9e06cdee9a9', 'Date': 'Thu, 01 Jun 2023 16:11:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 16:11:31.975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.910" endtime="20230601 16:11:31.975"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:11:31.975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.975" endtime="20230601 16:11:31.975"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.910" endtime="20230601 16:11:31.975"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:11:31.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:11:31.976" endtime="20230601 16:11:31.977"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:11:31.977" endtime="20230601 16:11:31.977"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.976" endtime="20230601 16:11:31.977"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:11:31.978" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 16:11:31.978" endtime="20230601 16:11:31.978"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.977" endtime="20230601 16:11:31.978"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:11:31.908" endtime="20230601 16:11:31.979"/>
</test>
<status status="PASS" starttime="20230601 16:11:30.965" endtime="20230601 16:11:31.979"/>
</suite>
<status status="PASS" starttime="20230601 16:11:30.963" endtime="20230601 16:11:31.980"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 16:11:31.990" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 16:11:31.989" endtime="20230601 16:11:34.307"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 16:11:34.307" endtime="20230601 16:11:34.428"/>
</kw>
<status status="PASS" starttime="20230601 16:11:31.989" endtime="20230601 16:11:34.428"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 16:11:34.433" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 16:11:34.429" endtime="20230601 16:11:34.433"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:34.435" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 16:11:34.434" endtime="20230601 16:11:34.503"/>
</kw>
<status status="PASS" starttime="20230601 16:11:34.428" endtime="20230601 16:11:34.504"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:34.505" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 16:11:34.504" endtime="20230601 16:11:34.583"/>
</kw>
<status status="PASS" starttime="20230601 16:11:34.504" endtime="20230601 16:11:34.583"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 16:11:34.584" endtime="20230601 16:11:34.818"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 16:11:34.835" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 16:11:34.818" endtime="20230601 16:11:34.835"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:11:34.864" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 16:11:34.835" endtime="20230601 16:11:34.864"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:11:34.877" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 16:11:34.864" endtime="20230601 16:11:34.877"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:11:34.889" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 16:11:34.877" endtime="20230601 16:11:34.889"/>
</kw>
<status status="PASS" starttime="20230601 16:11:34.583" endtime="20230601 16:11:34.889"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 16:11:34.890" endtime="20230601 16:11:34.945"/>
</kw>
<status status="PASS" starttime="20230601 16:11:34.889" endtime="20230601 16:11:34.945"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 16:11:31.989" endtime="20230601 16:11:34.946"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 16:11:34.948" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 16:11:34.947" endtime="20230601 16:11:36.122"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 16:11:36.123" endtime="20230601 16:11:36.244"/>
</kw>
<status status="PASS" starttime="20230601 16:11:34.947" endtime="20230601 16:11:36.244"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 16:11:36.249" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 16:11:36.245" endtime="20230601 16:11:36.249"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:36.250" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 16:11:36.250" endtime="20230601 16:11:36.303"/>
</kw>
<status status="PASS" starttime="20230601 16:11:36.244" endtime="20230601 16:11:36.303"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 16:11:36.304" level="INFO">${name} = Kenneth Hardy</msg>
<status status="PASS" starttime="20230601 16:11:36.303" endtime="20230601 16:11:36.304"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 16:11:36.305" level="INFO">${email} = katieschneider@example.net</msg>
<status status="PASS" starttime="20230601 16:11:36.304" endtime="20230601 16:11:36.305"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 16:11:36.305" level="INFO">${password} = efCQm5Pmd34V</msg>
<status status="PASS" starttime="20230601 16:11:36.305" endtime="20230601 16:11:36.305"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:36.306" level="INFO">Typing text 'Kenneth Hardy' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 16:11:36.305" endtime="20230601 16:11:36.442"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:36.443" level="INFO">Typing text 'katieschneider@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 16:11:36.442" endtime="20230601 16:11:36.548"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:36.549" level="INFO">Typing text 'efCQm5Pmd34V' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 16:11:36.548" endtime="20230601 16:11:36.638"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:36.639" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 16:11:36.638" endtime="20230601 16:11:36.714"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:11:36.714" level="INFO">${name} = Kenneth Hardy</msg>
<status status="PASS" starttime="20230601 16:11:36.714" endtime="20230601 16:11:36.714"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:11:36.715" level="INFO">${email} = katieschneider@example.net</msg>
<status status="PASS" starttime="20230601 16:11:36.714" endtime="20230601 16:11:36.715"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:11:36.715" level="INFO">${password} = efCQm5Pmd34V</msg>
<status status="PASS" starttime="20230601 16:11:36.715" endtime="20230601 16:11:36.715"/>
</kw>
<status status="PASS" starttime="20230601 16:11:36.303" endtime="20230601 16:11:36.715"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:36.716" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 16:11:36.716" endtime="20230601 16:11:36.774"/>
</kw>
<status status="PASS" starttime="20230601 16:11:36.715" endtime="20230601 16:11:36.774"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 16:11:36.775" endtime="20230601 16:11:37.007"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 16:11:37.025" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 16:11:37.008" endtime="20230601 16:11:37.025"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:11:37.038" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 16:11:37.025" endtime="20230601 16:11:37.038"/>
</kw>
<status status="PASS" starttime="20230601 16:11:36.774" endtime="20230601 16:11:37.038"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 16:11:37.038" endtime="20230601 16:11:37.094"/>
</kw>
<status status="PASS" starttime="20230601 16:11:37.038" endtime="20230601 16:11:37.094"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 16:11:34.946" endtime="20230601 16:11:37.094"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 16:11:37.096" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 16:11:37.095" endtime="20230601 16:11:38.312"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 16:11:38.312" endtime="20230601 16:11:38.415"/>
</kw>
<status status="PASS" starttime="20230601 16:11:37.095" endtime="20230601 16:11:38.416"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 16:11:38.421" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 16:11:38.416" endtime="20230601 16:11:38.421"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:38.422" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 16:11:38.421" endtime="20230601 16:11:38.493"/>
</kw>
<status status="PASS" starttime="20230601 16:11:38.416" endtime="20230601 16:11:38.494"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:38.495" level="INFO">Typing text 'Kenneth Hardy' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 16:11:38.494" endtime="20230601 16:11:38.609"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:38.610" level="INFO">Typing text 'katieschneider@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 16:11:38.609" endtime="20230601 16:11:38.717"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:38.718" level="INFO">Typing text 'efCQm5Pmd34V' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 16:11:38.718" endtime="20230601 16:11:38.804"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:38.805" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 16:11:38.804" endtime="20230601 16:11:38.880"/>
</kw>
<status status="PASS" starttime="20230601 16:11:38.494" endtime="20230601 16:11:38.880"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 16:11:38.881" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 16:11:38.881" endtime="20230601 16:11:38.938"/>
</kw>
<status status="PASS" starttime="20230601 16:11:38.881" endtime="20230601 16:11:38.938"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 16:11:38.939" endtime="20230601 16:11:39.170"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 16:11:39.188" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 16:11:39.170" endtime="20230601 16:11:39.188"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:11:39.201" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 16:11:39.188" endtime="20230601 16:11:39.201"/>
</kw>
<status status="PASS" starttime="20230601 16:11:38.938" endtime="20230601 16:11:39.201"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 16:11:39.202" endtime="20230601 16:11:39.257"/>
</kw>
<status status="PASS" starttime="20230601 16:11:39.202" endtime="20230601 16:11:39.258"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 16:11:37.094" endtime="20230601 16:11:39.258"/>
</test>
<status status="PASS" starttime="20230601 16:11:31.982" endtime="20230601 16:11:39.258"/>
</suite>
<status status="PASS" starttime="20230601 16:11:31.981" endtime="20230601 16:11:39.260"/>
</suite>
<status status="PASS" starttime="20230601 16:11:30.944" endtime="20230601 16:11:39.261"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
