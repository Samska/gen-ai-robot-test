<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 15:37:12.109" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:37:12.829" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:37:12.828" endtime="20230601 15:37:12.830"/>
</kw>
<status status="PASS" starttime="20230601 15:37:12.825" endtime="20230601 15:37:12.830"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:37:13.069" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 15:37:13.070" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5ed533cc-21b0-41c4-8493-f8427e884394', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ad7f3757b31524211778909dad4a0eba;o=1', 'Date': 'Thu, 01 Jun 2023 15:37:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '5263'} 
 body={
    "quantidade": 24,
    "usuarios": [
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "{{nome}}",
            "email": "Wade@qa.com.br",
            "password": "75sp8gpG4_cwEJL",
            "administrador": "true",
            "_id": "eiYlTXHzMuezZ3JP"
        },
        {
            "nome": "{{nome}}",
            "email": "Hadley@qa.com.br",
            "password": "cTFFNtgOYHKCveO",
            "administrador": "true",
            "_id": "gP4GN1H0ztPPVm4T"
        },
        {
            "nome": "Jason Rodriguez",
            "email": "tracivang@example.com",
            "password": "tFOdqK1b4bdb",
            "administrador": "true",
            "_id": "hOHsnxKpiWHMWThP"
        },
        {
            "nome": "Stephen Price",
            "email": "schaeferdylan@example.com",
            "password": "8O6ksSdDZp24",
            "administrador": "true",
            "_id": "hgBx9ALEJofc7VxJ"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Cheyenne Knox",
            "email": "connierodriguez@example.org",
            "password": "2XpL75uHis1Y",
            "administrador": "true",
            "_id": "nQr8zF2KskcB67UX"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano_teste@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "r4MkfwAxanGM2wV0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Troy Ray",
            "email": "debbie39@example.net",
            "password": "di5JjZtW5C2X",
            "administrador": "true",
            "_id": "w6qnBS2wGoSELmzN"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "wbGsZa5vMrOWAm7a"
        },
        {
            "nome": "julia",
            "email": "contatojuliasena2@gmail.com",
            "password": "07101995",
            "administrador": "false",
            "_id": "x5hhnzNB64soj1IS"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 15:37:13.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:12.830" endtime="20230601 15:37:13.070"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:37:13.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.070" endtime="20230601 15:37:13.071"/>
</kw>
<status status="PASS" starttime="20230601 15:37:12.830" endtime="20230601 15:37:13.071"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:37:13.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.071" endtime="20230601 15:37:13.073"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:37:13.073" endtime="20230601 15:37:13.074"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.071" endtime="20230601 15:37:13.074"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:37:13.075" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 15:37:13.074" endtime="20230601 15:37:13.075"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.074" endtime="20230601 15:37:13.075"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:37:12.823" endtime="20230601 15:37:13.075"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:37:13.078" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:37:13.077" endtime="20230601 15:37:13.078"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.077" endtime="20230601 15:37:13.078"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 15:37:13.079" level="INFO">${name} = Kelsey Lopez</msg>
<status status="PASS" starttime="20230601 15:37:13.079" endtime="20230601 15:37:13.079"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 15:37:13.080" level="INFO">${email} = johnsonjennifer@example.net</msg>
<status status="PASS" starttime="20230601 15:37:13.080" endtime="20230601 15:37:13.080"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 15:37:13.081" level="INFO">${password} = IRXcQ9CaT5Sp</msg>
<status status="PASS" starttime="20230601 15:37:13.080" endtime="20230601 15:37:13.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:37:13.081" level="INFO">${name} = Kelsey Lopez</msg>
<status status="PASS" starttime="20230601 15:37:13.081" endtime="20230601 15:37:13.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:37:13.082" level="INFO">${email} = johnsonjennifer@example.net</msg>
<status status="PASS" starttime="20230601 15:37:13.081" endtime="20230601 15:37:13.082"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:37:13.082" level="INFO">${password} = IRXcQ9CaT5Sp</msg>
<status status="PASS" starttime="20230601 15:37:13.082" endtime="20230601 15:37:13.083"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.078" endtime="20230601 15:37:13.083"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:37:13.084" level="INFO">${payload} = {'nome': 'Kelsey Lopez', 'email': 'johnsonjennifer@example.net', 'password': 'IRXcQ9CaT5Sp', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 15:37:13.083" endtime="20230601 15:37:13.084"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:37:13.085" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 15:37:13.084" endtime="20230601 15:37:13.085"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:37:13.187" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '118'} 
 body=b'{"nome": "Kelsey Lopez", "email": "johnsonjennifer@example.net", "password": "IRXcQ9CaT5Sp", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 15:37:13.187" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ee64e150-824b-403b-8104-74bee1516477', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '38dbaa1d623690887711001f9501735a', 'Date': 'Thu, 01 Jun 2023 15:37:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "YY6aaieyZBUVvfpp"
} 
 </msg>
<msg timestamp="20230601 15:37:13.187" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.085" endtime="20230601 15:37:13.187"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 15:37:13.189" level="INFO">${user_id} = YY6aaieyZBUVvfpp</msg>
<status status="PASS" starttime="20230601 15:37:13.188" endtime="20230601 15:37:13.189"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 15:37:13.190" level="INFO">${USER_ID} = YY6aaieyZBUVvfpp</msg>
<status status="PASS" starttime="20230601 15:37:13.189" endtime="20230601 15:37:13.190"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:37:13.190" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.190" endtime="20230601 15:37:13.190"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.083" endtime="20230601 15:37:13.191"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:37:13.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.191" endtime="20230601 15:37:13.192"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:37:13.192" endtime="20230601 15:37:13.193"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.191" endtime="20230601 15:37:13.193"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:37:13.194" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 15:37:13.194" endtime="20230601 15:37:13.194"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.193" endtime="20230601 15:37:13.195"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:37:13.076" endtime="20230601 15:37:13.195"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:37:13.197" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:37:13.196" endtime="20230601 15:37:13.197"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.196" endtime="20230601 15:37:13.197"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:37:13.295" level="INFO">GET Request : url=https://serverest.dev/usuarios/YY6aaieyZBUVvfpp 
 path_url=/usuarios/YY6aaieyZBUVvfpp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 15:37:13.295" level="INFO">GET Response : url=https://serverest.dev/usuarios/YY6aaieyZBUVvfpp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8d67fd80-48e0-401d-8477-9d70fd642b5c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f5e9f6af9b4adaa9d1dcf4af4adef815', 'Date': 'Thu, 01 Jun 2023 15:37:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '167'} 
 body={
    "nome": "Kelsey Lopez",
    "email": "johnsonjennifer@example.net",
    "password": "IRXcQ9CaT5Sp",
    "administrador": "false",
    "_id": "YY6aaieyZBUVvfpp"
} 
 </msg>
<msg timestamp="20230601 15:37:13.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.198" endtime="20230601 15:37:13.296"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:37:13.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.296" endtime="20230601 15:37:13.296"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.198" endtime="20230601 15:37:13.296"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:37:13.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.297" endtime="20230601 15:37:13.298"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:37:13.298" endtime="20230601 15:37:13.299"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.297" endtime="20230601 15:37:13.299"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:37:13.300" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 15:37:13.299" endtime="20230601 15:37:13.300"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.299" endtime="20230601 15:37:13.301"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:37:13.195" endtime="20230601 15:37:13.301"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:37:13.302" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:37:13.302" endtime="20230601 15:37:13.303"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.302" endtime="20230601 15:37:13.303"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:37:13.304" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 15:37:13.303" endtime="20230601 15:37:13.304"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:37:13.304" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 15:37:13.304" endtime="20230601 15:37:13.304"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:37:13.404" level="INFO">PUT Request : url=https://serverest.dev/usuarios/YY6aaieyZBUVvfpp 
 path_url=/usuarios/YY6aaieyZBUVvfpp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 15:37:13.404" level="INFO">PUT Response : url=https://serverest.dev/usuarios/YY6aaieyZBUVvfpp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0ae0dc95-5373-486c-a802-8ec9b6434a9a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e36ac4505144f492ec242178f2f5187f', 'Date': 'Thu, 01 Jun 2023 15:37:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 15:37:13.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.304" endtime="20230601 15:37:13.404"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:37:13.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.404" endtime="20230601 15:37:13.405"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.303" endtime="20230601 15:37:13.405"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:37:13.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.406" endtime="20230601 15:37:13.407"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:37:13.407" endtime="20230601 15:37:13.408"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.405" endtime="20230601 15:37:13.408"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:37:13.409" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 15:37:13.408" endtime="20230601 15:37:13.409"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.408" endtime="20230601 15:37:13.410"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:37:13.301" endtime="20230601 15:37:13.410"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:37:13.412" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:37:13.411" endtime="20230601 15:37:13.412"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.411" endtime="20230601 15:37:13.412"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:37:13.509" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/YY6aaieyZBUVvfpp 
 path_url=/usuarios/YY6aaieyZBUVvfpp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 15:37:13.509" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/YY6aaieyZBUVvfpp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bfeba770-0ffa-4634-8660-6871b7ca3da1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '82256bebc4bf019e76874808c6159cf2', 'Date': 'Thu, 01 Jun 2023 15:37:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 15:37:13.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.413" endtime="20230601 15:37:13.509"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:37:13.510" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.510" endtime="20230601 15:37:13.510"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.413" endtime="20230601 15:37:13.510"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:37:13.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:37:13.511" endtime="20230601 15:37:13.512"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:37:13.512" endtime="20230601 15:37:13.513"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.510" endtime="20230601 15:37:13.513"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:37:13.514" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 15:37:13.513" endtime="20230601 15:37:13.514"/>
</kw>
<status status="PASS" starttime="20230601 15:37:13.513" endtime="20230601 15:37:13.514"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:37:13.410" endtime="20230601 15:37:13.514"/>
</test>
<status status="PASS" starttime="20230601 15:37:12.140" endtime="20230601 15:37:13.515"/>
</suite>
<status status="PASS" starttime="20230601 15:37:12.138" endtime="20230601 15:37:13.517"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" type="SETUP">
<msg timestamp="20230601 15:37:13.535" level="FAIL">No keyword with name 'Before Tests' found.</msg>
<status status="FAIL" starttime="20230601 15:37:13.535" endtime="20230601 15:37:13.536"/>
</kw>
<kw name="After Tests" type="TEARDOWN">
<msg timestamp="20230601 15:37:13.544" level="FAIL">No keyword with name 'After Tests' found.</msg>
<status status="FAIL" starttime="20230601 15:37:13.544" endtime="20230601 15:37:13.544">No keyword with name 'After Tests' found.</status>
</kw>
<tag>e2e</tag>
<status status="FAIL" starttime="20230601 15:37:13.525" endtime="20230601 15:37:13.544">Setup failed:
No keyword with name 'Before Tests' found.

Also teardown failed:
No keyword with name 'After Tests' found.</status>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" type="SETUP">
<msg timestamp="20230601 15:37:13.553" level="FAIL">No keyword with name 'Before Tests' found.</msg>
<status status="FAIL" starttime="20230601 15:37:13.553" endtime="20230601 15:37:13.553"/>
</kw>
<kw name="After Tests" type="TEARDOWN">
<msg timestamp="20230601 15:37:13.563" level="FAIL">No keyword with name 'After Tests' found.</msg>
<status status="FAIL" starttime="20230601 15:37:13.563" endtime="20230601 15:37:13.563">No keyword with name 'After Tests' found.</status>
</kw>
<tag>e2e</tag>
<status status="FAIL" starttime="20230601 15:37:13.545" endtime="20230601 15:37:13.563">Setup failed:
No keyword with name 'Before Tests' found.

Also teardown failed:
No keyword with name 'After Tests' found.</status>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" type="SETUP">
<msg timestamp="20230601 15:37:13.573" level="FAIL">No keyword with name 'Before Tests' found.</msg>
<status status="FAIL" starttime="20230601 15:37:13.573" endtime="20230601 15:37:13.573"/>
</kw>
<kw name="After Tests" type="TEARDOWN">
<msg timestamp="20230601 15:37:13.581" level="FAIL">No keyword with name 'After Tests' found.</msg>
<status status="FAIL" starttime="20230601 15:37:13.581" endtime="20230601 15:37:13.581">No keyword with name 'After Tests' found.</status>
</kw>
<tag>e2e</tag>
<status status="FAIL" starttime="20230601 15:37:13.564" endtime="20230601 15:37:13.581">Setup failed:
No keyword with name 'Before Tests' found.

Also teardown failed:
No keyword with name 'After Tests' found.</status>
</test>
<status status="FAIL" starttime="20230601 15:37:13.520" endtime="20230601 15:37:13.581"/>
</suite>
<status status="FAIL" starttime="20230601 15:37:13.518" endtime="20230601 15:37:13.583"/>
</suite>
<status status="FAIL" starttime="20230601 15:37:12.110" endtime="20230601 15:37:13.584"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="0" fail="3" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="5" fail="3" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="0" fail="3" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="0" fail="3" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230601 15:37:13.523" level="ERROR">Error in file '/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot' on line 3: Resource file '../../resources/ui/keywords/test_keywords_common.robot' does not exist.</msg>
<msg timestamp="20230601 15:37:13.524" level="ERROR">Error in file '/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot' on line 4: Resource file '../../resources/ui/keywords/test_keywords_signup.robot' does not exist.</msg>
<msg timestamp="20230601 15:37:13.524" level="ERROR">Error in file '/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot' on line 5: Resource file '../../resources/ui/variables/test_variables_common.robot' does not exist.</msg>
</errors>
</robot>
