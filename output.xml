<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 12:46:57.622" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 12:46:58.191" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 12:46:58.190" endtime="20230526 12:46:58.191"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.190" endtime="20230526 12:46:58.191"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 12:46:58.326" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 12:46:58.326" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '54677121-2c22-49d0-850b-69e9e0ef0665', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd386fbc7ccd2d8b62a56125fac96172f;o=1', 'Date': 'Fri, 26 May 2023 12:46:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '10039'} 
 body={
    "quantidade": 46,
    "usuarios": [
        {
            "nome": "Maria Hyatt",
            "email": "Tremaine.MacGyver@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "0m6ql0I1EmQHoJQw"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Lyle Macejkovic",
            "email": "Hyman.Lindgren84@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "202fWYabdx7zxIpd"
        },
        {
            "nome": "Leon Hansen",
            "email": "Breanne_Lang@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "2EZmJJ2B5Icy8DaC"
        },
        {
            "nome": "Annabelle Hoeger",
            "email": "Abdiel.Rutherford91@yahoo.com",
            "password": "URb9PsGvrCiLeu5",
            "administrador": "false",
            "_id": "6O5011HNw1nWaDyf"
        },
        {
            "nome": "Kristopher Schiller",
            "email": "Garth87@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "6hJBmCjysHnAoDMW"
        },
        {
            "nome": "Bridget Kunze I",
            "email": "Emmet.Weissnat93@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "7PYs5Uw0YmxEGGZL"
        },
        {
            "nome": "Bennie Connelly-Hilll",
            "email": "Jaiden_Schamberger67@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "9zVRvnfBzaklO9zE"
        },
        {
            "nome": "Gustavo Deckow",
            "email": "Jaime.Greenfelder96@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "AiurS8gwvceQ65A5"
        },
        {
            "nome": "Mark Knapp",
            "email": "garzavincent@example.com",
            "password": "esv9geLnlgLi",
            "administrador": "true",
            "_id": "BBzPSzjGnsmS8HxE"
        },
        {
            "nome": "Arthur Beer",
            "email": "arthurbeer@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "DCOAWkktwjBOWruI"
        },
        {
            "nome": "Daisy Erdman",
            "email": "Hassie.Kozey@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "EcEY0xlBIkD5navT"
        },
        {
            "nome": "Dr. Marian Jacobs",
            "email": "Augustine22@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "F4EhDZLcFGLNXPGQ"
        },
        {
            "nome": "Michael Cain",
            "email": "gmcpherson@example.org",
            "password": "sNV4FUHjAPRK",
            "administrador": "true",
            "_id": "F6t4G0HGaejjjeTt"
        },
        {
            "nome": "Marion Ortiz",
            "email": "Keenan.Roob@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "FAf0aeUNQb3vShdc"
        },
        {
            "nome": "Elias Corwin III",
            "email": "Desiree_Nitzsche18@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "HNNUXOGfJqBoO4h1"
        },
        {
            "nome": "Jaclyn_Monahan77",
            "email": "Alice_Kautzer@hotmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "HrstOomEjJQqC3QD"
        },
        {
            "nome": "Edwin Marvin",
            "email": "Jayson.Thompson@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "IohZZMr4q0vJNUMB"
        },
        {
            "nome": "Roland Feil",
            "email": "Daisy_Wilderman10@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "Ip8gptReUAnOZpN3"
        },
        {
            "nome": "Dexter Kris",
            "email": "Cecil.Farrell61@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "M4x81oeBAInrjDAl"
        },
        {
            "nome": "Joyce Collins MD",
            "email": "Katlynn54@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "MhDlf7eGR66QJPg4"
        },
        {
            "nome": "Julio Towne",
            "email": "Tiara53@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "R4CokViLxgBX9SGm"
        },
        {
            "nome": "Linda Koch",
            "email": "ygray@example.com",
            "password": "0s4BxxeZ9mNJ",
            "administrador": "true",
            "_id": "Rch6BS2dxZO60cg2"
        },
        {
            "nome": "Dr. Yolanda Leffler",
            "email": "Delaney_Turcotte87@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "SqPOr9rPVoys2jbh"
        },
        {
            "nome": "Mack Weber",
            "email": "Quinton.Lynch70@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "TYtD32ZLcx1Xn8S7"
        },
        {
            "nome": "Lowell Glover",
            "email": "Jimmie_Olson@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "UFAA2tQjnzqDRoeV"
        },
        {
            "nome": "Dianna Streich",
            "email": "Lura7@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "UXWhwTNKXxjPesIx"
        },
        {
            "nome": "Blake Cassin",
            "email": "Herman11@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "VB0Q1nx5EltCqzog"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "VxnDeRwfrGW6rk7T"
        },
        {
            "nome": "Doug Hackett Jr.",
            "email": "Clara3@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "XWCdGDe4XqCS8iZN"
        },
        {
            "nome": "Ed Turner",
            "email": "Elroy.Skiles@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "aJb6w89WGC7wticX"
        },
        {
            "nome": "Tomas Jaskolski",
            "email": "Annetta_Breitenberg43@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "dFMIrbd5EDQNwMWj"
        },
        {
            "nome": "Bernard Nicolas",
            "email": "Janet11@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "ebl5pMdPwoFNARFi"
        },
        {
            "nome": "Johnny Bird",
            "email": "annagay@example.net",
            "password": "29WOYqJeHH0L",
            "administrador": "true",
            "_id": "gk6PxiRYJsTINzUo"
        },
        {
            "nome": "Rodney Hoeger",
            "email": "Rossie.Cole52@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "hLXKdgROcVNfUhIX"
        },
        {
            "nome": "Jeannie Bernhard",
            "email": "Catalina.Heller11@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "i6CTVTPBJYzbQeLM"
        },
        {
            "nome": "Carolyn Ankunding",
            "email": "Victor.Johnson51@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "jKYX75ldG20sWdbw"
        },
        {
            "nome": "Lana Homenick",
            "email": "Bernhard.Christiansen19@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "kRyre55r7tuK2Hxy"
        },
        {
            "nome": "Jeffrey Price",
            "email": "jeffreyprice@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "lJrG3Bv9OQhNXVjf"
        },
        {
            "nome": "Joel Dickens",
            "email": "Sofia40@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "lrPplnazabt6u0EV"
        },
        {
            "nome": "Angelina Stokes",
            "email": "Kyleigh_Reichel3@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "nBkIIGDYdxP3SDSs"
        },
        {
            "nome": "Grace Vandervort",
            "email": "Murphy_Marks@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "qBy1TryYX3dYfizs"
        },
        {
            "nome": "Dr. Brandon O'Reilly",
            "email": "Aaron61@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "qcS5fl0QC8DJwr19"
        },
        {
            "nome": "Ernestine Bechtelar",
            "email": "Monty86@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "rsdEprJcnmmh7Cse"
        },
        {
            "nome": "Mercedes Satterfield",
            "email": "Katherine.Kshlerin@hotmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "tvhnweey1rWZToBU"
        },
        {
            "nome": "Candace Bauch",
            "email": "candacebauch@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230526 12:46:58.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.191" endtime="20230526 12:46:58.326"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 12:46:58.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.326" endtime="20230526 12:46:58.327"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.191" endtime="20230526 12:46:58.327"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 12:46:58.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.327" endtime="20230526 12:46:58.328"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 12:46:58.328" endtime="20230526 12:46:58.329"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.327" endtime="20230526 12:46:58.329"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 12:46:58.330" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 12:46:58.329" endtime="20230526 12:46:58.330"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.329" endtime="20230526 12:46:58.330"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 12:46:58.189" endtime="20230526 12:46:58.330"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 12:46:58.331" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 12:46:58.331" endtime="20230526 12:46:58.332"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.331" endtime="20230526 12:46:58.332"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 12:46:58.332" level="INFO">${name} = Mckenzie Long</msg>
<status status="PASS" starttime="20230526 12:46:58.332" endtime="20230526 12:46:58.332"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 12:46:58.333" level="INFO">${email} = lopezjohn@example.com</msg>
<status status="PASS" starttime="20230526 12:46:58.333" endtime="20230526 12:46:58.333"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 12:46:58.333" level="INFO">${password} = Wc5p7FXxb28p</msg>
<status status="PASS" starttime="20230526 12:46:58.333" endtime="20230526 12:46:58.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 12:46:58.334" level="INFO">${name} = Mckenzie Long</msg>
<status status="PASS" starttime="20230526 12:46:58.334" endtime="20230526 12:46:58.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 12:46:58.334" level="INFO">${email} = lopezjohn@example.com</msg>
<status status="PASS" starttime="20230526 12:46:58.334" endtime="20230526 12:46:58.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 12:46:58.334" level="INFO">${password} = Wc5p7FXxb28p</msg>
<status status="PASS" starttime="20230526 12:46:58.334" endtime="20230526 12:46:58.335"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.332" endtime="20230526 12:46:58.335"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 12:46:58.335" level="INFO">${payload} = {'nome': 'Mckenzie Long', 'email': 'lopezjohn@example.com', 'password': 'Wc5p7FXxb28p', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 12:46:58.335" endtime="20230526 12:46:58.335"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 12:46:58.336" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 12:46:58.336" endtime="20230526 12:46:58.336"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 12:46:58.401" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Mckenzie Long", "email": "lopezjohn@example.com", "password": "Wc5p7FXxb28p", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 12:46:58.401" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '35c735e9-eee6-4ab4-8a68-09eff4ba71ec', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0b590a39c0b14002687365ef6d466818', 'Date': 'Fri, 26 May 2023 12:46:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "RKV7hJZecta1yyPh"
} 
 </msg>
<msg timestamp="20230526 12:46:58.401" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.336" endtime="20230526 12:46:58.401"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 12:46:58.402" level="INFO">${user_id} = RKV7hJZecta1yyPh</msg>
<status status="PASS" starttime="20230526 12:46:58.401" endtime="20230526 12:46:58.402"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 12:46:58.402" level="INFO">${USER_ID} = RKV7hJZecta1yyPh</msg>
<status status="PASS" starttime="20230526 12:46:58.402" endtime="20230526 12:46:58.402"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 12:46:58.403" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.403" endtime="20230526 12:46:58.403"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.335" endtime="20230526 12:46:58.403"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 12:46:58.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.403" endtime="20230526 12:46:58.404"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 12:46:58.404" endtime="20230526 12:46:58.405"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.403" endtime="20230526 12:46:58.405"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 12:46:58.406" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 12:46:58.405" endtime="20230526 12:46:58.406"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.405" endtime="20230526 12:46:58.406"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 12:46:58.330" endtime="20230526 12:46:58.406"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 12:46:58.408" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 12:46:58.407" endtime="20230526 12:46:58.408"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.407" endtime="20230526 12:46:58.408"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 12:46:58.475" level="INFO">GET Request : url=https://serverest.dev/usuarios/RKV7hJZecta1yyPh 
 path_url=/usuarios/RKV7hJZecta1yyPh 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 12:46:58.475" level="INFO">GET Response : url=https://serverest.dev/usuarios/RKV7hJZecta1yyPh 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dfc13351-a14b-4aae-a6cb-c037eb4d2b5e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b5659d04a037de32d09dd199a83b045b', 'Date': 'Fri, 26 May 2023 12:46:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Mckenzie Long",
    "email": "lopezjohn@example.com",
    "password": "Wc5p7FXxb28p",
    "administrador": "false",
    "_id": "RKV7hJZecta1yyPh"
} 
 </msg>
<msg timestamp="20230526 12:46:58.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.408" endtime="20230526 12:46:58.476"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 12:46:58.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.476" endtime="20230526 12:46:58.476"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.408" endtime="20230526 12:46:58.476"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 12:46:58.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.477" endtime="20230526 12:46:58.477"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 12:46:58.477" endtime="20230526 12:46:58.478"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.476" endtime="20230526 12:46:58.478"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 12:46:58.479" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 12:46:58.478" endtime="20230526 12:46:58.479"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.478" endtime="20230526 12:46:58.479"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 12:46:58.407" endtime="20230526 12:46:58.479"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 12:46:58.481" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 12:46:58.480" endtime="20230526 12:46:58.481"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.480" endtime="20230526 12:46:58.481"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 12:46:58.482" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 12:46:58.481" endtime="20230526 12:46:58.482"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 12:46:58.482" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 12:46:58.482" endtime="20230526 12:46:58.482"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 12:46:58.543" level="INFO">PUT Request : url=https://serverest.dev/usuarios/RKV7hJZecta1yyPh 
 path_url=/usuarios/RKV7hJZecta1yyPh 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 12:46:58.543" level="INFO">PUT Response : url=https://serverest.dev/usuarios/RKV7hJZecta1yyPh 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1f22578b-e1f0-44bd-a96a-a470573af422', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8c4beee8f9d10e90d9cb08b1468ecdd9', 'Date': 'Fri, 26 May 2023 12:46:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 12:46:58.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.482" endtime="20230526 12:46:58.544"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 12:46:58.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.544" endtime="20230526 12:46:58.544"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.481" endtime="20230526 12:46:58.544"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 12:46:58.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.545" endtime="20230526 12:46:58.545"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 12:46:58.545" endtime="20230526 12:46:58.546"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.544" endtime="20230526 12:46:58.546"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 12:46:58.547" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 12:46:58.546" endtime="20230526 12:46:58.547"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.546" endtime="20230526 12:46:58.547"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 12:46:58.480" endtime="20230526 12:46:58.547"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 12:46:58.549" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 12:46:58.548" endtime="20230526 12:46:58.549"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.548" endtime="20230526 12:46:58.549"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 12:46:58.618" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/RKV7hJZecta1yyPh 
 path_url=/usuarios/RKV7hJZecta1yyPh 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 12:46:58.618" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/RKV7hJZecta1yyPh 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1c5fac9c-9854-4bbb-b5b9-60028b6c42ba', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '65fbed0ff492938a9402c3b1da76bd5e', 'Date': 'Fri, 26 May 2023 12:46:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 12:46:58.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.549" endtime="20230526 12:46:58.618"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 12:46:58.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.619" endtime="20230526 12:46:58.619"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.549" endtime="20230526 12:46:58.619"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 12:46:58.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 12:46:58.620" endtime="20230526 12:46:58.620"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 12:46:58.620" endtime="20230526 12:46:58.621"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.619" endtime="20230526 12:46:58.621"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 12:46:58.622" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 12:46:58.621" endtime="20230526 12:46:58.622"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.621" endtime="20230526 12:46:58.622"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 12:46:58.548" endtime="20230526 12:46:58.622"/>
</test>
<status status="PASS" starttime="20230526 12:46:57.643" endtime="20230526 12:46:58.623"/>
</suite>
<status status="PASS" starttime="20230526 12:46:57.641" endtime="20230526 12:46:58.624"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 12:46:58.634" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 12:46:58.634" endtime="20230526 12:47:00.348"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 12:47:00.348" endtime="20230526 12:47:00.467"/>
</kw>
<status status="PASS" starttime="20230526 12:46:58.633" endtime="20230526 12:47:00.467"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 12:47:00.472" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 12:47:00.468" endtime="20230526 12:47:00.472"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:00.473" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 12:47:00.472" endtime="20230526 12:47:00.532"/>
</kw>
<status status="PASS" starttime="20230526 12:47:00.467" endtime="20230526 12:47:00.532"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:00.533" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 12:47:00.532" endtime="20230526 12:47:00.594"/>
</kw>
<status status="PASS" starttime="20230526 12:47:00.532" endtime="20230526 12:47:00.594"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 12:47:00.595" endtime="20230526 12:47:00.826"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 12:47:00.844" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 12:47:00.826" endtime="20230526 12:47:00.844"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 12:47:00.858" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 12:47:00.844" endtime="20230526 12:47:00.858"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 12:47:00.870" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 12:47:00.858" endtime="20230526 12:47:00.870"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 12:47:00.882" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 12:47:00.870" endtime="20230526 12:47:00.882"/>
</kw>
<status status="PASS" starttime="20230526 12:47:00.594" endtime="20230526 12:47:00.882"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 12:47:00.883" endtime="20230526 12:47:00.938"/>
</kw>
<status status="PASS" starttime="20230526 12:47:00.883" endtime="20230526 12:47:00.938"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 12:46:58.633" endtime="20230526 12:47:00.938"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 12:47:00.941" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 12:47:00.940" endtime="20230526 12:47:02.059"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 12:47:02.059" endtime="20230526 12:47:02.181"/>
</kw>
<status status="PASS" starttime="20230526 12:47:00.940" endtime="20230526 12:47:02.182"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 12:47:02.187" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 12:47:02.182" endtime="20230526 12:47:02.187"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:02.187" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 12:47:02.187" endtime="20230526 12:47:02.238"/>
</kw>
<status status="PASS" starttime="20230526 12:47:02.182" endtime="20230526 12:47:02.238"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 12:47:02.240" level="INFO">${name} = Mrs. Patricia Smith MD</msg>
<status status="PASS" starttime="20230526 12:47:02.239" endtime="20230526 12:47:02.240"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 12:47:02.240" level="INFO">${email} = philipmcpherson@example.org</msg>
<status status="PASS" starttime="20230526 12:47:02.240" endtime="20230526 12:47:02.240"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 12:47:02.241" level="INFO">${password} = dw4e7Tqb6e4T</msg>
<status status="PASS" starttime="20230526 12:47:02.240" endtime="20230526 12:47:02.241"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:02.241" level="INFO">Typing text 'Mrs. Patricia Smith MD' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 12:47:02.241" endtime="20230526 12:47:02.379"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:02.380" level="INFO">Typing text 'philipmcpherson@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 12:47:02.379" endtime="20230526 12:47:02.486"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:02.487" level="INFO">Typing text 'dw4e7Tqb6e4T' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 12:47:02.486" endtime="20230526 12:47:02.588"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:02.589" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 12:47:02.588" endtime="20230526 12:47:02.660"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 12:47:02.661" level="INFO">${name} = Mrs. Patricia Smith MD</msg>
<status status="PASS" starttime="20230526 12:47:02.661" endtime="20230526 12:47:02.661"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 12:47:02.661" level="INFO">${email} = philipmcpherson@example.org</msg>
<status status="PASS" starttime="20230526 12:47:02.661" endtime="20230526 12:47:02.662"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 12:47:02.662" level="INFO">${password} = dw4e7Tqb6e4T</msg>
<status status="PASS" starttime="20230526 12:47:02.662" endtime="20230526 12:47:02.662"/>
</kw>
<status status="PASS" starttime="20230526 12:47:02.239" endtime="20230526 12:47:02.662"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:02.663" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 12:47:02.662" endtime="20230526 12:47:02.721"/>
</kw>
<status status="PASS" starttime="20230526 12:47:02.662" endtime="20230526 12:47:02.721"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 12:47:02.722" endtime="20230526 12:47:02.953"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 12:47:02.970" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 12:47:02.953" endtime="20230526 12:47:02.970"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 12:47:02.983" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 12:47:02.970" endtime="20230526 12:47:02.983"/>
</kw>
<status status="PASS" starttime="20230526 12:47:02.722" endtime="20230526 12:47:02.983"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 12:47:02.983" endtime="20230526 12:47:03.037"/>
</kw>
<status status="PASS" starttime="20230526 12:47:02.983" endtime="20230526 12:47:03.038"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 12:47:00.939" endtime="20230526 12:47:03.038"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 12:47:03.040" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 12:47:03.039" endtime="20230526 12:47:04.217"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 12:47:04.218" endtime="20230526 12:47:04.321"/>
</kw>
<status status="PASS" starttime="20230526 12:47:03.039" endtime="20230526 12:47:04.321"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 12:47:04.326" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 12:47:04.322" endtime="20230526 12:47:04.326"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:04.327" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 12:47:04.327" endtime="20230526 12:47:04.396"/>
</kw>
<status status="PASS" starttime="20230526 12:47:04.321" endtime="20230526 12:47:04.396"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:04.397" level="INFO">Typing text 'Mrs. Patricia Smith MD' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 12:47:04.397" endtime="20230526 12:47:04.534"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:04.535" level="INFO">Typing text 'philipmcpherson@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 12:47:04.534" endtime="20230526 12:47:04.649"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:04.649" level="INFO">Typing text 'dw4e7Tqb6e4T' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 12:47:04.649" endtime="20230526 12:47:04.758"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:04.758" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 12:47:04.758" endtime="20230526 12:47:04.827"/>
</kw>
<status status="PASS" starttime="20230526 12:47:04.396" endtime="20230526 12:47:04.828"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 12:47:04.829" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 12:47:04.828" endtime="20230526 12:47:04.887"/>
</kw>
<status status="PASS" starttime="20230526 12:47:04.828" endtime="20230526 12:47:04.887"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 12:47:04.887" endtime="20230526 12:47:05.118"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 12:47:05.135" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 12:47:05.118" endtime="20230526 12:47:05.135"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 12:47:05.147" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 12:47:05.135" endtime="20230526 12:47:05.147"/>
</kw>
<status status="PASS" starttime="20230526 12:47:04.887" endtime="20230526 12:47:05.148"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 12:47:05.148" endtime="20230526 12:47:05.203"/>
</kw>
<status status="PASS" starttime="20230526 12:47:05.148" endtime="20230526 12:47:05.203"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 12:47:03.038" endtime="20230526 12:47:05.203"/>
</test>
<status status="PASS" starttime="20230526 12:46:58.627" endtime="20230526 12:47:05.204"/>
</suite>
<status status="PASS" starttime="20230526 12:46:58.625" endtime="20230526 12:47:05.205"/>
</suite>
<status status="PASS" starttime="20230526 12:46:57.623" endtime="20230526 12:47:05.206"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
