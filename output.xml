<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230418 11:54:55.289" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 11:54:55.950" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 11:54:55.950" endtime="20230418 11:54:55.951"/>
</kw>
<status status="PASS" starttime="20230418 11:54:55.950" endtime="20230418 11:54:55.951"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 11:54:56.079" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 11:54:56.079" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a160d231-94f4-4a35-9887-3908601c0b20', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd5cb847c8e426c67672d0bb7bf94999f;o=1', 'Date': 'Tue, 18 Apr 2023 11:54:56 GMT', 'Server': 'Google Frontend', 'Content-Length': '475'} 
 body={
    "quantidade": 2,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Rosalee_Berge92@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "yUMR0Bh3Nc17Obww"
        }
    ]
} 
 </msg>
<msg timestamp="20230418 11:54:56.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:55.951" endtime="20230418 11:54:56.079"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 11:54:56.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.079" endtime="20230418 11:54:56.080"/>
</kw>
<status status="PASS" starttime="20230418 11:54:55.951" endtime="20230418 11:54:56.080"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 11:54:56.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.080" endtime="20230418 11:54:56.081"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 11:54:56.081" endtime="20230418 11:54:56.082"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.080" endtime="20230418 11:54:56.082"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 11:54:56.083" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 11:54:56.082" endtime="20230418 11:54:56.083"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.082" endtime="20230418 11:54:56.083"/>
</kw>
<status status="PASS" starttime="20230418 11:54:55.949" endtime="20230418 11:54:56.083"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 11:54:56.085" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 11:54:56.084" endtime="20230418 11:54:56.085"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.084" endtime="20230418 11:54:56.085"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230418 11:54:56.086" level="INFO">${name} = Susan Williams</msg>
<status status="PASS" starttime="20230418 11:54:56.085" endtime="20230418 11:54:56.086"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230418 11:54:56.086" level="INFO">${email} = rebecca64@example.org</msg>
<status status="PASS" starttime="20230418 11:54:56.086" endtime="20230418 11:54:56.086"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230418 11:54:56.087" level="INFO">${password} = b0KJ0pnF$5</msg>
<status status="PASS" starttime="20230418 11:54:56.086" endtime="20230418 11:54:56.087"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 11:54:56.087" level="INFO">${name} = Susan Williams</msg>
<status status="PASS" starttime="20230418 11:54:56.087" endtime="20230418 11:54:56.087"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 11:54:56.087" level="INFO">${email} = rebecca64@example.org</msg>
<status status="PASS" starttime="20230418 11:54:56.087" endtime="20230418 11:54:56.087"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 11:54:56.088" level="INFO">${password} = b0KJ0pnF$5</msg>
<status status="PASS" starttime="20230418 11:54:56.088" endtime="20230418 11:54:56.088"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.085" endtime="20230418 11:54:56.088"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 11:54:56.089" level="INFO">${payload} = {'nome': 'Susan Williams', 'email': 'rebecca64@example.org', 'password': 'b0KJ0pnF$5', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 11:54:56.088" endtime="20230418 11:54:56.089"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 11:54:56.089" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 11:54:56.089" endtime="20230418 11:54:56.089"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 11:54:56.159" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Susan Williams", "email": "rebecca64@example.org", "password": "b0KJ0pnF$5", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 11:54:56.159" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0fd19b47-7716-405d-aec0-1c38cf41d67b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b0a9e0c418230e3360c7d8ff15a65484', 'Date': 'Tue, 18 Apr 2023 11:54:56 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "PP3PVLOZlz0TuBhC"
} 
 </msg>
<msg timestamp="20230418 11:54:56.159" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.090" endtime="20230418 11:54:56.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230418 11:54:56.161" level="INFO">${user_id} = PP3PVLOZlz0TuBhC</msg>
<status status="PASS" starttime="20230418 11:54:56.160" endtime="20230418 11:54:56.161"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230418 11:54:56.161" level="INFO">${USER_ID} = PP3PVLOZlz0TuBhC</msg>
<status status="PASS" starttime="20230418 11:54:56.161" endtime="20230418 11:54:56.161"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 11:54:56.162" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.161" endtime="20230418 11:54:56.162"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.088" endtime="20230418 11:54:56.162"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 11:54:56.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.162" endtime="20230418 11:54:56.163"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 11:54:56.163" endtime="20230418 11:54:56.164"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.162" endtime="20230418 11:54:56.164"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 11:54:56.165" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 11:54:56.164" endtime="20230418 11:54:56.165"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.164" endtime="20230418 11:54:56.165"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.084" endtime="20230418 11:54:56.165"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 11:54:56.167" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 11:54:56.166" endtime="20230418 11:54:56.167"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.166" endtime="20230418 11:54:56.167"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 11:54:56.234" level="INFO">GET Request : url=https://serverest.dev/usuarios/PP3PVLOZlz0TuBhC 
 path_url=/usuarios/PP3PVLOZlz0TuBhC 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 11:54:56.234" level="INFO">GET Response : url=https://serverest.dev/usuarios/PP3PVLOZlz0TuBhC 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '77503d19-f9da-4da1-ac88-76a0c40bc7d0', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3f663a946c1a0df18cbabcccb40334ac', 'Date': 'Tue, 18 Apr 2023 11:54:56 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Susan Williams",
    "email": "rebecca64@example.org",
    "password": "b0KJ0pnF$5",
    "administrador": "false",
    "_id": "PP3PVLOZlz0TuBhC"
} 
 </msg>
<msg timestamp="20230418 11:54:56.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.167" endtime="20230418 11:54:56.234"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 11:54:56.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.235" endtime="20230418 11:54:56.235"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.167" endtime="20230418 11:54:56.235"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 11:54:56.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.236" endtime="20230418 11:54:56.237"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 11:54:56.237" endtime="20230418 11:54:56.237"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.235" endtime="20230418 11:54:56.237"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 11:54:56.238" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230418 11:54:56.238" endtime="20230418 11:54:56.238"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.237" endtime="20230418 11:54:56.238"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.166" endtime="20230418 11:54:56.239"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 11:54:56.240" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 11:54:56.240" endtime="20230418 11:54:56.240"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.240" endtime="20230418 11:54:56.241"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 11:54:56.241" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 11:54:56.241" endtime="20230418 11:54:56.241"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 11:54:56.242" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 11:54:56.241" endtime="20230418 11:54:56.242"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 11:54:56.310" level="INFO">PUT Request : url=https://serverest.dev/usuarios/PP3PVLOZlz0TuBhC 
 path_url=/usuarios/PP3PVLOZlz0TuBhC 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 11:54:56.310" level="INFO">PUT Response : url=https://serverest.dev/usuarios/PP3PVLOZlz0TuBhC 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f8e12a3e-1626-4ded-bca5-dff6e9363d8a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1db9e1148c98ecb17584702aeacf068e', 'Date': 'Tue, 18 Apr 2023 11:54:56 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230418 11:54:56.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.242" endtime="20230418 11:54:56.310"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 11:54:56.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.311" endtime="20230418 11:54:56.311"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.241" endtime="20230418 11:54:56.311"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 11:54:56.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.312" endtime="20230418 11:54:56.313"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 11:54:56.313" endtime="20230418 11:54:56.313"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.311" endtime="20230418 11:54:56.313"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 11:54:56.314" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 11:54:56.314" endtime="20230418 11:54:56.315"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.314" endtime="20230418 11:54:56.315"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.239" endtime="20230418 11:54:56.315"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 11:54:56.316" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 11:54:56.316" endtime="20230418 11:54:56.316"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.316" endtime="20230418 11:54:56.317"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 11:54:56.384" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/PP3PVLOZlz0TuBhC 
 path_url=/usuarios/PP3PVLOZlz0TuBhC 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230418 11:54:56.385" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/PP3PVLOZlz0TuBhC 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '02eef0c3-5999-4562-87f9-0c8456a98056', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7aa14f9050129820794f1ce2ab843932', 'Date': 'Tue, 18 Apr 2023 11:54:56 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230418 11:54:56.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.317" endtime="20230418 11:54:56.385"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 11:54:56.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.385" endtime="20230418 11:54:56.386"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.317" endtime="20230418 11:54:56.386"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 11:54:56.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 11:54:56.386" endtime="20230418 11:54:56.387"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 11:54:56.387" endtime="20230418 11:54:56.388"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.386" endtime="20230418 11:54:56.388"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 11:54:56.389" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 11:54:56.388" endtime="20230418 11:54:56.389"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.388" endtime="20230418 11:54:56.389"/>
</kw>
<status status="PASS" starttime="20230418 11:54:56.315" endtime="20230418 11:54:56.389"/>
</test>
<status status="PASS" starttime="20230418 11:54:55.312" endtime="20230418 11:54:56.390"/>
</suite>
<status status="PASS" starttime="20230418 11:54:55.310" endtime="20230418 11:54:56.391"/>
</suite>
<status status="PASS" starttime="20230418 11:54:55.309" endtime="20230418 11:54:56.392"/>
</suite>
<status status="PASS" starttime="20230418 11:54:55.290" endtime="20230418 11:54:56.392"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
