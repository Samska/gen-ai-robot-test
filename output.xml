<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230519 15:48:26.669" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 15:48:27.345" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 15:48:27.345" endtime="20230519 15:48:27.346"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.345" endtime="20230519 15:48:27.346"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 15:48:27.588" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230519 15:48:27.588" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5d7b7d39-5ec1-4cbb-aa00-547b633b7399', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '81069cf358f6b76e4a7e3ea8fdf4e356;o=1', 'Date': 'Fri, 19 May 2023 15:48:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '648708'} 
 body={
    "quantidade": 2834,
    "usuarios": [
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-SGQY54SWSXRkR2yGoug8@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "00DmlxgFjNDUkAJP"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-HOGxqvI0yA8vXzeF9haD@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "00mKHz7HnhUUSOtb"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-gzuQ5Gcv0VOkZv9NxHFT@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "03xuoXO6SMZVwopa"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-IA5GF0bAld4VEjL8ruQT@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "056Z876Hg31l7yJm"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-O88VaAQvvnlbNVTOUhaa@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "05hji9NtuCIz1R9A"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-6tLrDyo1TcMhduepwIf1@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "08v8atRntDMpRJVt"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-7X8cJ1LflHDW5asPnkp2@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "09vdWR91TZEm2DwL"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-Mr7wV5gNKabLWAfdOKnc@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0ADhkaNJxaCzf2pv"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-aYdjQs3mOW8kNhlzHvMk@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0BWMTHtDbjosIepA"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-LdUHnQGuRwJVFaQobXiK@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0BcTlgPIbwctl8uF"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-kfn4v0MLw63a8YWsv8hh@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0D8t4TG0KvCNKOkV"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-gqjMC3vAYQTQjp6vm5go@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0Dkncee0fty3j0sR"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-aY2vqwFPwS7b0x9IzcLc@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0FWqasJdEHdNiVV5"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-vxEP0nWRsLkZ5doLR29e@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0GcHZplOqnCaVvO0"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-UtavCNghklIUdRwOsrmU@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0INU023I6Op3HQ9C"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-88cjipMfIhDl47pvKeVT@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0K5TedbYGLc2cACn"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-z8ZEWDWXddpgBMzCWN9h@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0Lca1L1V8zsf9I9p"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-TYmpNyuHr2o0wIZf5S2q@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0MvFAlfqXQKNQuZ9"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-7IyiLJDt6xHR2V2iFZlo@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0OOH5IrfeyY6INPD"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-51Q09hzYpY05a5DsEali@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0PzroXsSMxomHYwO"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-Px075eMc1KzexHtlvmJ4@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0QonDZSg4jconMis"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-m1WQdLvSVCEuh6rGjhxU@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0RBIL5X2KHjwLhM2"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-imCfJExWscKfH1xpn1mc@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0SV4O4j2PeTd2zVF"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-ZiYbWrRVlVvhingy1I7B@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0UuFB2wb9n2VKq04"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-Vk5dSsVu4FmdndTlJBWF@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0VCqfgC1bJt0HcG8"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-q5u8I6YdsNbuw6O5k8ng@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0YxuH9O0EqrogYT1"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-lvi9b7WqR6tqMjTAq1uk@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0ZMWvHnSuaSXmzLy"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-5mpxSVKi75VTSiYyc5FA@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0aCiWBQeZDo9HjbW"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-9dkTqfyA0ArgC9dWAu0x@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0bE3lGpufdlr66Cp"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-vZdOmraYn87oQhn7YnnQ@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0ciTCSwMuEx4mJtK"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-ncf0wIED66W214taTgKX@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0cjG5vUp397VBiLl"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-uGMMzQieRSHL1OHNPnZa@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0dh28bHJt8Vpr8ke"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-yMDN5oO0t6ifL9FynsYz@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0h1Q1BI1F4aVUJA4"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-WjszuHdvE37xFXsLHLpI@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0hJOftBo9EFBFUNG"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-Km50DnfBG3Jx9amvMVZd@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0ieKQ1FRAwvxEcr6"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-CUodzz5p6rzG1pfEN36I@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0ioeUT4NVLLtuP2H"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-xk3cc12xcx2jLxZCtrkP@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0jD4kmCxkK745bgt"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-bpt9C4sQ17RdyQxAeugk@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0pZkVca1qyOpfyTx"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-e7PtXqxeYzpCOto3O2Qk@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0q4S9IC9OqgtMfKq"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-ilTPgiVaMW9yctd0rHpB@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0qqjV0GcGKmAa8ol"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-RdbV0sFXjgCMQqvNfVED@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0rJqavbTaa7R3urw"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-5jNNCy6Y8e0cB6DESsL9@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0t9xX4cMtX2IFHjc"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Monkey D. Luffy",
            "email": "luffy-kr2V5YupIcpT1mKx32tY@qa.com.br",
            "password"... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230519 15:48:27.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.346" endtime="20230519 15:48:27.588"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 15:48:27.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.589" endtime="20230519 15:48:27.589"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.346" endtime="20230519 15:48:27.589"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 15:48:27.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.590" endtime="20230519 15:48:27.591"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 15:48:27.591" endtime="20230519 15:48:27.597"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.589" endtime="20230519 15:48:27.597"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 15:48:27.604" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230519 15:48:27.598" endtime="20230519 15:48:27.604"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.597" endtime="20230519 15:48:27.605"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 15:48:27.344" endtime="20230519 15:48:27.605"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 15:48:27.607" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 15:48:27.606" endtime="20230519 15:48:27.607"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.606" endtime="20230519 15:48:27.607"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230519 15:48:27.608" level="INFO">${name} = Nicole Walker</msg>
<status status="PASS" starttime="20230519 15:48:27.608" endtime="20230519 15:48:27.608"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230519 15:48:27.609" level="INFO">${email} = kerrdonald@example.com</msg>
<status status="PASS" starttime="20230519 15:48:27.608" endtime="20230519 15:48:27.609"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230519 15:48:27.609" level="INFO">${password} = veS6MKw+@%</msg>
<status status="PASS" starttime="20230519 15:48:27.609" endtime="20230519 15:48:27.609"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230519 15:48:27.610" level="INFO">${name} = Nicole Walker</msg>
<status status="PASS" starttime="20230519 15:48:27.609" endtime="20230519 15:48:27.610"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230519 15:48:27.610" level="INFO">${email} = kerrdonald@example.com</msg>
<status status="PASS" starttime="20230519 15:48:27.610" endtime="20230519 15:48:27.610"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230519 15:48:27.610" level="INFO">${password} = veS6MKw+@%</msg>
<status status="PASS" starttime="20230519 15:48:27.610" endtime="20230519 15:48:27.611"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.607" endtime="20230519 15:48:27.611"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230519 15:48:27.612" level="INFO">${payload} = {'nome': 'Nicole Walker', 'email': 'kerrdonald@example.com', 'password': 'veS6MKw+@%', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230519 15:48:27.611" endtime="20230519 15:48:27.612"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230519 15:48:27.612" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230519 15:48:27.612" endtime="20230519 15:48:27.612"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 15:48:27.697" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Nicole Walker", "email": "kerrdonald@example.com", "password": "veS6MKw+@%", "administrador": "false"}' 
 </msg>
<msg timestamp="20230519 15:48:27.697" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a3af038c-0c0c-491b-9def-38d3cdf06604', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b800362314648d6c9f02f780f7c9e2e9', 'Date': 'Fri, 19 May 2023 15:48:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "6XMuGfHHq5BdnNLo"
} 
 </msg>
<msg timestamp="20230519 15:48:27.697" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.612" endtime="20230519 15:48:27.697"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230519 15:48:27.698" level="INFO">${user_id} = 6XMuGfHHq5BdnNLo</msg>
<status status="PASS" starttime="20230519 15:48:27.697" endtime="20230519 15:48:27.698"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230519 15:48:27.699" level="INFO">${USER_ID} = 6XMuGfHHq5BdnNLo</msg>
<status status="PASS" starttime="20230519 15:48:27.698" endtime="20230519 15:48:27.699"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 15:48:27.699" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.699" endtime="20230519 15:48:27.699"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.611" endtime="20230519 15:48:27.699"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 15:48:27.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.700" endtime="20230519 15:48:27.701"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 15:48:27.701" endtime="20230519 15:48:27.701"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.699" endtime="20230519 15:48:27.702"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 15:48:27.703" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230519 15:48:27.702" endtime="20230519 15:48:27.703"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.702" endtime="20230519 15:48:27.703"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 15:48:27.606" endtime="20230519 15:48:27.703"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 15:48:27.705" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 15:48:27.704" endtime="20230519 15:48:27.705"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.704" endtime="20230519 15:48:27.705"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 15:48:27.776" level="INFO">GET Request : url=https://serverest.dev/usuarios/6XMuGfHHq5BdnNLo 
 path_url=/usuarios/6XMuGfHHq5BdnNLo 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230519 15:48:27.776" level="INFO">GET Response : url=https://serverest.dev/usuarios/6XMuGfHHq5BdnNLo 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f8aaac76-632a-4c7e-94d1-17c7374665c1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '27dc9eec0599de8cd5fc042949a7e5df', 'Date': 'Fri, 19 May 2023 15:48:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Nicole Walker",
    "email": "kerrdonald@example.com",
    "password": "veS6MKw+@%",
    "administrador": "false",
    "_id": "6XMuGfHHq5BdnNLo"
} 
 </msg>
<msg timestamp="20230519 15:48:27.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.706" endtime="20230519 15:48:27.776"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 15:48:27.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.776" endtime="20230519 15:48:27.777"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.705" endtime="20230519 15:48:27.777"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 15:48:27.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.777" endtime="20230519 15:48:27.778"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 15:48:27.778" endtime="20230519 15:48:27.779"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.777" endtime="20230519 15:48:27.779"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 15:48:27.780" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230519 15:48:27.780" endtime="20230519 15:48:27.780"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.779" endtime="20230519 15:48:27.781"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 15:48:27.703" endtime="20230519 15:48:27.781"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 15:48:27.782" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 15:48:27.782" endtime="20230519 15:48:27.783"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.782" endtime="20230519 15:48:27.783"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230519 15:48:27.784" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230519 15:48:27.783" endtime="20230519 15:48:27.784"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230519 15:48:27.784" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230519 15:48:27.784" endtime="20230519 15:48:27.784"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 15:48:27.859" level="INFO">PUT Request : url=https://serverest.dev/usuarios/6XMuGfHHq5BdnNLo 
 path_url=/usuarios/6XMuGfHHq5BdnNLo 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230519 15:48:27.859" level="INFO">PUT Response : url=https://serverest.dev/usuarios/6XMuGfHHq5BdnNLo 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '92e2453e-bdfe-4dce-98f1-5b11e479956a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0510b2520208bf1c8948262fbf3ca20f', 'Date': 'Fri, 19 May 2023 15:48:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230519 15:48:27.859" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.784" endtime="20230519 15:48:27.859"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 15:48:27.859" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.859" endtime="20230519 15:48:27.860"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.783" endtime="20230519 15:48:27.860"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 15:48:27.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.860" endtime="20230519 15:48:27.861"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 15:48:27.861" endtime="20230519 15:48:27.862"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.860" endtime="20230519 15:48:27.862"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 15:48:27.863" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230519 15:48:27.862" endtime="20230519 15:48:27.863"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.862" endtime="20230519 15:48:27.863"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 15:48:27.781" endtime="20230519 15:48:27.863"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 15:48:27.865" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 15:48:27.865" endtime="20230519 15:48:27.866"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.865" endtime="20230519 15:48:27.866"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 15:48:27.933" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/6XMuGfHHq5BdnNLo 
 path_url=/usuarios/6XMuGfHHq5BdnNLo 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230519 15:48:27.933" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/6XMuGfHHq5BdnNLo 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '595862ac-e976-4d70-9e0e-98390a25df34', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '74c8658ab56e73f7e2fbc02d2518c370', 'Date': 'Fri, 19 May 2023 15:48:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230519 15:48:27.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.866" endtime="20230519 15:48:27.934"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 15:48:27.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.934" endtime="20230519 15:48:27.934"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.866" endtime="20230519 15:48:27.935"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 15:48:27.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 15:48:27.935" endtime="20230519 15:48:27.936"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 15:48:27.936" endtime="20230519 15:48:27.937"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.935" endtime="20230519 15:48:27.937"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 15:48:27.938" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230519 15:48:27.937" endtime="20230519 15:48:27.938"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.937" endtime="20230519 15:48:27.938"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 15:48:27.864" endtime="20230519 15:48:27.938"/>
</test>
<status status="PASS" starttime="20230519 15:48:26.696" endtime="20230519 15:48:27.939"/>
</suite>
<status status="PASS" starttime="20230519 15:48:26.694" endtime="20230519 15:48:27.941"/>
</suite>
<status status="PASS" starttime="20230519 15:48:26.692" endtime="20230519 15:48:27.942"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230519 15:48:27.956" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 15:48:27.955" endtime="20230519 15:48:29.555"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230519 15:48:29.556" endtime="20230519 15:48:29.667"/>
</kw>
<status status="PASS" starttime="20230519 15:48:27.955" endtime="20230519 15:48:29.668"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230519 15:48:29.669" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230519 15:48:29.668" endtime="20230519 15:48:29.751"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 15:48:29.757" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 15:48:29.751" endtime="20230519 15:48:29.757"/>
</kw>
<status status="PASS" starttime="20230519 15:48:29.668" endtime="20230519 15:48:29.758"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:29.760" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230519 15:48:29.758" endtime="20230519 15:48:29.904"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:29.905" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230519 15:48:29.904" endtime="20230519 15:48:30.017"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:30.018" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230519 15:48:30.017" endtime="20230519 15:48:30.147"/>
</kw>
<status status="PASS" starttime="20230519 15:48:29.758" endtime="20230519 15:48:30.148"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 15:48:30.168" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230519 15:48:30.148" endtime="20230519 15:48:30.168"/>
</kw>
<status status="PASS" starttime="20230519 15:48:30.148" endtime="20230519 15:48:30.168"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230519 15:48:30.186" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230519 15:48:30.169" endtime="20230519 15:48:30.186"/>
</kw>
<status status="PASS" starttime="20230519 15:48:30.168" endtime="20230519 15:48:30.186"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230519 15:48:30.187" endtime="20230519 15:48:30.245"/>
</kw>
<status status="PASS" starttime="20230519 15:48:30.187" endtime="20230519 15:48:30.245"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230519 15:48:27.954" endtime="20230519 15:48:30.245"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230519 15:48:30.247" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 15:48:30.247" endtime="20230519 15:48:31.151"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230519 15:48:31.152" endtime="20230519 15:48:31.262"/>
</kw>
<status status="PASS" starttime="20230519 15:48:30.246" endtime="20230519 15:48:31.262"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230519 15:48:31.263" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230519 15:48:31.263" endtime="20230519 15:48:31.336"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 15:48:31.347" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 15:48:31.336" endtime="20230519 15:48:31.348"/>
</kw>
<status status="PASS" starttime="20230519 15:48:31.262" endtime="20230519 15:48:31.348"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:31.349" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230519 15:48:31.348" endtime="20230519 15:48:31.486"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:31.487" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230519 15:48:31.486" endtime="20230519 15:48:31.589"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:31.590" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230519 15:48:31.589" endtime="20230519 15:48:31.666"/>
</kw>
<status status="PASS" starttime="20230519 15:48:31.348" endtime="20230519 15:48:31.666"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230519 15:48:31.696" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230519 15:48:31.667" endtime="20230519 15:48:31.697"/>
</kw>
<status status="PASS" starttime="20230519 15:48:31.667" endtime="20230519 15:48:31.697"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230519 15:48:31.697" endtime="20230519 15:48:31.758"/>
</kw>
<status status="PASS" starttime="20230519 15:48:31.697" endtime="20230519 15:48:31.758"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230519 15:48:30.246" endtime="20230519 15:48:31.758"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230519 15:48:31.761" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 15:48:31.760" endtime="20230519 15:48:32.668"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230519 15:48:32.668" endtime="20230519 15:48:32.774"/>
</kw>
<status status="PASS" starttime="20230519 15:48:31.760" endtime="20230519 15:48:32.774"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230519 15:48:32.775" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230519 15:48:32.775" endtime="20230519 15:48:32.847"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 15:48:32.853" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 15:48:32.848" endtime="20230519 15:48:32.853"/>
</kw>
<status status="PASS" starttime="20230519 15:48:32.774" endtime="20230519 15:48:32.853"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:32.855" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230519 15:48:32.854" endtime="20230519 15:48:32.998"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:32.999" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230519 15:48:32.999" endtime="20230519 15:48:33.100"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:33.101" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230519 15:48:33.100" endtime="20230519 15:48:33.217"/>
</kw>
<status status="PASS" starttime="20230519 15:48:32.853" endtime="20230519 15:48:33.217"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 15:48:33.226" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230519 15:48:33.218" endtime="20230519 15:48:33.226"/>
</kw>
<status status="PASS" starttime="20230519 15:48:33.217" endtime="20230519 15:48:33.226"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230519 15:48:33.243" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230519 15:48:33.227" endtime="20230519 15:48:33.243"/>
</kw>
<status status="PASS" starttime="20230519 15:48:33.226" endtime="20230519 15:48:33.243"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230519 15:48:33.244" endtime="20230519 15:48:33.302"/>
</kw>
<status status="PASS" starttime="20230519 15:48:33.244" endtime="20230519 15:48:33.302"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230519 15:48:31.759" endtime="20230519 15:48:33.303"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230519 15:48:33.306" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 15:48:33.305" endtime="20230519 15:48:34.205"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230519 15:48:34.206" endtime="20230519 15:48:34.314"/>
</kw>
<status status="PASS" starttime="20230519 15:48:33.304" endtime="20230519 15:48:34.314"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230519 15:48:34.315" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230519 15:48:34.315" endtime="20230519 15:48:34.381"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 15:48:34.388" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 15:48:34.381" endtime="20230519 15:48:34.388"/>
</kw>
<status status="PASS" starttime="20230519 15:48:34.315" endtime="20230519 15:48:34.388"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:34.389" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230519 15:48:34.389" endtime="20230519 15:48:34.542"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:34.543" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230519 15:48:34.543" endtime="20230519 15:48:34.649"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230519 15:48:34.650" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230519 15:48:34.649" endtime="20230519 15:48:39.770"/>
</kw>
<status status="PASS" starttime="20230519 15:48:34.388" endtime="20230519 15:48:39.770"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 15:48:39.783" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230519 15:48:39.771" endtime="20230519 15:48:39.783"/>
</kw>
<status status="PASS" starttime="20230519 15:48:39.770" endtime="20230519 15:48:39.783"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230519 15:48:39.801" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230519 15:48:39.784" endtime="20230519 15:48:39.801"/>
</kw>
<status status="PASS" starttime="20230519 15:48:39.783" endtime="20230519 15:48:39.801"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230519 15:48:39.802" endtime="20230519 15:48:39.860"/>
</kw>
<status status="PASS" starttime="20230519 15:48:39.801" endtime="20230519 15:48:39.861"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230519 15:48:33.304" endtime="20230519 15:48:39.861"/>
</test>
<status status="PASS" starttime="20230519 15:48:27.947" endtime="20230519 15:48:39.862"/>
</suite>
<status status="PASS" starttime="20230519 15:48:27.945" endtime="20230519 15:48:39.863"/>
</suite>
<status status="PASS" starttime="20230519 15:48:27.943" endtime="20230519 15:48:39.865"/>
</suite>
<status status="PASS" starttime="20230519 15:48:26.670" endtime="20230519 15:48:39.866"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
