<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.17 on linux)" generated="20230815 00:09:29.691" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230815 00:09:30.214" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230815 00:09:30.214" endtime="20230815 00:09:30.215"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.214" endtime="20230815 00:09:30.215"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230815 00:09:30.347" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230815 00:09:30.348" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4e9600a2-75b2-48bf-b5ed-a6a56f74726b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9e29cb209abf1ad3bea904a662b24359;o=1', 'Date': 'Tue, 15 Aug 2023 00:09:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '1738'} 
 body={
    "quantidade": 8,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Carol Fulano da Silva",
            "email": "beltran@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "CIBs3hFR4hgtRtlV"
        },
        {
            "nome": "Michele Correa",
            "email": "michelecorrea.qa@ebac.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "MgXoMNLI55FEFKFV"
        },
        {
            "nome": "Teste Auto",
            "email": "kwnx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "UVhJgc6fIk4EgThs"
        },
        {
            "nome": "katita2008",
            "email": "katita2008@gmail.com",
            "password": "123",
            "administrador": "true",
            "_id": "WbPxfN12eiFXuooj"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano123444@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "Z3pegIHZPitc9LMt"
        },
        {
            "nome": "Teste Auto",
            "email": "vtxm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "fb9nVUu6hGvqxznO"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano123@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "hqVntNwAzFTZP5Kn"
        }
    ]
} 
 </msg>
<msg timestamp="20230815 00:09:30.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.215" endtime="20230815 00:09:30.348"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230815 00:09:30.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.348" endtime="20230815 00:09:30.348"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.215" endtime="20230815 00:09:30.349"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230815 00:09:30.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.349" endtime="20230815 00:09:30.350"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230815 00:09:30.350" endtime="20230815 00:09:30.351"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.349" endtime="20230815 00:09:30.351"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230815 00:09:30.352" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230815 00:09:30.351" endtime="20230815 00:09:30.352"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.351" endtime="20230815 00:09:30.352"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230815 00:09:30.213" endtime="20230815 00:09:30.352"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230815 00:09:30.354" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230815 00:09:30.353" endtime="20230815 00:09:30.354"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.353" endtime="20230815 00:09:30.354"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230815 00:09:30.355" level="INFO">${name} = Jamie Johnson</msg>
<status status="PASS" starttime="20230815 00:09:30.354" endtime="20230815 00:09:30.355"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230815 00:09:30.356" level="INFO">${email} = curtiswilliams@example.org</msg>
<status status="PASS" starttime="20230815 00:09:30.355" endtime="20230815 00:09:30.356"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230815 00:09:30.356" level="INFO">${password} = oHk4lcoqEqGZ</msg>
<status status="PASS" starttime="20230815 00:09:30.356" endtime="20230815 00:09:30.356"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 00:09:30.357" level="INFO">${name} = Jamie Johnson</msg>
<status status="PASS" starttime="20230815 00:09:30.356" endtime="20230815 00:09:30.357"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 00:09:30.357" level="INFO">${email} = curtiswilliams@example.org</msg>
<status status="PASS" starttime="20230815 00:09:30.357" endtime="20230815 00:09:30.357"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 00:09:30.357" level="INFO">${password} = oHk4lcoqEqGZ</msg>
<status status="PASS" starttime="20230815 00:09:30.357" endtime="20230815 00:09:30.358"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.354" endtime="20230815 00:09:30.358"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230815 00:09:30.358" level="INFO">${payload} = {'nome': 'Jamie Johnson', 'email': 'curtiswilliams@example.org', 'password': 'oHk4lcoqEqGZ', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230815 00:09:30.358" endtime="20230815 00:09:30.359"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230815 00:09:30.359" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230815 00:09:30.359" endtime="20230815 00:09:30.359"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230815 00:09:30.427" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '118'} 
 body=b'{"nome": "Jamie Johnson", "email": "curtiswilliams@example.org", "password": "oHk4lcoqEqGZ", "administrador": "false"}' 
 </msg>
<msg timestamp="20230815 00:09:30.427" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '603c442b-50af-46c5-b4eb-9d4128c1fc5b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b6a82f8899c26392723f30af931c84dd', 'Date': 'Tue, 15 Aug 2023 00:09:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "XkPxTK5it4LEiLaO"
} 
 </msg>
<msg timestamp="20230815 00:09:30.428" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.359" endtime="20230815 00:09:30.428"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 00:09:30.429" level="INFO">${user_id} = XkPxTK5it4LEiLaO</msg>
<status status="PASS" starttime="20230815 00:09:30.428" endtime="20230815 00:09:30.429"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230815 00:09:30.429" level="INFO">${USER_ID} = XkPxTK5it4LEiLaO</msg>
<status status="PASS" starttime="20230815 00:09:30.429" endtime="20230815 00:09:30.429"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230815 00:09:30.430" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.430" endtime="20230815 00:09:30.430"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.358" endtime="20230815 00:09:30.430"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230815 00:09:30.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.431" endtime="20230815 00:09:30.431"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230815 00:09:30.432" endtime="20230815 00:09:30.432"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.430" endtime="20230815 00:09:30.432"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230815 00:09:30.433" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230815 00:09:30.433" endtime="20230815 00:09:30.433"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.432" endtime="20230815 00:09:30.433"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230815 00:09:30.352" endtime="20230815 00:09:30.433"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230815 00:09:30.435" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230815 00:09:30.435" endtime="20230815 00:09:30.436"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.435" endtime="20230815 00:09:30.436"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230815 00:09:30.501" level="INFO">GET Request : url=https://serverest.dev/usuarios/XkPxTK5it4LEiLaO 
 path_url=/usuarios/XkPxTK5it4LEiLaO 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230815 00:09:30.501" level="INFO">GET Response : url=https://serverest.dev/usuarios/XkPxTK5it4LEiLaO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '17e929f7-c0b1-4d84-92c4-bc2a1009d669', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e010a23737d94512ead60e12899c2a44', 'Date': 'Tue, 15 Aug 2023 00:09:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '167'} 
 body={
    "nome": "Jamie Johnson",
    "email": "curtiswilliams@example.org",
    "password": "oHk4lcoqEqGZ",
    "administrador": "false",
    "_id": "XkPxTK5it4LEiLaO"
} 
 </msg>
<msg timestamp="20230815 00:09:30.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.436" endtime="20230815 00:09:30.501"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230815 00:09:30.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.501" endtime="20230815 00:09:30.502"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.436" endtime="20230815 00:09:30.502"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230815 00:09:30.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.502" endtime="20230815 00:09:30.503"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230815 00:09:30.504" endtime="20230815 00:09:30.504"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.502" endtime="20230815 00:09:30.504"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230815 00:09:30.505" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230815 00:09:30.505" endtime="20230815 00:09:30.505"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.504" endtime="20230815 00:09:30.505"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230815 00:09:30.434" endtime="20230815 00:09:30.506"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230815 00:09:30.507" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230815 00:09:30.507" endtime="20230815 00:09:30.507"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.506" endtime="20230815 00:09:30.507"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230815 00:09:30.508" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230815 00:09:30.508" endtime="20230815 00:09:30.508"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230815 00:09:30.508" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230815 00:09:30.508" endtime="20230815 00:09:30.508"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230815 00:09:30.572" level="INFO">PUT Request : url=https://serverest.dev/usuarios/XkPxTK5it4LEiLaO 
 path_url=/usuarios/XkPxTK5it4LEiLaO 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230815 00:09:30.573" level="INFO">PUT Response : url=https://serverest.dev/usuarios/XkPxTK5it4LEiLaO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '13584efa-d991-4230-aae9-b52c34a1b091', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2fe3098fb2121c1a50edf6595b41f7f3', 'Date': 'Tue, 15 Aug 2023 00:09:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230815 00:09:30.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.509" endtime="20230815 00:09:30.573"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230815 00:09:30.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.573" endtime="20230815 00:09:30.574"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.507" endtime="20230815 00:09:30.574"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230815 00:09:30.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.574" endtime="20230815 00:09:30.575"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230815 00:09:30.575" endtime="20230815 00:09:30.576"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.574" endtime="20230815 00:09:30.576"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230815 00:09:30.577" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230815 00:09:30.576" endtime="20230815 00:09:30.577"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.576" endtime="20230815 00:09:30.577"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230815 00:09:30.506" endtime="20230815 00:09:30.577"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230815 00:09:30.580" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230815 00:09:30.579" endtime="20230815 00:09:30.580"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.579" endtime="20230815 00:09:30.580"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230815 00:09:30.648" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/XkPxTK5it4LEiLaO 
 path_url=/usuarios/XkPxTK5it4LEiLaO 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230815 00:09:30.648" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/XkPxTK5it4LEiLaO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6b482392-ac86-4400-9815-8b249185aafc', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8cd5cca7142c16591d94d4be2426ca91', 'Date': 'Tue, 15 Aug 2023 00:09:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230815 00:09:30.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.581" endtime="20230815 00:09:30.649"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230815 00:09:30.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.649" endtime="20230815 00:09:30.649"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.580" endtime="20230815 00:09:30.649"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230815 00:09:30.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230815 00:09:30.650" endtime="20230815 00:09:30.652"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230815 00:09:30.652" endtime="20230815 00:09:30.653"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.650" endtime="20230815 00:09:30.653"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230815 00:09:30.654" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230815 00:09:30.653" endtime="20230815 00:09:30.654"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.653" endtime="20230815 00:09:30.654"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230815 00:09:30.579" endtime="20230815 00:09:30.654"/>
</test>
<status status="PASS" starttime="20230815 00:09:29.715" endtime="20230815 00:09:30.655"/>
</suite>
<status status="PASS" starttime="20230815 00:09:29.713" endtime="20230815 00:09:30.657"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230815 00:09:30.669" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230815 00:09:30.668" endtime="20230815 00:09:33.255"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230815 00:09:33.256" endtime="20230815 00:09:33.376"/>
</kw>
<status status="PASS" starttime="20230815 00:09:30.668" endtime="20230815 00:09:33.376"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230815 00:09:33.383" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230815 00:09:33.377" endtime="20230815 00:09:33.383"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:33.384" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230815 00:09:33.383" endtime="20230815 00:09:33.446"/>
</kw>
<status status="PASS" starttime="20230815 00:09:33.377" endtime="20230815 00:09:33.446"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:33.448" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230815 00:09:33.447" endtime="20230815 00:09:33.516"/>
</kw>
<status status="PASS" starttime="20230815 00:09:33.447" endtime="20230815 00:09:33.516"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230815 00:09:33.517" endtime="20230815 00:09:33.754"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230815 00:09:33.775" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230815 00:09:33.754" endtime="20230815 00:09:33.775"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230815 00:09:33.792" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230815 00:09:33.775" endtime="20230815 00:09:33.792"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230815 00:09:33.807" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230815 00:09:33.793" endtime="20230815 00:09:33.807"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230815 00:09:33.821" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230815 00:09:33.807" endtime="20230815 00:09:33.821"/>
</kw>
<status status="PASS" starttime="20230815 00:09:33.517" endtime="20230815 00:09:33.821"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230815 00:09:33.822" endtime="20230815 00:09:33.878"/>
</kw>
<status status="PASS" starttime="20230815 00:09:33.822" endtime="20230815 00:09:33.878"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230815 00:09:30.667" endtime="20230815 00:09:33.878"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230815 00:09:33.880" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230815 00:09:33.880" endtime="20230815 00:09:35.154"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230815 00:09:35.155" endtime="20230815 00:09:35.281"/>
</kw>
<status status="PASS" starttime="20230815 00:09:33.879" endtime="20230815 00:09:35.281"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230815 00:09:35.288" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230815 00:09:35.282" endtime="20230815 00:09:35.288"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:35.289" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230815 00:09:35.288" endtime="20230815 00:09:35.345"/>
</kw>
<status status="PASS" starttime="20230815 00:09:35.282" endtime="20230815 00:09:35.345"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230815 00:09:35.346" level="INFO">${name} = Joseph Mitchell</msg>
<status status="PASS" starttime="20230815 00:09:35.346" endtime="20230815 00:09:35.346"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230815 00:09:35.347" level="INFO">${email} = yweber@example.net</msg>
<status status="PASS" starttime="20230815 00:09:35.347" endtime="20230815 00:09:35.347"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230815 00:09:35.348" level="INFO">${password} = VTXjgazM1zhF</msg>
<status status="PASS" starttime="20230815 00:09:35.347" endtime="20230815 00:09:35.348"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:35.348" level="INFO">Typing text 'Joseph Mitchell' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230815 00:09:35.348" endtime="20230815 00:09:35.483"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:35.484" level="INFO">Typing text 'yweber@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230815 00:09:35.483" endtime="20230815 00:09:35.595"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:35.595" level="INFO">Typing text 'VTXjgazM1zhF' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230815 00:09:35.595" endtime="20230815 00:09:35.706"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:35.706" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230815 00:09:35.706" endtime="20230815 00:09:35.795"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 00:09:35.796" level="INFO">${name} = Joseph Mitchell</msg>
<status status="PASS" starttime="20230815 00:09:35.796" endtime="20230815 00:09:35.796"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 00:09:35.797" level="INFO">${email} = yweber@example.net</msg>
<status status="PASS" starttime="20230815 00:09:35.796" endtime="20230815 00:09:35.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 00:09:35.797" level="INFO">${password} = VTXjgazM1zhF</msg>
<status status="PASS" starttime="20230815 00:09:35.797" endtime="20230815 00:09:35.797"/>
</kw>
<status status="PASS" starttime="20230815 00:09:35.345" endtime="20230815 00:09:35.797"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:35.798" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230815 00:09:35.798" endtime="20230815 00:09:35.862"/>
</kw>
<status status="PASS" starttime="20230815 00:09:35.797" endtime="20230815 00:09:35.862"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230815 00:09:35.863" endtime="20230815 00:09:36.103"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230815 00:09:36.124" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230815 00:09:36.103" endtime="20230815 00:09:36.124"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230815 00:09:36.138" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230815 00:09:36.124" endtime="20230815 00:09:36.138"/>
</kw>
<status status="PASS" starttime="20230815 00:09:35.863" endtime="20230815 00:09:36.138"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230815 00:09:36.139" endtime="20230815 00:09:36.197"/>
</kw>
<status status="PASS" starttime="20230815 00:09:36.138" endtime="20230815 00:09:36.197"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230815 00:09:33.879" endtime="20230815 00:09:36.197"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230815 00:09:36.200" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230815 00:09:36.199" endtime="20230815 00:09:37.458"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230815 00:09:37.459" endtime="20230815 00:09:37.588"/>
</kw>
<status status="PASS" starttime="20230815 00:09:36.198" endtime="20230815 00:09:37.588"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230815 00:09:37.595" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230815 00:09:37.589" endtime="20230815 00:09:37.595"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:37.596" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230815 00:09:37.595" endtime="20230815 00:09:37.655"/>
</kw>
<status status="PASS" starttime="20230815 00:09:37.589" endtime="20230815 00:09:37.655"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:37.657" level="INFO">Typing text 'Joseph Mitchell' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230815 00:09:37.656" endtime="20230815 00:09:37.788"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:37.789" level="INFO">Typing text 'yweber@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230815 00:09:37.788" endtime="20230815 00:09:37.890"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:37.891" level="INFO">Typing text 'VTXjgazM1zhF' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230815 00:09:37.890" endtime="20230815 00:09:38.001"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:38.002" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230815 00:09:38.001" endtime="20230815 00:09:38.078"/>
</kw>
<status status="PASS" starttime="20230815 00:09:37.655" endtime="20230815 00:09:38.078"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230815 00:09:38.079" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230815 00:09:38.079" endtime="20230815 00:09:38.149"/>
</kw>
<status status="PASS" starttime="20230815 00:09:38.078" endtime="20230815 00:09:38.149"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230815 00:09:38.150" endtime="20230815 00:09:38.386"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230815 00:09:38.406" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230815 00:09:38.386" endtime="20230815 00:09:38.406"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230815 00:09:38.421" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230815 00:09:38.406" endtime="20230815 00:09:38.421"/>
</kw>
<status status="PASS" starttime="20230815 00:09:38.149" endtime="20230815 00:09:38.421"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230815 00:09:38.422" endtime="20230815 00:09:38.478"/>
</kw>
<status status="PASS" starttime="20230815 00:09:38.421" endtime="20230815 00:09:38.478"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230815 00:09:36.198" endtime="20230815 00:09:38.479"/>
</test>
<status status="PASS" starttime="20230815 00:09:30.659" endtime="20230815 00:09:38.479"/>
</suite>
<status status="PASS" starttime="20230815 00:09:30.657" endtime="20230815 00:09:38.481"/>
</suite>
<status status="PASS" starttime="20230815 00:09:29.692" endtime="20230815 00:09:38.482"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
