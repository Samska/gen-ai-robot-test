<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230424 12:33:38.718" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:33:39.580" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:33:39.580" endtime="20230424 12:33:39.581"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.580" endtime="20230424 12:33:39.581"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:33:39.801" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230424 12:33:39.801" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6e36fe8a-29fe-41c2-b2f6-460fb071631a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fed05b1fb836296f227230d49483b013', 'Date': 'Mon, 24 Apr 2023 12:33:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '3399'} 
 body={
    "quantidade": 15,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Usuario 74790",
            "email": "usuario74790@example.com",
            "password": "senha36916",
            "administrador": "true",
            "_id": "3oJpU776D6YdgcPG"
        },
        {
            "nome": "Usuario Atualizado 40685",
            "password": "senhaAtualizada25083",
            "email": "usuario25791@example.com",
            "administrador": "true",
            "_id": "73ceBOrQD0AwsEyv"
        },
        {
            "nome": "Wilbur Fadel",
            "email": "wilburfadel@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "8Qet9wxmM6HIdh6C"
        },
        {
            "nome": "Gary Ruecker",
            "email": "garyruecker@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "95uY2ynbNMCIMxu1"
        },
        {
            "nome": "Usuario 96096",
            "email": "usuario96096@example.com",
            "password": "senha36609",
            "administrador": "true",
            "_id": "GKjhwkZfoU0YkJ7h"
        },
        {
            "nome": "Rebecca Rosenbaum",
            "email": "Marcellus.Kuhn@hotmail.com",
            "password": "YNDRCPzEL6mcjwR",
            "administrador": "false",
            "_id": "InJ3SUkGN7XvFFaH"
        },
        {
            "nome": "Usuario 27693",
            "email": "usuario27693@example.com",
            "password": "senha39160",
            "administrador": "true",
            "_id": "NyoxePxH36Pxui6M"
        },
        {
            "nome": "Rafael Bercam",
            "email": "rafaelbercam@qa.com",
            "password": "1497f87adf5b352abd0360de96c041409a4ce521",
            "administrador": "true",
            "_id": "S0g84ueUf0q2ij7d"
        },
        {
            "nome": "Penny Lockman",
            "email": "pennylockman@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "VSx60sYXT0PMRzKR"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Collin_Bradtke@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "WUB1HZZUdXqpmkz2"
        },
        {
            "nome": "Usuario Atualizado 76952",
            "password": "senhaAtualizada74779",
            "email": "usuario97168@example.com",
            "administrador": "true",
            "_id": "Y2kyiQ1KP1y09LXU"
        },
        {
            "nome": "Usuario Atualizado 22476",
            "password": "senhaAtualizada47010",
            "email": "usuario9893@example.com",
            "administrador": "true",
            "_id": "Yuye5Qea4l1bHn8c"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "fny27bAEbMMA0iOQ"
        },
        {
            "nome": "Emie78",
            "email": "Keshaun_Mills76@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "vnAn1KEEKE1gpNKE"
        }
    ]
} 
 </msg>
<msg timestamp="20230424 12:33:39.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:39.581" endtime="20230424 12:33:39.801"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:33:39.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:39.802" endtime="20230424 12:33:39.802"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.581" endtime="20230424 12:33:39.802"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:33:39.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:33:39.803" endtime="20230424 12:33:39.804"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:33:39.804" endtime="20230424 12:33:39.805"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.803" endtime="20230424 12:33:39.805"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:33:39.806" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230424 12:33:39.806" endtime="20230424 12:33:39.806"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.805" endtime="20230424 12:33:39.806"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:33:39.579" endtime="20230424 12:33:39.807"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:33:39.808" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:33:39.808" endtime="20230424 12:33:39.809"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.808" endtime="20230424 12:33:39.809"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230424 12:33:39.810" level="INFO">${name} = Vickie Flores</msg>
<status status="PASS" starttime="20230424 12:33:39.809" endtime="20230424 12:33:39.810"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230424 12:33:39.810" level="INFO">${email} = pamela48@example.net</msg>
<status status="PASS" starttime="20230424 12:33:39.810" endtime="20230424 12:33:39.811"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230424 12:33:39.811" level="INFO">${password} = X$1(qEk9+J</msg>
<status status="PASS" starttime="20230424 12:33:39.811" endtime="20230424 12:33:39.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230424 12:33:39.811" level="INFO">${name} = Vickie Flores</msg>
<status status="PASS" starttime="20230424 12:33:39.811" endtime="20230424 12:33:39.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230424 12:33:39.812" level="INFO">${email} = pamela48@example.net</msg>
<status status="PASS" starttime="20230424 12:33:39.811" endtime="20230424 12:33:39.812"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230424 12:33:39.812" level="INFO">${password} = X$1(qEk9+J</msg>
<status status="PASS" starttime="20230424 12:33:39.812" endtime="20230424 12:33:39.812"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.809" endtime="20230424 12:33:39.812"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 12:33:39.813" level="INFO">${payload} = {'nome': 'Vickie Flores', 'email': 'pamela48@example.net', 'password': 'X$1(qEk9+J', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230424 12:33:39.813" endtime="20230424 12:33:39.813"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 12:33:39.814" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230424 12:33:39.813" endtime="20230424 12:33:39.814"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:33:39.915" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Vickie Flores", "email": "pamela48@example.net", "password": "X$1(qEk9+J", "administrador": "false"}' 
 </msg>
<msg timestamp="20230424 12:33:39.915" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '72304cdb-213c-420f-b51e-40d577d6c583', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '14e5aa47400e81dc522a54a22f761f49', 'Date': 'Mon, 24 Apr 2023 12:33:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "NODhaIH2bkAGvrlG"
} 
 </msg>
<msg timestamp="20230424 12:33:39.915" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:39.814" endtime="20230424 12:33:39.916"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230424 12:33:39.917" level="INFO">${user_id} = NODhaIH2bkAGvrlG</msg>
<status status="PASS" starttime="20230424 12:33:39.916" endtime="20230424 12:33:39.917"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230424 12:33:39.918" level="INFO">${USER_ID} = NODhaIH2bkAGvrlG</msg>
<status status="PASS" starttime="20230424 12:33:39.917" endtime="20230424 12:33:39.918"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:33:39.919" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:39.918" endtime="20230424 12:33:39.919"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.812" endtime="20230424 12:33:39.919"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:33:39.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:33:39.919" endtime="20230424 12:33:39.920"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:33:39.920" endtime="20230424 12:33:39.921"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.919" endtime="20230424 12:33:39.921"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:33:39.922" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230424 12:33:39.922" endtime="20230424 12:33:39.922"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.921" endtime="20230424 12:33:39.922"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:33:39.807" endtime="20230424 12:33:39.923"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:33:39.924" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:33:39.924" endtime="20230424 12:33:39.925"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.924" endtime="20230424 12:33:39.925"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:33:40.022" level="INFO">GET Request : url=https://serverest.dev/usuarios/NODhaIH2bkAGvrlG 
 path_url=/usuarios/NODhaIH2bkAGvrlG 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230424 12:33:40.022" level="INFO">GET Response : url=https://serverest.dev/usuarios/NODhaIH2bkAGvrlG 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '92f8cf81-ec59-49a1-9bb0-7ec04aea6a7f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd039ec7269392bf1bee960b8ed02bec9', 'Date': 'Mon, 24 Apr 2023 12:33:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '159'} 
 body={
    "nome": "Vickie Flores",
    "email": "pamela48@example.net",
    "password": "X$1(qEk9+J",
    "administrador": "false",
    "_id": "NODhaIH2bkAGvrlG"
} 
 </msg>
<msg timestamp="20230424 12:33:40.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:39.925" endtime="20230424 12:33:40.023"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:33:40.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:40.023" endtime="20230424 12:33:40.023"/>
</kw>
<status status="PASS" starttime="20230424 12:33:39.925" endtime="20230424 12:33:40.024"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:33:40.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:33:40.024" endtime="20230424 12:33:40.026"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:33:40.026" endtime="20230424 12:33:40.027"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.024" endtime="20230424 12:33:40.027"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:33:40.028" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230424 12:33:40.027" endtime="20230424 12:33:40.028"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.027" endtime="20230424 12:33:40.028"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:33:39.923" endtime="20230424 12:33:40.029"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:33:40.031" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:33:40.030" endtime="20230424 12:33:40.031"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.030" endtime="20230424 12:33:40.031"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 12:33:40.032" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230424 12:33:40.032" endtime="20230424 12:33:40.032"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 12:33:40.032" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230424 12:33:40.032" endtime="20230424 12:33:40.032"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:33:40.129" level="INFO">PUT Request : url=https://serverest.dev/usuarios/NODhaIH2bkAGvrlG 
 path_url=/usuarios/NODhaIH2bkAGvrlG 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230424 12:33:40.129" level="INFO">PUT Response : url=https://serverest.dev/usuarios/NODhaIH2bkAGvrlG 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '880848d5-3c3d-4a37-a78c-42dd0a290091', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c2e7b4442248c29e55897ff29ac098f6', 'Date': 'Mon, 24 Apr 2023 12:33:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230424 12:33:40.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:40.032" endtime="20230424 12:33:40.130"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:33:40.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:40.130" endtime="20230424 12:33:40.130"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.031" endtime="20230424 12:33:40.131"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:33:40.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:33:40.131" endtime="20230424 12:33:40.132"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:33:40.132" endtime="20230424 12:33:40.133"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.131" endtime="20230424 12:33:40.133"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:33:40.135" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230424 12:33:40.134" endtime="20230424 12:33:40.135"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.133" endtime="20230424 12:33:40.135"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:33:40.030" endtime="20230424 12:33:40.135"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:33:40.137" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:33:40.137" endtime="20230424 12:33:40.137"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.136" endtime="20230424 12:33:40.137"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:33:40.239" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/NODhaIH2bkAGvrlG 
 path_url=/usuarios/NODhaIH2bkAGvrlG 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230424 12:33:40.239" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/NODhaIH2bkAGvrlG 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e00b0a75-3469-4a76-a04c-63c280a75fd8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c9555064a83af7c9bcbb8bb9b9acacd7', 'Date': 'Mon, 24 Apr 2023 12:33:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230424 12:33:40.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:40.138" endtime="20230424 12:33:40.239"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:33:40.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:33:40.239" endtime="20230424 12:33:40.240"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.138" endtime="20230424 12:33:40.240"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:33:40.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:33:40.241" endtime="20230424 12:33:40.242"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:33:40.242" endtime="20230424 12:33:40.243"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.240" endtime="20230424 12:33:40.243"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:33:40.244" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230424 12:33:40.244" endtime="20230424 12:33:40.244"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.243" endtime="20230424 12:33:40.245"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:33:40.136" endtime="20230424 12:33:40.245"/>
</test>
<status status="PASS" starttime="20230424 12:33:38.745" endtime="20230424 12:33:40.246"/>
</suite>
<status status="PASS" starttime="20230424 12:33:38.744" endtime="20230424 12:33:40.247"/>
</suite>
<status status="PASS" starttime="20230424 12:33:38.742" endtime="20230424 12:33:40.248"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 12:33:40.262" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:33:40.261" endtime="20230424 12:33:50.981"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 12:33:50.982" endtime="20230424 12:33:51.160"/>
</kw>
<status status="PASS" starttime="20230424 12:33:40.261" endtime="20230424 12:33:51.161"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 12:33:51.162" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 12:33:51.162" endtime="20230424 12:33:51.289"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:33:51.294" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:33:51.289" endtime="20230424 12:33:51.295"/>
</kw>
<status status="PASS" starttime="20230424 12:33:51.161" endtime="20230424 12:33:51.295"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:51.298" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 12:33:51.295" endtime="20230424 12:33:51.647"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:51.648" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 12:33:51.647" endtime="20230424 12:33:51.867"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:51.868" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 12:33:51.867" endtime="20230424 12:33:52.224"/>
</kw>
<status status="PASS" starttime="20230424 12:33:51.295" endtime="20230424 12:33:52.224"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:33:52.229" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230424 12:33:52.225" endtime="20230424 12:33:52.229"/>
</kw>
<status status="PASS" starttime="20230424 12:33:52.224" endtime="20230424 12:33:52.229"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230424 12:33:52.264" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230424 12:33:52.230" endtime="20230424 12:33:52.264"/>
</kw>
<status status="PASS" starttime="20230424 12:33:52.230" endtime="20230424 12:33:52.264"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 12:33:52.266" endtime="20230424 12:33:52.325"/>
</kw>
<status status="PASS" starttime="20230424 12:33:52.264" endtime="20230424 12:33:52.325"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 12:33:40.260" endtime="20230424 12:33:52.325"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 12:33:52.329" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:33:52.328" endtime="20230424 12:33:53.203"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 12:33:53.203" endtime="20230424 12:33:53.308"/>
</kw>
<status status="PASS" starttime="20230424 12:33:52.327" endtime="20230424 12:33:53.308"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 12:33:53.309" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 12:33:53.309" endtime="20230424 12:33:53.363"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:33:53.369" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:33:53.363" endtime="20230424 12:33:53.369"/>
</kw>
<status status="PASS" starttime="20230424 12:33:53.309" endtime="20230424 12:33:53.369"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:53.371" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 12:33:53.370" endtime="20230424 12:33:53.530"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:53.531" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 12:33:53.531" endtime="20230424 12:33:53.634"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:53.635" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 12:33:53.635" endtime="20230424 12:33:53.707"/>
</kw>
<status status="PASS" starttime="20230424 12:33:53.369" endtime="20230424 12:33:53.707"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230424 12:33:53.736" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230424 12:33:53.708" endtime="20230424 12:33:53.736"/>
</kw>
<status status="PASS" starttime="20230424 12:33:53.707" endtime="20230424 12:33:53.736"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 12:33:53.737" endtime="20230424 12:33:53.796"/>
</kw>
<status status="PASS" starttime="20230424 12:33:53.736" endtime="20230424 12:33:53.797"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 12:33:52.327" endtime="20230424 12:33:53.797"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 12:33:53.800" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:33:53.799" endtime="20230424 12:33:54.756"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 12:33:54.756" endtime="20230424 12:33:54.863"/>
</kw>
<status status="PASS" starttime="20230424 12:33:53.799" endtime="20230424 12:33:54.863"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 12:33:54.864" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 12:33:54.864" endtime="20230424 12:33:54.940"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:33:54.945" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:33:54.940" endtime="20230424 12:33:54.945"/>
</kw>
<status status="PASS" starttime="20230424 12:33:54.863" endtime="20230424 12:33:54.946"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:54.947" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 12:33:54.946" endtime="20230424 12:33:55.064"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:55.065" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 12:33:55.064" endtime="20230424 12:33:55.164"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:55.165" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 12:33:55.165" endtime="20230424 12:33:55.274"/>
</kw>
<status status="PASS" starttime="20230424 12:33:54.946" endtime="20230424 12:33:55.275"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:33:55.288" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230424 12:33:55.275" endtime="20230424 12:33:55.289"/>
</kw>
<status status="PASS" starttime="20230424 12:33:55.275" endtime="20230424 12:33:55.289"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230424 12:33:55.311" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230424 12:33:55.289" endtime="20230424 12:33:55.311"/>
</kw>
<status status="PASS" starttime="20230424 12:33:55.289" endtime="20230424 12:33:55.311"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 12:33:55.312" endtime="20230424 12:33:55.371"/>
</kw>
<status status="PASS" starttime="20230424 12:33:55.311" endtime="20230424 12:33:55.372"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 12:33:53.798" endtime="20230424 12:33:55.372"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 12:33:55.375" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:33:55.374" endtime="20230424 12:33:56.259"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 12:33:56.260" endtime="20230424 12:33:56.364"/>
</kw>
<status status="PASS" starttime="20230424 12:33:55.373" endtime="20230424 12:33:56.365"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 12:33:56.366" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 12:33:56.365" endtime="20230424 12:33:56.453"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:33:56.459" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:33:56.453" endtime="20230424 12:33:56.460"/>
</kw>
<status status="PASS" starttime="20230424 12:33:56.365" endtime="20230424 12:33:56.460"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:56.462" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 12:33:56.461" endtime="20230424 12:33:56.589"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:56.590" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 12:33:56.589" endtime="20230424 12:33:56.691"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 12:33:56.692" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 12:33:56.692" endtime="20230424 12:34:01.813"/>
</kw>
<status status="PASS" starttime="20230424 12:33:56.460" endtime="20230424 12:34:01.814"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:34:01.829" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230424 12:34:01.814" endtime="20230424 12:34:01.830"/>
</kw>
<status status="PASS" starttime="20230424 12:34:01.814" endtime="20230424 12:34:01.830"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230424 12:34:01.848" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230424 12:34:01.831" endtime="20230424 12:34:01.848"/>
</kw>
<status status="PASS" starttime="20230424 12:34:01.830" endtime="20230424 12:34:01.849"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 12:34:01.849" endtime="20230424 12:34:01.908"/>
</kw>
<status status="PASS" starttime="20230424 12:34:01.849" endtime="20230424 12:34:01.908"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 12:33:55.373" endtime="20230424 12:34:01.908"/>
</test>
<status status="PASS" starttime="20230424 12:33:40.253" endtime="20230424 12:34:01.910"/>
</suite>
<status status="PASS" starttime="20230424 12:33:40.251" endtime="20230424 12:34:01.913"/>
</suite>
<status status="PASS" starttime="20230424 12:33:40.249" endtime="20230424 12:34:01.915"/>
</suite>
<status status="PASS" starttime="20230424 12:33:38.719" endtime="20230424 12:34:01.916"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
