<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230424 12:13:25.172" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:13:25.661" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:13:25.660" endtime="20230424 12:13:25.661"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.660" endtime="20230424 12:13:25.661"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:13:25.802" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230424 12:13:25.802" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '727b2c9c-770c-4bab-8dab-a2128d75c79d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '967c84f6854dbcda0b362de499997267;o=1', 'Date': 'Mon, 24 Apr 2023 12:13:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '2020'} 
 body={
    "quantidade": 9,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Usuario 74790",
            "email": "usuario74790@example.com",
            "password": "senha36916",
            "administrador": "true",
            "_id": "3oJpU776D6YdgcPG"
        },
        {
            "nome": "Wilbur Fadel",
            "email": "wilburfadel@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "8Qet9wxmM6HIdh6C"
        },
        {
            "nome": "Gary Ruecker",
            "email": "garyruecker@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "95uY2ynbNMCIMxu1"
        },
        {
            "nome": "Usuario 96096",
            "email": "usuario96096@example.com",
            "password": "senha36609",
            "administrador": "true",
            "_id": "GKjhwkZfoU0YkJ7h"
        },
        {
            "nome": "Usuario 27693",
            "email": "usuario27693@example.com",
            "password": "senha39160",
            "administrador": "true",
            "_id": "NyoxePxH36Pxui6M"
        },
        {
            "nome": "Rafael Bercam",
            "email": "rafaelbercam@qa.com",
            "password": "1497f87adf5b352abd0360de96c041409a4ce521",
            "administrador": "true",
            "_id": "S0g84ueUf0q2ij7d"
        },
        {
            "nome": "Penny Lockman",
            "email": "pennylockman@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "VSx60sYXT0PMRzKR"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Collin_Bradtke@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "WUB1HZZUdXqpmkz2"
        }
    ]
} 
 </msg>
<msg timestamp="20230424 12:13:25.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.661" endtime="20230424 12:13:25.802"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:13:25.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.802" endtime="20230424 12:13:25.803"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.661" endtime="20230424 12:13:25.803"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:13:25.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.803" endtime="20230424 12:13:25.804"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:13:25.804" endtime="20230424 12:13:25.805"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.803" endtime="20230424 12:13:25.805"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:13:25.806" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230424 12:13:25.805" endtime="20230424 12:13:25.806"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.805" endtime="20230424 12:13:25.806"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:13:25.659" endtime="20230424 12:13:25.806"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:13:25.808" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:13:25.808" endtime="20230424 12:13:25.808"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.807" endtime="20230424 12:13:25.808"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230424 12:13:25.809" level="INFO">${name} = Sandra Turner</msg>
<status status="PASS" starttime="20230424 12:13:25.809" endtime="20230424 12:13:25.809"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230424 12:13:25.810" level="INFO">${email} = alice07@example.com</msg>
<status status="PASS" starttime="20230424 12:13:25.810" endtime="20230424 12:13:25.810"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230424 12:13:25.810" level="INFO">${password} = ^g82pBl*8$</msg>
<status status="PASS" starttime="20230424 12:13:25.810" endtime="20230424 12:13:25.810"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230424 12:13:25.811" level="INFO">${name} = Sandra Turner</msg>
<status status="PASS" starttime="20230424 12:13:25.810" endtime="20230424 12:13:25.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230424 12:13:25.811" level="INFO">${email} = alice07@example.com</msg>
<status status="PASS" starttime="20230424 12:13:25.811" endtime="20230424 12:13:25.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230424 12:13:25.811" level="INFO">${password} = ^g82pBl*8$</msg>
<status status="PASS" starttime="20230424 12:13:25.811" endtime="20230424 12:13:25.811"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.809" endtime="20230424 12:13:25.812"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 12:13:25.812" level="INFO">${payload} = {'nome': 'Sandra Turner', 'email': 'alice07@example.com', 'password': '^g82pBl*8$', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230424 12:13:25.812" endtime="20230424 12:13:25.812"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 12:13:25.813" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230424 12:13:25.813" endtime="20230424 12:13:25.813"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:13:25.892" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"nome": "Sandra Turner", "email": "alice07@example.com", "password": "^g82pBl*8$", "administrador": "false"}' 
 </msg>
<msg timestamp="20230424 12:13:25.892" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4e0f12e6-cb1d-4843-bc66-249e4d2b1012', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '36017b4af6a2dfa3dd3a3a899a3d0487', 'Date': 'Mon, 24 Apr 2023 12:13:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "8mXmz6o1iuoEHamv"
} 
 </msg>
<msg timestamp="20230424 12:13:25.893" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.813" endtime="20230424 12:13:25.893"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230424 12:13:25.894" level="INFO">${user_id} = 8mXmz6o1iuoEHamv</msg>
<status status="PASS" starttime="20230424 12:13:25.893" endtime="20230424 12:13:25.894"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230424 12:13:25.894" level="INFO">${USER_ID} = 8mXmz6o1iuoEHamv</msg>
<status status="PASS" starttime="20230424 12:13:25.894" endtime="20230424 12:13:25.894"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:13:25.894" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.894" endtime="20230424 12:13:25.895"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.812" endtime="20230424 12:13:25.895"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:13:25.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.895" endtime="20230424 12:13:25.896"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:13:25.896" endtime="20230424 12:13:25.896"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.895" endtime="20230424 12:13:25.896"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:13:25.898" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230424 12:13:25.897" endtime="20230424 12:13:25.898"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.897" endtime="20230424 12:13:25.898"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:13:25.807" endtime="20230424 12:13:25.898"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:13:25.899" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:13:25.899" endtime="20230424 12:13:25.900"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.899" endtime="20230424 12:13:25.900"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:13:25.977" level="INFO">GET Request : url=https://serverest.dev/usuarios/8mXmz6o1iuoEHamv 
 path_url=/usuarios/8mXmz6o1iuoEHamv 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230424 12:13:25.977" level="INFO">GET Response : url=https://serverest.dev/usuarios/8mXmz6o1iuoEHamv 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '31f6cbd1-d2f0-43e7-8d91-7e5872c52fab', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dff3302d0d22ed003a127fec03dd8267', 'Date': 'Mon, 24 Apr 2023 12:13:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '158'} 
 body={
    "nome": "Sandra Turner",
    "email": "alice07@example.com",
    "password": "^g82pBl*8$",
    "administrador": "false",
    "_id": "8mXmz6o1iuoEHamv"
} 
 </msg>
<msg timestamp="20230424 12:13:25.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.900" endtime="20230424 12:13:25.977"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:13:25.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.978" endtime="20230424 12:13:25.978"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.900" endtime="20230424 12:13:25.978"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:13:25.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.979" endtime="20230424 12:13:25.980"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:13:25.980" endtime="20230424 12:13:25.981"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.978" endtime="20230424 12:13:25.981"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:13:25.982" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230424 12:13:25.981" endtime="20230424 12:13:25.982"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.981" endtime="20230424 12:13:25.982"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:13:25.898" endtime="20230424 12:13:25.982"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:13:25.984" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:13:25.983" endtime="20230424 12:13:25.984"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.983" endtime="20230424 12:13:25.984"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 12:13:25.985" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230424 12:13:25.984" endtime="20230424 12:13:25.985"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230424 12:13:25.985" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230424 12:13:25.985" endtime="20230424 12:13:25.985"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:13:26.070" level="INFO">PUT Request : url=https://serverest.dev/usuarios/8mXmz6o1iuoEHamv 
 path_url=/usuarios/8mXmz6o1iuoEHamv 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230424 12:13:26.070" level="INFO">PUT Response : url=https://serverest.dev/usuarios/8mXmz6o1iuoEHamv 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b02000dc-5056-4e8d-afb8-4ac91b8bdf85', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7695320e9d9c7e224328c460faeeb8d4', 'Date': 'Mon, 24 Apr 2023 12:13:26 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230424 12:13:26.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:25.985" endtime="20230424 12:13:26.071"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:13:26.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:26.071" endtime="20230424 12:13:26.071"/>
</kw>
<status status="PASS" starttime="20230424 12:13:25.984" endtime="20230424 12:13:26.071"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:13:26.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:13:26.072" endtime="20230424 12:13:26.072"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:13:26.073" endtime="20230424 12:13:26.073"/>
</kw>
<status status="PASS" starttime="20230424 12:13:26.071" endtime="20230424 12:13:26.073"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:13:26.074" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230424 12:13:26.074" endtime="20230424 12:13:26.075"/>
</kw>
<status status="PASS" starttime="20230424 12:13:26.073" endtime="20230424 12:13:26.075"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:13:25.983" endtime="20230424 12:13:26.075"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230424 12:13:26.076" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230424 12:13:26.076" endtime="20230424 12:13:26.077"/>
</kw>
<status status="PASS" starttime="20230424 12:13:26.076" endtime="20230424 12:13:26.077"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230424 12:13:26.155" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/8mXmz6o1iuoEHamv 
 path_url=/usuarios/8mXmz6o1iuoEHamv 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230424 12:13:26.155" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/8mXmz6o1iuoEHamv 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '29dd8984-1e24-4ce3-b373-ef9df2d7bdcf', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2d1597791b9d24c8005a9a0a4d9bccb0', 'Date': 'Mon, 24 Apr 2023 12:13:26 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230424 12:13:26.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:26.077" endtime="20230424 12:13:26.155"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230424 12:13:26.156" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230424 12:13:26.155" endtime="20230424 12:13:26.156"/>
</kw>
<status status="PASS" starttime="20230424 12:13:26.077" endtime="20230424 12:13:26.156"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230424 12:13:26.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230424 12:13:26.156" endtime="20230424 12:13:26.157"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230424 12:13:26.158" endtime="20230424 12:13:26.158"/>
</kw>
<status status="PASS" starttime="20230424 12:13:26.156" endtime="20230424 12:13:26.158"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230424 12:13:26.159" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230424 12:13:26.159" endtime="20230424 12:13:26.159"/>
</kw>
<status status="PASS" starttime="20230424 12:13:26.158" endtime="20230424 12:13:26.159"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230424 12:13:26.075" endtime="20230424 12:13:26.159"/>
</test>
<status status="PASS" starttime="20230424 12:13:25.195" endtime="20230424 12:13:26.160"/>
</suite>
<status status="PASS" starttime="20230424 12:13:25.193" endtime="20230424 12:13:26.161"/>
</suite>
<status status="PASS" starttime="20230424 12:13:25.192" endtime="20230424 12:13:26.162"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 12:13:26.173" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:13:26.172" endtime="20230424 12:13:28.835"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 12:13:28.836" endtime="20230424 12:13:28.947"/>
</kw>
<status status="PASS" starttime="20230424 12:13:26.172" endtime="20230424 12:13:28.947"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 12:13:28.948" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 12:13:28.948" endtime="20230424 12:13:29.026"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:13:29.030" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:13:29.027" endtime="20230424 12:13:29.031"/>
</kw>
<status status="PASS" starttime="20230424 12:13:28.948" endtime="20230424 12:13:29.031"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:29.033" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 12:13:29.031" endtime="20230424 12:13:29.140"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:29.141" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 12:13:29.140" endtime="20230424 12:13:29.241"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:29.242" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 12:13:29.242" endtime="20230424 12:13:29.340"/>
</kw>
<status status="PASS" starttime="20230424 12:13:29.031" endtime="20230424 12:13:29.340"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:13:29.355" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230424 12:13:29.341" endtime="20230424 12:13:29.355"/>
</kw>
<status status="PASS" starttime="20230424 12:13:29.341" endtime="20230424 12:13:29.355"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230424 12:13:29.370" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230424 12:13:29.356" endtime="20230424 12:13:29.370"/>
</kw>
<status status="PASS" starttime="20230424 12:13:29.356" endtime="20230424 12:13:29.370"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 12:13:29.371" endtime="20230424 12:13:29.428"/>
</kw>
<status status="PASS" starttime="20230424 12:13:29.371" endtime="20230424 12:13:29.428"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 12:13:26.172" endtime="20230424 12:13:29.428"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 12:13:29.430" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:13:29.430" endtime="20230424 12:13:30.276"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 12:13:30.277" endtime="20230424 12:13:30.382"/>
</kw>
<status status="PASS" starttime="20230424 12:13:29.429" endtime="20230424 12:13:30.382"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 12:13:30.383" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 12:13:30.382" endtime="20230424 12:13:30.445"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:13:30.450" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:13:30.445" endtime="20230424 12:13:30.450"/>
</kw>
<status status="PASS" starttime="20230424 12:13:30.382" endtime="20230424 12:13:30.450"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:30.452" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 12:13:30.452" endtime="20230424 12:13:30.550"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:30.551" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 12:13:30.550" endtime="20230424 12:13:30.633"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:30.634" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 12:13:30.633" endtime="20230424 12:13:30.689"/>
</kw>
<status status="PASS" starttime="20230424 12:13:30.451" endtime="20230424 12:13:30.689"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230424 12:13:30.712" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230424 12:13:30.690" endtime="20230424 12:13:30.713"/>
</kw>
<status status="PASS" starttime="20230424 12:13:30.689" endtime="20230424 12:13:30.713"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 12:13:30.713" endtime="20230424 12:13:30.771"/>
</kw>
<status status="PASS" starttime="20230424 12:13:30.713" endtime="20230424 12:13:30.771"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 12:13:29.429" endtime="20230424 12:13:30.771"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 12:13:30.773" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:13:30.773" endtime="20230424 12:13:31.609"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 12:13:31.609" endtime="20230424 12:13:31.713"/>
</kw>
<status status="PASS" starttime="20230424 12:13:30.772" endtime="20230424 12:13:31.713"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 12:13:31.714" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 12:13:31.714" endtime="20230424 12:13:31.775"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:13:31.785" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:13:31.775" endtime="20230424 12:13:31.785"/>
</kw>
<status status="PASS" starttime="20230424 12:13:31.714" endtime="20230424 12:13:31.785"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:31.786" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 12:13:31.786" endtime="20230424 12:13:31.876"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:31.876" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 12:13:31.876" endtime="20230424 12:13:31.963"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:31.963" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 12:13:31.963" endtime="20230424 12:13:32.048"/>
</kw>
<status status="PASS" starttime="20230424 12:13:31.785" endtime="20230424 12:13:32.048"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:13:32.060" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230424 12:13:32.049" endtime="20230424 12:13:32.060"/>
</kw>
<status status="PASS" starttime="20230424 12:13:32.048" endtime="20230424 12:13:32.060"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230424 12:13:32.076" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230424 12:13:32.061" endtime="20230424 12:13:32.076"/>
</kw>
<status status="PASS" starttime="20230424 12:13:32.061" endtime="20230424 12:13:32.077"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 12:13:32.077" endtime="20230424 12:13:32.133"/>
</kw>
<status status="PASS" starttime="20230424 12:13:32.077" endtime="20230424 12:13:32.134"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 12:13:30.772" endtime="20230424 12:13:32.134"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230424 12:13:32.136" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:13:32.136" endtime="20230424 12:13:32.979"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230424 12:13:32.979" endtime="20230424 12:13:33.086"/>
</kw>
<status status="PASS" starttime="20230424 12:13:32.135" endtime="20230424 12:13:33.087"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230424 12:13:33.087" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230424 12:13:33.087" endtime="20230424 12:13:33.160"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:13:33.168" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230424 12:13:33.160" endtime="20230424 12:13:33.168"/>
</kw>
<status status="PASS" starttime="20230424 12:13:33.087" endtime="20230424 12:13:33.168"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:33.170" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230424 12:13:33.169" endtime="20230424 12:13:33.267"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:33.268" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230424 12:13:33.268" endtime="20230424 12:13:33.352"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230424 12:13:33.352" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230424 12:13:33.352" endtime="20230424 12:13:38.448"/>
</kw>
<status status="PASS" starttime="20230424 12:13:33.169" endtime="20230424 12:13:38.449"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230424 12:13:38.462" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230424 12:13:38.449" endtime="20230424 12:13:38.462"/>
</kw>
<status status="PASS" starttime="20230424 12:13:38.449" endtime="20230424 12:13:38.462"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230424 12:13:38.475" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230424 12:13:38.462" endtime="20230424 12:13:38.475"/>
</kw>
<status status="PASS" starttime="20230424 12:13:38.462" endtime="20230424 12:13:38.475"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230424 12:13:38.476" endtime="20230424 12:13:38.532"/>
</kw>
<status status="PASS" starttime="20230424 12:13:38.476" endtime="20230424 12:13:38.533"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230424 12:13:32.135" endtime="20230424 12:13:38.533"/>
</test>
<status status="PASS" starttime="20230424 12:13:26.166" endtime="20230424 12:13:38.533"/>
</suite>
<status status="PASS" starttime="20230424 12:13:26.164" endtime="20230424 12:13:38.535"/>
</suite>
<status status="PASS" starttime="20230424 12:13:26.163" endtime="20230424 12:13:38.536"/>
</suite>
<status status="PASS" starttime="20230424 12:13:25.173" endtime="20230424 12:13:38.537"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
