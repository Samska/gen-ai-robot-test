<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230413 17:08:51.917" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 17:08:52.616" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 17:08:52.615" endtime="20230413 17:08:52.617"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.615" endtime="20230413 17:08:52.617"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 17:08:52.750" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230413 17:08:52.751" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '97fdf073-9bff-4567-8d08-6a633b6e2a1e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '11a4388479a0da5af029ad6e9176f9f7;o=1', 'Date': 'Thu, 13 Apr 2023 17:08:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '6880'} 
 body={
    "quantidade": 32,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "1I5MtFIUIIOY5fV8"
        },
        {
            "nome": "Windows da Silva",
            "email": "ipqxei@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "2JhTk8dSFIFe8lH6"
        },
        {
            "nome": "Beth Ratke",
            "email": "stacy@osinski-osinski.info",
            "password": "teste",
            "administrador": "true",
            "_id": "71wWcZo3ezwrC3Cr"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ppfv@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "9mIJVW1Ol7xedZFs"
        },
        {
            "nome": "Fulano da Silva",
            "email": "pxwc@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "APyHOugT42PmdOBJ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mvsc@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "FxBMCLty8jySZP22"
        },
        {
            "nome": "Fulano da Silva",
            "email": "vasm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "GCpN2ihUBADVFECo"
        },
        {
            "nome": "Fulano da Silva",
            "email": "juvo@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "H7CG5GTrfZj2tn96"
        },
        {
            "nome": "Delma Welch",
            "email": "jermaine@rodriguez.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IJG76Lf2CDJbbMsw"
        },
        {
            "nome": "Fulano da Silva",
            "email": "jlnp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "J3UFFE8BkXHPl98Q"
        },
        {
            "nome": "Erasmo Greenfelder",
            "email": "gary@green.biz",
            "password": "teste",
            "administrador": "true",
            "_id": "L9YvsBccf96rb0IJ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "dvrb@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "LbqHhFaMoMXgzH6e"
        },
        {
            "nome": "batata",
            "email": "hayden_steuber@cartwright.info",
            "password": "teste",
            "administrador": "true",
            "_id": "MFX1zgBTAv3RdyAw"
        },
        {
            "nome": "Fulano da Silva",
            "email": "gzmi@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "MVIuW7YbJau8fYqf"
        },
        {
            "nome": "Twila Hessel",
            "email": "derek@frami-huel.info",
            "password": "teste",
            "administrador": "true",
            "_id": "VkpCmTunrhycBbfW"
        },
        {
            "nome": "Fulano da Silva",
            "email": "crhp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WaqzREFowvCuPHI4"
        },
        {
            "nome": "Windows da Silva",
            "email": "fslffc@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "XTwLaV0XfRxVQhUW"
        },
        {
            "nome": "Fulano da Silva",
            "email": "slqa@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "ZDWAI2kyN4JNLHdV"
        },
        {
            "nome": "Keshia Sanford",
            "email": "antonio_gleason@abbott.biz",
            "password": "teste",
            "administrador": "true",
            "_id": "ZsGL8uPkee6KhzCc"
        },
        {
            "nome": "Windows da Silva",
            "email": "guiwtc@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "dYbAWCLodZs9INI4"
        },
        {
            "nome": "Keisha Witting",
            "email": "alexandra.jakubowski@hirthe-wisoky.org",
            "password": "teste",
            "administrador": "true",
            "_id": "gUKn5J99Pi2FaKPZ"
        },
        {
            "nome": "Windows da Silva",
            "email": "lliebv@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "iv23MKIg4gCOCuqE"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Abbigail.Purdy@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "jTe7D7OVhdK0Ggsf"
        },
        {
            "nome": "Basil Renner",
            "email": "valentin_heathcote@parisian.com",
            "password": "teste",
            "administrador": "true",
            "_id": "kiqxPiLVa1rvPRw7"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ywal@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "lFKFtZbCGJwdqrRd"
        },
        {
            "nome": "Windows da Silva",
            "email": "mdjicj@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "lMuS9y6b6CMlz4WM"
        },
        {
            "nome": "Windows da Silva",
            "email": "mwgrlo@emailteste.com",
            "password": "15674",
            "administrador": "true",
            "_id": "oiVWYW5KdkaZHGsH"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ryhm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "qjFxff4MfEXkeiSE"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Carlee_Shields@example.com",
            "password": "teste",
            "administrador": "true",
            "_id": "vB7VATGIp6u1ay9w"
        },
        {
            "nome": "Fulano da Silva",
            "email": "orpn@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "wQFiz8g2ElHHEhEp"
        },
        {
            "nome": "Jamey Wilkinson I",
            "email": "gary@okon-ratke.biz",
            "password": "teste",
            "administrador": "false",
            "_id": "yonFUppR1mA1rN3E"
        }
    ]
} 
 </msg>
<msg timestamp="20230413 17:08:52.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.618" endtime="20230413 17:08:52.751"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 17:08:52.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.751" endtime="20230413 17:08:52.752"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.617" endtime="20230413 17:08:52.752"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 17:08:52.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.753" endtime="20230413 17:08:52.755"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 17:08:52.755" endtime="20230413 17:08:52.756"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.753" endtime="20230413 17:08:52.757"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 17:08:52.759" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230413 17:08:52.757" endtime="20230413 17:08:52.759"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.757" endtime="20230413 17:08:52.759"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.614" endtime="20230413 17:08:52.759"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 17:08:52.760" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 17:08:52.760" endtime="20230413 17:08:52.761"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.760" endtime="20230413 17:08:52.761"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230413 17:08:52.762" level="INFO">${name} = Christopher Green</msg>
<status status="PASS" starttime="20230413 17:08:52.761" endtime="20230413 17:08:52.762"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230413 17:08:52.762" level="INFO">${email} = wayne30@example.com</msg>
<status status="PASS" starttime="20230413 17:08:52.762" endtime="20230413 17:08:52.762"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230413 17:08:52.763" level="INFO">${password} = 5$l90bLqp1</msg>
<status status="PASS" starttime="20230413 17:08:52.763" endtime="20230413 17:08:52.763"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230413 17:08:52.763" level="INFO">${name} = Christopher Green</msg>
<status status="PASS" starttime="20230413 17:08:52.763" endtime="20230413 17:08:52.763"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230413 17:08:52.764" level="INFO">${email} = wayne30@example.com</msg>
<status status="PASS" starttime="20230413 17:08:52.763" endtime="20230413 17:08:52.764"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230413 17:08:52.764" level="INFO">${password} = 5$l90bLqp1</msg>
<status status="PASS" starttime="20230413 17:08:52.764" endtime="20230413 17:08:52.764"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.761" endtime="20230413 17:08:52.764"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 17:08:52.765" level="INFO">${payload} = {'nome': 'Christopher Green', 'email': 'wayne30@example.com', 'password': '5$l90bLqp1', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230413 17:08:52.765" endtime="20230413 17:08:52.765"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 17:08:52.766" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230413 17:08:52.766" endtime="20230413 17:08:52.766"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 17:08:52.843" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Christopher Green", "email": "wayne30@example.com", "password": "5$l90bLqp1", "administrador": "false"}' 
 </msg>
<msg timestamp="20230413 17:08:52.843" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5f014d36-0aee-496f-a3c4-04531b69b707', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '43b3aaedfc7712fd6fbb6d0f945a091f', 'Date': 'Thu, 13 Apr 2023 17:08:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "bucb9XLJyU602M3j"
} 
 </msg>
<msg timestamp="20230413 17:08:52.843" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.766" endtime="20230413 17:08:52.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230413 17:08:52.844" level="INFO">${user_id} = bucb9XLJyU602M3j</msg>
<status status="PASS" starttime="20230413 17:08:52.843" endtime="20230413 17:08:52.844"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230413 17:08:52.845" level="INFO">${USER_ID} = bucb9XLJyU602M3j</msg>
<status status="PASS" starttime="20230413 17:08:52.844" endtime="20230413 17:08:52.845"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 17:08:52.845" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.845" endtime="20230413 17:08:52.845"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.764" endtime="20230413 17:08:52.845"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 17:08:52.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.846" endtime="20230413 17:08:52.847"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 17:08:52.847" endtime="20230413 17:08:52.848"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.846" endtime="20230413 17:08:52.848"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 17:08:52.849" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230413 17:08:52.848" endtime="20230413 17:08:52.849"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.848" endtime="20230413 17:08:52.849"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.759" endtime="20230413 17:08:52.849"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 17:08:52.850" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 17:08:52.850" endtime="20230413 17:08:52.851"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.850" endtime="20230413 17:08:52.851"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 17:08:52.919" level="INFO">GET Request : url=https://serverest.dev/usuarios/bucb9XLJyU602M3j 
 path_url=/usuarios/bucb9XLJyU602M3j 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230413 17:08:52.920" level="INFO">GET Response : url=https://serverest.dev/usuarios/bucb9XLJyU602M3j 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8c439d1f-ea8b-47eb-9827-de6b93e0d366', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '47bd2c7e477da646816e615ff1c52379', 'Date': 'Thu, 13 Apr 2023 17:08:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Christopher Green",
    "email": "wayne30@example.com",
    "password": "5$l90bLqp1",
    "administrador": "false",
    "_id": "bucb9XLJyU602M3j"
} 
 </msg>
<msg timestamp="20230413 17:08:52.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.851" endtime="20230413 17:08:52.920"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 17:08:52.921" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.920" endtime="20230413 17:08:52.921"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.851" endtime="20230413 17:08:52.921"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 17:08:52.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.922" endtime="20230413 17:08:52.923"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 17:08:52.923" endtime="20230413 17:08:52.924"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.921" endtime="20230413 17:08:52.924"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 17:08:52.925" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230413 17:08:52.925" endtime="20230413 17:08:52.925"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.924" endtime="20230413 17:08:52.926"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.849" endtime="20230413 17:08:52.926"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 17:08:52.927" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 17:08:52.927" endtime="20230413 17:08:52.928"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.926" endtime="20230413 17:08:52.928"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 17:08:52.929" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230413 17:08:52.929" endtime="20230413 17:08:52.929"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230413 17:08:52.930" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230413 17:08:52.929" endtime="20230413 17:08:52.930"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 17:08:53.001" level="INFO">PUT Request : url=https://serverest.dev/usuarios/bucb9XLJyU602M3j 
 path_url=/usuarios/bucb9XLJyU602M3j 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230413 17:08:53.002" level="INFO">PUT Response : url=https://serverest.dev/usuarios/bucb9XLJyU602M3j 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8da2ac52-a9c8-4286-afc0-cf24f7047000', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6d7f2a4b6cfded2b6982d9d3c77b1d51', 'Date': 'Thu, 13 Apr 2023 17:08:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230413 17:08:53.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:52.930" endtime="20230413 17:08:53.002"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 17:08:53.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:53.002" endtime="20230413 17:08:53.003"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.928" endtime="20230413 17:08:53.003"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 17:08:53.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 17:08:53.004" endtime="20230413 17:08:53.005"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 17:08:53.005" endtime="20230413 17:08:53.006"/>
</kw>
<status status="PASS" starttime="20230413 17:08:53.003" endtime="20230413 17:08:53.006"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 17:08:53.007" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230413 17:08:53.006" endtime="20230413 17:08:53.007"/>
</kw>
<status status="PASS" starttime="20230413 17:08:53.006" endtime="20230413 17:08:53.007"/>
</kw>
<status status="PASS" starttime="20230413 17:08:52.926" endtime="20230413 17:08:53.007"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230413 17:08:53.009" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230413 17:08:53.008" endtime="20230413 17:08:53.009"/>
</kw>
<status status="PASS" starttime="20230413 17:08:53.008" endtime="20230413 17:08:53.009"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230413 17:08:53.079" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/bucb9XLJyU602M3j 
 path_url=/usuarios/bucb9XLJyU602M3j 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230413 17:08:53.079" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/bucb9XLJyU602M3j 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '06545550-af35-467c-bef5-c39766d499e2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3121ac1aad1d3b6ac35e2a7051365a4f', 'Date': 'Thu, 13 Apr 2023 17:08:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230413 17:08:53.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:53.009" endtime="20230413 17:08:53.080"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230413 17:08:53.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230413 17:08:53.080" endtime="20230413 17:08:53.080"/>
</kw>
<status status="PASS" starttime="20230413 17:08:53.009" endtime="20230413 17:08:53.080"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230413 17:08:53.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230413 17:08:53.081" endtime="20230413 17:08:53.083"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230413 17:08:53.083" endtime="20230413 17:08:53.084"/>
</kw>
<status status="PASS" starttime="20230413 17:08:53.081" endtime="20230413 17:08:53.084"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230413 17:08:53.085" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230413 17:08:53.085" endtime="20230413 17:08:53.086"/>
</kw>
<status status="PASS" starttime="20230413 17:08:53.084" endtime="20230413 17:08:53.086"/>
</kw>
<status status="PASS" starttime="20230413 17:08:53.008" endtime="20230413 17:08:53.086"/>
</test>
<status status="PASS" starttime="20230413 17:08:51.947" endtime="20230413 17:08:53.087"/>
</suite>
<status status="PASS" starttime="20230413 17:08:51.945" endtime="20230413 17:08:53.088"/>
</suite>
<status status="PASS" starttime="20230413 17:08:51.941" endtime="20230413 17:08:53.089"/>
</suite>
<status status="PASS" starttime="20230413 17:08:51.918" endtime="20230413 17:08:53.090"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
