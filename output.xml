<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230502 01:03:29.087" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230502 01:03:29.762" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230502 01:03:29.762" endtime="20230502 01:03:29.763"/>
</kw>
<status status="PASS" starttime="20230502 01:03:29.761" endtime="20230502 01:03:29.763"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230502 01:03:29.941" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230502 01:03:29.941" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2cc74a94-89bb-48df-9dd6-73cffb25639d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '74812d78592f81160c0b1caf8d618a3b;o=1', 'Date': 'Tue, 02 May 2023 01:03:29 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230502 01:03:29.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:29.763" endtime="20230502 01:03:29.941"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230502 01:03:29.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:29.942" endtime="20230502 01:03:29.942"/>
</kw>
<status status="PASS" starttime="20230502 01:03:29.763" endtime="20230502 01:03:29.942"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230502 01:03:29.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230502 01:03:29.943" endtime="20230502 01:03:29.943"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230502 01:03:29.944" endtime="20230502 01:03:29.944"/>
</kw>
<status status="PASS" starttime="20230502 01:03:29.942" endtime="20230502 01:03:29.944"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230502 01:03:29.945" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230502 01:03:29.945" endtime="20230502 01:03:29.945"/>
</kw>
<status status="PASS" starttime="20230502 01:03:29.944" endtime="20230502 01:03:29.945"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230502 01:03:29.761" endtime="20230502 01:03:29.946"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230502 01:03:29.947" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230502 01:03:29.947" endtime="20230502 01:03:29.947"/>
</kw>
<status status="PASS" starttime="20230502 01:03:29.947" endtime="20230502 01:03:29.947"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230502 01:03:29.948" level="INFO">${name} = Paul Reed</msg>
<status status="PASS" starttime="20230502 01:03:29.948" endtime="20230502 01:03:29.948"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230502 01:03:29.949" level="INFO">${email} = burnettbrenda@example.org</msg>
<status status="PASS" starttime="20230502 01:03:29.949" endtime="20230502 01:03:29.949"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230502 01:03:29.950" level="INFO">${password} = N^1Kc)ga^x</msg>
<status status="PASS" starttime="20230502 01:03:29.949" endtime="20230502 01:03:29.950"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230502 01:03:29.950" level="INFO">${name} = Paul Reed</msg>
<status status="PASS" starttime="20230502 01:03:29.950" endtime="20230502 01:03:29.950"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230502 01:03:29.951" level="INFO">${email} = burnettbrenda@example.org</msg>
<status status="PASS" starttime="20230502 01:03:29.950" endtime="20230502 01:03:29.951"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230502 01:03:29.951" level="INFO">${password} = N^1Kc)ga^x</msg>
<status status="PASS" starttime="20230502 01:03:29.951" endtime="20230502 01:03:29.951"/>
</kw>
<status status="PASS" starttime="20230502 01:03:29.948" endtime="20230502 01:03:29.951"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230502 01:03:29.952" level="INFO">${payload} = {'nome': 'Paul Reed', 'email': 'burnettbrenda@example.org', 'password': 'N^1Kc)ga^x', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230502 01:03:29.952" endtime="20230502 01:03:29.952"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230502 01:03:29.953" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230502 01:03:29.953" endtime="20230502 01:03:29.953"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230502 01:03:30.056" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Paul Reed", "email": "burnettbrenda@example.org", "password": "N^1Kc)ga^x", "administrador": "false"}' 
 </msg>
<msg timestamp="20230502 01:03:30.056" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '890ac408-393e-4471-973c-9801a555bc0b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd96971b75a66c5693f355b14aa5f3325', 'Date': 'Tue, 02 May 2023 01:03:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "fHwlrp2ignsl8dfO"
} 
 </msg>
<msg timestamp="20230502 01:03:30.056" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:29.953" endtime="20230502 01:03:30.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230502 01:03:30.057" level="INFO">${user_id} = fHwlrp2ignsl8dfO</msg>
<status status="PASS" starttime="20230502 01:03:30.056" endtime="20230502 01:03:30.057"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230502 01:03:30.057" level="INFO">${USER_ID} = fHwlrp2ignsl8dfO</msg>
<status status="PASS" starttime="20230502 01:03:30.057" endtime="20230502 01:03:30.058"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230502 01:03:30.058" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.058" endtime="20230502 01:03:30.058"/>
</kw>
<status status="PASS" starttime="20230502 01:03:29.951" endtime="20230502 01:03:30.058"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230502 01:03:30.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.059" endtime="20230502 01:03:30.059"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230502 01:03:30.059" endtime="20230502 01:03:30.060"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.058" endtime="20230502 01:03:30.060"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230502 01:03:30.062" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230502 01:03:30.061" endtime="20230502 01:03:30.062"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.061" endtime="20230502 01:03:30.062"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230502 01:03:29.946" endtime="20230502 01:03:30.062"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230502 01:03:30.064" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230502 01:03:30.064" endtime="20230502 01:03:30.064"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.064" endtime="20230502 01:03:30.065"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230502 01:03:30.141" level="INFO">GET Request : url=https://serverest.dev/usuarios/fHwlrp2ignsl8dfO 
 path_url=/usuarios/fHwlrp2ignsl8dfO 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230502 01:03:30.141" level="INFO">GET Response : url=https://serverest.dev/usuarios/fHwlrp2ignsl8dfO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '31baaff4-a91f-4560-9ee7-32ac74b05e68', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '33a3273a1911ef604c59ba672357f4ce', 'Date': 'Tue, 02 May 2023 01:03:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Paul Reed",
    "email": "burnettbrenda@example.org",
    "password": "N^1Kc)ga^x",
    "administrador": "false",
    "_id": "fHwlrp2ignsl8dfO"
} 
 </msg>
<msg timestamp="20230502 01:03:30.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.065" endtime="20230502 01:03:30.141"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230502 01:03:30.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.141" endtime="20230502 01:03:30.142"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.065" endtime="20230502 01:03:30.142"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230502 01:03:30.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.143" endtime="20230502 01:03:30.143"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230502 01:03:30.144" endtime="20230502 01:03:30.144"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.142" endtime="20230502 01:03:30.145"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230502 01:03:30.145" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230502 01:03:30.145" endtime="20230502 01:03:30.146"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.145" endtime="20230502 01:03:30.146"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230502 01:03:30.063" endtime="20230502 01:03:30.146"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230502 01:03:30.147" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230502 01:03:30.147" endtime="20230502 01:03:30.148"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.147" endtime="20230502 01:03:30.148"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230502 01:03:30.148" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230502 01:03:30.148" endtime="20230502 01:03:30.149"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230502 01:03:30.149" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230502 01:03:30.149" endtime="20230502 01:03:30.149"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230502 01:03:30.232" level="INFO">PUT Request : url=https://serverest.dev/usuarios/fHwlrp2ignsl8dfO 
 path_url=/usuarios/fHwlrp2ignsl8dfO 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230502 01:03:30.232" level="INFO">PUT Response : url=https://serverest.dev/usuarios/fHwlrp2ignsl8dfO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bdd161d0-a745-4901-96b8-ed26282d2a91', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '66842651be79e0d9b487b656c9ceda9c', 'Date': 'Tue, 02 May 2023 01:03:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230502 01:03:30.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.149" endtime="20230502 01:03:30.233"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230502 01:03:30.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.233" endtime="20230502 01:03:30.233"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.148" endtime="20230502 01:03:30.233"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230502 01:03:30.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.233" endtime="20230502 01:03:30.234"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230502 01:03:30.234" endtime="20230502 01:03:30.235"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.233" endtime="20230502 01:03:30.235"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230502 01:03:30.236" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230502 01:03:30.236" endtime="20230502 01:03:30.236"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.235" endtime="20230502 01:03:30.236"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230502 01:03:30.146" endtime="20230502 01:03:30.237"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230502 01:03:30.238" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230502 01:03:30.238" endtime="20230502 01:03:30.238"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.237" endtime="20230502 01:03:30.238"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230502 01:03:30.313" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/fHwlrp2ignsl8dfO 
 path_url=/usuarios/fHwlrp2ignsl8dfO 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230502 01:03:30.313" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/fHwlrp2ignsl8dfO 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '597d8018-70bf-4e11-85c9-0188310d8a2b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '77cbd5c438554b0ac4b1421cdd413550', 'Date': 'Tue, 02 May 2023 01:03:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230502 01:03:30.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.239" endtime="20230502 01:03:30.313"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230502 01:03:30.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.313" endtime="20230502 01:03:30.314"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.239" endtime="20230502 01:03:30.314"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230502 01:03:30.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230502 01:03:30.314" endtime="20230502 01:03:30.315"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230502 01:03:30.316" endtime="20230502 01:03:30.317"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.314" endtime="20230502 01:03:30.317"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230502 01:03:30.318" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230502 01:03:30.317" endtime="20230502 01:03:30.318"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.317" endtime="20230502 01:03:30.318"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230502 01:03:30.237" endtime="20230502 01:03:30.318"/>
</test>
<status status="PASS" starttime="20230502 01:03:29.113" endtime="20230502 01:03:30.319"/>
</suite>
<status status="PASS" starttime="20230502 01:03:29.111" endtime="20230502 01:03:30.321"/>
</suite>
<status status="PASS" starttime="20230502 01:03:29.110" endtime="20230502 01:03:30.322"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230502 01:03:30.334" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230502 01:03:30.333" endtime="20230502 01:03:46.389"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230502 01:03:46.389" endtime="20230502 01:03:46.566"/>
</kw>
<status status="PASS" starttime="20230502 01:03:30.333" endtime="20230502 01:03:46.566"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230502 01:03:46.567" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230502 01:03:46.567" endtime="20230502 01:03:46.706"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230502 01:03:46.711" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230502 01:03:46.706" endtime="20230502 01:03:46.711"/>
</kw>
<status status="PASS" starttime="20230502 01:03:46.566" endtime="20230502 01:03:46.711"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:46.713" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230502 01:03:46.711" endtime="20230502 01:03:46.988"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:46.988" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230502 01:03:46.988" endtime="20230502 01:03:47.206"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:47.207" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230502 01:03:47.206" endtime="20230502 01:03:47.577"/>
</kw>
<status status="PASS" starttime="20230502 01:03:46.711" endtime="20230502 01:03:47.577"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230502 01:03:47.585" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230502 01:03:47.578" endtime="20230502 01:03:47.585"/>
</kw>
<status status="PASS" starttime="20230502 01:03:47.577" endtime="20230502 01:03:47.586"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230502 01:03:47.619" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230502 01:03:47.586" endtime="20230502 01:03:47.619"/>
</kw>
<status status="PASS" starttime="20230502 01:03:47.586" endtime="20230502 01:03:47.619"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230502 01:03:47.620" endtime="20230502 01:03:47.678"/>
</kw>
<status status="PASS" starttime="20230502 01:03:47.619" endtime="20230502 01:03:47.678"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230502 01:03:30.333" endtime="20230502 01:03:47.678"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230502 01:03:47.681" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230502 01:03:47.680" endtime="20230502 01:03:48.600"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230502 01:03:48.601" endtime="20230502 01:03:48.713"/>
</kw>
<status status="PASS" starttime="20230502 01:03:47.679" endtime="20230502 01:03:48.713"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230502 01:03:48.714" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230502 01:03:48.714" endtime="20230502 01:03:48.774"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230502 01:03:48.785" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230502 01:03:48.774" endtime="20230502 01:03:48.785"/>
</kw>
<status status="PASS" starttime="20230502 01:03:48.713" endtime="20230502 01:03:48.786"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:48.787" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230502 01:03:48.786" endtime="20230502 01:03:48.906"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:48.907" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230502 01:03:48.906" endtime="20230502 01:03:49.001"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:49.002" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230502 01:03:49.002" endtime="20230502 01:03:49.064"/>
</kw>
<status status="PASS" starttime="20230502 01:03:48.786" endtime="20230502 01:03:49.065"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230502 01:03:49.091" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230502 01:03:49.065" endtime="20230502 01:03:49.091"/>
</kw>
<status status="PASS" starttime="20230502 01:03:49.065" endtime="20230502 01:03:49.091"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230502 01:03:49.092" endtime="20230502 01:03:49.150"/>
</kw>
<status status="PASS" starttime="20230502 01:03:49.091" endtime="20230502 01:03:49.151"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230502 01:03:47.679" endtime="20230502 01:03:49.151"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230502 01:03:49.153" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230502 01:03:49.152" endtime="20230502 01:03:50.065"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230502 01:03:50.065" endtime="20230502 01:03:50.170"/>
</kw>
<status status="PASS" starttime="20230502 01:03:49.152" endtime="20230502 01:03:50.170"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230502 01:03:50.171" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230502 01:03:50.171" endtime="20230502 01:03:50.245"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230502 01:03:50.250" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230502 01:03:50.246" endtime="20230502 01:03:50.251"/>
</kw>
<status status="PASS" starttime="20230502 01:03:50.170" endtime="20230502 01:03:50.251"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:50.252" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230502 01:03:50.251" endtime="20230502 01:03:50.354"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:50.355" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230502 01:03:50.354" endtime="20230502 01:03:50.446"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:50.446" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230502 01:03:50.446" endtime="20230502 01:03:50.542"/>
</kw>
<status status="PASS" starttime="20230502 01:03:50.251" endtime="20230502 01:03:50.543"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230502 01:03:50.556" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230502 01:03:50.543" endtime="20230502 01:03:50.556"/>
</kw>
<status status="PASS" starttime="20230502 01:03:50.543" endtime="20230502 01:03:50.556"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230502 01:03:50.571" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230502 01:03:50.557" endtime="20230502 01:03:50.571"/>
</kw>
<status status="PASS" starttime="20230502 01:03:50.556" endtime="20230502 01:03:50.571"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230502 01:03:50.572" endtime="20230502 01:03:50.630"/>
</kw>
<status status="PASS" starttime="20230502 01:03:50.572" endtime="20230502 01:03:50.630"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230502 01:03:49.151" endtime="20230502 01:03:50.630"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230502 01:03:50.633" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230502 01:03:50.632" endtime="20230502 01:03:51.555"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230502 01:03:51.555" endtime="20230502 01:03:51.662"/>
</kw>
<status status="PASS" starttime="20230502 01:03:50.632" endtime="20230502 01:03:51.662"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230502 01:03:51.664" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230502 01:03:51.663" endtime="20230502 01:03:51.737"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230502 01:03:51.741" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230502 01:03:51.737" endtime="20230502 01:03:51.741"/>
</kw>
<status status="PASS" starttime="20230502 01:03:51.663" endtime="20230502 01:03:51.742"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:51.743" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230502 01:03:51.742" endtime="20230502 01:03:51.878"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:51.879" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230502 01:03:51.879" endtime="20230502 01:03:51.979"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230502 01:03:51.980" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230502 01:03:51.980" endtime="20230502 01:03:57.099"/>
</kw>
<status status="PASS" starttime="20230502 01:03:51.742" endtime="20230502 01:03:57.100"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230502 01:03:57.122" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230502 01:03:57.100" endtime="20230502 01:03:57.122"/>
</kw>
<status status="PASS" starttime="20230502 01:03:57.100" endtime="20230502 01:03:57.122"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230502 01:03:57.137" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230502 01:03:57.123" endtime="20230502 01:03:57.137"/>
</kw>
<status status="PASS" starttime="20230502 01:03:57.122" endtime="20230502 01:03:57.137"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230502 01:03:57.137" endtime="20230502 01:03:57.195"/>
</kw>
<status status="PASS" starttime="20230502 01:03:57.137" endtime="20230502 01:03:57.196"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230502 01:03:50.631" endtime="20230502 01:03:57.196"/>
</test>
<status status="PASS" starttime="20230502 01:03:30.326" endtime="20230502 01:03:57.197"/>
</suite>
<status status="PASS" starttime="20230502 01:03:30.324" endtime="20230502 01:03:57.199"/>
</suite>
<status status="PASS" starttime="20230502 01:03:30.322" endtime="20230502 01:03:57.200"/>
</suite>
<status status="PASS" starttime="20230502 01:03:29.088" endtime="20230502 01:03:57.201"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
