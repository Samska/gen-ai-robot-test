<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230522 14:32:07.490" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:32:08.154" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:32:08.154" endtime="20230522 14:32:08.154"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.153" endtime="20230522 14:32:08.155"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:32:08.304" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 14:32:08.304" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5ae5614d-df82-4e1c-a949-1d7bd6890f0d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '64a02b5b1ef5830f9d3a217c1bf6826d', 'Date': 'Mon, 22 May 2023 14:32:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '2440'} 
 body={
    "quantidade": 11,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Cheryl Black",
            "email": "ewashington@example.net",
            "password": "cofp2OYNr8us",
            "administrador": "true",
            "_id": "C3mJjC9bRt4vRiYd"
        },
        {
            "nome": "Sara Cooper",
            "email": "owilliams@example.com",
            "password": "309OSrbg1T6S",
            "administrador": "true",
            "_id": "JFESmL504ZICSz1Y"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano9@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "YiAua7K6YFlmqD5i"
        },
        {
            "nome": "Rachel Reed",
            "email": "john38@example.com",
            "password": "3IQMttv5b7Iy",
            "administrador": "true",
            "_id": "bw2I97rWCSui7nAD"
        },
        {
            "nome": "Jared Wade",
            "email": "diana33@example.net",
            "password": "8xMeKtPlpWhl",
            "administrador": "true",
            "_id": "eT4v4fyKLjOkISyA"
        },
        {
            "nome": "Rodney Lee",
            "email": "martinezkristy@example.net",
            "password": "8HwKukyyMj3Z",
            "administrador": "true",
            "_id": "i0jHidMscSE4smQR"
        },
        {
            "nome": "April Stephens",
            "email": "ortizlatoya@example.net",
            "password": "42aUyqQMJpjB",
            "administrador": "true",
            "_id": "owd1dbjVDYAhGF2t"
        },
        {
            "nome": "Melissa Grant",
            "email": "amyortega@example.net",
            "password": "YctFqVWr4T8d",
            "administrador": "true",
            "_id": "qwyjhpZK56HugKqO"
        },
        {
            "nome": "Jesus Blankenship",
            "email": "wilsonkenneth@example.com",
            "password": "36HuwijeFJmg",
            "administrador": "true",
            "_id": "vqL6orrqjTjRJXcP"
        },
        {
            "nome": "Christina Green",
            "email": "robert93@example.net",
            "password": "t9F2raIITdfe",
            "administrador": "true",
            "_id": "zXZU5ChutMyKtXPN"
        }
    ]
} 
 </msg>
<msg timestamp="20230522 14:32:08.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.155" endtime="20230522 14:32:08.305"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:32:08.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.305" endtime="20230522 14:32:08.305"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.155" endtime="20230522 14:32:08.305"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:32:08.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.306" endtime="20230522 14:32:08.307"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:32:08.307" endtime="20230522 14:32:08.308"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.306" endtime="20230522 14:32:08.308"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:32:08.310" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 14:32:08.309" endtime="20230522 14:32:08.310"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.308" endtime="20230522 14:32:08.310"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:32:08.152" endtime="20230522 14:32:08.310"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:32:08.312" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:32:08.311" endtime="20230522 14:32:08.312"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.311" endtime="20230522 14:32:08.312"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 14:32:08.313" level="INFO">${name} = Catherine Bond</msg>
<status status="PASS" starttime="20230522 14:32:08.313" endtime="20230522 14:32:08.313"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 14:32:08.314" level="INFO">${email} = travisbowman@example.org</msg>
<status status="PASS" starttime="20230522 14:32:08.314" endtime="20230522 14:32:08.314"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 14:32:08.315" level="INFO">${password} = TfJNSVcfg40A</msg>
<status status="PASS" starttime="20230522 14:32:08.314" endtime="20230522 14:32:08.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:32:08.315" level="INFO">${name} = Catherine Bond</msg>
<status status="PASS" starttime="20230522 14:32:08.315" endtime="20230522 14:32:08.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:32:08.316" level="INFO">${email} = travisbowman@example.org</msg>
<status status="PASS" starttime="20230522 14:32:08.315" endtime="20230522 14:32:08.316"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:32:08.316" level="INFO">${password} = TfJNSVcfg40A</msg>
<status status="PASS" starttime="20230522 14:32:08.316" endtime="20230522 14:32:08.316"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.312" endtime="20230522 14:32:08.316"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 14:32:08.317" level="INFO">${payload} = {'nome': 'Catherine Bond', 'email': 'travisbowman@example.org', 'password': 'TfJNSVcfg40A', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 14:32:08.317" endtime="20230522 14:32:08.317"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 14:32:08.318" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 14:32:08.318" endtime="20230522 14:32:08.318"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:32:08.391" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"nome": "Catherine Bond", "email": "travisbowman@example.org", "password": "TfJNSVcfg40A", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 14:32:08.391" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '43980f47-aeff-4743-b99e-749f5706f0c1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2b29ce233381d965143855635aab3554', 'Date': 'Mon, 22 May 2023 14:32:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "PJYAkR60aco4A20H"
} 
 </msg>
<msg timestamp="20230522 14:32:08.391" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.318" endtime="20230522 14:32:08.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230522 14:32:08.393" level="INFO">${user_id} = PJYAkR60aco4A20H</msg>
<status status="PASS" starttime="20230522 14:32:08.392" endtime="20230522 14:32:08.393"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230522 14:32:08.393" level="INFO">${USER_ID} = PJYAkR60aco4A20H</msg>
<status status="PASS" starttime="20230522 14:32:08.393" endtime="20230522 14:32:08.393"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:32:08.394" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.394" endtime="20230522 14:32:08.394"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.317" endtime="20230522 14:32:08.394"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:32:08.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.395" endtime="20230522 14:32:08.396"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:32:08.396" endtime="20230522 14:32:08.396"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.394" endtime="20230522 14:32:08.397"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:32:08.398" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 14:32:08.397" endtime="20230522 14:32:08.398"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.397" endtime="20230522 14:32:08.398"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:32:08.310" endtime="20230522 14:32:08.398"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:32:08.400" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:32:08.400" endtime="20230522 14:32:08.401"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.400" endtime="20230522 14:32:08.401"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:32:08.474" level="INFO">GET Request : url=https://serverest.dev/usuarios/PJYAkR60aco4A20H 
 path_url=/usuarios/PJYAkR60aco4A20H 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 14:32:08.475" level="INFO">GET Response : url=https://serverest.dev/usuarios/PJYAkR60aco4A20H 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8a1617c3-9cb7-4053-b7b0-a62b2b01376e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '39d528fde162cd6aa32967a69cda8759', 'Date': 'Mon, 22 May 2023 14:32:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '166'} 
 body={
    "nome": "Catherine Bond",
    "email": "travisbowman@example.org",
    "password": "TfJNSVcfg40A",
    "administrador": "false",
    "_id": "PJYAkR60aco4A20H"
} 
 </msg>
<msg timestamp="20230522 14:32:08.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.401" endtime="20230522 14:32:08.475"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:32:08.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.475" endtime="20230522 14:32:08.475"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.401" endtime="20230522 14:32:08.476"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:32:08.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.476" endtime="20230522 14:32:08.477"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:32:08.477" endtime="20230522 14:32:08.478"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.476" endtime="20230522 14:32:08.478"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:32:08.479" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230522 14:32:08.478" endtime="20230522 14:32:08.479"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.478" endtime="20230522 14:32:08.479"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:32:08.399" endtime="20230522 14:32:08.479"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:32:08.481" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:32:08.481" endtime="20230522 14:32:08.481"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.480" endtime="20230522 14:32:08.481"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 14:32:08.482" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 14:32:08.482" endtime="20230522 14:32:08.482"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 14:32:08.483" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 14:32:08.482" endtime="20230522 14:32:08.483"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:32:08.553" level="INFO">PUT Request : url=https://serverest.dev/usuarios/PJYAkR60aco4A20H 
 path_url=/usuarios/PJYAkR60aco4A20H 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 14:32:08.553" level="INFO">PUT Response : url=https://serverest.dev/usuarios/PJYAkR60aco4A20H 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e087d086-f56d-44a6-ba7f-0b02cc7d760b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b73c6b5c2d60cc3d1fac643e58c1e8d4', 'Date': 'Mon, 22 May 2023 14:32:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230522 14:32:08.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.483" endtime="20230522 14:32:08.554"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:32:08.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.554" endtime="20230522 14:32:08.554"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.481" endtime="20230522 14:32:08.554"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:32:08.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.555" endtime="20230522 14:32:08.556"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:32:08.556" endtime="20230522 14:32:08.557"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.555" endtime="20230522 14:32:08.557"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:32:08.558" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 14:32:08.558" endtime="20230522 14:32:08.558"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.557" endtime="20230522 14:32:08.559"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:32:08.480" endtime="20230522 14:32:08.559"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 14:32:08.560" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 14:32:08.560" endtime="20230522 14:32:08.561"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.560" endtime="20230522 14:32:08.561"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 14:32:08.635" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/PJYAkR60aco4A20H 
 path_url=/usuarios/PJYAkR60aco4A20H 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230522 14:32:08.635" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/PJYAkR60aco4A20H 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1aae38b6-9e0b-4363-a9db-ea2140251069', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8f1c74c79f3995fdad6a39ced199836f', 'Date': 'Mon, 22 May 2023 14:32:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230522 14:32:08.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.562" endtime="20230522 14:32:08.636"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 14:32:08.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.636" endtime="20230522 14:32:08.636"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.561" endtime="20230522 14:32:08.637"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 14:32:08.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 14:32:08.637" endtime="20230522 14:32:08.638"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 14:32:08.638" endtime="20230522 14:32:08.639"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.637" endtime="20230522 14:32:08.639"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 14:32:08.641" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 14:32:08.640" endtime="20230522 14:32:08.644"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.639" endtime="20230522 14:32:08.645"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 14:32:08.559" endtime="20230522 14:32:08.645"/>
</test>
<status status="PASS" starttime="20230522 14:32:07.515" endtime="20230522 14:32:08.646"/>
</suite>
<status status="PASS" starttime="20230522 14:32:07.513" endtime="20230522 14:32:08.648"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 14:32:08.663" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 14:32:08.662" endtime="20230522 14:32:10.886"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 14:32:10.887" endtime="20230522 14:32:10.992"/>
</kw>
<status status="PASS" starttime="20230522 14:32:08.662" endtime="20230522 14:32:10.993"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 14:32:10.999" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 14:32:10.993" endtime="20230522 14:32:10.999"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:11.001" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 14:32:10.999" endtime="20230522 14:32:11.106"/>
</kw>
<status status="PASS" starttime="20230522 14:32:10.993" endtime="20230522 14:32:11.106"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:11.107" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 14:32:11.106" endtime="20230522 14:32:11.182"/>
</kw>
<status status="PASS" starttime="20230522 14:32:11.106" endtime="20230522 14:32:11.182"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 14:32:11.182" endtime="20230522 14:32:11.421"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 14:32:11.442" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 14:32:11.421" endtime="20230522 14:32:11.442"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:32:11.460" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230522 14:32:11.443" endtime="20230522 14:32:11.460"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:32:11.475" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230522 14:32:11.460" endtime="20230522 14:32:11.475"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:32:11.490" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230522 14:32:11.475" endtime="20230522 14:32:11.490"/>
</kw>
<status status="PASS" starttime="20230522 14:32:11.182" endtime="20230522 14:32:11.490"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 14:32:11.491" endtime="20230522 14:32:11.547"/>
</kw>
<status status="PASS" starttime="20230522 14:32:11.491" endtime="20230522 14:32:11.547"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 14:32:08.661" endtime="20230522 14:32:11.547"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 14:32:11.550" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 14:32:11.549" endtime="20230522 14:32:12.745"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 14:32:12.745" endtime="20230522 14:32:12.850"/>
</kw>
<status status="PASS" starttime="20230522 14:32:11.548" endtime="20230522 14:32:12.850"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 14:32:12.857" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 14:32:12.851" endtime="20230522 14:32:12.857"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:12.858" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 14:32:12.858" endtime="20230522 14:32:12.947"/>
</kw>
<status status="PASS" starttime="20230522 14:32:12.850" endtime="20230522 14:32:12.947"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 14:32:12.948" level="INFO">${name} = John Ford</msg>
<status status="PASS" starttime="20230522 14:32:12.947" endtime="20230522 14:32:12.948"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 14:32:12.949" level="INFO">${email} = dunntonya@example.org</msg>
<status status="PASS" starttime="20230522 14:32:12.948" endtime="20230522 14:32:12.949"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 14:32:12.950" level="INFO">${password} = efW1YTZgeTJf</msg>
<status status="PASS" starttime="20230522 14:32:12.949" endtime="20230522 14:32:12.950"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:12.950" level="INFO">Typing text 'John Ford' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 14:32:12.950" endtime="20230522 14:32:13.086"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:13.087" level="INFO">Typing text 'dunntonya@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 14:32:13.086" endtime="20230522 14:32:13.215"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:13.216" level="INFO">Typing text 'efW1YTZgeTJf' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 14:32:13.215" endtime="20230522 14:32:13.325"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:13.326" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 14:32:13.325" endtime="20230522 14:32:13.421"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:32:13.422" level="INFO">${name} = John Ford</msg>
<status status="PASS" starttime="20230522 14:32:13.421" endtime="20230522 14:32:13.422"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:32:13.422" level="INFO">${email} = dunntonya@example.org</msg>
<status status="PASS" starttime="20230522 14:32:13.422" endtime="20230522 14:32:13.422"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 14:32:13.422" level="INFO">${password} = efW1YTZgeTJf</msg>
<status status="PASS" starttime="20230522 14:32:13.422" endtime="20230522 14:32:13.423"/>
</kw>
<status status="PASS" starttime="20230522 14:32:12.947" endtime="20230522 14:32:13.423"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:13.424" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 14:32:13.423" endtime="20230522 14:32:13.495"/>
</kw>
<status status="PASS" starttime="20230522 14:32:13.423" endtime="20230522 14:32:13.495"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 14:32:13.496" endtime="20230522 14:32:13.734"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 14:32:13.756" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 14:32:13.735" endtime="20230522 14:32:13.756"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:32:13.771" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230522 14:32:13.756" endtime="20230522 14:32:13.771"/>
</kw>
<status status="PASS" starttime="20230522 14:32:13.495" endtime="20230522 14:32:13.771"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 14:32:13.771" endtime="20230522 14:32:13.830"/>
</kw>
<status status="PASS" starttime="20230522 14:32:13.771" endtime="20230522 14:32:13.831"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 14:32:11.548" endtime="20230522 14:32:13.831"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 14:32:13.833" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 14:32:13.832" endtime="20230522 14:32:15.046"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 14:32:15.046" endtime="20230522 14:32:15.150"/>
</kw>
<status status="PASS" starttime="20230522 14:32:13.832" endtime="20230522 14:32:15.151"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 14:32:15.161" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 14:32:15.151" endtime="20230522 14:32:15.161"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:15.162" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 14:32:15.161" endtime="20230522 14:32:15.261"/>
</kw>
<status status="PASS" starttime="20230522 14:32:15.151" endtime="20230522 14:32:15.261"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:15.263" level="INFO">Typing text 'John Ford' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 14:32:15.262" endtime="20230522 14:32:15.391"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:15.391" level="INFO">Typing text 'dunntonya@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 14:32:15.391" endtime="20230522 14:32:15.525"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:15.526" level="INFO">Typing text 'efW1YTZgeTJf' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 14:32:15.525" endtime="20230522 14:32:15.632"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:15.633" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 14:32:15.632" endtime="20230522 14:32:15.720"/>
</kw>
<status status="PASS" starttime="20230522 14:32:15.261" endtime="20230522 14:32:15.721"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 14:32:15.722" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 14:32:15.721" endtime="20230522 14:32:15.789"/>
</kw>
<status status="PASS" starttime="20230522 14:32:15.721" endtime="20230522 14:32:15.789"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 14:32:15.790" endtime="20230522 14:32:16.029"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 14:32:16.051" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 14:32:16.030" endtime="20230522 14:32:16.051"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 14:32:16.067" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230522 14:32:16.051" endtime="20230522 14:32:16.067"/>
</kw>
<status status="PASS" starttime="20230522 14:32:15.790" endtime="20230522 14:32:16.067"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 14:32:16.068" endtime="20230522 14:32:16.123"/>
</kw>
<status status="PASS" starttime="20230522 14:32:16.067" endtime="20230522 14:32:16.123"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 14:32:13.831" endtime="20230522 14:32:16.123"/>
</test>
<status status="PASS" starttime="20230522 14:32:08.653" endtime="20230522 14:32:16.124"/>
</suite>
<status status="PASS" starttime="20230522 14:32:08.649" endtime="20230522 14:32:16.126"/>
</suite>
<status status="PASS" starttime="20230522 14:32:07.491" endtime="20230522 14:32:16.127"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
