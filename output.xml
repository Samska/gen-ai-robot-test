<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230523 01:04:16.710" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230523 01:04:17.172" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230523 01:04:17.172" endtime="20230523 01:04:17.172"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.171" endtime="20230523 01:04:17.172"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230523 01:04:17.334" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230523 01:04:17.334" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '55facdb5-5199-463b-9169-697b18457347', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9c31e08bdee7e79f098cd6e657894d5c;o=1', 'Date': 'Tue, 23 May 2023 01:04:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '34011'} 
 body={
    "quantidade": 160,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "qgka@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0orLfWYHwLijDHhl"
        },
        {
            "nome": "Fulano da Silva",
            "email": "xmkm@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "19dqgaNlCtEnxCeJ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "cfut@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "1bqxz2T7Vuqxwbbc"
        },
        {
            "nome": "Fulano da Silva",
            "email": "gdxb@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "1lg98GRAhwBml0fo"
        },
        {
            "nome": "Fulano da Silva",
            "email": "kiaqmqvp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "2FKwND4xvXMxn88C"
        },
        {
            "nome": "Fulano da Silva",
            "email": "meub@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "3Q20O1emL6vo9BrV"
        },
        {
            "nome": "Fulano da Silva",
            "email": "urfc@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "4i3Ee9hBnM3oz3Uo"
        },
        {
            "nome": "Fulano da Silva",
            "email": "iwyv@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "58bUvfmM9cylvZJ7"
        },
        {
            "nome": "Fulano da Silva",
            "email": "htom@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5PzQobcQZzcPqHdY"
        },
        {
            "nome": "Jose da Silva",
            "email": "testetwt02@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "5RkdvlQiITCxdxVS"
        },
        {
            "nome": "Fulano da Silva",
            "email": "eovhyhhm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5cP79DclmC5Ku02c"
        },
        {
            "nome": "Fulano da Silva",
            "email": "oubkuuxu@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5jHeY62xQkJ0pkzQ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ejuo@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "6AeV5TMJNfH4kv3v"
        },
        {
            "nome": "Fulano da Silva",
            "email": "xiah@emailteste.com",
            "password": "4321",
            "administrador": "true",
            "_id": "6W1niKa9w9Vt56yN"
        },
        {
            "nome": "Fulano da Silva",
            "email": "psah@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "6y9Wwn4SpExdTd1f"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ogtm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "75uLRnhx0jIK66kj"
        },
        {
            "nome": "Fulano da Silva",
            "email": "sjpt@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "7SDaGBtWn8QXdrVe"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rugsjhro@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "7fYUp8XngKou6flI"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lxnq@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "891oOgLXZJjhXaFW"
        },
        {
            "nome": "Fulano da Silva",
            "email": "dhgs@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "8s7UxqPKwi1grqPd"
        },
        {
            "nome": "{{nome}}",
            "email": "Beulah@qa.com.br",
            "password": "zxO7K3jCr9BXBv5",
            "administrador": "true",
            "_id": "9Cqh5VYqLpYHKN7b"
        },
        {
            "nome": "Fulano da Silva",
            "email": "osvdqgil@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "9Op7pqSnld0jWhN4"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0108@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "9XmWEbtJsXcwuUBI"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mses@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9kdBPqndFirmvxE0"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ehaqnznp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "9s7iUQ8x4X0FhIFX"
        },
        {
            "nome": "Fulano da Silva",
            "email": "vocy@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9sNDulpJsmkxSUZP"
        },
        {
            "nome": "Fulano da Silva",
            "email": "domq@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "ACs6yKPgvcFbu4y4"
        },
        {
            "nome": "Jose da Silva03",
            "email": "testetwt0103@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "AOmnlI3pe9WLBbrD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "svsjdffr@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "BQB9LEQuvVFQQzpP"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fgpk@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "By1ThWFyluBU55UZ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "cguywtjp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "Cc8iBhlz7n3qkSW6"
        },
        {
            "nome": "Fulano da Silva",
            "email": "vjah@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "DDvQL6E94oY2uDAy"
        },
        {
            "nome": "Fulano da Silva",
            "email": "gtrh@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "DndbM9fCSbv9uZ33"
        },
        {
            "nome": "Fulano da Silva",
            "email": "uvfh@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "DrLso0ZCv9mOkDOU"
        },
        {
            "nome": "Fulano da Silva",
            "email": "renvqdui@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "E3pIXmMdToXCEYK1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "roku@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "EJBLYUcRnOwSewhq"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mqdo@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "EnJDohbhbIGVMCfu"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "FCQomyjDMd6hxdtF"
        },
        {
            "nome": "{{nome}}",
            "email": "Joanie@qa.com.br",
            "password": "K_eFdIwXsrEJz4p",
            "administrador": "true",
            "_id": "FoKNpHgLPS2AW6GQ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ebyc@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "Fv6iGelVEi0znNpZ"
        },
        {
            "nome": "{{nome}}",
            "email": "Selina@qa.com.br",
            "password": "mcUUl3X4jcnp91V",
            "administrador": "true",
            "_id": "GNXvkyPiTwIH0h0p"
        },
        {
            "nome": "aprxxatw",
            "email": "aprxxatw@qa.com",
            "password": "aprxxatw",
            "administrador": "false",
            "_id": "GPDk7apRdWwYprxs"
        },
        {
            "nome": "Fulano da Silva",
            "email": "pfow@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "GXkzE75BRF7O81qQ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "gbou@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "HNQfq5FHjAE9ShhF"
        },
        {
            "nome": "Fulano da Silva",
            "email": "vohspdky@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "HPCTuQCwf5UWOqh3"
        },
        {
            "nome": "Fulano da Silva",
            "email": "hduw@emailtest.com",
            "password": "teste",
            "administrador": "true",
            "_id": "HSyHYQ1bEfFk3HP1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "hrrjqvxi@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "HqePOl... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230523 01:04:17.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.173" endtime="20230523 01:04:17.335"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230523 01:04:17.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.335" endtime="20230523 01:04:17.335"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.172" endtime="20230523 01:04:17.336"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230523 01:04:17.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.336" endtime="20230523 01:04:17.337"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230523 01:04:17.337" endtime="20230523 01:04:17.338"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.336" endtime="20230523 01:04:17.338"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230523 01:04:17.339" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230523 01:04:17.338" endtime="20230523 01:04:17.339"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.338" endtime="20230523 01:04:17.339"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230523 01:04:17.171" endtime="20230523 01:04:17.339"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230523 01:04:17.340" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230523 01:04:17.340" endtime="20230523 01:04:17.341"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.340" endtime="20230523 01:04:17.341"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230523 01:04:17.341" level="INFO">${name} = Jessica Roach</msg>
<status status="PASS" starttime="20230523 01:04:17.341" endtime="20230523 01:04:17.341"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230523 01:04:17.342" level="INFO">${email} = michael72@example.com</msg>
<status status="PASS" starttime="20230523 01:04:17.342" endtime="20230523 01:04:17.342"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230523 01:04:17.342" level="INFO">${password} = W6iEttB9nTlM</msg>
<status status="PASS" starttime="20230523 01:04:17.342" endtime="20230523 01:04:17.342"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230523 01:04:17.343" level="INFO">${name} = Jessica Roach</msg>
<status status="PASS" starttime="20230523 01:04:17.343" endtime="20230523 01:04:17.343"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230523 01:04:17.343" level="INFO">${email} = michael72@example.com</msg>
<status status="PASS" starttime="20230523 01:04:17.343" endtime="20230523 01:04:17.343"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230523 01:04:17.343" level="INFO">${password} = W6iEttB9nTlM</msg>
<status status="PASS" starttime="20230523 01:04:17.343" endtime="20230523 01:04:17.344"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.341" endtime="20230523 01:04:17.344"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230523 01:04:17.344" level="INFO">${payload} = {'nome': 'Jessica Roach', 'email': 'michael72@example.com', 'password': 'W6iEttB9nTlM', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230523 01:04:17.344" endtime="20230523 01:04:17.344"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230523 01:04:17.345" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230523 01:04:17.345" endtime="20230523 01:04:17.345"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230523 01:04:17.423" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Jessica Roach", "email": "michael72@example.com", "password": "W6iEttB9nTlM", "administrador": "false"}' 
 </msg>
<msg timestamp="20230523 01:04:17.423" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '66dd85b8-c6fa-42af-afbd-a5e0fb010814', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bf0aaeb8bee2d06e0eb66301193e6bff', 'Date': 'Tue, 23 May 2023 01:04:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "pUMkY0D6qJnpqWXe"
} 
 </msg>
<msg timestamp="20230523 01:04:17.423" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.345" endtime="20230523 01:04:17.424"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230523 01:04:17.424" level="INFO">${user_id} = pUMkY0D6qJnpqWXe</msg>
<status status="PASS" starttime="20230523 01:04:17.424" endtime="20230523 01:04:17.424"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230523 01:04:17.425" level="INFO">${USER_ID} = pUMkY0D6qJnpqWXe</msg>
<status status="PASS" starttime="20230523 01:04:17.425" endtime="20230523 01:04:17.425"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230523 01:04:17.425" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.425" endtime="20230523 01:04:17.425"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.344" endtime="20230523 01:04:17.425"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230523 01:04:17.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.426" endtime="20230523 01:04:17.427"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230523 01:04:17.427" endtime="20230523 01:04:17.427"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.426" endtime="20230523 01:04:17.427"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230523 01:04:17.428" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230523 01:04:17.428" endtime="20230523 01:04:17.428"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.427" endtime="20230523 01:04:17.429"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230523 01:04:17.339" endtime="20230523 01:04:17.429"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230523 01:04:17.430" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230523 01:04:17.430" endtime="20230523 01:04:17.430"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.429" endtime="20230523 01:04:17.430"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230523 01:04:17.507" level="INFO">GET Request : url=https://serverest.dev/usuarios/pUMkY0D6qJnpqWXe 
 path_url=/usuarios/pUMkY0D6qJnpqWXe 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230523 01:04:17.507" level="INFO">GET Response : url=https://serverest.dev/usuarios/pUMkY0D6qJnpqWXe 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9987daff-46b0-4766-a833-bcaa5e3cfc26', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f2285a154ad642f39a36c30ce9db7cf5', 'Date': 'Tue, 23 May 2023 01:04:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Jessica Roach",
    "email": "michael72@example.com",
    "password": "W6iEttB9nTlM",
    "administrador": "false",
    "_id": "pUMkY0D6qJnpqWXe"
} 
 </msg>
<msg timestamp="20230523 01:04:17.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.431" endtime="20230523 01:04:17.508"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230523 01:04:17.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.508" endtime="20230523 01:04:17.508"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.430" endtime="20230523 01:04:17.508"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230523 01:04:17.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.509" endtime="20230523 01:04:17.510"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230523 01:04:17.510" endtime="20230523 01:04:17.510"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.508" endtime="20230523 01:04:17.511"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230523 01:04:17.511" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230523 01:04:17.511" endtime="20230523 01:04:17.511"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.511" endtime="20230523 01:04:17.512"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230523 01:04:17.429" endtime="20230523 01:04:17.512"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230523 01:04:17.513" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230523 01:04:17.513" endtime="20230523 01:04:17.513"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.512" endtime="20230523 01:04:17.513"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230523 01:04:17.514" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230523 01:04:17.514" endtime="20230523 01:04:17.514"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230523 01:04:17.514" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230523 01:04:17.514" endtime="20230523 01:04:17.514"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230523 01:04:17.594" level="INFO">PUT Request : url=https://serverest.dev/usuarios/pUMkY0D6qJnpqWXe 
 path_url=/usuarios/pUMkY0D6qJnpqWXe 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230523 01:04:17.594" level="INFO">PUT Response : url=https://serverest.dev/usuarios/pUMkY0D6qJnpqWXe 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '74b9ace1-3d42-4435-8fcf-7f453a9c0604', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '45dece527e095b7d7e4a2099c94210e7', 'Date': 'Tue, 23 May 2023 01:04:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230523 01:04:17.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.515" endtime="20230523 01:04:17.594"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230523 01:04:17.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.595" endtime="20230523 01:04:17.595"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.513" endtime="20230523 01:04:17.595"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230523 01:04:17.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.595" endtime="20230523 01:04:17.596"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230523 01:04:17.596" endtime="20230523 01:04:17.597"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.595" endtime="20230523 01:04:17.597"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230523 01:04:17.598" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230523 01:04:17.597" endtime="20230523 01:04:17.598"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.597" endtime="20230523 01:04:17.598"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230523 01:04:17.512" endtime="20230523 01:04:17.598"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230523 01:04:17.600" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230523 01:04:17.599" endtime="20230523 01:04:17.600"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.599" endtime="20230523 01:04:17.600"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230523 01:04:17.677" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/pUMkY0D6qJnpqWXe 
 path_url=/usuarios/pUMkY0D6qJnpqWXe 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230523 01:04:17.677" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/pUMkY0D6qJnpqWXe 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'db1e61ca-9758-4240-bd9f-c5e54caa79e6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9b33249e9c7aec29ebb304f07b08e8cd', 'Date': 'Tue, 23 May 2023 01:04:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230523 01:04:17.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.600" endtime="20230523 01:04:17.677"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230523 01:04:17.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.677" endtime="20230523 01:04:17.678"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.600" endtime="20230523 01:04:17.678"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230523 01:04:17.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230523 01:04:17.678" endtime="20230523 01:04:17.679"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230523 01:04:17.679" endtime="20230523 01:04:17.679"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.678" endtime="20230523 01:04:17.680"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230523 01:04:17.680" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230523 01:04:17.680" endtime="20230523 01:04:17.680"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.680" endtime="20230523 01:04:17.681"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230523 01:04:17.599" endtime="20230523 01:04:17.681"/>
</test>
<status status="PASS" starttime="20230523 01:04:16.730" endtime="20230523 01:04:17.681"/>
</suite>
<status status="PASS" starttime="20230523 01:04:16.729" endtime="20230523 01:04:17.682"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230523 01:04:17.692" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230523 01:04:17.692" endtime="20230523 01:04:20.271"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230523 01:04:20.272" endtime="20230523 01:04:20.376"/>
</kw>
<status status="PASS" starttime="20230523 01:04:17.691" endtime="20230523 01:04:20.376"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230523 01:04:20.381" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230523 01:04:20.377" endtime="20230523 01:04:20.381"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:20.383" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230523 01:04:20.381" endtime="20230523 01:04:20.442"/>
</kw>
<status status="PASS" starttime="20230523 01:04:20.376" endtime="20230523 01:04:20.443"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:20.444" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230523 01:04:20.443" endtime="20230523 01:04:20.504"/>
</kw>
<status status="PASS" starttime="20230523 01:04:20.443" endtime="20230523 01:04:20.505"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230523 01:04:20.505" endtime="20230523 01:04:20.738"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230523 01:04:20.756" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230523 01:04:20.738" endtime="20230523 01:04:20.756"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230523 01:04:20.770" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230523 01:04:20.756" endtime="20230523 01:04:20.770"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230523 01:04:20.783" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230523 01:04:20.770" endtime="20230523 01:04:20.783"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230523 01:04:20.795" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230523 01:04:20.783" endtime="20230523 01:04:20.795"/>
</kw>
<status status="PASS" starttime="20230523 01:04:20.505" endtime="20230523 01:04:20.795"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230523 01:04:20.796" endtime="20230523 01:04:20.851"/>
</kw>
<status status="PASS" starttime="20230523 01:04:20.795" endtime="20230523 01:04:20.851"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230523 01:04:17.691" endtime="20230523 01:04:20.851"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230523 01:04:20.853" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230523 01:04:20.852" endtime="20230523 01:04:22.180"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230523 01:04:22.180" endtime="20230523 01:04:22.289"/>
</kw>
<status status="PASS" starttime="20230523 01:04:20.852" endtime="20230523 01:04:22.289"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230523 01:04:22.295" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230523 01:04:22.290" endtime="20230523 01:04:22.295"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:22.295" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230523 01:04:22.295" endtime="20230523 01:04:22.348"/>
</kw>
<status status="PASS" starttime="20230523 01:04:22.290" endtime="20230523 01:04:22.348"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230523 01:04:22.349" level="INFO">${name} = Kelly Powell</msg>
<status status="PASS" starttime="20230523 01:04:22.348" endtime="20230523 01:04:22.349"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230523 01:04:22.350" level="INFO">${email} = julie19@example.net</msg>
<status status="PASS" starttime="20230523 01:04:22.349" endtime="20230523 01:04:22.350"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230523 01:04:22.350" level="INFO">${password} = NgXjY40ln2PU</msg>
<status status="PASS" starttime="20230523 01:04:22.350" endtime="20230523 01:04:22.350"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:22.351" level="INFO">Typing text 'Kelly Powell' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230523 01:04:22.350" endtime="20230523 01:04:22.457"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:22.458" level="INFO">Typing text 'julie19@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230523 01:04:22.457" endtime="20230523 01:04:22.560"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:22.561" level="INFO">Typing text 'NgXjY40ln2PU' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230523 01:04:22.560" endtime="20230523 01:04:22.648"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:22.649" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230523 01:04:22.648" endtime="20230523 01:04:22.720"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230523 01:04:22.721" level="INFO">${name} = Kelly Powell</msg>
<status status="PASS" starttime="20230523 01:04:22.721" endtime="20230523 01:04:22.721"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230523 01:04:22.722" level="INFO">${email} = julie19@example.net</msg>
<status status="PASS" starttime="20230523 01:04:22.721" endtime="20230523 01:04:22.722"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230523 01:04:22.722" level="INFO">${password} = NgXjY40ln2PU</msg>
<status status="PASS" starttime="20230523 01:04:22.722" endtime="20230523 01:04:22.722"/>
</kw>
<status status="PASS" starttime="20230523 01:04:22.348" endtime="20230523 01:04:22.722"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:22.723" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230523 01:04:22.722" endtime="20230523 01:04:22.780"/>
</kw>
<status status="PASS" starttime="20230523 01:04:22.722" endtime="20230523 01:04:22.780"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230523 01:04:22.781" endtime="20230523 01:04:23.010"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230523 01:04:23.027" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230523 01:04:23.010" endtime="20230523 01:04:23.028"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230523 01:04:23.040" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230523 01:04:23.028" endtime="20230523 01:04:23.040"/>
</kw>
<status status="PASS" starttime="20230523 01:04:22.780" endtime="20230523 01:04:23.040"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230523 01:04:23.040" endtime="20230523 01:04:23.095"/>
</kw>
<status status="PASS" starttime="20230523 01:04:23.040" endtime="20230523 01:04:23.096"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230523 01:04:20.851" endtime="20230523 01:04:23.096"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230523 01:04:23.098" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230523 01:04:23.097" endtime="20230523 01:04:24.512"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230523 01:04:24.512" endtime="20230523 01:04:24.615"/>
</kw>
<status status="PASS" starttime="20230523 01:04:23.097" endtime="20230523 01:04:24.615"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230523 01:04:24.621" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230523 01:04:24.616" endtime="20230523 01:04:24.621"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:24.621" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230523 01:04:24.621" endtime="20230523 01:04:24.680"/>
</kw>
<status status="PASS" starttime="20230523 01:04:24.616" endtime="20230523 01:04:24.680"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:24.681" level="INFO">Typing text 'Kelly Powell' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230523 01:04:24.681" endtime="20230523 01:04:24.787"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:24.788" level="INFO">Typing text 'julie19@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230523 01:04:24.787" endtime="20230523 01:04:24.880"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:24.880" level="INFO">Typing text 'NgXjY40ln2PU' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230523 01:04:24.880" endtime="20230523 01:04:24.964"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:24.965" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230523 01:04:24.964" endtime="20230523 01:04:25.032"/>
</kw>
<status status="PASS" starttime="20230523 01:04:24.681" endtime="20230523 01:04:25.032"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230523 01:04:25.033" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230523 01:04:25.033" endtime="20230523 01:04:25.090"/>
</kw>
<status status="PASS" starttime="20230523 01:04:25.032" endtime="20230523 01:04:25.090"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230523 01:04:25.091" endtime="20230523 01:04:25.322"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230523 01:04:25.340" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230523 01:04:25.322" endtime="20230523 01:04:25.340"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230523 01:04:25.352" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230523 01:04:25.340" endtime="20230523 01:04:25.353"/>
</kw>
<status status="PASS" starttime="20230523 01:04:25.090" endtime="20230523 01:04:25.353"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230523 01:04:25.353" endtime="20230523 01:04:25.408"/>
</kw>
<status status="PASS" starttime="20230523 01:04:25.353" endtime="20230523 01:04:25.408"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230523 01:04:23.096" endtime="20230523 01:04:25.408"/>
</test>
<status status="PASS" starttime="20230523 01:04:17.685" endtime="20230523 01:04:25.409"/>
</suite>
<status status="PASS" starttime="20230523 01:04:17.683" endtime="20230523 01:04:25.411"/>
</suite>
<status status="PASS" starttime="20230523 01:04:16.711" endtime="20230523 01:04:25.412"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
