<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 19:33:49.722" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 19:33:50.529" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 19:33:50.529" endtime="20230526 19:33:50.529"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.528" endtime="20230526 19:33:50.529"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 19:33:50.663" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 19:33:50.663" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ba02b618-f40d-4cd9-af03-02b06c79a80c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '42ff66d1e0e9dff8c419a3783889155f;o=1', 'Date': 'Fri, 26 May 2023 19:33:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '925'} 
 body={
    "quantidade": 4,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Richard Gutierrez",
            "email": "jenniferalexander@example.net",
            "password": "RzOmkjZ79S5g",
            "administrador": "true",
            "_id": "IMbqVEzDHAX3Lmys"
        },
        {
            "nome": "Angela Murphy",
            "email": "wesley29@example.org",
            "password": "CxJ2i1Zw3YWa",
            "administrador": "true",
            "_id": "Ump2hm3ovYJnPsVy"
        },
        {
            "nome": "Albert Fernandez",
            "email": "trodriguez@example.net",
            "password": "wYZQl6IcM65e",
            "administrador": "true",
            "_id": "ntSGqW8LBwVTH2kE"
        }
    ]
} 
 </msg>
<msg timestamp="20230526 19:33:50.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.530" endtime="20230526 19:33:50.663"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 19:33:50.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.663" endtime="20230526 19:33:50.663"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.530" endtime="20230526 19:33:50.664"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 19:33:50.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.664" endtime="20230526 19:33:50.665"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 19:33:50.665" endtime="20230526 19:33:50.665"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.664" endtime="20230526 19:33:50.666"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 19:33:50.666" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 19:33:50.666" endtime="20230526 19:33:50.666"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.666" endtime="20230526 19:33:50.667"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 19:33:50.528" endtime="20230526 19:33:50.667"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 19:33:50.668" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 19:33:50.668" endtime="20230526 19:33:50.669"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.668" endtime="20230526 19:33:50.669"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 19:33:50.670" level="INFO">${name} = Jessica Sims</msg>
<status status="PASS" starttime="20230526 19:33:50.669" endtime="20230526 19:33:50.670"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 19:33:50.670" level="INFO">${email} = shannon71@example.net</msg>
<status status="PASS" starttime="20230526 19:33:50.670" endtime="20230526 19:33:50.670"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 19:33:50.671" level="INFO">${password} = P4zFEgmyPGJD</msg>
<status status="PASS" starttime="20230526 19:33:50.670" endtime="20230526 19:33:50.671"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 19:33:50.671" level="INFO">${name} = Jessica Sims</msg>
<status status="PASS" starttime="20230526 19:33:50.671" endtime="20230526 19:33:50.671"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 19:33:50.671" level="INFO">${email} = shannon71@example.net</msg>
<status status="PASS" starttime="20230526 19:33:50.671" endtime="20230526 19:33:50.671"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 19:33:50.672" level="INFO">${password} = P4zFEgmyPGJD</msg>
<status status="PASS" starttime="20230526 19:33:50.671" endtime="20230526 19:33:50.672"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.669" endtime="20230526 19:33:50.672"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 19:33:50.673" level="INFO">${payload} = {'nome': 'Jessica Sims', 'email': 'shannon71@example.net', 'password': 'P4zFEgmyPGJD', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 19:33:50.672" endtime="20230526 19:33:50.673"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 19:33:50.673" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 19:33:50.673" endtime="20230526 19:33:50.673"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 19:33:50.753" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Jessica Sims", "email": "shannon71@example.net", "password": "P4zFEgmyPGJD", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 19:33:50.753" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f17c6392-f09a-4ccf-9ba8-2f2fe8ef4972', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '440ec8de2f5819c57aa117a71dc825ed', 'Date': 'Fri, 26 May 2023 19:33:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "NwZ1r5ZzZrUPkhIe"
} 
 </msg>
<msg timestamp="20230526 19:33:50.753" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.673" endtime="20230526 19:33:50.754"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 19:33:50.754" level="INFO">${user_id} = NwZ1r5ZzZrUPkhIe</msg>
<status status="PASS" starttime="20230526 19:33:50.754" endtime="20230526 19:33:50.754"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 19:33:50.755" level="INFO">${USER_ID} = NwZ1r5ZzZrUPkhIe</msg>
<status status="PASS" starttime="20230526 19:33:50.755" endtime="20230526 19:33:50.755"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 19:33:50.755" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.755" endtime="20230526 19:33:50.755"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.672" endtime="20230526 19:33:50.755"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 19:33:50.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.756" endtime="20230526 19:33:50.756"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 19:33:50.757" endtime="20230526 19:33:50.757"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.756" endtime="20230526 19:33:50.757"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 19:33:50.758" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 19:33:50.758" endtime="20230526 19:33:50.758"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.757" endtime="20230526 19:33:50.758"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 19:33:50.667" endtime="20230526 19:33:50.758"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 19:33:50.760" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 19:33:50.760" endtime="20230526 19:33:50.760"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.760" endtime="20230526 19:33:50.761"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 19:33:50.863" level="INFO">GET Request : url=https://serverest.dev/usuarios/NwZ1r5ZzZrUPkhIe 
 path_url=/usuarios/NwZ1r5ZzZrUPkhIe 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 19:33:50.863" level="INFO">GET Response : url=https://serverest.dev/usuarios/NwZ1r5ZzZrUPkhIe 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ab106ff9-6adc-4f78-b7c1-a259a474d3a6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e0a1c05611c2431019b97ab34232c08f', 'Date': 'Fri, 26 May 2023 19:33:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Jessica Sims",
    "email": "shannon71@example.net",
    "password": "P4zFEgmyPGJD",
    "administrador": "false",
    "_id": "NwZ1r5ZzZrUPkhIe"
} 
 </msg>
<msg timestamp="20230526 19:33:50.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.761" endtime="20230526 19:33:50.863"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 19:33:50.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.863" endtime="20230526 19:33:50.864"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.761" endtime="20230526 19:33:50.864"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 19:33:50.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.864" endtime="20230526 19:33:50.865"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 19:33:50.865" endtime="20230526 19:33:50.866"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.864" endtime="20230526 19:33:50.866"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 19:33:50.867" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 19:33:50.866" endtime="20230526 19:33:50.867"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.866" endtime="20230526 19:33:50.867"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 19:33:50.759" endtime="20230526 19:33:50.867"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 19:33:50.868" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 19:33:50.868" endtime="20230526 19:33:50.869"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.868" endtime="20230526 19:33:50.869"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 19:33:50.869" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 19:33:50.869" endtime="20230526 19:33:50.869"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 19:33:50.870" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 19:33:50.869" endtime="20230526 19:33:50.870"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 19:33:50.949" level="INFO">PUT Request : url=https://serverest.dev/usuarios/NwZ1r5ZzZrUPkhIe 
 path_url=/usuarios/NwZ1r5ZzZrUPkhIe 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 19:33:50.949" level="INFO">PUT Response : url=https://serverest.dev/usuarios/NwZ1r5ZzZrUPkhIe 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0b71ac3d-7a5b-4da3-bf03-df76640d7b4e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9e0426bebf2d2ee4bd4240452d527205', 'Date': 'Fri, 26 May 2023 19:33:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 19:33:50.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.870" endtime="20230526 19:33:50.949"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 19:33:50.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.950" endtime="20230526 19:33:50.950"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.869" endtime="20230526 19:33:50.950"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 19:33:50.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.951" endtime="20230526 19:33:50.951"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 19:33:50.951" endtime="20230526 19:33:50.952"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.950" endtime="20230526 19:33:50.952"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 19:33:50.953" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 19:33:50.952" endtime="20230526 19:33:50.953"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.952" endtime="20230526 19:33:50.953"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 19:33:50.867" endtime="20230526 19:33:50.953"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 19:33:50.954" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 19:33:50.954" endtime="20230526 19:33:50.955"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.954" endtime="20230526 19:33:50.955"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 19:33:51.033" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/NwZ1r5ZzZrUPkhIe 
 path_url=/usuarios/NwZ1r5ZzZrUPkhIe 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 19:33:51.033" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/NwZ1r5ZzZrUPkhIe 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5fd9ad98-2fac-44d5-af17-12b8246b27d1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dac05afce0d2e61fb5f0ede365fe8495', 'Date': 'Fri, 26 May 2023 19:33:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 19:33:51.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:50.955" endtime="20230526 19:33:51.033"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 19:33:51.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 19:33:51.034" endtime="20230526 19:33:51.034"/>
</kw>
<status status="PASS" starttime="20230526 19:33:50.955" endtime="20230526 19:33:51.034"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 19:33:51.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 19:33:51.034" endtime="20230526 19:33:51.035"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 19:33:51.035" endtime="20230526 19:33:51.036"/>
</kw>
<status status="PASS" starttime="20230526 19:33:51.034" endtime="20230526 19:33:51.036"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 19:33:51.037" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 19:33:51.036" endtime="20230526 19:33:51.037"/>
</kw>
<status status="PASS" starttime="20230526 19:33:51.036" endtime="20230526 19:33:51.037"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 19:33:50.954" endtime="20230526 19:33:51.037"/>
</test>
<status status="PASS" starttime="20230526 19:33:49.742" endtime="20230526 19:33:51.038"/>
</suite>
<status status="PASS" starttime="20230526 19:33:49.741" endtime="20230526 19:33:51.039"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 19:33:51.049" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 19:33:51.048" endtime="20230526 19:34:09.698"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 19:34:09.699" endtime="20230526 19:34:09.853"/>
</kw>
<status status="PASS" starttime="20230526 19:33:51.048" endtime="20230526 19:34:09.854"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 19:34:09.862" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 19:34:09.854" endtime="20230526 19:34:09.862"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:09.863" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 19:34:09.862" endtime="20230526 19:34:10.204"/>
</kw>
<status status="PASS" starttime="20230526 19:34:09.854" endtime="20230526 19:34:10.205"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:10.206" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 19:34:10.205" endtime="20230526 19:34:10.468"/>
</kw>
<status status="PASS" starttime="20230526 19:34:10.205" endtime="20230526 19:34:10.468"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 19:34:10.469" endtime="20230526 19:34:10.732"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 19:34:10.750" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 19:34:10.732" endtime="20230526 19:34:10.750"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 19:34:10.825" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 19:34:10.750" endtime="20230526 19:34:10.825"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 19:34:10.838" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 19:34:10.826" endtime="20230526 19:34:10.838"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 19:34:10.851" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 19:34:10.839" endtime="20230526 19:34:10.851"/>
</kw>
<status status="PASS" starttime="20230526 19:34:10.468" endtime="20230526 19:34:10.851"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 19:34:10.852" endtime="20230526 19:34:10.907"/>
</kw>
<status status="PASS" starttime="20230526 19:34:10.851" endtime="20230526 19:34:10.907"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 19:33:51.047" endtime="20230526 19:34:10.907"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 19:34:10.909" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 19:34:10.908" endtime="20230526 19:34:12.414"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 19:34:12.415" endtime="20230526 19:34:12.519"/>
</kw>
<status status="PASS" starttime="20230526 19:34:10.908" endtime="20230526 19:34:12.520"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 19:34:12.525" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 19:34:12.520" endtime="20230526 19:34:12.525"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:12.526" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 19:34:12.525" endtime="20230526 19:34:12.580"/>
</kw>
<status status="PASS" starttime="20230526 19:34:12.520" endtime="20230526 19:34:12.580"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 19:34:12.581" level="INFO">${name} = Jeremy Cantu</msg>
<status status="PASS" starttime="20230526 19:34:12.580" endtime="20230526 19:34:12.581"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 19:34:12.582" level="INFO">${email} = frankcolin@example.com</msg>
<status status="PASS" starttime="20230526 19:34:12.581" endtime="20230526 19:34:12.582"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 19:34:12.582" level="INFO">${password} = O3MG3rWIyaZt</msg>
<status status="PASS" starttime="20230526 19:34:12.582" endtime="20230526 19:34:12.582"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:12.583" level="INFO">Typing text 'Jeremy Cantu' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 19:34:12.582" endtime="20230526 19:34:12.784"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:12.785" level="INFO">Typing text 'frankcolin@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 19:34:12.785" endtime="20230526 19:34:12.984"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:12.985" level="INFO">Typing text 'O3MG3rWIyaZt' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 19:34:12.984" endtime="20230526 19:34:13.111"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:13.112" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 19:34:13.111" endtime="20230526 19:34:13.199"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 19:34:13.200" level="INFO">${name} = Jeremy Cantu</msg>
<status status="PASS" starttime="20230526 19:34:13.199" endtime="20230526 19:34:13.200"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 19:34:13.200" level="INFO">${email} = frankcolin@example.com</msg>
<status status="PASS" starttime="20230526 19:34:13.200" endtime="20230526 19:34:13.200"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 19:34:13.201" level="INFO">${password} = O3MG3rWIyaZt</msg>
<status status="PASS" starttime="20230526 19:34:13.200" endtime="20230526 19:34:13.201"/>
</kw>
<status status="PASS" starttime="20230526 19:34:12.580" endtime="20230526 19:34:13.201"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:13.202" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 19:34:13.201" endtime="20230526 19:34:13.259"/>
</kw>
<status status="PASS" starttime="20230526 19:34:13.201" endtime="20230526 19:34:13.259"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 19:34:13.259" endtime="20230526 19:34:13.491"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 19:34:13.508" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 19:34:13.491" endtime="20230526 19:34:13.508"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 19:34:13.521" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 19:34:13.509" endtime="20230526 19:34:13.521"/>
</kw>
<status status="PASS" starttime="20230526 19:34:13.259" endtime="20230526 19:34:13.521"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 19:34:13.522" endtime="20230526 19:34:13.577"/>
</kw>
<status status="PASS" starttime="20230526 19:34:13.521" endtime="20230526 19:34:13.577"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 19:34:10.907" endtime="20230526 19:34:13.577"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 19:34:13.579" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 19:34:13.578" endtime="20230526 19:34:14.968"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 19:34:14.969" endtime="20230526 19:34:15.072"/>
</kw>
<status status="PASS" starttime="20230526 19:34:13.578" endtime="20230526 19:34:15.072"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 19:34:15.077" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 19:34:15.073" endtime="20230526 19:34:15.077"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:15.078" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 19:34:15.077" endtime="20230526 19:34:15.132"/>
</kw>
<status status="PASS" starttime="20230526 19:34:15.072" endtime="20230526 19:34:15.132"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:15.133" level="INFO">Typing text 'Jeremy Cantu' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 19:34:15.133" endtime="20230526 19:34:15.240"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:15.241" level="INFO">Typing text 'frankcolin@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 19:34:15.241" endtime="20230526 19:34:15.335"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:15.336" level="INFO">Typing text 'O3MG3rWIyaZt' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 19:34:15.335" endtime="20230526 19:34:15.424"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:15.425" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 19:34:15.424" endtime="20230526 19:34:15.494"/>
</kw>
<status status="PASS" starttime="20230526 19:34:15.132" endtime="20230526 19:34:15.495"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 19:34:15.496" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 19:34:15.495" endtime="20230526 19:34:15.551"/>
</kw>
<status status="PASS" starttime="20230526 19:34:15.495" endtime="20230526 19:34:15.551"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 19:34:15.552" endtime="20230526 19:34:15.782"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 19:34:15.800" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 19:34:15.783" endtime="20230526 19:34:15.801"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 19:34:15.813" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 19:34:15.801" endtime="20230526 19:34:15.814"/>
</kw>
<status status="PASS" starttime="20230526 19:34:15.552" endtime="20230526 19:34:15.814"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 19:34:15.814" endtime="20230526 19:34:15.870"/>
</kw>
<status status="PASS" starttime="20230526 19:34:15.814" endtime="20230526 19:34:15.870"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 19:34:13.578" endtime="20230526 19:34:15.870"/>
</test>
<status status="PASS" starttime="20230526 19:33:51.041" endtime="20230526 19:34:15.871"/>
</suite>
<status status="PASS" starttime="20230526 19:33:51.039" endtime="20230526 19:34:15.872"/>
</suite>
<status status="PASS" starttime="20230526 19:33:49.722" endtime="20230526 19:34:15.873"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
