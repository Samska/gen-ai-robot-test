<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.18 on linux)" generated="20230912 00:09:51.915" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230912 00:09:52.502" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230912 00:09:52.502" endtime="20230912 00:09:52.503"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.501" endtime="20230912 00:09:52.503"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230912 00:09:52.744" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230912 00:09:52.744" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '589b0cca479a7924f1360a9707899acb;o=1', 'Date': 'Tue, 12 Sep 2023 00:09:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '464'} 
 body={
    "quantidade": 2,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "2aEC4Qnq16BYcWW4"
        }
    ]
} 
 </msg>
<msg timestamp="20230912 00:09:52.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:52.503" endtime="20230912 00:09:52.744"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230912 00:09:52.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:52.745" endtime="20230912 00:09:52.745"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.503" endtime="20230912 00:09:52.746"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230912 00:09:52.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 00:09:52.747" endtime="20230912 00:09:52.748"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230912 00:09:52.748" endtime="20230912 00:09:52.750"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.746" endtime="20230912 00:09:52.750"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230912 00:09:52.752" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230912 00:09:52.750" endtime="20230912 00:09:52.752"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.750" endtime="20230912 00:09:52.752"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230912 00:09:52.500" endtime="20230912 00:09:52.752"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230912 00:09:52.754" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230912 00:09:52.753" endtime="20230912 00:09:52.754"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.753" endtime="20230912 00:09:52.754"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230912 00:09:52.755" level="INFO">${name} = Paul Hall</msg>
<status status="PASS" starttime="20230912 00:09:52.755" endtime="20230912 00:09:52.755"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230912 00:09:52.756" level="INFO">${email} = jonhall@example.org</msg>
<status status="PASS" starttime="20230912 00:09:52.755" endtime="20230912 00:09:52.756"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230912 00:09:52.757" level="INFO">${password} = 4C8Snbl7eoTp</msg>
<status status="PASS" starttime="20230912 00:09:52.756" endtime="20230912 00:09:52.757"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 00:09:52.757" level="INFO">${name} = Paul Hall</msg>
<status status="PASS" starttime="20230912 00:09:52.757" endtime="20230912 00:09:52.757"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 00:09:52.758" level="INFO">${email} = jonhall@example.org</msg>
<status status="PASS" starttime="20230912 00:09:52.757" endtime="20230912 00:09:52.758"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 00:09:52.758" level="INFO">${password} = 4C8Snbl7eoTp</msg>
<status status="PASS" starttime="20230912 00:09:52.758" endtime="20230912 00:09:52.758"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.754" endtime="20230912 00:09:52.758"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230912 00:09:52.759" level="INFO">${payload} = {'nome': 'Paul Hall', 'email': 'jonhall@example.org', 'password': '4C8Snbl7eoTp', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230912 00:09:52.759" endtime="20230912 00:09:52.759"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230912 00:09:52.760" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230912 00:09:52.759" endtime="20230912 00:09:52.760"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230912 00:09:52.871" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '107'} 
 body=b'{"nome": "Paul Hall", "email": "jonhall@example.org", "password": "4C8Snbl7eoTp", "administrador": "false"}' 
 </msg>
<msg timestamp="20230912 00:09:52.872" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '085db4214564d9c4e5acd5c1afad7bb1', 'Date': 'Tue, 12 Sep 2023 00:09:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "K4KYeq8obvV4JCbg"
} 
 </msg>
<msg timestamp="20230912 00:09:52.872" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:52.760" endtime="20230912 00:09:52.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230912 00:09:52.874" level="INFO">${user_id} = K4KYeq8obvV4JCbg</msg>
<status status="PASS" starttime="20230912 00:09:52.872" endtime="20230912 00:09:52.874"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230912 00:09:52.874" level="INFO">${USER_ID} = K4KYeq8obvV4JCbg</msg>
<status status="PASS" starttime="20230912 00:09:52.874" endtime="20230912 00:09:52.874"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230912 00:09:52.875" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:52.875" endtime="20230912 00:09:52.875"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.758" endtime="20230912 00:09:52.875"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230912 00:09:52.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 00:09:52.875" endtime="20230912 00:09:52.876"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230912 00:09:52.876" endtime="20230912 00:09:52.877"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.875" endtime="20230912 00:09:52.877"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230912 00:09:52.878" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230912 00:09:52.878" endtime="20230912 00:09:52.878"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.877" endtime="20230912 00:09:52.878"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230912 00:09:52.753" endtime="20230912 00:09:52.879"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230912 00:09:52.880" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230912 00:09:52.880" endtime="20230912 00:09:52.881"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.880" endtime="20230912 00:09:52.881"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230912 00:09:52.988" level="INFO">GET Request : url=https://serverest.dev/usuarios/K4KYeq8obvV4JCbg 
 path_url=/usuarios/K4KYeq8obvV4JCbg 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230912 00:09:52.988" level="INFO">GET Response : url=https://serverest.dev/usuarios/K4KYeq8obvV4JCbg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '76f9c841774d1bcebedef120301b194e', 'Date': 'Tue, 12 Sep 2023 00:09:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '156'} 
 body={
    "nome": "Paul Hall",
    "email": "jonhall@example.org",
    "password": "4C8Snbl7eoTp",
    "administrador": "false",
    "_id": "K4KYeq8obvV4JCbg"
} 
 </msg>
<msg timestamp="20230912 00:09:52.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:52.881" endtime="20230912 00:09:52.988"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230912 00:09:52.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:52.988" endtime="20230912 00:09:52.989"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.881" endtime="20230912 00:09:52.989"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230912 00:09:52.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 00:09:52.990" endtime="20230912 00:09:52.992"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230912 00:09:52.992" endtime="20230912 00:09:52.994"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.990" endtime="20230912 00:09:52.994"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230912 00:09:52.996" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230912 00:09:52.995" endtime="20230912 00:09:52.996"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.994" endtime="20230912 00:09:52.996"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230912 00:09:52.879" endtime="20230912 00:09:52.996"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230912 00:09:52.998" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230912 00:09:52.998" endtime="20230912 00:09:52.998"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.997" endtime="20230912 00:09:52.998"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230912 00:09:52.999" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230912 00:09:52.999" endtime="20230912 00:09:52.999"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230912 00:09:52.999" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230912 00:09:52.999" endtime="20230912 00:09:53.000"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230912 00:09:53.105" level="INFO">PUT Request : url=https://serverest.dev/usuarios/K4KYeq8obvV4JCbg 
 path_url=/usuarios/K4KYeq8obvV4JCbg 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230912 00:09:53.106" level="INFO">PUT Response : url=https://serverest.dev/usuarios/K4KYeq8obvV4JCbg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3617b22f054c33ac0ae3ae4911532f97', 'Date': 'Tue, 12 Sep 2023 00:09:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230912 00:09:53.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:53.000" endtime="20230912 00:09:53.106"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230912 00:09:53.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:53.106" endtime="20230912 00:09:53.107"/>
</kw>
<status status="PASS" starttime="20230912 00:09:52.998" endtime="20230912 00:09:53.107"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230912 00:09:53.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 00:09:53.108" endtime="20230912 00:09:53.109"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230912 00:09:53.109" endtime="20230912 00:09:53.110"/>
</kw>
<status status="PASS" starttime="20230912 00:09:53.107" endtime="20230912 00:09:53.110"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230912 00:09:53.111" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230912 00:09:53.110" endtime="20230912 00:09:53.111"/>
</kw>
<status status="PASS" starttime="20230912 00:09:53.110" endtime="20230912 00:09:53.111"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230912 00:09:52.997" endtime="20230912 00:09:53.111"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230912 00:09:53.113" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230912 00:09:53.113" endtime="20230912 00:09:53.113"/>
</kw>
<status status="PASS" starttime="20230912 00:09:53.112" endtime="20230912 00:09:53.113"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230912 00:09:53.228" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/K4KYeq8obvV4JCbg 
 path_url=/usuarios/K4KYeq8obvV4JCbg 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230912 00:09:53.228" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/K4KYeq8obvV4JCbg 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f4b0d1ea73b01d04d675edd8216a4aee', 'Date': 'Tue, 12 Sep 2023 00:09:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230912 00:09:53.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:53.114" endtime="20230912 00:09:53.228"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230912 00:09:53.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230912 00:09:53.229" endtime="20230912 00:09:53.229"/>
</kw>
<status status="PASS" starttime="20230912 00:09:53.113" endtime="20230912 00:09:53.229"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230912 00:09:53.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230912 00:09:53.230" endtime="20230912 00:09:53.231"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230912 00:09:53.231" endtime="20230912 00:09:53.232"/>
</kw>
<status status="PASS" starttime="20230912 00:09:53.230" endtime="20230912 00:09:53.232"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230912 00:09:53.233" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230912 00:09:53.233" endtime="20230912 00:09:53.233"/>
</kw>
<status status="PASS" starttime="20230912 00:09:53.232" endtime="20230912 00:09:53.233"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230912 00:09:53.112" endtime="20230912 00:09:53.234"/>
</test>
<status status="PASS" starttime="20230912 00:09:51.941" endtime="20230912 00:09:53.234"/>
</suite>
<status status="PASS" starttime="20230912 00:09:51.939" endtime="20230912 00:09:53.236"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230912 00:09:53.249" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230912 00:09:53.249" endtime="20230912 00:09:55.729"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230912 00:09:55.729" endtime="20230912 00:09:55.836"/>
</kw>
<status status="PASS" starttime="20230912 00:09:53.248" endtime="20230912 00:09:55.836"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230912 00:09:55.853" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230912 00:09:55.837" endtime="20230912 00:09:55.853"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:55.854" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230912 00:09:55.853" endtime="20230912 00:09:55.964"/>
</kw>
<status status="PASS" starttime="20230912 00:09:55.836" endtime="20230912 00:09:55.964"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:55.965" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230912 00:09:55.964" endtime="20230912 00:09:56.040"/>
</kw>
<status status="PASS" starttime="20230912 00:09:55.964" endtime="20230912 00:09:56.041"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230912 00:09:56.041" endtime="20230912 00:09:56.283"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230912 00:09:56.317" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230912 00:09:56.283" endtime="20230912 00:09:56.317"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230912 00:09:56.343" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230912 00:09:56.317" endtime="20230912 00:09:56.344"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230912 00:09:56.368" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230912 00:09:56.344" endtime="20230912 00:09:56.368"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230912 00:09:56.385" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230912 00:09:56.368" endtime="20230912 00:09:56.385"/>
</kw>
<status status="PASS" starttime="20230912 00:09:56.041" endtime="20230912 00:09:56.385"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230912 00:09:56.386" endtime="20230912 00:09:56.443"/>
</kw>
<status status="PASS" starttime="20230912 00:09:56.386" endtime="20230912 00:09:56.443"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230912 00:09:53.248" endtime="20230912 00:09:56.443"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230912 00:09:56.446" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230912 00:09:56.445" endtime="20230912 00:09:57.508"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230912 00:09:57.509" endtime="20230912 00:09:57.614"/>
</kw>
<status status="PASS" starttime="20230912 00:09:56.445" endtime="20230912 00:09:57.614"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230912 00:09:57.622" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230912 00:09:57.616" endtime="20230912 00:09:57.622"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:57.623" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230912 00:09:57.622" endtime="20230912 00:09:57.722"/>
</kw>
<status status="PASS" starttime="20230912 00:09:57.615" endtime="20230912 00:09:57.722"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230912 00:09:57.723" level="INFO">${name} = Rose House</msg>
<status status="PASS" starttime="20230912 00:09:57.722" endtime="20230912 00:09:57.723"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230912 00:09:57.724" level="INFO">${email} = stevenstephens@example.net</msg>
<status status="PASS" starttime="20230912 00:09:57.723" endtime="20230912 00:09:57.724"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230912 00:09:57.725" level="INFO">${password} = 7SyNU1u81QcN</msg>
<status status="PASS" starttime="20230912 00:09:57.724" endtime="20230912 00:09:57.725"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:57.726" level="INFO">Typing text 'Rose House' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230912 00:09:57.725" endtime="20230912 00:09:57.868"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:57.869" level="INFO">Typing text 'stevenstephens@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230912 00:09:57.868" endtime="20230912 00:09:58.003"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:58.004" level="INFO">Typing text '7SyNU1u81QcN' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230912 00:09:58.004" endtime="20230912 00:09:58.130"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:58.131" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230912 00:09:58.130" endtime="20230912 00:09:58.222"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 00:09:58.223" level="INFO">${name} = Rose House</msg>
<status status="PASS" starttime="20230912 00:09:58.223" endtime="20230912 00:09:58.223"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 00:09:58.224" level="INFO">${email} = stevenstephens@example.net</msg>
<status status="PASS" starttime="20230912 00:09:58.223" endtime="20230912 00:09:58.224"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230912 00:09:58.225" level="INFO">${password} = 7SyNU1u81QcN</msg>
<status status="PASS" starttime="20230912 00:09:58.224" endtime="20230912 00:09:58.225"/>
</kw>
<status status="PASS" starttime="20230912 00:09:57.722" endtime="20230912 00:09:58.225"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:58.226" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230912 00:09:58.225" endtime="20230912 00:09:58.295"/>
</kw>
<status status="PASS" starttime="20230912 00:09:58.225" endtime="20230912 00:09:58.295"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230912 00:09:58.296" endtime="20230912 00:09:58.540"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230912 00:09:58.564" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230912 00:09:58.541" endtime="20230912 00:09:58.564"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230912 00:09:58.579" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230912 00:09:58.564" endtime="20230912 00:09:58.579"/>
</kw>
<status status="PASS" starttime="20230912 00:09:58.295" endtime="20230912 00:09:58.579"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230912 00:09:58.580" endtime="20230912 00:09:58.637"/>
</kw>
<status status="PASS" starttime="20230912 00:09:58.580" endtime="20230912 00:09:58.637"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230912 00:09:56.444" endtime="20230912 00:09:58.637"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230912 00:09:58.641" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230912 00:09:58.640" endtime="20230912 00:09:59.641"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230912 00:09:59.642" endtime="20230912 00:09:59.747"/>
</kw>
<status status="PASS" starttime="20230912 00:09:58.639" endtime="20230912 00:09:59.747"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230912 00:09:59.755" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230912 00:09:59.748" endtime="20230912 00:09:59.755"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:59.756" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230912 00:09:59.755" endtime="20230912 00:09:59.826"/>
</kw>
<status status="PASS" starttime="20230912 00:09:59.747" endtime="20230912 00:09:59.826"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:59.828" level="INFO">Typing text 'Rose House' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230912 00:09:59.827" endtime="20230912 00:09:59.991"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230912 00:09:59.992" level="INFO">Typing text 'stevenstephens@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230912 00:09:59.992" endtime="20230912 00:10:00.121"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230912 00:10:00.122" level="INFO">Typing text '7SyNU1u81QcN' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230912 00:10:00.121" endtime="20230912 00:10:00.245"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230912 00:10:00.246" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230912 00:10:00.245" endtime="20230912 00:10:00.338"/>
</kw>
<status status="PASS" starttime="20230912 00:09:59.827" endtime="20230912 00:10:00.338"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230912 00:10:00.339" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230912 00:10:00.339" endtime="20230912 00:10:00.410"/>
</kw>
<status status="PASS" starttime="20230912 00:10:00.338" endtime="20230912 00:10:00.410"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230912 00:10:00.411" endtime="20230912 00:10:00.652"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230912 00:10:00.674" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230912 00:10:00.652" endtime="20230912 00:10:00.675"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230912 00:10:00.691" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230912 00:10:00.675" endtime="20230912 00:10:00.691"/>
</kw>
<status status="PASS" starttime="20230912 00:10:00.410" endtime="20230912 00:10:00.691"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230912 00:10:00.692" endtime="20230912 00:10:00.747"/>
</kw>
<status status="PASS" starttime="20230912 00:10:00.691" endtime="20230912 00:10:00.747"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230912 00:09:58.639" endtime="20230912 00:10:00.747"/>
</test>
<status status="PASS" starttime="20230912 00:09:53.239" endtime="20230912 00:10:00.748"/>
</suite>
<status status="PASS" starttime="20230912 00:09:53.236" endtime="20230912 00:10:00.751"/>
</suite>
<status status="PASS" starttime="20230912 00:09:51.916" endtime="20230912 00:10:00.753"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
