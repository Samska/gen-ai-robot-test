<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 21:05:38.145" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:05:38.711" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:05:38.710" endtime="20230526 21:05:38.711"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.710" endtime="20230526 21:05:38.711"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:05:38.847" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:05:38.847" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '079afb58-8d39-4603-a054-0e767a9c20f7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1f96eacd9035aa9364f25de2a0e3d818;o=1', 'Date': 'Fri, 26 May 2023 21:05:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '2641'} 
 body={
    "quantidade": 12,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Nichole White",
            "email": "garciastephen@example.com",
            "password": "mSEXXw1MQ1q2",
            "administrador": "true",
            "_id": "8DygXGzSxgFKifQv"
        },
        {
            "nome": "Carol Smith",
            "email": "yguzman@example.com",
            "password": "Z8OOhg3tOyqQ",
            "administrador": "true",
            "_id": "HXPaxOE28NFgzgJh"
        },
        {
            "nome": "Lawrence Hanson",
            "email": "michelle11@example.org",
            "password": "7feQ4sbxy6Ie",
            "administrador": "true",
            "_id": "MgBVcaaQYuq5SEYk"
        },
        {
            "nome": "sadas",
            "email": "mill2@mil.com",
            "password": "123",
            "administrador": "true",
            "_id": "OvyYUousDsG4JYeX"
        },
        {
            "nome": "Mr. Matthew Collins",
            "email": "wanglauren@example.org",
            "password": "xIuLyrW2E8fs",
            "administrador": "true",
            "_id": "Pd9cZNjcG1eWfUMQ"
        },
        {
            "nome": "Cody Valentine",
            "email": "todd72@example.org",
            "password": "do58Eoup2qUy",
            "administrador": "true",
            "_id": "T2V5t8ZpKz0PTqGQ"
        },
        {
            "nome": "Brendan George",
            "email": "leslie86@example.com",
            "password": "1GiqcZl305aG",
            "administrador": "true",
            "_id": "TMKqdrqnRTNFOyht"
        },
        {
            "nome": "Hayley Byrd",
            "email": "kimberlymartin@example.com",
            "password": "q78F3X1rG3oF",
            "administrador": "true",
            "_id": "bLBFKECXSYeoPEjz"
        },
        {
            "nome": "Sheila Esparza",
            "email": "ycarter@example.org",
            "password": "gX9w2NckaW0K",
            "administrador": "true",
            "_id": "jSiHSVUpLmNpts8M"
        },
        {
            "nome": "Juan Reese",
            "email": "stephen03@example.com",
            "password": "STxJqTlLO5Ok",
            "administrador": "true",
            "_id": "v1MH0Jry6qPgJ0Gd"
        },
        {
            "nome": "Kyle Cooper",
            "email": "yflores@example.org",
            "password": "k7JpINT2Qek2",
            "administrador": "true",
            "_id": "vbb2T2tN8byhWgGI"
        }
    ]
} 
 </msg>
<msg timestamp="20230526 21:05:38.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:38.712" endtime="20230526 21:05:38.848"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:05:38.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:38.848" endtime="20230526 21:05:38.848"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.711" endtime="20230526 21:05:38.848"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:05:38.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:05:38.849" endtime="20230526 21:05:38.850"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:05:38.850" endtime="20230526 21:05:38.850"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.849" endtime="20230526 21:05:38.851"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:05:38.851" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:05:38.851" endtime="20230526 21:05:38.852"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.851" endtime="20230526 21:05:38.852"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:05:38.709" endtime="20230526 21:05:38.852"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:05:38.853" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:05:38.853" endtime="20230526 21:05:38.854"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.853" endtime="20230526 21:05:38.854"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:05:38.855" level="INFO">${name} = Tiffany Floyd</msg>
<status status="PASS" starttime="20230526 21:05:38.854" endtime="20230526 21:05:38.855"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:05:38.855" level="INFO">${email} = johngilbert@example.com</msg>
<status status="PASS" starttime="20230526 21:05:38.855" endtime="20230526 21:05:38.855"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:05:38.856" level="INFO">${password} = o48Nvhy9ARJS</msg>
<status status="PASS" starttime="20230526 21:05:38.855" endtime="20230526 21:05:38.856"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:05:38.856" level="INFO">${name} = Tiffany Floyd</msg>
<status status="PASS" starttime="20230526 21:05:38.856" endtime="20230526 21:05:38.856"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:05:38.856" level="INFO">${email} = johngilbert@example.com</msg>
<status status="PASS" starttime="20230526 21:05:38.856" endtime="20230526 21:05:38.856"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:05:38.857" level="INFO">${password} = o48Nvhy9ARJS</msg>
<status status="PASS" starttime="20230526 21:05:38.857" endtime="20230526 21:05:38.857"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.854" endtime="20230526 21:05:38.857"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:05:38.858" level="INFO">${payload} = {'nome': 'Tiffany Floyd', 'email': 'johngilbert@example.com', 'password': 'o48Nvhy9ARJS', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:05:38.857" endtime="20230526 21:05:38.858"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:05:38.858" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:05:38.858" endtime="20230526 21:05:38.858"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:05:38.924" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Tiffany Floyd", "email": "johngilbert@example.com", "password": "o48Nvhy9ARJS", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:05:38.925" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f49a916c-3ce9-45ef-a2fa-1b315687c9b8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'afae90fcee59f32cb52852a1c46f9faf', 'Date': 'Fri, 26 May 2023 21:05:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "CRBJzxrEMwKIh5zn"
} 
 </msg>
<msg timestamp="20230526 21:05:38.925" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:38.858" endtime="20230526 21:05:38.925"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 21:05:38.926" level="INFO">${user_id} = CRBJzxrEMwKIh5zn</msg>
<status status="PASS" starttime="20230526 21:05:38.925" endtime="20230526 21:05:38.926"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 21:05:38.926" level="INFO">${USER_ID} = CRBJzxrEMwKIh5zn</msg>
<status status="PASS" starttime="20230526 21:05:38.926" endtime="20230526 21:05:38.926"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:05:38.927" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:38.926" endtime="20230526 21:05:38.927"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.857" endtime="20230526 21:05:38.927"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:05:38.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:05:38.927" endtime="20230526 21:05:38.928"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:05:38.928" endtime="20230526 21:05:38.929"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.927" endtime="20230526 21:05:38.929"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:05:38.930" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:05:38.929" endtime="20230526 21:05:38.930"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.929" endtime="20230526 21:05:38.930"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:05:38.852" endtime="20230526 21:05:38.930"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:05:38.931" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:05:38.931" endtime="20230526 21:05:38.932"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.931" endtime="20230526 21:05:38.932"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:05:38.997" level="INFO">GET Request : url=https://serverest.dev/usuarios/CRBJzxrEMwKIh5zn 
 path_url=/usuarios/CRBJzxrEMwKIh5zn 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:05:38.997" level="INFO">GET Response : url=https://serverest.dev/usuarios/CRBJzxrEMwKIh5zn 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5be729ae-b8ae-484d-a14c-8073b2b57b47', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3e0af0811fb65961235973094fc61906', 'Date': 'Fri, 26 May 2023 21:05:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Tiffany Floyd",
    "email": "johngilbert@example.com",
    "password": "o48Nvhy9ARJS",
    "administrador": "false",
    "_id": "CRBJzxrEMwKIh5zn"
} 
 </msg>
<msg timestamp="20230526 21:05:38.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:38.932" endtime="20230526 21:05:38.997"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:05:38.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:38.998" endtime="20230526 21:05:38.998"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.932" endtime="20230526 21:05:38.998"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:05:38.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:05:38.999" endtime="20230526 21:05:38.999"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:05:38.999" endtime="20230526 21:05:39.000"/>
</kw>
<status status="PASS" starttime="20230526 21:05:38.998" endtime="20230526 21:05:39.000"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:05:39.001" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 21:05:39.001" endtime="20230526 21:05:39.001"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.000" endtime="20230526 21:05:39.002"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:05:38.930" endtime="20230526 21:05:39.002"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:05:39.004" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:05:39.004" endtime="20230526 21:05:39.004"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.003" endtime="20230526 21:05:39.004"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:05:39.005" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:05:39.005" endtime="20230526 21:05:39.005"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:05:39.006" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:05:39.005" endtime="20230526 21:05:39.006"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:05:39.073" level="INFO">PUT Request : url=https://serverest.dev/usuarios/CRBJzxrEMwKIh5zn 
 path_url=/usuarios/CRBJzxrEMwKIh5zn 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:05:39.073" level="INFO">PUT Response : url=https://serverest.dev/usuarios/CRBJzxrEMwKIh5zn 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd3da6413-1875-4505-b34c-7b569e43b3b3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '711d8a9e7f8176b00987575dc21fa6c4', 'Date': 'Fri, 26 May 2023 21:05:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:05:39.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:39.006" endtime="20230526 21:05:39.073"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:05:39.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:39.073" endtime="20230526 21:05:39.074"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.005" endtime="20230526 21:05:39.074"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:05:39.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:05:39.074" endtime="20230526 21:05:39.075"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:05:39.075" endtime="20230526 21:05:39.076"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.074" endtime="20230526 21:05:39.076"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:05:39.077" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:05:39.076" endtime="20230526 21:05:39.077"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.076" endtime="20230526 21:05:39.077"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:05:39.002" endtime="20230526 21:05:39.077"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:05:39.078" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:05:39.078" endtime="20230526 21:05:39.079"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.078" endtime="20230526 21:05:39.079"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:05:39.149" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/CRBJzxrEMwKIh5zn 
 path_url=/usuarios/CRBJzxrEMwKIh5zn 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:05:39.149" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/CRBJzxrEMwKIh5zn 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7cbd4ffc-cae6-4376-8fc9-b7b58e1f1e8a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ec8ef78d21d1fd42192eed7a406a7aed', 'Date': 'Fri, 26 May 2023 21:05:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:05:39.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:39.079" endtime="20230526 21:05:39.149"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:05:39.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:05:39.149" endtime="20230526 21:05:39.150"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.079" endtime="20230526 21:05:39.150"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:05:39.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:05:39.150" endtime="20230526 21:05:39.151"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:05:39.151" endtime="20230526 21:05:39.152"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.150" endtime="20230526 21:05:39.152"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:05:39.153" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:05:39.153" endtime="20230526 21:05:39.153"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.152" endtime="20230526 21:05:39.153"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:05:39.078" endtime="20230526 21:05:39.154"/>
</test>
<status status="PASS" starttime="20230526 21:05:38.167" endtime="20230526 21:05:39.154"/>
</suite>
<status status="PASS" starttime="20230526 21:05:38.165" endtime="20230526 21:05:39.156"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:05:39.166" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:05:39.165" endtime="20230526 21:05:41.056"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:05:41.057" endtime="20230526 21:05:41.169"/>
</kw>
<status status="PASS" starttime="20230526 21:05:39.165" endtime="20230526 21:05:41.169"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:05:41.174" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:05:41.170" endtime="20230526 21:05:41.174"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:41.176" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:05:41.175" endtime="20230526 21:05:41.237"/>
</kw>
<status status="PASS" starttime="20230526 21:05:41.169" endtime="20230526 21:05:41.237"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:41.238" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:05:41.238" endtime="20230526 21:05:41.303"/>
</kw>
<status status="PASS" starttime="20230526 21:05:41.237" endtime="20230526 21:05:41.303"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:05:41.304" endtime="20230526 21:05:41.538"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:05:41.557" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:05:41.538" endtime="20230526 21:05:41.557"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:05:41.572" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:05:41.557" endtime="20230526 21:05:41.572"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:05:41.585" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:05:41.573" endtime="20230526 21:05:41.586"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:05:41.598" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:05:41.586" endtime="20230526 21:05:41.598"/>
</kw>
<status status="PASS" starttime="20230526 21:05:41.303" endtime="20230526 21:05:41.599"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:05:41.599" endtime="20230526 21:05:41.655"/>
</kw>
<status status="PASS" starttime="20230526 21:05:41.599" endtime="20230526 21:05:41.655"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:05:39.165" endtime="20230526 21:05:41.655"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:05:41.658" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:05:41.657" endtime="20230526 21:05:43.063"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:05:43.063" endtime="20230526 21:05:43.171"/>
</kw>
<status status="PASS" starttime="20230526 21:05:41.657" endtime="20230526 21:05:43.171"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:05:43.177" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:05:43.172" endtime="20230526 21:05:43.177"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:43.178" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:05:43.177" endtime="20230526 21:05:43.232"/>
</kw>
<status status="PASS" starttime="20230526 21:05:43.171" endtime="20230526 21:05:43.232"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:05:43.233" level="INFO">${name} = Dillon Gibson</msg>
<status status="PASS" starttime="20230526 21:05:43.232" endtime="20230526 21:05:43.233"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:05:43.234" level="INFO">${email} = jeffreymitchell@example.com</msg>
<status status="PASS" starttime="20230526 21:05:43.233" endtime="20230526 21:05:43.234"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:05:43.234" level="INFO">${password} = P7jYMEnhP5om</msg>
<status status="PASS" starttime="20230526 21:05:43.234" endtime="20230526 21:05:43.234"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:43.235" level="INFO">Typing text 'Dillon Gibson' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:05:43.234" endtime="20230526 21:05:43.357"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:43.357" level="INFO">Typing text 'jeffreymitchell@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:05:43.357" endtime="20230526 21:05:43.476"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:43.477" level="INFO">Typing text 'P7jYMEnhP5om' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:05:43.476" endtime="20230526 21:05:43.572"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:43.573" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:05:43.572" endtime="20230526 21:05:43.647"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:05:43.648" level="INFO">${name} = Dillon Gibson</msg>
<status status="PASS" starttime="20230526 21:05:43.648" endtime="20230526 21:05:43.648"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:05:43.648" level="INFO">${email} = jeffreymitchell@example.com</msg>
<status status="PASS" starttime="20230526 21:05:43.648" endtime="20230526 21:05:43.648"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:05:43.649" level="INFO">${password} = P7jYMEnhP5om</msg>
<status status="PASS" starttime="20230526 21:05:43.649" endtime="20230526 21:05:43.649"/>
</kw>
<status status="PASS" starttime="20230526 21:05:43.232" endtime="20230526 21:05:43.649"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:43.650" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:05:43.649" endtime="20230526 21:05:43.709"/>
</kw>
<status status="PASS" starttime="20230526 21:05:43.649" endtime="20230526 21:05:43.709"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:05:43.709" endtime="20230526 21:05:43.945"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:05:43.963" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:05:43.945" endtime="20230526 21:05:43.963"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:05:43.975" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 21:05:43.963" endtime="20230526 21:05:43.975"/>
</kw>
<status status="PASS" starttime="20230526 21:05:43.709" endtime="20230526 21:05:43.975"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:05:43.976" endtime="20230526 21:05:44.031"/>
</kw>
<status status="PASS" starttime="20230526 21:05:43.976" endtime="20230526 21:05:44.031"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:05:41.656" endtime="20230526 21:05:44.031"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:05:44.034" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:05:44.033" endtime="20230526 21:05:45.424"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:05:45.424" endtime="20230526 21:05:45.531"/>
</kw>
<status status="PASS" starttime="20230526 21:05:44.033" endtime="20230526 21:05:45.531"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:05:45.537" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:05:45.532" endtime="20230526 21:05:45.537"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:45.538" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:05:45.537" endtime="20230526 21:05:45.590"/>
</kw>
<status status="PASS" starttime="20230526 21:05:45.532" endtime="20230526 21:05:45.591"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:45.592" level="INFO">Typing text 'Dillon Gibson' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:05:45.591" endtime="20230526 21:05:45.710"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:45.711" level="INFO">Typing text 'jeffreymitchell@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:05:45.710" endtime="20230526 21:05:45.829"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:45.830" level="INFO">Typing text 'P7jYMEnhP5om' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:05:45.829" endtime="20230526 21:05:45.924"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:45.925" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:05:45.925" endtime="20230526 21:05:46.001"/>
</kw>
<status status="PASS" starttime="20230526 21:05:45.591" endtime="20230526 21:05:46.001"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:05:46.002" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:05:46.001" endtime="20230526 21:05:46.063"/>
</kw>
<status status="PASS" starttime="20230526 21:05:46.001" endtime="20230526 21:05:46.063"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:05:46.064" endtime="20230526 21:05:46.298"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:05:46.316" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:05:46.298" endtime="20230526 21:05:46.316"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:05:46.329" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 21:05:46.316" endtime="20230526 21:05:46.330"/>
</kw>
<status status="PASS" starttime="20230526 21:05:46.064" endtime="20230526 21:05:46.330"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:05:46.330" endtime="20230526 21:05:46.386"/>
</kw>
<status status="PASS" starttime="20230526 21:05:46.330" endtime="20230526 21:05:46.387"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:05:44.032" endtime="20230526 21:05:46.387"/>
</test>
<status status="PASS" starttime="20230526 21:05:39.158" endtime="20230526 21:05:46.387"/>
</suite>
<status status="PASS" starttime="20230526 21:05:39.156" endtime="20230526 21:05:46.389"/>
</suite>
<status status="PASS" starttime="20230526 21:05:38.146" endtime="20230526 21:05:46.390"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
