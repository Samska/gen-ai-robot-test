<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 21:16:46.749" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:16:47.285" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:16:47.285" endtime="20230526 21:16:47.286"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.285" endtime="20230526 21:16:47.286"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:16:47.416" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:16:47.417" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '27da2552-4c0a-4df0-8540-437cfea881a0', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cac1511ebe7d6cdc8c4c73985e7c82af', 'Date': 'Fri, 26 May 2023 21:16:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '4175'} 
 body={
    "quantidade": 19,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Jacqueline Lopez",
            "email": "bjohnson@example.org",
            "password": "KlILbusq4KYn",
            "administrador": "true",
            "_id": "5zRpRME6l2znI1Co"
        },
        {
            "nome": "Nichole White",
            "email": "garciastephen@example.com",
            "password": "mSEXXw1MQ1q2",
            "administrador": "true",
            "_id": "8DygXGzSxgFKifQv"
        },
        {
            "nome": "Mary Butler",
            "email": "zperez@example.net",
            "password": "KUSsb75E4Tai",
            "administrador": "true",
            "_id": "9m6worerGZSyU4Vd"
        },
        {
            "nome": "David Ellis",
            "email": "psimpson@example.net",
            "password": "NCvKpmrf12AI",
            "administrador": "true",
            "_id": "G8rgwD5Ty9zooIWx"
        },
        {
            "nome": "Carol Smith",
            "email": "yguzman@example.com",
            "password": "Z8OOhg3tOyqQ",
            "administrador": "true",
            "_id": "HXPaxOE28NFgzgJh"
        },
        {
            "nome": "Dillon Gibson",
            "email": "jeffreymitchell@example.com",
            "password": "P7jYMEnhP5om",
            "administrador": "true",
            "_id": "HzusPP4B294O7zVO"
        },
        {
            "nome": "Lisa Greene",
            "email": "john32@example.net",
            "password": "JXimtd1w7Jdd",
            "administrador": "true",
            "_id": "KJe5wBwnfCR2mWW3"
        },
        {
            "nome": "Lawrence Hanson",
            "email": "michelle11@example.org",
            "password": "7feQ4sbxy6Ie",
            "administrador": "true",
            "_id": "MgBVcaaQYuq5SEYk"
        },
        {
            "nome": "Michele Mosley",
            "email": "troyweeks@example.org",
            "password": "daE0Chk089HM",
            "administrador": "true",
            "_id": "Ol0riOoxL8pOKcE2"
        },
        {
            "nome": "sadas",
            "email": "mill2@mil.com",
            "password": "123",
            "administrador": "true",
            "_id": "OvyYUousDsG4JYeX"
        },
        {
            "nome": "Mr. Matthew Collins",
            "email": "wanglauren@example.org",
            "password": "xIuLyrW2E8fs",
            "administrador": "true",
            "_id": "Pd9cZNjcG1eWfUMQ"
        },
        {
            "nome": "Cody Valentine",
            "email": "todd72@example.org",
            "password": "do58Eoup2qUy",
            "administrador": "true",
            "_id": "T2V5t8ZpKz0PTqGQ"
        },
        {
            "nome": "Brendan George",
            "email": "leslie86@example.com",
            "password": "1GiqcZl305aG",
            "administrador": "true",
            "_id": "TMKqdrqnRTNFOyht"
        },
        {
            "nome": "Hayley Byrd",
            "email": "kimberlymartin@example.com",
            "password": "q78F3X1rG3oF",
            "administrador": "true",
            "_id": "bLBFKECXSYeoPEjz"
        },
        {
            "nome": "Sheila Esparza",
            "email": "ycarter@example.org",
            "password": "gX9w2NckaW0K",
            "administrador": "true",
            "_id": "jSiHSVUpLmNpts8M"
        },
        {
            "nome": "Juan Reese",
            "email": "stephen03@example.com",
            "password": "STxJqTlLO5Ok",
            "administrador": "true",
            "_id": "v1MH0Jry6qPgJ0Gd"
        },
        {
            "nome": "Kyle Cooper",
            "email": "yflores@example.org",
            "password": "k7JpINT2Qek2",
            "administrador": "true",
            "_id": "vbb2T2tN8byhWgGI"
        },
        {
            "nome": "Terry Buchanan",
            "email": "jacobanderson@example.com",
            "password": "eg4zJyPl4QnT",
            "administrador": "true",
            "_id": "zHru6fs2sCmJnPry"
        }
    ]
} 
 </msg>
<msg timestamp="20230526 21:16:47.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.286" endtime="20230526 21:16:47.417"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:16:47.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.417" endtime="20230526 21:16:47.417"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.286" endtime="20230526 21:16:47.417"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:16:47.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.418" endtime="20230526 21:16:47.419"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:16:47.419" endtime="20230526 21:16:47.419"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.418" endtime="20230526 21:16:47.419"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:16:47.420" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:16:47.420" endtime="20230526 21:16:47.420"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.420" endtime="20230526 21:16:47.420"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:16:47.284" endtime="20230526 21:16:47.421"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:16:47.422" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:16:47.422" endtime="20230526 21:16:47.422"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.422" endtime="20230526 21:16:47.422"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:16:47.423" level="INFO">${name} = Chad Thomas</msg>
<status status="PASS" starttime="20230526 21:16:47.423" endtime="20230526 21:16:47.423"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:16:47.424" level="INFO">${email} = michelle82@example.net</msg>
<status status="PASS" starttime="20230526 21:16:47.423" endtime="20230526 21:16:47.424"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:16:47.424" level="INFO">${password} = 1Z5azQ0rwGla</msg>
<status status="PASS" starttime="20230526 21:16:47.424" endtime="20230526 21:16:47.424"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:16:47.425" level="INFO">${name} = Chad Thomas</msg>
<status status="PASS" starttime="20230526 21:16:47.424" endtime="20230526 21:16:47.425"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:16:47.425" level="INFO">${email} = michelle82@example.net</msg>
<status status="PASS" starttime="20230526 21:16:47.425" endtime="20230526 21:16:47.425"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:16:47.425" level="INFO">${password} = 1Z5azQ0rwGla</msg>
<status status="PASS" starttime="20230526 21:16:47.425" endtime="20230526 21:16:47.425"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.423" endtime="20230526 21:16:47.425"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:16:47.426" level="INFO">${payload} = {'nome': 'Chad Thomas', 'email': 'michelle82@example.net', 'password': '1Z5azQ0rwGla', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:16:47.426" endtime="20230526 21:16:47.426"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:16:47.426" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:16:47.426" endtime="20230526 21:16:47.427"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:16:47.506" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Chad Thomas", "email": "michelle82@example.net", "password": "1Z5azQ0rwGla", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:16:47.506" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '29a4ad93-9c79-41d1-8670-4f2d0f07ac5f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ed775aad4beff60373ebef13e79e6035', 'Date': 'Fri, 26 May 2023 21:16:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "QFTpez1JVGgvzhLo"
} 
 </msg>
<msg timestamp="20230526 21:16:47.506" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.427" endtime="20230526 21:16:47.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 21:16:47.507" level="INFO">${user_id} = QFTpez1JVGgvzhLo</msg>
<status status="PASS" starttime="20230526 21:16:47.506" endtime="20230526 21:16:47.507"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 21:16:47.507" level="INFO">${USER_ID} = QFTpez1JVGgvzhLo</msg>
<status status="PASS" starttime="20230526 21:16:47.507" endtime="20230526 21:16:47.507"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:16:47.508" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.507" endtime="20230526 21:16:47.508"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.425" endtime="20230526 21:16:47.508"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:16:47.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.508" endtime="20230526 21:16:47.509"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:16:47.509" endtime="20230526 21:16:47.510"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.508" endtime="20230526 21:16:47.510"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:16:47.511" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:16:47.510" endtime="20230526 21:16:47.511"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.510" endtime="20230526 21:16:47.511"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:16:47.421" endtime="20230526 21:16:47.511"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:16:47.512" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:16:47.512" endtime="20230526 21:16:47.512"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.512" endtime="20230526 21:16:47.513"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:16:47.593" level="INFO">GET Request : url=https://serverest.dev/usuarios/QFTpez1JVGgvzhLo 
 path_url=/usuarios/QFTpez1JVGgvzhLo 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:16:47.593" level="INFO">GET Response : url=https://serverest.dev/usuarios/QFTpez1JVGgvzhLo 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '59976b8a-e236-492f-a5aa-c190d2e1dd4d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '93a8a7729996efc8766f0fcaf16c0e46', 'Date': 'Fri, 26 May 2023 21:16:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Chad Thomas",
    "email": "michelle82@example.net",
    "password": "1Z5azQ0rwGla",
    "administrador": "false",
    "_id": "QFTpez1JVGgvzhLo"
} 
 </msg>
<msg timestamp="20230526 21:16:47.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.513" endtime="20230526 21:16:47.593"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:16:47.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.593" endtime="20230526 21:16:47.593"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.513" endtime="20230526 21:16:47.593"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:16:47.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.594" endtime="20230526 21:16:47.594"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:16:47.594" endtime="20230526 21:16:47.595"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.593" endtime="20230526 21:16:47.595"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:16:47.596" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 21:16:47.596" endtime="20230526 21:16:47.596"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.595" endtime="20230526 21:16:47.596"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:16:47.511" endtime="20230526 21:16:47.596"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:16:47.598" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:16:47.597" endtime="20230526 21:16:47.598"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.597" endtime="20230526 21:16:47.598"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:16:47.599" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:16:47.598" endtime="20230526 21:16:47.599"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:16:47.599" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:16:47.599" endtime="20230526 21:16:47.599"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:16:47.678" level="INFO">PUT Request : url=https://serverest.dev/usuarios/QFTpez1JVGgvzhLo 
 path_url=/usuarios/QFTpez1JVGgvzhLo 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:16:47.678" level="INFO">PUT Response : url=https://serverest.dev/usuarios/QFTpez1JVGgvzhLo 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '60427bb2-3628-49c2-9447-935b04fc8579', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bbd9ee909d5d2145e4c5839167428eb7', 'Date': 'Fri, 26 May 2023 21:16:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:16:47.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.599" endtime="20230526 21:16:47.678"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:16:47.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.679" endtime="20230526 21:16:47.679"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.598" endtime="20230526 21:16:47.679"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:16:47.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.679" endtime="20230526 21:16:47.680"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:16:47.680" endtime="20230526 21:16:47.681"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.679" endtime="20230526 21:16:47.681"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:16:47.682" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:16:47.681" endtime="20230526 21:16:47.682"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.681" endtime="20230526 21:16:47.682"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:16:47.597" endtime="20230526 21:16:47.682"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:16:47.684" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:16:47.683" endtime="20230526 21:16:47.684"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.683" endtime="20230526 21:16:47.684"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:16:47.762" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/QFTpez1JVGgvzhLo 
 path_url=/usuarios/QFTpez1JVGgvzhLo 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:16:47.762" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/QFTpez1JVGgvzhLo 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2a07b1e1-86e4-4612-bc6c-55a329d7389c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0a40e4e9bbfc4bcfb1e5c92372dd50a8', 'Date': 'Fri, 26 May 2023 21:16:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:16:47.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.685" endtime="20230526 21:16:47.762"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:16:47.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.762" endtime="20230526 21:16:47.763"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.684" endtime="20230526 21:16:47.763"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:16:47.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:16:47.763" endtime="20230526 21:16:47.764"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:16:47.764" endtime="20230526 21:16:47.764"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.763" endtime="20230526 21:16:47.765"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:16:47.765" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:16:47.765" endtime="20230526 21:16:47.766"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.765" endtime="20230526 21:16:47.766"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:16:47.683" endtime="20230526 21:16:47.766"/>
</test>
<status status="PASS" starttime="20230526 21:16:46.769" endtime="20230526 21:16:47.766"/>
</suite>
<status status="PASS" starttime="20230526 21:16:46.768" endtime="20230526 21:16:47.767"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:16:47.777" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:16:47.776" endtime="20230526 21:16:54.743"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:16:54.743" endtime="20230526 21:16:54.861"/>
</kw>
<status status="PASS" starttime="20230526 21:16:47.776" endtime="20230526 21:16:54.861"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:16:54.885" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:16:54.862" endtime="20230526 21:16:54.885"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:54.886" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:16:54.885" endtime="20230526 21:16:55.028"/>
</kw>
<status status="PASS" starttime="20230526 21:16:54.862" endtime="20230526 21:16:55.028"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:55.029" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:16:55.028" endtime="20230526 21:16:55.150"/>
</kw>
<status status="PASS" starttime="20230526 21:16:55.028" endtime="20230526 21:16:55.150"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:16:55.151" endtime="20230526 21:16:55.384"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:16:55.402" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:16:55.384" endtime="20230526 21:16:55.402"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:16:55.440" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:16:55.402" endtime="20230526 21:16:55.440"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:16:55.453" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:16:55.440" endtime="20230526 21:16:55.453"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:16:55.465" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:16:55.453" endtime="20230526 21:16:55.465"/>
</kw>
<status status="PASS" starttime="20230526 21:16:55.150" endtime="20230526 21:16:55.466"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:16:55.466" endtime="20230526 21:16:55.521"/>
</kw>
<status status="PASS" starttime="20230526 21:16:55.466" endtime="20230526 21:16:55.522"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:16:47.776" endtime="20230526 21:16:55.522"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:16:55.524" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:16:55.523" endtime="20230526 21:16:56.911"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:16:56.911" endtime="20230526 21:16:57.014"/>
</kw>
<status status="PASS" starttime="20230526 21:16:55.523" endtime="20230526 21:16:57.015"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:16:57.020" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:16:57.015" endtime="20230526 21:16:57.020"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:57.020" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:16:57.020" endtime="20230526 21:16:57.074"/>
</kw>
<status status="PASS" starttime="20230526 21:16:57.015" endtime="20230526 21:16:57.074"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:16:57.075" level="INFO">${name} = Adam Jones</msg>
<status status="PASS" starttime="20230526 21:16:57.074" endtime="20230526 21:16:57.075"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:16:57.075" level="INFO">${email} = richardsonedward@example.com</msg>
<status status="PASS" starttime="20230526 21:16:57.075" endtime="20230526 21:16:57.076"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:16:57.076" level="INFO">${password} = c8UBvUeK5D6O</msg>
<status status="PASS" starttime="20230526 21:16:57.076" endtime="20230526 21:16:57.076"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:57.077" level="INFO">Typing text 'Adam Jones' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:16:57.076" endtime="20230526 21:16:57.211"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:57.211" level="INFO">Typing text 'richardsonedward@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:16:57.211" endtime="20230526 21:16:57.342"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:57.343" level="INFO">Typing text 'c8UBvUeK5D6O' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:16:57.342" endtime="20230526 21:16:57.438"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:57.439" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:16:57.438" endtime="20230526 21:16:57.515"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:16:57.515" level="INFO">${name} = Adam Jones</msg>
<status status="PASS" starttime="20230526 21:16:57.515" endtime="20230526 21:16:57.515"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:16:57.516" level="INFO">${email} = richardsonedward@example.com</msg>
<status status="PASS" starttime="20230526 21:16:57.516" endtime="20230526 21:16:57.516"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:16:57.516" level="INFO">${password} = c8UBvUeK5D6O</msg>
<status status="PASS" starttime="20230526 21:16:57.516" endtime="20230526 21:16:57.516"/>
</kw>
<status status="PASS" starttime="20230526 21:16:57.074" endtime="20230526 21:16:57.516"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:57.517" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:16:57.517" endtime="20230526 21:16:57.573"/>
</kw>
<status status="PASS" starttime="20230526 21:16:57.516" endtime="20230526 21:16:57.573"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:16:57.574" endtime="20230526 21:16:57.805"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:16:57.823" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:16:57.806" endtime="20230526 21:16:57.823"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:16:57.835" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 21:16:57.823" endtime="20230526 21:16:57.835"/>
</kw>
<status status="PASS" starttime="20230526 21:16:57.573" endtime="20230526 21:16:57.835"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:16:57.836" endtime="20230526 21:16:57.891"/>
</kw>
<status status="PASS" starttime="20230526 21:16:57.835" endtime="20230526 21:16:57.891"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:16:55.522" endtime="20230526 21:16:57.891"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:16:57.893" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:16:57.892" endtime="20230526 21:16:59.322"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:16:59.322" endtime="20230526 21:16:59.425"/>
</kw>
<status status="PASS" starttime="20230526 21:16:57.892" endtime="20230526 21:16:59.425"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:16:59.430" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:16:59.426" endtime="20230526 21:16:59.430"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:59.431" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:16:59.431" endtime="20230526 21:16:59.484"/>
</kw>
<status status="PASS" starttime="20230526 21:16:59.426" endtime="20230526 21:16:59.484"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:59.485" level="INFO">Typing text 'Adam Jones' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:16:59.484" endtime="20230526 21:16:59.595"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:59.596" level="INFO">Typing text 'richardsonedward@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:16:59.596" endtime="20230526 21:16:59.720"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:59.721" level="INFO">Typing text 'c8UBvUeK5D6O' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:16:59.720" endtime="20230526 21:16:59.806"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:59.807" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:16:59.807" endtime="20230526 21:16:59.877"/>
</kw>
<status status="PASS" starttime="20230526 21:16:59.484" endtime="20230526 21:16:59.877"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:16:59.878" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:16:59.878" endtime="20230526 21:16:59.935"/>
</kw>
<status status="PASS" starttime="20230526 21:16:59.877" endtime="20230526 21:16:59.936"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:16:59.936" endtime="20230526 21:17:00.168"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:17:00.186" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:17:00.168" endtime="20230526 21:17:00.186"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:17:00.199" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 21:17:00.186" endtime="20230526 21:17:00.199"/>
</kw>
<status status="PASS" starttime="20230526 21:16:59.936" endtime="20230526 21:17:00.199"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:17:00.200" endtime="20230526 21:17:00.254"/>
</kw>
<status status="PASS" starttime="20230526 21:17:00.199" endtime="20230526 21:17:00.255"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:16:57.891" endtime="20230526 21:17:00.255"/>
</test>
<status status="PASS" starttime="20230526 21:16:47.769" endtime="20230526 21:17:00.255"/>
</suite>
<status status="PASS" starttime="20230526 21:16:47.768" endtime="20230526 21:17:00.257"/>
</suite>
<status status="PASS" starttime="20230526 21:16:46.750" endtime="20230526 21:17:00.258"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
