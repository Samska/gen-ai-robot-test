<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230430 01:07:54.313" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230430 01:07:55.029" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230430 01:07:55.029" endtime="20230430 01:07:55.030"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.029" endtime="20230430 01:07:55.030"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230430 01:07:55.177" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230430 01:07:55.178" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '30cad842-1417-4d68-bad0-292818187f21', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4aaa52b5e8b68453cc07a8cdd218c138;o=1', 'Date': 'Sun, 30 Apr 2023 01:07:55 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230430 01:07:55.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.030" endtime="20230430 01:07:55.178"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230430 01:07:55.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.178" endtime="20230430 01:07:55.179"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.030" endtime="20230430 01:07:55.179"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230430 01:07:55.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.179" endtime="20230430 01:07:55.180"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230430 01:07:55.181" endtime="20230430 01:07:55.181"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.179" endtime="20230430 01:07:55.182"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230430 01:07:55.183" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230430 01:07:55.182" endtime="20230430 01:07:55.183"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.182" endtime="20230430 01:07:55.183"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230430 01:07:55.028" endtime="20230430 01:07:55.183"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230430 01:07:55.186" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230430 01:07:55.186" endtime="20230430 01:07:55.186"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.185" endtime="20230430 01:07:55.186"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230430 01:07:55.188" level="INFO">${name} = Randy Oliver</msg>
<status status="PASS" starttime="20230430 01:07:55.188" endtime="20230430 01:07:55.188"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230430 01:07:55.189" level="INFO">${email} = dchavez@example.org</msg>
<status status="PASS" starttime="20230430 01:07:55.188" endtime="20230430 01:07:55.189"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230430 01:07:55.189" level="INFO">${password} = d6SMapKV$K</msg>
<status status="PASS" starttime="20230430 01:07:55.189" endtime="20230430 01:07:55.189"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230430 01:07:55.190" level="INFO">${name} = Randy Oliver</msg>
<status status="PASS" starttime="20230430 01:07:55.189" endtime="20230430 01:07:55.190"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230430 01:07:55.190" level="INFO">${email} = dchavez@example.org</msg>
<status status="PASS" starttime="20230430 01:07:55.190" endtime="20230430 01:07:55.190"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230430 01:07:55.191" level="INFO">${password} = d6SMapKV$K</msg>
<status status="PASS" starttime="20230430 01:07:55.190" endtime="20230430 01:07:55.191"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.187" endtime="20230430 01:07:55.191"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230430 01:07:55.192" level="INFO">${payload} = {'nome': 'Randy Oliver', 'email': 'dchavez@example.org', 'password': 'd6SMapKV$K', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230430 01:07:55.191" endtime="20230430 01:07:55.192"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230430 01:07:55.192" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230430 01:07:55.192" endtime="20230430 01:07:55.192"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230430 01:07:55.281" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '108'} 
 body=b'{"nome": "Randy Oliver", "email": "dchavez@example.org", "password": "d6SMapKV$K", "administrador": "false"}' 
 </msg>
<msg timestamp="20230430 01:07:55.281" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '842ee688-f0c4-4b5f-ac7e-6737daa05b82', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b208f7afb89e1aae85f75393af398d80', 'Date': 'Sun, 30 Apr 2023 01:07:55 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "6Hn6mxeUYdCOoQkq"
} 
 </msg>
<msg timestamp="20230430 01:07:55.281" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.192" endtime="20230430 01:07:55.281"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230430 01:07:55.282" level="INFO">${user_id} = 6Hn6mxeUYdCOoQkq</msg>
<status status="PASS" starttime="20230430 01:07:55.281" endtime="20230430 01:07:55.282"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230430 01:07:55.283" level="INFO">${USER_ID} = 6Hn6mxeUYdCOoQkq</msg>
<status status="PASS" starttime="20230430 01:07:55.283" endtime="20230430 01:07:55.283"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230430 01:07:55.284" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.283" endtime="20230430 01:07:55.284"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.191" endtime="20230430 01:07:55.284"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230430 01:07:55.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.284" endtime="20230430 01:07:55.285"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230430 01:07:55.285" endtime="20230430 01:07:55.286"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.284" endtime="20230430 01:07:55.286"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230430 01:07:55.287" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230430 01:07:55.287" endtime="20230430 01:07:55.287"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.286" endtime="20230430 01:07:55.287"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230430 01:07:55.185" endtime="20230430 01:07:55.288"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230430 01:07:55.289" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230430 01:07:55.289" endtime="20230430 01:07:55.289"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.289" endtime="20230430 01:07:55.290"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230430 01:07:55.365" level="INFO">GET Request : url=https://serverest.dev/usuarios/6Hn6mxeUYdCOoQkq 
 path_url=/usuarios/6Hn6mxeUYdCOoQkq 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230430 01:07:55.365" level="INFO">GET Response : url=https://serverest.dev/usuarios/6Hn6mxeUYdCOoQkq 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dca7ebb7-3bb1-4cfd-8153-79327f7fd35d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '50c4987d493873442c03a1c0e5a0eb88', 'Date': 'Sun, 30 Apr 2023 01:07:55 GMT', 'Server': 'Google Frontend', 'Content-Length': '157'} 
 body={
    "nome": "Randy Oliver",
    "email": "dchavez@example.org",
    "password": "d6SMapKV$K",
    "administrador": "false",
    "_id": "6Hn6mxeUYdCOoQkq"
} 
 </msg>
<msg timestamp="20230430 01:07:55.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.290" endtime="20230430 01:07:55.366"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230430 01:07:55.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.366" endtime="20230430 01:07:55.366"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.290" endtime="20230430 01:07:55.366"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230430 01:07:55.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.367" endtime="20230430 01:07:55.368"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230430 01:07:55.368" endtime="20230430 01:07:55.369"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.367" endtime="20230430 01:07:55.369"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230430 01:07:55.371" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230430 01:07:55.370" endtime="20230430 01:07:55.371"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.369" endtime="20230430 01:07:55.371"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230430 01:07:55.288" endtime="20230430 01:07:55.371"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230430 01:07:55.373" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230430 01:07:55.373" endtime="20230430 01:07:55.373"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.372" endtime="20230430 01:07:55.374"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230430 01:07:55.374" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230430 01:07:55.374" endtime="20230430 01:07:55.375"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230430 01:07:55.375" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230430 01:07:55.375" endtime="20230430 01:07:55.375"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230430 01:07:55.463" level="INFO">PUT Request : url=https://serverest.dev/usuarios/6Hn6mxeUYdCOoQkq 
 path_url=/usuarios/6Hn6mxeUYdCOoQkq 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230430 01:07:55.463" level="INFO">PUT Response : url=https://serverest.dev/usuarios/6Hn6mxeUYdCOoQkq 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '97dbe5bf-59b0-4ba0-b881-90c92e6a7e72', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b2b701b5c621ae72ad7a570228395536', 'Date': 'Sun, 30 Apr 2023 01:07:55 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230430 01:07:55.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.375" endtime="20230430 01:07:55.463"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230430 01:07:55.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.463" endtime="20230430 01:07:55.464"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.374" endtime="20230430 01:07:55.464"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230430 01:07:55.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.465" endtime="20230430 01:07:55.466"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230430 01:07:55.466" endtime="20230430 01:07:55.467"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.464" endtime="20230430 01:07:55.467"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230430 01:07:55.468" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230430 01:07:55.467" endtime="20230430 01:07:55.468"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.467" endtime="20230430 01:07:55.468"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230430 01:07:55.372" endtime="20230430 01:07:55.468"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230430 01:07:55.470" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230430 01:07:55.470" endtime="20230430 01:07:55.470"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.469" endtime="20230430 01:07:55.471"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230430 01:07:55.551" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/6Hn6mxeUYdCOoQkq 
 path_url=/usuarios/6Hn6mxeUYdCOoQkq 
 headers={'User-Agent': 'python-requests/2.29.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230430 01:07:55.551" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/6Hn6mxeUYdCOoQkq 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '292bc446-e87c-46e8-9721-40b302902d42', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '18e3086c024f279255df57188a8b1d12', 'Date': 'Sun, 30 Apr 2023 01:07:55 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230430 01:07:55.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.471" endtime="20230430 01:07:55.551"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230430 01:07:55.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.552" endtime="20230430 01:07:55.552"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.471" endtime="20230430 01:07:55.552"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230430 01:07:55.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230430 01:07:55.553" endtime="20230430 01:07:55.554"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230430 01:07:55.554" endtime="20230430 01:07:55.555"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.552" endtime="20230430 01:07:55.555"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230430 01:07:55.557" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230430 01:07:55.556" endtime="20230430 01:07:55.557"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.556" endtime="20230430 01:07:55.557"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230430 01:07:55.469" endtime="20230430 01:07:55.557"/>
</test>
<status status="PASS" starttime="20230430 01:07:54.338" endtime="20230430 01:07:55.558"/>
</suite>
<status status="PASS" starttime="20230430 01:07:54.337" endtime="20230430 01:07:55.560"/>
</suite>
<status status="PASS" starttime="20230430 01:07:54.335" endtime="20230430 01:07:55.561"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230430 01:07:55.574" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230430 01:07:55.573" endtime="20230430 01:08:05.706"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230430 01:08:05.707" endtime="20230430 01:08:05.838"/>
</kw>
<status status="PASS" starttime="20230430 01:07:55.573" endtime="20230430 01:08:05.838"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230430 01:08:05.839" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230430 01:08:05.839" endtime="20230430 01:08:05.990"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230430 01:08:05.996" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230430 01:08:05.991" endtime="20230430 01:08:05.996"/>
</kw>
<status status="PASS" starttime="20230430 01:08:05.838" endtime="20230430 01:08:05.996"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:05.999" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230430 01:08:05.997" endtime="20230430 01:08:06.240"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:06.241" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230430 01:08:06.241" endtime="20230430 01:08:06.414"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:06.415" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230430 01:08:06.415" endtime="20230430 01:08:06.717"/>
</kw>
<status status="PASS" starttime="20230430 01:08:05.996" endtime="20230430 01:08:06.717"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230430 01:08:06.725" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230430 01:08:06.718" endtime="20230430 01:08:06.725"/>
</kw>
<status status="PASS" starttime="20230430 01:08:06.717" endtime="20230430 01:08:06.726"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230430 01:08:06.768" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230430 01:08:06.726" endtime="20230430 01:08:06.768"/>
</kw>
<status status="PASS" starttime="20230430 01:08:06.726" endtime="20230430 01:08:06.769"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230430 01:08:06.769" endtime="20230430 01:08:06.827"/>
</kw>
<status status="PASS" starttime="20230430 01:08:06.769" endtime="20230430 01:08:06.827"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230430 01:07:55.572" endtime="20230430 01:08:06.827"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230430 01:08:06.830" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230430 01:08:06.829" endtime="20230430 01:08:07.729"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230430 01:08:07.730" endtime="20230430 01:08:07.836"/>
</kw>
<status status="PASS" starttime="20230430 01:08:06.829" endtime="20230430 01:08:07.837"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230430 01:08:07.838" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230430 01:08:07.838" endtime="20230430 01:08:07.921"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230430 01:08:07.935" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230430 01:08:07.922" endtime="20230430 01:08:07.935"/>
</kw>
<status status="PASS" starttime="20230430 01:08:07.837" endtime="20230430 01:08:07.935"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:07.937" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230430 01:08:07.936" endtime="20230430 01:08:08.052"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:08.053" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230430 01:08:08.053" endtime="20230430 01:08:08.151"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:08.152" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230430 01:08:08.152" endtime="20230430 01:08:08.222"/>
</kw>
<status status="PASS" starttime="20230430 01:08:07.936" endtime="20230430 01:08:08.222"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230430 01:08:08.248" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230430 01:08:08.223" endtime="20230430 01:08:08.248"/>
</kw>
<status status="PASS" starttime="20230430 01:08:08.223" endtime="20230430 01:08:08.249"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230430 01:08:08.249" endtime="20230430 01:08:08.308"/>
</kw>
<status status="PASS" starttime="20230430 01:08:08.249" endtime="20230430 01:08:08.308"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230430 01:08:06.828" endtime="20230430 01:08:08.308"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230430 01:08:08.311" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230430 01:08:08.310" endtime="20230430 01:08:09.201"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230430 01:08:09.201" endtime="20230430 01:08:09.309"/>
</kw>
<status status="PASS" starttime="20230430 01:08:08.310" endtime="20230430 01:08:09.309"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230430 01:08:09.311" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230430 01:08:09.310" endtime="20230430 01:08:09.382"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230430 01:08:09.389" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230430 01:08:09.383" endtime="20230430 01:08:09.390"/>
</kw>
<status status="PASS" starttime="20230430 01:08:09.310" endtime="20230430 01:08:09.390"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:09.391" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230430 01:08:09.390" endtime="20230430 01:08:09.506"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:09.507" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230430 01:08:09.506" endtime="20230430 01:08:09.604"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:09.605" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230430 01:08:09.604" endtime="20230430 01:08:09.701"/>
</kw>
<status status="PASS" starttime="20230430 01:08:09.390" endtime="20230430 01:08:09.701"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230430 01:08:09.715" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230430 01:08:09.702" endtime="20230430 01:08:09.715"/>
</kw>
<status status="PASS" starttime="20230430 01:08:09.701" endtime="20230430 01:08:09.715"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230430 01:08:09.731" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230430 01:08:09.716" endtime="20230430 01:08:09.731"/>
</kw>
<status status="PASS" starttime="20230430 01:08:09.716" endtime="20230430 01:08:09.731"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230430 01:08:09.732" endtime="20230430 01:08:09.790"/>
</kw>
<status status="PASS" starttime="20230430 01:08:09.732" endtime="20230430 01:08:09.790"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230430 01:08:08.309" endtime="20230430 01:08:09.790"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230430 01:08:09.793" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230430 01:08:09.793" endtime="20230430 01:08:10.700"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230430 01:08:10.701" endtime="20230430 01:08:10.809"/>
</kw>
<status status="PASS" starttime="20230430 01:08:09.792" endtime="20230430 01:08:10.809"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230430 01:08:10.811" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230430 01:08:10.810" endtime="20230430 01:08:10.880"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230430 01:08:10.886" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230430 01:08:10.880" endtime="20230430 01:08:10.886"/>
</kw>
<status status="PASS" starttime="20230430 01:08:10.810" endtime="20230430 01:08:10.886"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:10.890" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230430 01:08:10.889" endtime="20230430 01:08:11.018"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:11.019" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230430 01:08:11.018" endtime="20230430 01:08:11.119"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230430 01:08:11.120" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230430 01:08:11.119" endtime="20230430 01:08:16.247"/>
</kw>
<status status="PASS" starttime="20230430 01:08:10.886" endtime="20230430 01:08:16.248"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230430 01:08:16.266" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230430 01:08:16.248" endtime="20230430 01:08:16.266"/>
</kw>
<status status="PASS" starttime="20230430 01:08:16.248" endtime="20230430 01:08:16.266"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230430 01:08:16.281" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230430 01:08:16.267" endtime="20230430 01:08:16.281"/>
</kw>
<status status="PASS" starttime="20230430 01:08:16.266" endtime="20230430 01:08:16.282"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230430 01:08:16.282" endtime="20230430 01:08:17.340"/>
</kw>
<status status="PASS" starttime="20230430 01:08:16.282" endtime="20230430 01:08:17.341"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230430 01:08:09.792" endtime="20230430 01:08:17.341"/>
</test>
<status status="PASS" starttime="20230430 01:07:55.565" endtime="20230430 01:08:17.342"/>
</suite>
<status status="PASS" starttime="20230430 01:07:55.563" endtime="20230430 01:08:17.344"/>
</suite>
<status status="PASS" starttime="20230430 01:07:55.561" endtime="20230430 01:08:17.346"/>
</suite>
<status status="PASS" starttime="20230430 01:07:54.314" endtime="20230430 01:08:17.348"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
