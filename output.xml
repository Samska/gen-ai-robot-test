<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230418 20:36:48.717" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 20:36:49.174" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 20:36:49.174" endtime="20230418 20:36:49.174"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.173" endtime="20230418 20:36:49.175"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 20:36:49.320" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 20:36:49.320" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5352168e-c0f8-4554-a01f-11c69f15171a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'aacb6fd976515b94f56014888c20afbe;o=1', 'Date': 'Tue, 18 Apr 2023 20:36:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '7624'} 
 body={
    "quantidade": 36,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulanog@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "1nGjFZrcwOXObJ6S"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "OPiXQlXc@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "4c0kv1u0GzFkPGWj"
        },
        {
            "nome": "Fulano da Silva",
            "email": "dioa@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5DJILKVsK92Wniub"
        },
        {
            "nome": "Fulano da Silva",
            "email": "tuvg@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "6nAI04BDlbtscn0Q"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fbbm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "AIRmV5T8ZvNJultO"
        },
        {
            "nome": "Fulano da Silva",
            "email": "qghw@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "C0OMILASABLvgzkp"
        },
        {
            "nome": "Fulano da Silva",
            "email": "cfax3hzw@bbcqa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "CTqPC0hzHL33WWG4"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "xDmqOxQm@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "E5VIqySTOPuWvj5F"
        },
        {
            "nome": "Fulano da Silva",
            "email": "teste1@test.com",
            "password": "teste",
            "administrador": "true",
            "_id": "Km9oickFTrVxc3LF"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "vbhRhHkK@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "LPYjy58jEjjHkQ7i"
        },
        {
            "nome": "Fulano da Silva",
            "email": "bgml@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "LTLJ2PuX4xAo5jcG"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Elyse.Gottlieb@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "M8NoEdG76VxB0Tnc"
        },
        {
            "nome": "Fulano da Silva",
            "email": "qnbn@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "OXLTKmaL4111ln0O"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Dominic97@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "RGUFlFsbpN7rgFc4"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano55643900@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "SPlEHl0Rf3mMqVit"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "gDrZPKfn@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "V42xNOBoS5yLoJSO"
        },
        {
            "nome": "Fulano da Silva",
            "email": "sqap@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "VBXoi6Tp8Urp6r7a"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "LnNfoUrO@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "XOY1LU7sRp4HSYIe"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "MajHWnJK@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "bI8NslYAdWZkdwPJ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano53460884@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "dgpsWAuHcPGnpzd1"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "wZEeMnYc@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "f2L8bkWFmYc5slbF"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "avpBQRaQ@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "iYfo7gmqsOIhtGSe"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "vluEnLrn@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "ihRVMAtyYy8boS98"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "WMrwwrDJ@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "jLXsrfltsDsUThWp"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "jQmgYyKW@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "n486WjChYeiLdOFm"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "yCfmcBhV@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "oyV2qQTqL481OB4z"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mvcc@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "qeW2Q49ksCsBqHuU"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "hZrFcFel@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "s23XNyEC8WO3q5el"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "snsXcgyd@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "sTk5y3QJeTbuuncC"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "wBhShhje@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "snr0zEzEcksBcd7R"
        },
        {
            "nome": "Fulano da Silva",
            "email": "sirj@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "tNCMlZYuxV1mP9FG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "nfyp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "uli0HTfnak1VpeSf"
        },
        {
            "nome": "Fulano da Silva",
            "email": "svwv@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "wS8cD3PszR2FCsGo"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano22735340@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "xNeg8Ajw1BWcZEZp"
        },
        {
            "nome": "JOÃO DA SILVA",
            "email": "fIzrJQny@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "xbnb4B1pDtYZ8C1p"
        }
    ]
} 
 </msg>
<msg timestamp="20230418 20:36:49.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.175" endtime="20230418 20:36:49.320"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 20:36:49.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.321" endtime="20230418 20:36:49.321"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.175" endtime="20230418 20:36:49.321"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 20:36:49.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.321" endtime="20230418 20:36:49.322"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 20:36:49.322" endtime="20230418 20:36:49.323"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.321" endtime="20230418 20:36:49.323"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 20:36:49.324" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 20:36:49.323" endtime="20230418 20:36:49.324"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.323" endtime="20230418 20:36:49.324"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.173" endtime="20230418 20:36:49.324"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="14">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 20:36:49.327" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 20:36:49.326" endtime="20230418 20:36:49.327"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.326" endtime="20230418 20:36:49.327"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230418 20:36:49.328" level="INFO">${name} = James Woodard</msg>
<status status="PASS" starttime="20230418 20:36:49.327" endtime="20230418 20:36:49.328"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230418 20:36:49.328" level="INFO">${email} = laura01@example.net</msg>
<status status="PASS" starttime="20230418 20:36:49.328" endtime="20230418 20:36:49.328"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230418 20:36:49.329" level="INFO">${password} = #Y2tJCXum2</msg>
<status status="PASS" starttime="20230418 20:36:49.328" endtime="20230418 20:36:49.329"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 20:36:49.329" level="INFO">${name} = James Woodard</msg>
<status status="PASS" starttime="20230418 20:36:49.329" endtime="20230418 20:36:49.329"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 20:36:49.329" level="INFO">${email} = laura01@example.net</msg>
<status status="PASS" starttime="20230418 20:36:49.329" endtime="20230418 20:36:49.329"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 20:36:49.330" level="INFO">${password} = #Y2tJCXum2</msg>
<status status="PASS" starttime="20230418 20:36:49.329" endtime="20230418 20:36:49.330"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.327" endtime="20230418 20:36:49.330"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 20:36:49.331" level="INFO">${payload} = {'nome': 'James Woodard', 'email': 'laura01@example.net', 'password': '#Y2tJCXum2', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 20:36:49.330" endtime="20230418 20:36:49.331"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 20:36:49.331" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 20:36:49.331" endtime="20230418 20:36:49.331"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 20:36:49.415" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"nome": "James Woodard", "email": "laura01@example.net", "password": "#Y2tJCXum2", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 20:36:49.415" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '94810ce0-7bb9-4d49-b184-635b837c42dc', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '20aa5958b6e97cf4312842d5d7244588', 'Date': 'Tue, 18 Apr 2023 20:36:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "EisGjY9t5JwOrIQK"
} 
 </msg>
<msg timestamp="20230418 20:36:49.415" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.331" endtime="20230418 20:36:49.415"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230418 20:36:49.416" level="INFO">${user_id} = EisGjY9t5JwOrIQK</msg>
<status status="PASS" starttime="20230418 20:36:49.415" endtime="20230418 20:36:49.416"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230418 20:36:49.416" level="INFO">${USER_ID} = EisGjY9t5JwOrIQK</msg>
<status status="PASS" starttime="20230418 20:36:49.416" endtime="20230418 20:36:49.416"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 20:36:49.417" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.417" endtime="20230418 20:36:49.417"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.330" endtime="20230418 20:36:49.417"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 20:36:49.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.417" endtime="20230418 20:36:49.418"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 20:36:49.418" endtime="20230418 20:36:49.419"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.417" endtime="20230418 20:36:49.419"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 20:36:49.420" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 20:36:49.419" endtime="20230418 20:36:49.420"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.419" endtime="20230418 20:36:49.420"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.326" endtime="20230418 20:36:49.420"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="20">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 20:36:49.421" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 20:36:49.421" endtime="20230418 20:36:49.421"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.421" endtime="20230418 20:36:49.422"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 20:36:49.516" level="INFO">GET Request : url=https://serverest.dev/usuarios/EisGjY9t5JwOrIQK 
 path_url=/usuarios/EisGjY9t5JwOrIQK 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 20:36:49.516" level="INFO">GET Response : url=https://serverest.dev/usuarios/EisGjY9t5JwOrIQK 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '785aac1c-4dd7-45aa-b31e-42b23a3a180c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ffb2c7c8393e6a2c361cf630a8be8514', 'Date': 'Tue, 18 Apr 2023 20:36:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '158'} 
 body={
    "nome": "James Woodard",
    "email": "laura01@example.net",
    "password": "#Y2tJCXum2",
    "administrador": "false",
    "_id": "EisGjY9t5JwOrIQK"
} 
 </msg>
<msg timestamp="20230418 20:36:49.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.422" endtime="20230418 20:36:49.517"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 20:36:49.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.517" endtime="20230418 20:36:49.517"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.422" endtime="20230418 20:36:49.517"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 20:36:49.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.518" endtime="20230418 20:36:49.519"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 20:36:49.519" endtime="20230418 20:36:49.519"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.517" endtime="20230418 20:36:49.519"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 20:36:49.520" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230418 20:36:49.520" endtime="20230418 20:36:49.520"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.519" endtime="20230418 20:36:49.520"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.420" endtime="20230418 20:36:49.520"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="25">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 20:36:49.522" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 20:36:49.521" endtime="20230418 20:36:49.522"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.521" endtime="20230418 20:36:49.522"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 20:36:49.523" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 20:36:49.522" endtime="20230418 20:36:49.523"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 20:36:49.523" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 20:36:49.523" endtime="20230418 20:36:49.523"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 20:36:49.604" level="INFO">PUT Request : url=https://serverest.dev/usuarios/EisGjY9t5JwOrIQK 
 path_url=/usuarios/EisGjY9t5JwOrIQK 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 20:36:49.604" level="INFO">PUT Response : url=https://serverest.dev/usuarios/EisGjY9t5JwOrIQK 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '336342d1-161c-418a-8c56-7ff38a60611e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9f168761a916ea7da4910875fbc9e0ed', 'Date': 'Tue, 18 Apr 2023 20:36:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230418 20:36:49.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.523" endtime="20230418 20:36:49.604"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 20:36:49.605" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.605" endtime="20230418 20:36:49.605"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.522" endtime="20230418 20:36:49.605"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 20:36:49.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.606" endtime="20230418 20:36:49.606"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 20:36:49.606" endtime="20230418 20:36:49.607"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.605" endtime="20230418 20:36:49.607"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 20:36:49.608" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 20:36:49.607" endtime="20230418 20:36:49.608"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.607" endtime="20230418 20:36:49.608"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.521" endtime="20230418 20:36:49.608"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 20:36:49.609" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 20:36:49.609" endtime="20230418 20:36:49.610"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.609" endtime="20230418 20:36:49.610"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 20:36:49.701" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/EisGjY9t5JwOrIQK 
 path_url=/usuarios/EisGjY9t5JwOrIQK 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230418 20:36:49.701" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/EisGjY9t5JwOrIQK 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5d50e915-61ab-427c-b0a9-618cdef945db', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '02154fd1d391307de42258151219bcd6', 'Date': 'Tue, 18 Apr 2023 20:36:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230418 20:36:49.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.610" endtime="20230418 20:36:49.701"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 20:36:49.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.702" endtime="20230418 20:36:49.702"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.610" endtime="20230418 20:36:49.702"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 20:36:49.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 20:36:49.702" endtime="20230418 20:36:49.703"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 20:36:49.703" endtime="20230418 20:36:49.704"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.702" endtime="20230418 20:36:49.704"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 20:36:49.705" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 20:36:49.704" endtime="20230418 20:36:49.705"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.704" endtime="20230418 20:36:49.705"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.608" endtime="20230418 20:36:49.705"/>
</test>
<status status="PASS" starttime="20230418 20:36:48.739" endtime="20230418 20:36:49.706"/>
</suite>
<status status="PASS" starttime="20230418 20:36:48.738" endtime="20230418 20:36:49.707"/>
</suite>
<status status="PASS" starttime="20230418 20:36:48.736" endtime="20230418 20:36:49.708"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 20:36:49.718" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:36:49.717" endtime="20230418 20:36:51.032"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 20:36:51.032" endtime="20230418 20:36:51.140"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.717" endtime="20230418 20:36:51.140"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 20:36:51.141" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 20:36:51.141" endtime="20230418 20:36:51.205"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 20:36:51.211" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:36:51.206" endtime="20230418 20:36:51.211"/>
</kw>
<status status="PASS" starttime="20230418 20:36:51.141" endtime="20230418 20:36:51.211"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:51.214" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 20:36:51.212" endtime="20230418 20:36:51.299"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:51.300" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 20:36:51.299" endtime="20230418 20:36:51.380"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:51.381" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 20:36:51.380" endtime="20230418 20:36:51.466"/>
</kw>
<status status="PASS" starttime="20230418 20:36:51.211" endtime="20230418 20:36:51.466"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 20:36:51.481" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 20:36:51.467" endtime="20230418 20:36:51.481"/>
</kw>
<status status="PASS" starttime="20230418 20:36:51.467" endtime="20230418 20:36:51.481"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 20:36:51.495" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 20:36:51.482" endtime="20230418 20:36:51.495"/>
</kw>
<status status="PASS" starttime="20230418 20:36:51.482" endtime="20230418 20:36:51.495"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 20:36:51.496" endtime="20230418 20:36:51.552"/>
</kw>
<status status="PASS" starttime="20230418 20:36:51.495" endtime="20230418 20:36:51.552"/>
</kw>
<status status="PASS" starttime="20230418 20:36:49.716" endtime="20230418 20:36:51.552"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 20:36:51.554" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:36:51.553" endtime="20230418 20:36:52.362"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 20:36:52.363" endtime="20230418 20:36:52.467"/>
</kw>
<status status="PASS" starttime="20230418 20:36:51.553" endtime="20230418 20:36:52.467"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 20:36:52.468" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 20:36:52.467" endtime="20230418 20:36:52.529"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 20:36:52.533" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:36:52.529" endtime="20230418 20:36:52.533"/>
</kw>
<status status="PASS" starttime="20230418 20:36:52.467" endtime="20230418 20:36:52.533"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:52.535" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 20:36:52.534" endtime="20230418 20:36:52.618"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:52.619" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 20:36:52.619" endtime="20230418 20:36:52.697"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:52.698" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 20:36:52.698" endtime="20230418 20:36:52.752"/>
</kw>
<status status="PASS" starttime="20230418 20:36:52.534" endtime="20230418 20:36:52.752"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230418 20:36:52.773" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230418 20:36:52.752" endtime="20230418 20:36:52.774"/>
</kw>
<status status="PASS" starttime="20230418 20:36:52.752" endtime="20230418 20:36:52.774"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 20:36:52.774" endtime="20230418 20:36:52.831"/>
</kw>
<status status="PASS" starttime="20230418 20:36:52.774" endtime="20230418 20:36:52.831"/>
</kw>
<status status="PASS" starttime="20230418 20:36:51.552" endtime="20230418 20:36:52.831"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 20:36:52.833" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:36:52.833" endtime="20230418 20:36:53.655"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 20:36:53.655" endtime="20230418 20:36:53.759"/>
</kw>
<status status="PASS" starttime="20230418 20:36:52.832" endtime="20230418 20:36:53.759"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 20:36:53.760" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 20:36:53.760" endtime="20230418 20:36:53.809"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 20:36:53.816" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:36:53.809" endtime="20230418 20:36:53.816"/>
</kw>
<status status="PASS" starttime="20230418 20:36:53.760" endtime="20230418 20:36:53.816"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:53.818" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 20:36:53.817" endtime="20230418 20:36:53.907"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:53.908" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 20:36:53.907" endtime="20230418 20:36:53.986"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:53.987" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 20:36:53.987" endtime="20230418 20:36:54.063"/>
</kw>
<status status="PASS" starttime="20230418 20:36:53.817" endtime="20230418 20:36:54.063"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 20:36:54.074" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 20:36:54.064" endtime="20230418 20:36:54.074"/>
</kw>
<status status="PASS" starttime="20230418 20:36:54.063" endtime="20230418 20:36:54.075"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 20:36:54.088" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 20:36:54.075" endtime="20230418 20:36:54.088"/>
</kw>
<status status="PASS" starttime="20230418 20:36:54.075" endtime="20230418 20:36:54.088"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 20:36:54.089" endtime="20230418 20:36:54.145"/>
</kw>
<status status="PASS" starttime="20230418 20:36:54.088" endtime="20230418 20:36:54.145"/>
</kw>
<status status="PASS" starttime="20230418 20:36:52.832" endtime="20230418 20:36:54.145"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="27">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 20:36:54.147" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:36:54.147" endtime="20230418 20:36:54.958"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 20:36:54.958" endtime="20230418 20:36:55.063"/>
</kw>
<status status="PASS" starttime="20230418 20:36:54.146" endtime="20230418 20:36:55.063"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 20:36:55.064" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 20:36:55.064" endtime="20230418 20:36:55.114"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 20:36:55.118" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:36:55.114" endtime="20230418 20:36:55.118"/>
</kw>
<status status="PASS" starttime="20230418 20:36:55.063" endtime="20230418 20:36:55.119"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:55.120" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 20:36:55.119" endtime="20230418 20:36:55.221"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:55.222" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 20:36:55.222" endtime="20230418 20:36:55.302"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 20:36:55.303" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 20:36:55.302" endtime="20230418 20:37:00.397"/>
</kw>
<status status="PASS" starttime="20230418 20:36:55.119" endtime="20230418 20:37:00.398"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 20:37:00.412" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 20:37:00.398" endtime="20230418 20:37:00.412"/>
</kw>
<status status="PASS" starttime="20230418 20:37:00.398" endtime="20230418 20:37:00.412"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 20:37:00.425" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 20:37:00.413" endtime="20230418 20:37:00.425"/>
</kw>
<status status="PASS" starttime="20230418 20:37:00.413" endtime="20230418 20:37:00.425"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 20:37:00.426" endtime="20230418 20:37:00.483"/>
</kw>
<status status="PASS" starttime="20230418 20:37:00.425" endtime="20230418 20:37:00.484"/>
</kw>
<status status="PASS" starttime="20230418 20:36:54.146" endtime="20230418 20:37:00.484"/>
</test>
<status status="PASS" starttime="20230418 20:36:49.711" endtime="20230418 20:37:00.484"/>
</suite>
<status status="PASS" starttime="20230418 20:36:49.710" endtime="20230418 20:37:00.486"/>
</suite>
<status status="PASS" starttime="20230418 20:36:49.708" endtime="20230418 20:37:00.487"/>
</suite>
<suite id="s1-s3" name="Visual" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual">
<suite id="s1-s3-s1" name="Test Visual Check" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual/test_visual_check.robot">
<test id="s1-s3-s1-t1" name="Scenario: Visual check login page" line="11">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 20:37:01.600" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:37:01.599" endtime="20230418 20:37:02.475"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 20:37:02.475" endtime="20230418 20:37:02.579"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230418 20:37:02.579" endtime="20230418 20:37:05.033"/>
</kw>
<status status="PASS" starttime="20230418 20:37:01.599" endtime="20230418 20:37:05.033"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Login Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230418 20:37:05.034" endtime="20230418 20:37:05.034"/>
</kw>
<status status="PASS" starttime="20230418 20:37:05.034" endtime="20230418 20:37:07.495"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 20:37:07.496" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 20:37:07.496" endtime="20230418 20:37:07.543"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 20:37:07.546" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:37:07.543" endtime="20230418 20:37:07.546"/>
</kw>
<status status="PASS" starttime="20230418 20:37:07.495" endtime="20230418 20:37:07.547"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230418 20:37:07.547" endtime="20230418 20:37:08.578"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230418 20:37:08.578" endtime="20230418 20:37:08.635"/>
</kw>
<status status="PASS" starttime="20230418 20:37:07.547" endtime="20230418 20:37:08.635"/>
</kw>
<status status="PASS" starttime="20230418 20:37:01.598" endtime="20230418 20:37:08.635"/>
</test>
<test id="s1-s3-s1-t2" name="Scenario: Visual check inventory page" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 20:37:08.637" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 20:37:08.636" endtime="20230418 20:37:09.444"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 20:37:09.444" endtime="20230418 20:37:09.548"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230418 20:37:09.548" endtime="20230418 20:37:11.591"/>
</kw>
<status status="PASS" starttime="20230418 20:37:08.636" endtime="20230418 20:37:11.591"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:37:11.592" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 20:37:11.592" endtime="20230418 20:37:11.674"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 20:37:11.675" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 20:37:11.675" endtime="20230418 20:37:11.760"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 20:37:11.760" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 20:37:11.760" endtime="20230418 20:37:11.846"/>
</kw>
<status status="PASS" starttime="20230418 20:37:11.591" endtime="20230418 20:37:11.846"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 20:37:11.859" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 20:37:11.847" endtime="20230418 20:37:11.859"/>
</kw>
<status status="PASS" starttime="20230418 20:37:11.847" endtime="20230418 20:37:11.859"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 20:37:11.872" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 20:37:11.859" endtime="20230418 20:37:11.872"/>
</kw>
<status status="PASS" starttime="20230418 20:37:11.859" endtime="20230418 20:37:11.872"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Inventory Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230418 20:37:11.873" endtime="20230418 20:37:11.873"/>
</kw>
<status status="PASS" starttime="20230418 20:37:11.872" endtime="20230418 20:37:14.354"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230418 20:37:14.355" endtime="20230418 20:37:15.373"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230418 20:37:15.373" endtime="20230418 20:37:15.430"/>
</kw>
<status status="PASS" starttime="20230418 20:37:14.355" endtime="20230418 20:37:15.430"/>
</kw>
<status status="PASS" starttime="20230418 20:37:08.636" endtime="20230418 20:37:15.430"/>
</test>
<meta name="Applitools TestResults Path">/tmp/tmpfsvq5z49/EyesTestResults-2d5f3af78b794b639012da0c8f6a0576.json</meta>
<status status="PASS" starttime="20230418 20:37:00.491" endtime="20230418 20:37:15.431"/>
</suite>
<status status="PASS" starttime="20230418 20:37:00.488" endtime="20230418 20:37:15.432"/>
</suite>
<status status="PASS" starttime="20230418 20:36:48.718" endtime="20230418 20:37:15.433"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Visual">Tests.Visual</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Test Visual Check">Tests.Visual.Test Visual Check</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
