<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230416 01:04:42.270" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230416 01:04:42.690" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230416 01:04:42.690" endtime="20230416 01:04:42.691"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.689" endtime="20230416 01:04:42.691"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230416 01:04:42.870" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230416 01:04:42.870" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '876ed1e1-b9c3-4e75-8e8e-744644765cec', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f99569815111baba08bed475823bf266;o=1', 'Date': 'Sun, 16 Apr 2023 01:04:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230416 01:04:42.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:42.691" endtime="20230416 01:04:42.871"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230416 01:04:42.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:42.871" endtime="20230416 01:04:42.871"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.691" endtime="20230416 01:04:42.871"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230416 01:04:42.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 01:04:42.872" endtime="20230416 01:04:42.872"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230416 01:04:42.872" endtime="20230416 01:04:42.873"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.871" endtime="20230416 01:04:42.873"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230416 01:04:42.874" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230416 01:04:42.873" endtime="20230416 01:04:42.874"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.873" endtime="20230416 01:04:42.874"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.689" endtime="20230416 01:04:42.874"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230416 01:04:42.875" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230416 01:04:42.875" endtime="20230416 01:04:42.876"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.875" endtime="20230416 01:04:42.876"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230416 01:04:42.877" level="INFO">${name} = Kyle Washington</msg>
<status status="PASS" starttime="20230416 01:04:42.876" endtime="20230416 01:04:42.877"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230416 01:04:42.877" level="INFO">${email} = cristianferguson@example.net</msg>
<status status="PASS" starttime="20230416 01:04:42.877" endtime="20230416 01:04:42.877"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230416 01:04:42.877" level="INFO">${password} = _FJFCVb!6K</msg>
<status status="PASS" starttime="20230416 01:04:42.877" endtime="20230416 01:04:42.877"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230416 01:04:42.878" level="INFO">${name} = Kyle Washington</msg>
<status status="PASS" starttime="20230416 01:04:42.878" endtime="20230416 01:04:42.878"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230416 01:04:42.878" level="INFO">${email} = cristianferguson@example.net</msg>
<status status="PASS" starttime="20230416 01:04:42.878" endtime="20230416 01:04:42.878"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230416 01:04:42.878" level="INFO">${password} = _FJFCVb!6K</msg>
<status status="PASS" starttime="20230416 01:04:42.878" endtime="20230416 01:04:42.879"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.876" endtime="20230416 01:04:42.879"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230416 01:04:42.880" level="INFO">${payload} = {'nome': 'Kyle Washington', 'email': 'cristianferguson@example.net', 'password': '_FJFCVb!6K', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230416 01:04:42.879" endtime="20230416 01:04:42.880"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230416 01:04:42.880" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230416 01:04:42.880" endtime="20230416 01:04:42.880"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230416 01:04:42.984" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '120'} 
 body=b'{"nome": "Kyle Washington", "email": "cristianferguson@example.net", "password": "_FJFCVb!6K", "administrador": "false"}' 
 </msg>
<msg timestamp="20230416 01:04:42.984" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd7946d06-2258-47bc-9bc6-060df6c1c6f4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e15d8cb31de0f8c2fd3199030ee12914', 'Date': 'Sun, 16 Apr 2023 01:04:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "IFFongisQ55686cf"
} 
 </msg>
<msg timestamp="20230416 01:04:42.984" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:42.880" endtime="20230416 01:04:42.984"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230416 01:04:42.985" level="INFO">${user_id} = IFFongisQ55686cf</msg>
<status status="PASS" starttime="20230416 01:04:42.984" endtime="20230416 01:04:42.985"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230416 01:04:42.985" level="INFO">${USER_ID} = IFFongisQ55686cf</msg>
<status status="PASS" starttime="20230416 01:04:42.985" endtime="20230416 01:04:42.985"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230416 01:04:42.986" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:42.985" endtime="20230416 01:04:42.986"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.879" endtime="20230416 01:04:42.986"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230416 01:04:42.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 01:04:42.986" endtime="20230416 01:04:42.987"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230416 01:04:42.987" endtime="20230416 01:04:42.987"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.986" endtime="20230416 01:04:42.988"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230416 01:04:42.988" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230416 01:04:42.988" endtime="20230416 01:04:42.988"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.988" endtime="20230416 01:04:42.989"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.874" endtime="20230416 01:04:42.989"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230416 01:04:42.990" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230416 01:04:42.990" endtime="20230416 01:04:42.990"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.989" endtime="20230416 01:04:42.990"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230416 01:04:43.073" level="INFO">GET Request : url=https://serverest.dev/usuarios/IFFongisQ55686cf 
 path_url=/usuarios/IFFongisQ55686cf 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230416 01:04:43.073" level="INFO">GET Response : url=https://serverest.dev/usuarios/IFFongisQ55686cf 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f1bee75b-1402-48eb-831a-ac2fa774a980', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0acfd6f6add1dc686fdae1f4c2d7537f', 'Date': 'Sun, 16 Apr 2023 01:04:43 GMT', 'Server': 'Google Frontend', 'Content-Length': '169'} 
 body={
    "nome": "Kyle Washington",
    "email": "cristianferguson@example.net",
    "password": "_FJFCVb!6K",
    "administrador": "false",
    "_id": "IFFongisQ55686cf"
} 
 </msg>
<msg timestamp="20230416 01:04:43.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:42.991" endtime="20230416 01:04:43.073"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230416 01:04:43.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:43.073" endtime="20230416 01:04:43.074"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.990" endtime="20230416 01:04:43.074"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230416 01:04:43.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 01:04:43.074" endtime="20230416 01:04:43.075"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230416 01:04:43.075" endtime="20230416 01:04:43.075"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.074" endtime="20230416 01:04:43.076"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230416 01:04:43.076" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230416 01:04:43.076" endtime="20230416 01:04:43.076"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.076" endtime="20230416 01:04:43.077"/>
</kw>
<status status="PASS" starttime="20230416 01:04:42.989" endtime="20230416 01:04:43.077"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230416 01:04:43.078" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230416 01:04:43.078" endtime="20230416 01:04:43.078"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.077" endtime="20230416 01:04:43.078"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230416 01:04:43.079" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230416 01:04:43.079" endtime="20230416 01:04:43.079"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230416 01:04:43.079" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230416 01:04:43.079" endtime="20230416 01:04:43.079"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230416 01:04:43.159" level="INFO">PUT Request : url=https://serverest.dev/usuarios/IFFongisQ55686cf 
 path_url=/usuarios/IFFongisQ55686cf 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230416 01:04:43.159" level="INFO">PUT Response : url=https://serverest.dev/usuarios/IFFongisQ55686cf 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b4b5df42-6d0c-4246-aa65-5cec5b870d28', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '352b8a193fb75e9c5ac9353d1bf68887', 'Date': 'Sun, 16 Apr 2023 01:04:43 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230416 01:04:43.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:43.079" endtime="20230416 01:04:43.160"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230416 01:04:43.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:43.160" endtime="20230416 01:04:43.160"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.078" endtime="20230416 01:04:43.160"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230416 01:04:43.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 01:04:43.161" endtime="20230416 01:04:43.161"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230416 01:04:43.161" endtime="20230416 01:04:43.162"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.160" endtime="20230416 01:04:43.162"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230416 01:04:43.163" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230416 01:04:43.162" endtime="20230416 01:04:43.163"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.162" endtime="20230416 01:04:43.163"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.077" endtime="20230416 01:04:43.163"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230416 01:04:43.164" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230416 01:04:43.164" endtime="20230416 01:04:43.164"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.164" endtime="20230416 01:04:43.165"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230416 01:04:43.254" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/IFFongisQ55686cf 
 path_url=/usuarios/IFFongisQ55686cf 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230416 01:04:43.254" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/IFFongisQ55686cf 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f941eb97-3dd2-44c5-bce2-82c728557eef', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e5ca81ed29fe48820b128bfc453f1b52', 'Date': 'Sun, 16 Apr 2023 01:04:43 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230416 01:04:43.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:43.165" endtime="20230416 01:04:43.254"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230416 01:04:43.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230416 01:04:43.254" endtime="20230416 01:04:43.255"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.165" endtime="20230416 01:04:43.255"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230416 01:04:43.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 01:04:43.255" endtime="20230416 01:04:43.256"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230416 01:04:43.256" endtime="20230416 01:04:43.256"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.255" endtime="20230416 01:04:43.256"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230416 01:04:43.257" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230416 01:04:43.257" endtime="20230416 01:04:43.257"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.257" endtime="20230416 01:04:43.257"/>
</kw>
<status status="PASS" starttime="20230416 01:04:43.163" endtime="20230416 01:04:43.258"/>
</test>
<status status="PASS" starttime="20230416 01:04:42.293" endtime="20230416 01:04:43.258"/>
</suite>
<status status="PASS" starttime="20230416 01:04:42.292" endtime="20230416 01:04:43.259"/>
</suite>
<status status="PASS" starttime="20230416 01:04:42.290" endtime="20230416 01:04:43.260"/>
</suite>
<status status="PASS" starttime="20230416 01:04:42.271" endtime="20230416 01:04:43.261"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
