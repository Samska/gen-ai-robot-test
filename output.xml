<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.8.16 on linux)" generated="20230614 16:48:22.736" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 16:48:24.471" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 16:48:24.470" endtime="20230614 16:48:24.471"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.470" endtime="20230614 16:48:24.471"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 16:48:24.693" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230614 16:48:24.693" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8c4d531d-6013-4d7f-92d1-91dfdc58ae2f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8dcd76ffb1096bba7956cc2e17dd9e9e;o=1', 'Date': 'Wed, 14 Jun 2023 16:48:24 GMT', 'Server': 'Google Frontend', 'Content-Length': '3911'} 
 body={
    "quantidade": 18,
    "usuarios": [
        {
            "nome": "Casey Potter",
            "email": "nrichardson@example.net",
            "password": "N8vairrYHQCh",
            "administrador": "true",
            "_id": "3A7QDwA0qoeZut4G"
        },
        {
            "nome": "Ian Robbins",
            "email": "juliamartin@example.net",
            "password": "AGpxxfTH9Pzl",
            "administrador": "true",
            "_id": "4XTrFnLqIgPhe5QS"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "5xTqld6DxYlXyLAo"
        },
        {
            "nome": "Eduarda Quintana",
            "email": "duda@compass.com",
            "password": "teste",
            "administrador": "true",
            "_id": "7x8LFwR9BYWZNZ60"
        },
        {
            "nome": "Molly White",
            "email": "mullinsnancy@example.com",
            "password": "h7R6c8Ebn7fk",
            "administrador": "true",
            "_id": "JPYYmRMJB0U8TCQz"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "KM1kX8gpMFzdrvQf"
        },
        {
            "nome": "Joseph Frank",
            "email": "rodriguezjonathon@example.net",
            "password": "9Wi9NKtUjXm1",
            "administrador": "true",
            "_id": "LroURRC5q1y0XyjP"
        },
        {
            "nome": "Eduardo Quintana",
            "email": "duda@compasso.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "NLVYrPRdHstclHUu"
        },
        {
            "nome": "Eduarda Quintana",
            "email": "duda@compass.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "NzPmHENIeZlCgjo5"
        },
        {
            "nome": "Tonya Torres",
            "email": "averyterri@example.com",
            "password": "8Hr55QDbnQez",
            "administrador": "true",
            "_id": "S3tB0GbUUUnpzCLi"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ptdr@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "SEYH9wihMf3PZwOv"
        },
        {
            "nome": "Cleisson Atrix",
            "email": "atrix@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "U8yE3jAZEwClVz2R"
        },
        {
            "nome": "Fulano da Silva",
            "email": "zpga@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "ZvRQOcd5FdIZLjFL"
        },
        {
            "nome": "Anthony Shaw",
            "email": "glovermelissa@example.net",
            "password": "G4l2UyUnVBBH",
            "administrador": "true",
            "_id": "a0rAjzmPy9MPnMbD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "phpn@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "fgy0urMmv3p1IkHN"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lwoq@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "i267z8MqsiGOJDrN"
        },
        {
            "nome": "Fulano da Silva",
            "email": "nysm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "jlb2vMqgPSciFizX"
        },
        {
            "nome": "Matthew Henderson",
            "email": "emcdonald@example.net",
            "password": "P9nLVXys6QWD",
            "administrador": "true",
            "_id": "mTT73HwO7cmCOupH"
        }
    ]
} 
 </msg>
<msg timestamp="20230614 16:48:24.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.472" endtime="20230614 16:48:24.694"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 16:48:24.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.694" endtime="20230614 16:48:24.695"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.471" endtime="20230614 16:48:24.695"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 16:48:24.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.696" endtime="20230614 16:48:24.698"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 16:48:24.698" endtime="20230614 16:48:24.699"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.695" endtime="20230614 16:48:24.699"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 16:48:24.701" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230614 16:48:24.700" endtime="20230614 16:48:24.701"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.699" endtime="20230614 16:48:24.701"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 16:48:24.469" endtime="20230614 16:48:24.701"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 16:48:24.703" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 16:48:24.702" endtime="20230614 16:48:24.703"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.702" endtime="20230614 16:48:24.703"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230614 16:48:24.704" level="INFO">${name} = Samuel Lambert</msg>
<status status="PASS" starttime="20230614 16:48:24.704" endtime="20230614 16:48:24.704"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230614 16:48:24.705" level="INFO">${email} = alexanderho@example.com</msg>
<status status="PASS" starttime="20230614 16:48:24.704" endtime="20230614 16:48:24.705"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230614 16:48:24.706" level="INFO">${password} = eRLEKqlmg7iI</msg>
<status status="PASS" starttime="20230614 16:48:24.705" endtime="20230614 16:48:24.706"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 16:48:24.706" level="INFO">${name} = Samuel Lambert</msg>
<status status="PASS" starttime="20230614 16:48:24.706" endtime="20230614 16:48:24.706"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 16:48:24.707" level="INFO">${email} = alexanderho@example.com</msg>
<status status="PASS" starttime="20230614 16:48:24.706" endtime="20230614 16:48:24.707"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 16:48:24.707" level="INFO">${password} = eRLEKqlmg7iI</msg>
<status status="PASS" starttime="20230614 16:48:24.707" endtime="20230614 16:48:24.707"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.703" endtime="20230614 16:48:24.707"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 16:48:24.708" level="INFO">${payload} = {'nome': 'Samuel Lambert', 'email': 'alexanderho@example.com', 'password': 'eRLEKqlmg7iI', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230614 16:48:24.707" endtime="20230614 16:48:24.708"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 16:48:24.709" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230614 16:48:24.708" endtime="20230614 16:48:24.709"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 16:48:24.813" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"nome": "Samuel Lambert", "email": "alexanderho@example.com", "password": "eRLEKqlmg7iI", "administrador": "false"}' 
 </msg>
<msg timestamp="20230614 16:48:24.814" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '84031af3-b9b8-4747-84fe-5dec97f3b1bf', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '08c12b3ccf407944a622d1e27e778be2', 'Date': 'Wed, 14 Jun 2023 16:48:24 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "m3OkY6BjqVMlmcIk"
} 
 </msg>
<msg timestamp="20230614 16:48:24.814" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.709" endtime="20230614 16:48:24.814"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230614 16:48:24.816" level="INFO">${user_id} = m3OkY6BjqVMlmcIk</msg>
<status status="PASS" starttime="20230614 16:48:24.814" endtime="20230614 16:48:24.816"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230614 16:48:24.817" level="INFO">${USER_ID} = m3OkY6BjqVMlmcIk</msg>
<status status="PASS" starttime="20230614 16:48:24.816" endtime="20230614 16:48:24.817"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 16:48:24.818" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.817" endtime="20230614 16:48:24.818"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.707" endtime="20230614 16:48:24.818"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 16:48:24.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.819" endtime="20230614 16:48:24.820"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 16:48:24.821" endtime="20230614 16:48:24.822"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.818" endtime="20230614 16:48:24.822"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 16:48:24.823" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230614 16:48:24.822" endtime="20230614 16:48:24.823"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.822" endtime="20230614 16:48:24.823"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 16:48:24.701" endtime="20230614 16:48:24.823"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 16:48:24.825" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 16:48:24.825" endtime="20230614 16:48:24.825"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.824" endtime="20230614 16:48:24.826"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 16:48:24.926" level="INFO">GET Request : url=https://serverest.dev/usuarios/m3OkY6BjqVMlmcIk 
 path_url=/usuarios/m3OkY6BjqVMlmcIk 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230614 16:48:24.926" level="INFO">GET Response : url=https://serverest.dev/usuarios/m3OkY6BjqVMlmcIk 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fef77138-5428-4fce-bd7c-eadf52faf08f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '90491220682fc9a5ab2edece299cb753', 'Date': 'Wed, 14 Jun 2023 16:48:24 GMT', 'Server': 'Google Frontend', 'Content-Length': '165'} 
 body={
    "nome": "Samuel Lambert",
    "email": "alexanderho@example.com",
    "password": "eRLEKqlmg7iI",
    "administrador": "false",
    "_id": "m3OkY6BjqVMlmcIk"
} 
 </msg>
<msg timestamp="20230614 16:48:24.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.826" endtime="20230614 16:48:24.927"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 16:48:24.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.927" endtime="20230614 16:48:24.927"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.826" endtime="20230614 16:48:24.927"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 16:48:24.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.928" endtime="20230614 16:48:24.930"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 16:48:24.930" endtime="20230614 16:48:24.931"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.928" endtime="20230614 16:48:24.931"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 16:48:24.933" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230614 16:48:24.932" endtime="20230614 16:48:24.933"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.931" endtime="20230614 16:48:24.933"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 16:48:24.824" endtime="20230614 16:48:24.933"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 16:48:24.935" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 16:48:24.935" endtime="20230614 16:48:24.935"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.934" endtime="20230614 16:48:24.935"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 16:48:24.936" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230614 16:48:24.936" endtime="20230614 16:48:24.936"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 16:48:24.937" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230614 16:48:24.936" endtime="20230614 16:48:24.937"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 16:48:25.035" level="INFO">PUT Request : url=https://serverest.dev/usuarios/m3OkY6BjqVMlmcIk 
 path_url=/usuarios/m3OkY6BjqVMlmcIk 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230614 16:48:25.035" level="INFO">PUT Response : url=https://serverest.dev/usuarios/m3OkY6BjqVMlmcIk 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7475a107-f030-466f-bf56-7c9ab96554f4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'af02c18f14c04f2c1073d098bb9f2886', 'Date': 'Wed, 14 Jun 2023 16:48:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230614 16:48:25.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:24.937" endtime="20230614 16:48:25.035"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 16:48:25.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:25.035" endtime="20230614 16:48:25.036"/>
</kw>
<status status="PASS" starttime="20230614 16:48:24.935" endtime="20230614 16:48:25.036"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 16:48:25.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 16:48:25.037" endtime="20230614 16:48:25.038"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 16:48:25.038" endtime="20230614 16:48:25.039"/>
</kw>
<status status="PASS" starttime="20230614 16:48:25.036" endtime="20230614 16:48:25.039"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 16:48:25.040" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230614 16:48:25.039" endtime="20230614 16:48:25.040"/>
</kw>
<status status="PASS" starttime="20230614 16:48:25.039" endtime="20230614 16:48:25.040"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 16:48:24.933" endtime="20230614 16:48:25.040"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 16:48:25.042" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 16:48:25.042" endtime="20230614 16:48:25.042"/>
</kw>
<status status="PASS" starttime="20230614 16:48:25.041" endtime="20230614 16:48:25.042"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 16:48:25.142" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/m3OkY6BjqVMlmcIk 
 path_url=/usuarios/m3OkY6BjqVMlmcIk 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230614 16:48:25.142" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/m3OkY6BjqVMlmcIk 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '79af84d1-7523-4c0e-a496-38a873657596', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '26677fa5f44601d4c749befb6e5b0fb5', 'Date': 'Wed, 14 Jun 2023 16:48:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230614 16:48:25.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:25.043" endtime="20230614 16:48:25.142"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 16:48:25.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 16:48:25.143" endtime="20230614 16:48:25.143"/>
</kw>
<status status="PASS" starttime="20230614 16:48:25.043" endtime="20230614 16:48:25.144"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 16:48:25.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 16:48:25.145" endtime="20230614 16:48:25.146"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 16:48:25.146" endtime="20230614 16:48:25.147"/>
</kw>
<status status="PASS" starttime="20230614 16:48:25.144" endtime="20230614 16:48:25.147"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 16:48:25.148" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230614 16:48:25.148" endtime="20230614 16:48:25.149"/>
</kw>
<status status="PASS" starttime="20230614 16:48:25.147" endtime="20230614 16:48:25.149"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 16:48:25.041" endtime="20230614 16:48:25.149"/>
</test>
<status status="PASS" starttime="20230614 16:48:22.762" endtime="20230614 16:48:25.150"/>
</suite>
<status status="PASS" starttime="20230614 16:48:22.760" endtime="20230614 16:48:25.151"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 16:48:25.164" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 16:48:25.164" endtime="20230614 16:49:01.740"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 16:49:01.740" endtime="20230614 16:49:01.932"/>
</kw>
<status status="PASS" starttime="20230614 16:48:25.163" endtime="20230614 16:49:01.933"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 16:49:01.948" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 16:49:01.934" endtime="20230614 16:49:01.949"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:01.950" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 16:49:01.949" endtime="20230614 16:49:02.610"/>
</kw>
<status status="PASS" starttime="20230614 16:49:01.933" endtime="20230614 16:49:02.610"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:02.611" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 16:49:02.610" endtime="20230614 16:49:03.081"/>
</kw>
<status status="PASS" starttime="20230614 16:49:02.610" endtime="20230614 16:49:03.081"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 16:49:03.082" endtime="20230614 16:49:03.323"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 16:49:03.346" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 16:49:03.323" endtime="20230614 16:49:03.346"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 16:49:03.522" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230614 16:49:03.347" endtime="20230614 16:49:03.522"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 16:49:03.540" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230614 16:49:03.523" endtime="20230614 16:49:03.541"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 16:49:03.556" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230614 16:49:03.541" endtime="20230614 16:49:03.556"/>
</kw>
<status status="PASS" starttime="20230614 16:49:03.081" endtime="20230614 16:49:03.556"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 16:49:03.557" endtime="20230614 16:49:03.614"/>
</kw>
<status status="PASS" starttime="20230614 16:49:03.557" endtime="20230614 16:49:03.614"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 16:48:25.163" endtime="20230614 16:49:03.614"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 16:49:03.617" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 16:49:03.616" endtime="20230614 16:49:04.647"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 16:49:04.648" endtime="20230614 16:49:04.753"/>
</kw>
<status status="PASS" starttime="20230614 16:49:03.615" endtime="20230614 16:49:04.753"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 16:49:04.762" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 16:49:04.755" endtime="20230614 16:49:04.762"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:04.763" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 16:49:04.762" endtime="20230614 16:49:04.836"/>
</kw>
<status status="PASS" starttime="20230614 16:49:04.754" endtime="20230614 16:49:04.836"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230614 16:49:04.838" level="INFO">${name} = Gregory Hall</msg>
<status status="PASS" starttime="20230614 16:49:04.837" endtime="20230614 16:49:04.838"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230614 16:49:04.839" level="INFO">${email} = jodihale@example.com</msg>
<status status="PASS" starttime="20230614 16:49:04.838" endtime="20230614 16:49:04.839"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230614 16:49:04.839" level="INFO">${password} = 5gGSmuPRPPnk</msg>
<status status="PASS" starttime="20230614 16:49:04.839" endtime="20230614 16:49:04.839"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:04.840" level="INFO">Typing text 'Gregory Hall' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230614 16:49:04.839" endtime="20230614 16:49:05.362"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:05.363" level="INFO">Typing text 'jodihale@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230614 16:49:05.363" endtime="20230614 16:49:05.635"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:05.637" level="INFO">Typing text '5gGSmuPRPPnk' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230614 16:49:05.636" endtime="20230614 16:49:05.834"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:05.835" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230614 16:49:05.834" endtime="20230614 16:49:06.001"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 16:49:06.001" level="INFO">${name} = Gregory Hall</msg>
<status status="PASS" starttime="20230614 16:49:06.001" endtime="20230614 16:49:06.002"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 16:49:06.002" level="INFO">${email} = jodihale@example.com</msg>
<status status="PASS" starttime="20230614 16:49:06.002" endtime="20230614 16:49:06.002"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 16:49:06.003" level="INFO">${password} = 5gGSmuPRPPnk</msg>
<status status="PASS" starttime="20230614 16:49:06.002" endtime="20230614 16:49:06.003"/>
</kw>
<status status="PASS" starttime="20230614 16:49:04.837" endtime="20230614 16:49:06.003"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:06.004" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 16:49:06.003" endtime="20230614 16:49:06.076"/>
</kw>
<status status="PASS" starttime="20230614 16:49:06.003" endtime="20230614 16:49:06.077"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 16:49:06.077" endtime="20230614 16:49:06.319"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 16:49:06.342" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 16:49:06.320" endtime="20230614 16:49:06.342"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 16:49:06.358" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230614 16:49:06.342" endtime="20230614 16:49:06.358"/>
</kw>
<status status="PASS" starttime="20230614 16:49:06.077" endtime="20230614 16:49:06.358"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 16:49:06.359" endtime="20230614 16:49:06.415"/>
</kw>
<status status="PASS" starttime="20230614 16:49:06.358" endtime="20230614 16:49:06.415"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 16:49:03.615" endtime="20230614 16:49:06.415"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 16:49:06.418" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 16:49:06.417" endtime="20230614 16:49:07.436"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 16:49:07.436" endtime="20230614 16:49:07.540"/>
</kw>
<status status="PASS" starttime="20230614 16:49:06.417" endtime="20230614 16:49:07.541"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 16:49:07.548" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 16:49:07.542" endtime="20230614 16:49:07.548"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:07.549" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 16:49:07.548" endtime="20230614 16:49:07.653"/>
</kw>
<status status="PASS" starttime="20230614 16:49:07.541" endtime="20230614 16:49:07.653"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:07.654" level="INFO">Typing text 'Gregory Hall' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230614 16:49:07.654" endtime="20230614 16:49:07.797"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:07.798" level="INFO">Typing text 'jodihale@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230614 16:49:07.797" endtime="20230614 16:49:07.927"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:07.928" level="INFO">Typing text '5gGSmuPRPPnk' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230614 16:49:07.927" endtime="20230614 16:49:08.036"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:08.037" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230614 16:49:08.036" endtime="20230614 16:49:08.130"/>
</kw>
<status status="PASS" starttime="20230614 16:49:07.653" endtime="20230614 16:49:08.130"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 16:49:08.131" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 16:49:08.131" endtime="20230614 16:49:08.201"/>
</kw>
<status status="PASS" starttime="20230614 16:49:08.130" endtime="20230614 16:49:08.201"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 16:49:08.202" endtime="20230614 16:49:08.447"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 16:49:08.469" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 16:49:08.447" endtime="20230614 16:49:08.470"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 16:49:08.487" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230614 16:49:08.470" endtime="20230614 16:49:08.487"/>
</kw>
<status status="PASS" starttime="20230614 16:49:08.201" endtime="20230614 16:49:08.487"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 16:49:08.487" endtime="20230614 16:49:08.544"/>
</kw>
<status status="PASS" starttime="20230614 16:49:08.487" endtime="20230614 16:49:08.544"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 16:49:06.416" endtime="20230614 16:49:08.544"/>
</test>
<status status="PASS" starttime="20230614 16:48:25.154" endtime="20230614 16:49:08.545"/>
</suite>
<status status="PASS" starttime="20230614 16:48:25.152" endtime="20230614 16:49:08.547"/>
</suite>
<status status="PASS" starttime="20230614 16:48:22.737" endtime="20230614 16:49:08.548"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
