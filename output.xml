<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230525 21:28:27.830" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:28:28.310" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:28:28.309" endtime="20230525 21:28:28.310"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.309" endtime="20230525 21:28:28.310"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:28:28.468" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230525 21:28:28.468" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '80481e1d-bcb3-44c4-b6a2-139430d12572', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3eba0608691be85e049080c3fce44cc7;o=1', 'Date': 'Thu, 25 May 2023 21:28:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '2402'} 
 body={
    "quantidade": 11,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "cryz@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5Wlo4mCHoDjNaP5x"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "ujxn@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "HfpK4LAx1RO9mZ3S"
        },
        {
            "nome": "Nancy Brown",
            "email": "walterdavis@example.com",
            "password": "qKZjeZoSb6PD",
            "administrador": "true",
            "_id": "ORRSONnYKEYQe6c8"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "czll@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "YOgJidev4MpmkvO2"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "bksi@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "d9dfzIbziIntlQrT"
        },
        {
            "nome": "Timothy Buchanan",
            "email": "kallen@example.org",
            "password": "KRUDTtcR4pCe",
            "administrador": "true",
            "_id": "oixvdj6ujFoOkGdt"
        },
        {
            "nome": "{{nome}}",
            "email": "Kaia@qa.com.br",
            "password": "R9tZkf9cCyWYexP",
            "administrador": "true",
            "_id": "prHe7mOKBshMbPuU"
        },
        {
            "nome": "Robin Gallagher DVM",
            "email": "melissa56@example.com",
            "password": "1bTScLAQ87Rk",
            "administrador": "true",
            "_id": "re6Zfuq7Tv3kKF0K"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "qijl@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "rmQfGTfsl3IptIaP"
        },
        {
            "nome": "{{nome}}",
            "email": "Coty@qa.com.br",
            "password": "ohUPWAS_LS3Kq3k",
            "administrador": "true",
            "_id": "rx49xrrBzkIZWoMz"
        }
    ]
} 
 </msg>
<msg timestamp="20230525 21:28:28.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.310" endtime="20230525 21:28:28.468"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:28:28.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.468" endtime="20230525 21:28:28.469"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.310" endtime="20230525 21:28:28.469"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:28:28.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.469" endtime="20230525 21:28:28.470"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:28:28.470" endtime="20230525 21:28:28.471"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.469" endtime="20230525 21:28:28.471"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:28:28.472" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230525 21:28:28.471" endtime="20230525 21:28:28.472"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.471" endtime="20230525 21:28:28.472"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:28:28.308" endtime="20230525 21:28:28.472"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:28:28.474" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:28:28.474" endtime="20230525 21:28:28.474"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.473" endtime="20230525 21:28:28.474"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230525 21:28:28.475" level="INFO">${name} = Tony Peterson</msg>
<status status="PASS" starttime="20230525 21:28:28.475" endtime="20230525 21:28:28.475"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230525 21:28:28.476" level="INFO">${email} = lisawise@example.net</msg>
<status status="PASS" starttime="20230525 21:28:28.476" endtime="20230525 21:28:28.476"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230525 21:28:28.476" level="INFO">${password} = 10gQ3Uwd39CC</msg>
<status status="PASS" starttime="20230525 21:28:28.476" endtime="20230525 21:28:28.476"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:28:28.477" level="INFO">${name} = Tony Peterson</msg>
<status status="PASS" starttime="20230525 21:28:28.477" endtime="20230525 21:28:28.477"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:28:28.477" level="INFO">${email} = lisawise@example.net</msg>
<status status="PASS" starttime="20230525 21:28:28.477" endtime="20230525 21:28:28.477"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:28:28.478" level="INFO">${password} = 10gQ3Uwd39CC</msg>
<status status="PASS" starttime="20230525 21:28:28.477" endtime="20230525 21:28:28.478"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.474" endtime="20230525 21:28:28.478"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:28:28.479" level="INFO">${payload} = {'nome': 'Tony Peterson', 'email': 'lisawise@example.net', 'password': '10gQ3Uwd39CC', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230525 21:28:28.478" endtime="20230525 21:28:28.479"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:28:28.479" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230525 21:28:28.479" endtime="20230525 21:28:28.479"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:28:28.570" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Tony Peterson", "email": "lisawise@example.net", "password": "10gQ3Uwd39CC", "administrador": "false"}' 
 </msg>
<msg timestamp="20230525 21:28:28.570" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fb4b2088-ae12-48f6-9496-e5f7a135a406', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ce7dfce4d2fbd7b8a5d425c4a33c84eb', 'Date': 'Thu, 25 May 2023 21:28:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "bBUSxq1tSHqAs9GM"
} 
 </msg>
<msg timestamp="20230525 21:28:28.570" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.479" endtime="20230525 21:28:28.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230525 21:28:28.571" level="INFO">${user_id} = bBUSxq1tSHqAs9GM</msg>
<status status="PASS" starttime="20230525 21:28:28.570" endtime="20230525 21:28:28.571"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230525 21:28:28.572" level="INFO">${USER_ID} = bBUSxq1tSHqAs9GM</msg>
<status status="PASS" starttime="20230525 21:28:28.571" endtime="20230525 21:28:28.572"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:28:28.572" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.572" endtime="20230525 21:28:28.572"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.478" endtime="20230525 21:28:28.572"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:28:28.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.573" endtime="20230525 21:28:28.573"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:28:28.574" endtime="20230525 21:28:28.574"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.572" endtime="20230525 21:28:28.574"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:28:28.575" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230525 21:28:28.575" endtime="20230525 21:28:28.575"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.574" endtime="20230525 21:28:28.576"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:28:28.473" endtime="20230525 21:28:28.576"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:28:28.577" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:28:28.577" endtime="20230525 21:28:28.578"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.577" endtime="20230525 21:28:28.578"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:28:28.660" level="INFO">GET Request : url=https://serverest.dev/usuarios/bBUSxq1tSHqAs9GM 
 path_url=/usuarios/bBUSxq1tSHqAs9GM 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230525 21:28:28.660" level="INFO">GET Response : url=https://serverest.dev/usuarios/bBUSxq1tSHqAs9GM 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5ebb8780-aac1-42c1-af14-a1b06612fec9', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cb2dbd0d9e1ba7b79079df2d3e2e0590', 'Date': 'Thu, 25 May 2023 21:28:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Tony Peterson",
    "email": "lisawise@example.net",
    "password": "10gQ3Uwd39CC",
    "administrador": "false",
    "_id": "bBUSxq1tSHqAs9GM"
} 
 </msg>
<msg timestamp="20230525 21:28:28.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.578" endtime="20230525 21:28:28.660"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:28:28.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.661" endtime="20230525 21:28:28.661"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.578" endtime="20230525 21:28:28.661"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:28:28.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.662" endtime="20230525 21:28:28.662"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:28:28.663" endtime="20230525 21:28:28.663"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.661" endtime="20230525 21:28:28.663"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:28:28.664" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230525 21:28:28.664" endtime="20230525 21:28:28.665"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.664" endtime="20230525 21:28:28.665"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:28:28.576" endtime="20230525 21:28:28.665"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:28:28.666" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:28:28.666" endtime="20230525 21:28:28.666"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.666" endtime="20230525 21:28:28.667"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:28:28.667" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230525 21:28:28.667" endtime="20230525 21:28:28.667"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:28:28.668" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230525 21:28:28.668" endtime="20230525 21:28:28.668"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:28:28.755" level="INFO">PUT Request : url=https://serverest.dev/usuarios/bBUSxq1tSHqAs9GM 
 path_url=/usuarios/bBUSxq1tSHqAs9GM 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230525 21:28:28.755" level="INFO">PUT Response : url=https://serverest.dev/usuarios/bBUSxq1tSHqAs9GM 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c2a9f5b9-830b-4d70-9309-623f98353779', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7f5bc7712a1a139587005e2907bbd0e4', 'Date': 'Thu, 25 May 2023 21:28:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230525 21:28:28.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.668" endtime="20230525 21:28:28.755"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:28:28.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.756" endtime="20230525 21:28:28.756"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.667" endtime="20230525 21:28:28.756"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:28:28.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.757" endtime="20230525 21:28:28.758"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:28:28.758" endtime="20230525 21:28:28.758"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.756" endtime="20230525 21:28:28.758"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:28:28.760" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230525 21:28:28.759" endtime="20230525 21:28:28.760"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.759" endtime="20230525 21:28:28.760"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:28:28.665" endtime="20230525 21:28:28.760"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:28:28.761" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:28:28.761" endtime="20230525 21:28:28.762"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.761" endtime="20230525 21:28:28.762"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:28:28.844" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/bBUSxq1tSHqAs9GM 
 path_url=/usuarios/bBUSxq1tSHqAs9GM 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230525 21:28:28.844" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/bBUSxq1tSHqAs9GM 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '619942d0-3a27-430c-86d6-540973a84b0a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a5dfea798e1e8ea57fa66a25a9bbb1e7', 'Date': 'Thu, 25 May 2023 21:28:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230525 21:28:28.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.762" endtime="20230525 21:28:28.844"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:28:28.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.844" endtime="20230525 21:28:28.845"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.762" endtime="20230525 21:28:28.845"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:28:28.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:28:28.845" endtime="20230525 21:28:28.846"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:28:28.846" endtime="20230525 21:28:28.847"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.845" endtime="20230525 21:28:28.847"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:28:28.848" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230525 21:28:28.848" endtime="20230525 21:28:28.848"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.847" endtime="20230525 21:28:28.848"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:28:28.760" endtime="20230525 21:28:28.849"/>
</test>
<status status="PASS" starttime="20230525 21:28:27.851" endtime="20230525 21:28:28.849"/>
</suite>
<status status="PASS" starttime="20230525 21:28:27.849" endtime="20230525 21:28:28.851"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:28:28.861" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:28:28.860" endtime="20230525 21:28:30.859"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:28:30.859" endtime="20230525 21:28:30.978"/>
</kw>
<status status="PASS" starttime="20230525 21:28:28.860" endtime="20230525 21:28:30.979"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230525 21:28:30.985" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230525 21:28:30.979" endtime="20230525 21:28:30.985"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:30.986" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230525 21:28:30.985" endtime="20230525 21:28:31.057"/>
</kw>
<status status="PASS" starttime="20230525 21:28:30.979" endtime="20230525 21:28:31.058"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:31.059" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230525 21:28:31.058" endtime="20230525 21:28:31.127"/>
</kw>
<status status="PASS" starttime="20230525 21:28:31.058" endtime="20230525 21:28:31.127"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230525 21:28:31.128" endtime="20230525 21:28:31.366"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230525 21:28:31.385" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230525 21:28:31.366" endtime="20230525 21:28:31.385"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:28:31.400" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230525 21:28:31.385" endtime="20230525 21:28:31.400"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:28:31.413" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230525 21:28:31.401" endtime="20230525 21:28:31.413"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:28:31.426" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230525 21:28:31.413" endtime="20230525 21:28:31.426"/>
</kw>
<status status="PASS" starttime="20230525 21:28:31.127" endtime="20230525 21:28:31.426"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230525 21:28:31.427" endtime="20230525 21:28:31.482"/>
</kw>
<status status="PASS" starttime="20230525 21:28:31.427" endtime="20230525 21:28:31.483"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230525 21:28:28.860" endtime="20230525 21:28:31.483"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:28:31.485" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:28:31.484" endtime="20230525 21:28:32.677"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:28:32.677" endtime="20230525 21:28:32.799"/>
</kw>
<status status="PASS" starttime="20230525 21:28:31.484" endtime="20230525 21:28:32.799"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230525 21:28:32.805" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230525 21:28:32.800" endtime="20230525 21:28:32.805"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:32.806" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230525 21:28:32.805" endtime="20230525 21:28:32.860"/>
</kw>
<status status="PASS" starttime="20230525 21:28:32.799" endtime="20230525 21:28:32.860"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230525 21:28:32.861" level="INFO">${name} = Patrick Allen</msg>
<status status="PASS" starttime="20230525 21:28:32.861" endtime="20230525 21:28:32.861"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230525 21:28:32.862" level="INFO">${email} = danielle42@example.net</msg>
<status status="PASS" starttime="20230525 21:28:32.861" endtime="20230525 21:28:32.862"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230525 21:28:32.862" level="INFO">${password} = rw5IP9oHPT6s</msg>
<status status="PASS" starttime="20230525 21:28:32.862" endtime="20230525 21:28:32.862"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:32.863" level="INFO">Typing text 'Patrick Allen' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230525 21:28:32.863" endtime="20230525 21:28:32.972"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:32.973" level="INFO">Typing text 'danielle42@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230525 21:28:32.972" endtime="20230525 21:28:33.086"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:33.087" level="INFO">Typing text 'rw5IP9oHPT6s' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230525 21:28:33.087" endtime="20230525 21:28:33.178"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:33.179" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230525 21:28:33.179" endtime="20230525 21:28:33.251"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:28:33.252" level="INFO">${name} = Patrick Allen</msg>
<status status="PASS" starttime="20230525 21:28:33.251" endtime="20230525 21:28:33.252"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:28:33.252" level="INFO">${email} = danielle42@example.net</msg>
<status status="PASS" starttime="20230525 21:28:33.252" endtime="20230525 21:28:33.252"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:28:33.253" level="INFO">${password} = rw5IP9oHPT6s</msg>
<status status="PASS" starttime="20230525 21:28:33.252" endtime="20230525 21:28:33.253"/>
</kw>
<status status="PASS" starttime="20230525 21:28:32.860" endtime="20230525 21:28:33.253"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:33.255" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230525 21:28:33.253" endtime="20230525 21:28:33.313"/>
</kw>
<status status="PASS" starttime="20230525 21:28:33.253" endtime="20230525 21:28:33.313"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230525 21:28:33.314" endtime="20230525 21:28:33.549"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230525 21:28:33.567" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230525 21:28:33.549" endtime="20230525 21:28:33.567"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:28:33.581" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230525 21:28:33.568" endtime="20230525 21:28:33.581"/>
</kw>
<status status="PASS" starttime="20230525 21:28:33.314" endtime="20230525 21:28:33.581"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230525 21:28:33.582" endtime="20230525 21:28:33.637"/>
</kw>
<status status="PASS" starttime="20230525 21:28:33.581" endtime="20230525 21:28:33.637"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230525 21:28:31.484" endtime="20230525 21:28:33.637"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:28:33.639" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:28:33.638" endtime="20230525 21:28:34.889"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:28:34.890" endtime="20230525 21:28:34.993"/>
</kw>
<status status="PASS" starttime="20230525 21:28:33.638" endtime="20230525 21:28:34.993"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230525 21:28:35.001" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230525 21:28:34.994" endtime="20230525 21:28:35.001"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:35.002" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230525 21:28:35.001" endtime="20230525 21:28:35.082"/>
</kw>
<status status="PASS" starttime="20230525 21:28:34.994" endtime="20230525 21:28:35.082"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:35.083" level="INFO">Typing text 'Patrick Allen' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230525 21:28:35.083" endtime="20230525 21:28:35.204"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:35.205" level="INFO">Typing text 'danielle42@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230525 21:28:35.204" endtime="20230525 21:28:35.316"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:35.317" level="INFO">Typing text 'rw5IP9oHPT6s' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230525 21:28:35.316" endtime="20230525 21:28:35.413"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:35.414" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230525 21:28:35.414" endtime="20230525 21:28:35.500"/>
</kw>
<status status="PASS" starttime="20230525 21:28:35.082" endtime="20230525 21:28:35.500"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230525 21:28:35.501" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230525 21:28:35.500" endtime="20230525 21:28:35.560"/>
</kw>
<status status="PASS" starttime="20230525 21:28:35.500" endtime="20230525 21:28:35.560"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230525 21:28:35.561" endtime="20230525 21:28:35.796"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230525 21:28:35.814" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230525 21:28:35.796" endtime="20230525 21:28:35.815"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:28:35.828" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230525 21:28:35.815" endtime="20230525 21:28:35.828"/>
</kw>
<status status="PASS" starttime="20230525 21:28:35.561" endtime="20230525 21:28:35.828"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230525 21:28:35.829" endtime="20230525 21:28:35.885"/>
</kw>
<status status="PASS" starttime="20230525 21:28:35.829" endtime="20230525 21:28:35.885"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230525 21:28:33.637" endtime="20230525 21:28:35.885"/>
</test>
<status status="PASS" starttime="20230525 21:28:28.853" endtime="20230525 21:28:35.886"/>
</suite>
<status status="PASS" starttime="20230525 21:28:28.851" endtime="20230525 21:28:35.887"/>
</suite>
<suite id="s1-s3" name="Visual" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual">
<suite id="s1-s3-s1" name="Test Visual Check" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual/test_visual_check.robot">
<test id="s1-s3-s1-t1" name="Scenario: Visual check login page" line="11">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:28:36.807" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:28:36.806" endtime="20230525 21:28:38.094"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:28:38.095" endtime="20230525 21:28:38.212"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<msg timestamp="20230525 21:28:40.505" level="ERROR">Re-raising an error received from SDK server: USDKFailure('Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)', '    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)\n    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)\n    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)\n    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)\n    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)\n    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)\n    at async openEyes (/snapshot/core/dist/open-eyes.js)\n    at async /snapshot/core/dist/make-manager.js')</msg>
<msg timestamp="20230525 21:28:40.507" level="FAIL">EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 145, in open
    return eyes.open(self.fetch_driver())
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 92, in open
    self._eyes_ref = self._commands.manager_open_eyes(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 151, in manager_open_eyes
    return self._checked_command(context, "EyesManager.openEyes", payload)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 271, in _checked_command
    _check_error(response_payload)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 281, in _check_error
    raise usdk_error
applitools.common.errors.USDKFailure: Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)
    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)
    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)
    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)
    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)
    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)
    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)
    at async openEyes (/snapshot/core/dist/open-eyes.js)
    at async /snapshot/core/dist/make-manager.js
</msg>
<status status="FAIL" starttime="20230525 21:28:38.213" endtime="20230525 21:28:40.507"/>
</kw>
<status status="FAIL" starttime="20230525 21:28:36.805" endtime="20230525 21:28:40.507"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<msg timestamp="20230525 21:28:40.509" level="FAIL">EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 164, in close
    return self.current_eyes.close_async()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 199, in close_async
    return self._close(False, False)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 528, in _close
    raise EyesError("Eyes not open")
applitools.common.errors.EyesError: Eyes not open
</msg>
<status status="FAIL" starttime="20230525 21:28:40.508" endtime="20230525 21:28:40.509"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="NOT RUN" starttime="20230525 21:28:40.509" endtime="20230525 21:28:40.509"/>
</kw>
<status status="FAIL" starttime="20230525 21:28:40.508" endtime="20230525 21:28:40.509">EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 164, in close
    return self.current_eyes.close_async()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 199, in close_async
    return self._close(False, False)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 528, in _close
    raise EyesError("Eyes not open")
applitools.common.errors.EyesError: Eyes not open
</status>
</kw>
<tag>visual</tag>
<status status="FAIL" starttime="20230525 21:28:36.804" endtime="20230525 21:28:40.509">Setup failed:
EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 145, in open
    return eyes.open(self.fetch_driver())
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 92, in open
    self._eyes_ref = self._commands.manager_open_eyes(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 151, in manager_open_eyes
    return self._checked_command(context, "EyesManager.openEyes", payload)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/command_executor.py", line 271, in _checked_command
    _check_error(response_payload)
    [ Message content over the limit has been removed. ]
...ackages/applitools/selenium/command_executor.py", line 281, in _check_error
    raise usdk_error
applitools.common.errors.USDKFailure: Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)
    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)
    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)
    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)
    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)
    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)
    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)
    at async openEyes (/snapshot/core/dist/open-eyes.js)
    at async /snapshot/core/dist/make-manager.js

Also teardown failed:
EyesLibraryError: Failed to run EyesLibrary
Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/__init__.py", line 263, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/robotlibcore.py", line 122, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/EyesLibrary/keywords/session.py", line 164, in close
    return self.current_eyes.close_async()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 199, in close_async
    return self._close(False, False)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/applitools/selenium/eyes.py", line 528, in _close
    raise EyesError("Eyes not open")
applitools.common.errors.EyesError: Eyes not open
</status>
</test>
<test id="s1-s3-s1-t2" name="Scenario: Visual check signup page" line="16">
<tag>robot:exit</tag>
<tag>visual</tag>
<status status="FAIL" starttime="20230525 21:28:40.513" endtime="20230525 21:28:40.514">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-t3" name="Scenario: Visual check signup with empty fields" line="21">
<tag>robot:exit</tag>
<tag>visual</tag>
<status status="FAIL" starttime="20230525 21:28:40.514" endtime="20230525 21:28:40.515">Test execution stopped due to a fatal error.</status>
</test>
<meta name="Applitools TestResults Path">/tmp/tmpnu7jre5j/EyesTestResults-0c7bbadbf96d40dbb94f3004335b3c84.json</meta>
<status status="FAIL" starttime="20230525 21:28:35.890" endtime="20230525 21:28:40.515"/>
</suite>
<status status="FAIL" starttime="20230525 21:28:35.888" endtime="20230525 21:28:40.516"/>
</suite>
<status status="FAIL" starttime="20230525 21:28:27.831" endtime="20230525 21:28:40.517"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="1" skip="0" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
<stat pass="0" fail="3" skip="0">visual</stat>
</tag>
<suite>
<stat pass="8" fail="3" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
<stat pass="0" fail="3" skip="0" id="s1-s3" name="Visual">Tests.Visual</stat>
<stat pass="0" fail="3" skip="0" id="s1-s3-s1" name="Test Visual Check">Tests.Visual.Test Visual Check</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230525 21:28:40.505" level="ERROR">Re-raising an error received from SDK server: USDKFailure('Request "getAccountInfo" that was sent to the address "[GET]https://eyesapi.applitools.com/api/sessions/renderinfo?apiKey=%24%7B%7B+secrets.APPLITOOLS_API_KEY+%7D%7D" failed due to unexpected status Unauthorized(401)', '    at Object.afterResponse (/snapshot/core/node_modules/@applitools/core-base/dist/server/req-eyes.js:103:23)\n    at /snapshot/core/node_modules/@applitools/req/dist/index.cjs:9357:97\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async req2 (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9268:18)\n    at async req (/snapshot/core/node_modules/@applitools/req/dist/index.cjs:9222:12)\n    at async getAccountInfo (/snapshot/core/node_modules/@applitools/core-base/dist/server/requests.js:314:26)\n    at async Object.openEyes (/snapshot/core/dist/ufg/open-eyes.js)\n    at async getTypedEyes (/snapshot/core/dist/get-typed-eyes.js)\n    at async openEyes (/snapshot/core/dist/open-eyes.js)\n    at async /snapshot/core/dist/make-manager.js')</msg>
</errors>
</robot>
