<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230515 01:04:50.445" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230515 01:04:50.964" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230515 01:04:50.964" endtime="20230515 01:04:50.964"/>
</kw>
<status status="PASS" starttime="20230515 01:04:50.963" endtime="20230515 01:04:50.964"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230515 01:04:51.140" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230515 01:04:51.141" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '80e11956-bb97-4104-852e-b3606b37fb04', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b7b28ef8e72cf6a22fd02ab981a794ea;o=1', 'Date': 'Mon, 15 May 2023 01:04:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230515 01:04:51.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:50.965" endtime="20230515 01:04:51.141"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230515 01:04:51.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.141" endtime="20230515 01:04:51.142"/>
</kw>
<status status="PASS" starttime="20230515 01:04:50.965" endtime="20230515 01:04:51.142"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230515 01:04:51.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.142" endtime="20230515 01:04:51.143"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230515 01:04:51.143" endtime="20230515 01:04:51.144"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.142" endtime="20230515 01:04:51.144"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230515 01:04:51.145" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230515 01:04:51.144" endtime="20230515 01:04:51.145"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.144" endtime="20230515 01:04:51.145"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230515 01:04:50.962" endtime="20230515 01:04:51.145"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230515 01:04:51.148" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230515 01:04:51.147" endtime="20230515 01:04:51.148"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.147" endtime="20230515 01:04:51.148"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230515 01:04:51.149" level="INFO">${name} = Alan Dickson</msg>
<status status="PASS" starttime="20230515 01:04:51.148" endtime="20230515 01:04:51.149"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230515 01:04:51.150" level="INFO">${email} = huangjoseph@example.org</msg>
<status status="PASS" starttime="20230515 01:04:51.149" endtime="20230515 01:04:51.150"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230515 01:04:51.150" level="INFO">${password} = ^0Vdg1mvvi</msg>
<status status="PASS" starttime="20230515 01:04:51.150" endtime="20230515 01:04:51.150"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230515 01:04:51.151" level="INFO">${name} = Alan Dickson</msg>
<status status="PASS" starttime="20230515 01:04:51.150" endtime="20230515 01:04:51.151"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230515 01:04:51.151" level="INFO">${email} = huangjoseph@example.org</msg>
<status status="PASS" starttime="20230515 01:04:51.151" endtime="20230515 01:04:51.151"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230515 01:04:51.151" level="INFO">${password} = ^0Vdg1mvvi</msg>
<status status="PASS" starttime="20230515 01:04:51.151" endtime="20230515 01:04:51.151"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.148" endtime="20230515 01:04:51.151"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230515 01:04:51.152" level="INFO">${payload} = {'nome': 'Alan Dickson', 'email': 'huangjoseph@example.org', 'password': '^0Vdg1mvvi', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230515 01:04:51.152" endtime="20230515 01:04:51.152"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230515 01:04:51.153" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230515 01:04:51.152" endtime="20230515 01:04:51.153"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230515 01:04:51.246" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Alan Dickson", "email": "huangjoseph@example.org", "password": "^0Vdg1mvvi", "administrador": "false"}' 
 </msg>
<msg timestamp="20230515 01:04:51.246" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '624fad07-b65b-4e05-b84f-523c835a7e30', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9bac33a3a261fdea2d51885371a17666', 'Date': 'Mon, 15 May 2023 01:04:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "fsTDbENmuLP6aFgQ"
} 
 </msg>
<msg timestamp="20230515 01:04:51.247" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.153" endtime="20230515 01:04:51.247"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230515 01:04:51.248" level="INFO">${user_id} = fsTDbENmuLP6aFgQ</msg>
<status status="PASS" starttime="20230515 01:04:51.247" endtime="20230515 01:04:51.248"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230515 01:04:51.248" level="INFO">${USER_ID} = fsTDbENmuLP6aFgQ</msg>
<status status="PASS" starttime="20230515 01:04:51.248" endtime="20230515 01:04:51.248"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230515 01:04:51.249" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.249" endtime="20230515 01:04:51.249"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.151" endtime="20230515 01:04:51.249"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230515 01:04:51.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.249" endtime="20230515 01:04:51.250"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230515 01:04:51.250" endtime="20230515 01:04:51.251"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.249" endtime="20230515 01:04:51.251"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230515 01:04:51.252" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230515 01:04:51.252" endtime="20230515 01:04:51.252"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.251" endtime="20230515 01:04:51.252"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230515 01:04:51.146" endtime="20230515 01:04:51.253"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230515 01:04:51.254" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230515 01:04:51.254" endtime="20230515 01:04:51.255"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.254" endtime="20230515 01:04:51.255"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230515 01:04:51.337" level="INFO">GET Request : url=https://serverest.dev/usuarios/fsTDbENmuLP6aFgQ 
 path_url=/usuarios/fsTDbENmuLP6aFgQ 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230515 01:04:51.337" level="INFO">GET Response : url=https://serverest.dev/usuarios/fsTDbENmuLP6aFgQ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fdc25325-e8f6-4c9d-8e12-a4552f7ed3d5', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '53b3fb836d2c0b69f92294f41fdd82cc', 'Date': 'Mon, 15 May 2023 01:04:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Alan Dickson",
    "email": "huangjoseph@example.org",
    "password": "^0Vdg1mvvi",
    "administrador": "false",
    "_id": "fsTDbENmuLP6aFgQ"
} 
 </msg>
<msg timestamp="20230515 01:04:51.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.255" endtime="20230515 01:04:51.338"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230515 01:04:51.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.338" endtime="20230515 01:04:51.338"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.255" endtime="20230515 01:04:51.338"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230515 01:04:51.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.339" endtime="20230515 01:04:51.340"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230515 01:04:51.340" endtime="20230515 01:04:51.341"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.339" endtime="20230515 01:04:51.341"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230515 01:04:51.342" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230515 01:04:51.341" endtime="20230515 01:04:51.342"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.341" endtime="20230515 01:04:51.342"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230515 01:04:51.253" endtime="20230515 01:04:51.342"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230515 01:04:51.344" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230515 01:04:51.344" endtime="20230515 01:04:51.344"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.343" endtime="20230515 01:04:51.345"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230515 01:04:51.345" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230515 01:04:51.345" endtime="20230515 01:04:51.345"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230515 01:04:51.346" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230515 01:04:51.345" endtime="20230515 01:04:51.346"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230515 01:04:51.420" level="INFO">PUT Request : url=https://serverest.dev/usuarios/fsTDbENmuLP6aFgQ 
 path_url=/usuarios/fsTDbENmuLP6aFgQ 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230515 01:04:51.420" level="INFO">PUT Response : url=https://serverest.dev/usuarios/fsTDbENmuLP6aFgQ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bd53ac30-5306-475e-88c8-3fcbea85c135', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ef45531e918db2d49f6666e8f2e92a27', 'Date': 'Mon, 15 May 2023 01:04:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230515 01:04:51.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.346" endtime="20230515 01:04:51.421"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230515 01:04:51.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.421" endtime="20230515 01:04:51.421"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.345" endtime="20230515 01:04:51.421"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230515 01:04:51.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.422" endtime="20230515 01:04:51.423"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230515 01:04:51.423" endtime="20230515 01:04:51.424"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.422" endtime="20230515 01:04:51.424"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230515 01:04:51.425" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230515 01:04:51.424" endtime="20230515 01:04:51.425"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.424" endtime="20230515 01:04:51.425"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230515 01:04:51.343" endtime="20230515 01:04:51.425"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230515 01:04:51.427" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230515 01:04:51.427" endtime="20230515 01:04:51.427"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.426" endtime="20230515 01:04:51.428"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230515 01:04:51.507" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/fsTDbENmuLP6aFgQ 
 path_url=/usuarios/fsTDbENmuLP6aFgQ 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230515 01:04:51.507" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/fsTDbENmuLP6aFgQ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7f1e7c0f-2ad1-4f8d-aeec-4ab897c6c7cc', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fea4bbfd07e4078fc85edd09783992eb', 'Date': 'Mon, 15 May 2023 01:04:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230515 01:04:51.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.428" endtime="20230515 01:04:51.507"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230515 01:04:51.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.507" endtime="20230515 01:04:51.508"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.428" endtime="20230515 01:04:51.508"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230515 01:04:51.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230515 01:04:51.508" endtime="20230515 01:04:51.509"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230515 01:04:51.509" endtime="20230515 01:04:51.510"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.508" endtime="20230515 01:04:51.510"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230515 01:04:51.511" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230515 01:04:51.510" endtime="20230515 01:04:51.511"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.510" endtime="20230515 01:04:51.511"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230515 01:04:51.426" endtime="20230515 01:04:51.511"/>
</test>
<status status="PASS" starttime="20230515 01:04:50.468" endtime="20230515 01:04:51.512"/>
</suite>
<status status="PASS" starttime="20230515 01:04:50.466" endtime="20230515 01:04:51.513"/>
</suite>
<status status="PASS" starttime="20230515 01:04:50.465" endtime="20230515 01:04:51.514"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230515 01:04:51.526" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230515 01:04:51.525" endtime="20230515 01:04:53.927"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230515 01:04:53.927" endtime="20230515 01:04:54.219"/>
</kw>
<status status="PASS" starttime="20230515 01:04:51.525" endtime="20230515 01:04:54.220"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230515 01:04:54.221" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230515 01:04:54.221" endtime="20230515 01:04:54.271"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230515 01:04:54.276" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230515 01:04:54.271" endtime="20230515 01:04:54.276"/>
</kw>
<status status="PASS" starttime="20230515 01:04:54.220" endtime="20230515 01:04:54.276"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:54.279" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230515 01:04:54.277" endtime="20230515 01:04:54.417"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:54.418" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230515 01:04:54.417" endtime="20230515 01:04:54.661"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:54.662" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230515 01:04:54.661" endtime="20230515 01:04:55.088"/>
</kw>
<status status="PASS" starttime="20230515 01:04:54.276" endtime="20230515 01:04:55.088"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230515 01:04:55.098" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230515 01:04:55.089" endtime="20230515 01:04:55.098"/>
</kw>
<status status="PASS" starttime="20230515 01:04:55.088" endtime="20230515 01:04:55.098"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230515 01:04:55.114" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230515 01:04:55.099" endtime="20230515 01:04:55.114"/>
</kw>
<status status="PASS" starttime="20230515 01:04:55.098" endtime="20230515 01:04:55.114"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230515 01:04:55.115" endtime="20230515 01:04:55.172"/>
</kw>
<status status="PASS" starttime="20230515 01:04:55.115" endtime="20230515 01:04:55.172"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230515 01:04:51.525" endtime="20230515 01:04:55.172"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230515 01:04:55.175" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230515 01:04:55.174" endtime="20230515 01:04:56.128"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230515 01:04:56.129" endtime="20230515 01:04:56.235"/>
</kw>
<status status="PASS" starttime="20230515 01:04:55.174" endtime="20230515 01:04:56.236"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230515 01:04:56.237" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230515 01:04:56.236" endtime="20230515 01:04:56.300"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230515 01:04:56.309" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230515 01:04:56.300" endtime="20230515 01:04:56.309"/>
</kw>
<status status="PASS" starttime="20230515 01:04:56.236" endtime="20230515 01:04:56.309"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:56.310" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230515 01:04:56.309" endtime="20230515 01:04:56.426"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:56.427" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230515 01:04:56.426" endtime="20230515 01:04:56.516"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:56.517" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230515 01:04:56.516" endtime="20230515 01:04:56.580"/>
</kw>
<status status="PASS" starttime="20230515 01:04:56.309" endtime="20230515 01:04:56.581"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230515 01:04:56.605" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230515 01:04:56.581" endtime="20230515 01:04:56.605"/>
</kw>
<status status="PASS" starttime="20230515 01:04:56.581" endtime="20230515 01:04:56.606"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230515 01:04:56.606" endtime="20230515 01:04:56.664"/>
</kw>
<status status="PASS" starttime="20230515 01:04:56.606" endtime="20230515 01:04:56.664"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230515 01:04:55.173" endtime="20230515 01:04:56.664"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230515 01:04:56.667" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230515 01:04:56.667" endtime="20230515 01:04:57.584"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230515 01:04:57.585" endtime="20230515 01:04:57.689"/>
</kw>
<status status="PASS" starttime="20230515 01:04:56.666" endtime="20230515 01:04:57.690"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230515 01:04:57.691" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230515 01:04:57.690" endtime="20230515 01:04:57.749"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230515 01:04:57.758" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230515 01:04:57.749" endtime="20230515 01:04:57.758"/>
</kw>
<status status="PASS" starttime="20230515 01:04:57.690" endtime="20230515 01:04:57.758"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:57.759" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230515 01:04:57.759" endtime="20230515 01:04:57.874"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:57.875" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230515 01:04:57.875" endtime="20230515 01:04:57.965"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:57.966" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230515 01:04:57.966" endtime="20230515 01:04:58.058"/>
</kw>
<status status="PASS" starttime="20230515 01:04:57.758" endtime="20230515 01:04:58.058"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230515 01:04:58.069" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230515 01:04:58.058" endtime="20230515 01:04:58.069"/>
</kw>
<status status="PASS" starttime="20230515 01:04:58.058" endtime="20230515 01:04:58.069"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230515 01:04:58.085" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230515 01:04:58.070" endtime="20230515 01:04:58.085"/>
</kw>
<status status="PASS" starttime="20230515 01:04:58.069" endtime="20230515 01:04:58.085"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230515 01:04:58.086" endtime="20230515 01:04:58.144"/>
</kw>
<status status="PASS" starttime="20230515 01:04:58.085" endtime="20230515 01:04:58.144"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230515 01:04:56.665" endtime="20230515 01:04:58.144"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230515 01:04:58.147" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230515 01:04:58.146" endtime="20230515 01:04:59.040"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230515 01:04:59.040" endtime="20230515 01:04:59.149"/>
</kw>
<status status="PASS" starttime="20230515 01:04:58.145" endtime="20230515 01:04:59.149"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230515 01:04:59.150" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230515 01:04:59.150" endtime="20230515 01:04:59.222"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230515 01:04:59.230" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230515 01:04:59.222" endtime="20230515 01:04:59.230"/>
</kw>
<status status="PASS" starttime="20230515 01:04:59.149" endtime="20230515 01:04:59.230"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:59.231" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230515 01:04:59.231" endtime="20230515 01:04:59.365"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:59.366" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230515 01:04:59.366" endtime="20230515 01:04:59.454"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230515 01:04:59.455" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230515 01:04:59.454" endtime="20230515 01:05:04.562"/>
</kw>
<status status="PASS" starttime="20230515 01:04:59.230" endtime="20230515 01:05:04.562"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230515 01:05:04.581" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230515 01:05:04.563" endtime="20230515 01:05:04.581"/>
</kw>
<status status="PASS" starttime="20230515 01:05:04.562" endtime="20230515 01:05:04.581"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230515 01:05:04.596" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230515 01:05:04.581" endtime="20230515 01:05:04.596"/>
</kw>
<status status="PASS" starttime="20230515 01:05:04.581" endtime="20230515 01:05:04.596"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230515 01:05:04.597" endtime="20230515 01:05:04.653"/>
</kw>
<status status="PASS" starttime="20230515 01:05:04.597" endtime="20230515 01:05:04.654"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230515 01:04:58.145" endtime="20230515 01:05:04.654"/>
</test>
<status status="PASS" starttime="20230515 01:04:51.518" endtime="20230515 01:05:04.655"/>
</suite>
<status status="PASS" starttime="20230515 01:04:51.517" endtime="20230515 01:05:04.657"/>
</suite>
<status status="PASS" starttime="20230515 01:04:51.515" endtime="20230515 01:05:04.658"/>
</suite>
<status status="PASS" starttime="20230515 01:04:50.446" endtime="20230515 01:05:04.660"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
