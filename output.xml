<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230419 01:04:10.679" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230419 01:04:11.142" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230419 01:04:11.142" endtime="20230419 01:04:11.142"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.141" endtime="20230419 01:04:11.142"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230419 01:04:11.379" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230419 01:04:11.379" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '43e4b12f-7f47-4767-8d67-f8df3de67ec6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c3bf05fbae747eb2a0275b4e055db451;o=1', 'Date': 'Wed, 19 Apr 2023 01:04:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '5755'} 
 body={
    "quantidade": 27,
    "usuarios": [
        {
            "nome": "JOﾃグ DA SILVA",
            "email": "yRudpEiq@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "1np02iP0xVRHrE9i"
        },
        {
            "nome": "Fulano da Silva",
            "email": "tbyq@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "1nskV9gB970BnB4h"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Ansley.Klocko29@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "3IpyXDu3cWz2RdmU"
        },
        {
            "nome": "Carlos",
            "email": "teste01@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "3kjvJn7aBaaJqPu4"
        },
        {
            "nome": "Fulano da Silva",
            "email": "iwqu@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "APnBYwi31AV35SRp"
        },
        {
            "nome": "Fulano da Silva",
            "email": "wmfg@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "B5sxdbDTCbxLJIhD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "kjjo@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "O9khs777oBMoAspD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "uktm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "OD1bYxr8jXDTn8zx"
        },
        {
            "nome": "Fulano da Silva",
            "email": "aoce@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "SB95nuYyJNpxQ4N2"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Noel_Konopelski@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "SkbqtVnD1KT32NAn"
        },
        {
            "nome": "Wender da Silva",
            "email": "wender@qa.com.br",
            "password": "teste12345",
            "administrador": "true",
            "_id": "Tb4LOQ7Wn4hMRNkk"
        },
        {
            "nome": "JOﾃグ DA SILVA",
            "email": "JmBBMTjZ@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "VCGuAKxDFtuArvy3"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rplm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "W4xEgdxrghwVpIzR"
        },
        {
            "nome": "Fulano da Silva",
            "email": "vfjt@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WJCQfIvJHCmWIXDP"
        },
        {
            "nome": "Fulano da Silva",
            "email": "wsox@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "Z3fxqiDtNhGfm0Kj"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yqoc@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "aWSx0wlzyjPg22xn"
        },
        {
            "nome": "JOﾃグ DA SILVA",
            "email": "YpgbofAK@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "b5TAfwdysmINb3b1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "hxlv@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "cKJMpKdGyUWoG8PU"
        },
        {
            "nome": "JOﾃグ DA SILVA",
            "email": "fwvZPGPF@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "niZD4uoObTGm7YRH"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rjbd@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "oC9RbVbJNuNgk6bs"
        },
        {
            "nome": "Fulano da Silva",
            "email": "jctw@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "oqB5FBF3Jrs5tF0i"
        },
        {
            "nome": "Fulano da Silva",
            "email": "camh@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "tHNmbAcx4yoYeL59"
        },
        {
            "nome": "Fulano da Silva",
            "email": "zxdz@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "txAPEQ800fHuk9XT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "cxps@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "vTawIJXhrrlLLgyi"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yzoc@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "vzRNiX9NeWETS22P"
        },
        {
            "nome": "Fulano da Silva",
            "email": "smzd@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "wR7s8atMfIqTgQdl"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "xNolcZHfsBdUf11Q"
        }
    ]
} 
 </msg>
<msg timestamp="20230419 01:04:11.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.143" endtime="20230419 01:04:11.380"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230419 01:04:11.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.380" endtime="20230419 01:04:11.380"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.143" endtime="20230419 01:04:11.380"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230419 01:04:11.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.381" endtime="20230419 01:04:11.382"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230419 01:04:11.382" endtime="20230419 01:04:11.382"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.380" endtime="20230419 01:04:11.382"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230419 01:04:11.383" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230419 01:04:11.383" endtime="20230419 01:04:11.383"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.382" endtime="20230419 01:04:11.383"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.141" endtime="20230419 01:04:11.384"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="14">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230419 01:04:11.385" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230419 01:04:11.385" endtime="20230419 01:04:11.385"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.384" endtime="20230419 01:04:11.385"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230419 01:04:11.386" level="INFO">${name} = James Parsons</msg>
<status status="PASS" starttime="20230419 01:04:11.386" endtime="20230419 01:04:11.386"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230419 01:04:11.386" level="INFO">${email} = chowell@example.com</msg>
<status status="PASS" starttime="20230419 01:04:11.386" endtime="20230419 01:04:11.387"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230419 01:04:11.387" level="INFO">${password} = X!0A0RWYPl</msg>
<status status="PASS" starttime="20230419 01:04:11.387" endtime="20230419 01:04:11.387"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230419 01:04:11.387" level="INFO">${name} = James Parsons</msg>
<status status="PASS" starttime="20230419 01:04:11.387" endtime="20230419 01:04:11.387"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230419 01:04:11.388" level="INFO">${email} = chowell@example.com</msg>
<status status="PASS" starttime="20230419 01:04:11.387" endtime="20230419 01:04:11.388"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230419 01:04:11.388" level="INFO">${password} = X!0A0RWYPl</msg>
<status status="PASS" starttime="20230419 01:04:11.388" endtime="20230419 01:04:11.388"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.385" endtime="20230419 01:04:11.388"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230419 01:04:11.389" level="INFO">${payload} = {'nome': 'James Parsons', 'email': 'chowell@example.com', 'password': 'X!0A0RWYPl', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230419 01:04:11.388" endtime="20230419 01:04:11.389"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230419 01:04:11.389" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230419 01:04:11.389" endtime="20230419 01:04:11.389"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230419 01:04:11.490" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"nome": "James Parsons", "email": "chowell@example.com", "password": "X!0A0RWYPl", "administrador": "false"}' 
 </msg>
<msg timestamp="20230419 01:04:11.490" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '232c1313-3ccd-40ae-a2a1-cda5fa05f2c9', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd8484db3c4f07d23b950cae5070ac71b', 'Date': 'Wed, 19 Apr 2023 01:04:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "eW9pq5kEVsURTrx0"
} 
 </msg>
<msg timestamp="20230419 01:04:11.490" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.389" endtime="20230419 01:04:11.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230419 01:04:11.491" level="INFO">${user_id} = eW9pq5kEVsURTrx0</msg>
<status status="PASS" starttime="20230419 01:04:11.491" endtime="20230419 01:04:11.491"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230419 01:04:11.492" level="INFO">${USER_ID} = eW9pq5kEVsURTrx0</msg>
<status status="PASS" starttime="20230419 01:04:11.492" endtime="20230419 01:04:11.492"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230419 01:04:11.492" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.492" endtime="20230419 01:04:11.492"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.388" endtime="20230419 01:04:11.492"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230419 01:04:11.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.493" endtime="20230419 01:04:11.493"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230419 01:04:11.494" endtime="20230419 01:04:11.494"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.492" endtime="20230419 01:04:11.494"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230419 01:04:11.495" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230419 01:04:11.495" endtime="20230419 01:04:11.495"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.494" endtime="20230419 01:04:11.495"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.384" endtime="20230419 01:04:11.495"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="20">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230419 01:04:11.497" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230419 01:04:11.497" endtime="20230419 01:04:11.497"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.496" endtime="20230419 01:04:11.497"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230419 01:04:11.594" level="INFO">GET Request : url=https://serverest.dev/usuarios/eW9pq5kEVsURTrx0 
 path_url=/usuarios/eW9pq5kEVsURTrx0 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230419 01:04:11.595" level="INFO">GET Response : url=https://serverest.dev/usuarios/eW9pq5kEVsURTrx0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'be9eeede-79d7-464f-b4b5-45b743120209', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '29b09ceca13dc9bba54e6f0bf14bfb40', 'Date': 'Wed, 19 Apr 2023 01:04:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '158'} 
 body={
    "nome": "James Parsons",
    "email": "chowell@example.com",
    "password": "X!0A0RWYPl",
    "administrador": "false",
    "_id": "eW9pq5kEVsURTrx0"
} 
 </msg>
<msg timestamp="20230419 01:04:11.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.498" endtime="20230419 01:04:11.595"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230419 01:04:11.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.595" endtime="20230419 01:04:11.595"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.497" endtime="20230419 01:04:11.595"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230419 01:04:11.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.596" endtime="20230419 01:04:11.597"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230419 01:04:11.597" endtime="20230419 01:04:11.597"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.596" endtime="20230419 01:04:11.598"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230419 01:04:11.599" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230419 01:04:11.598" endtime="20230419 01:04:11.599"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.598" endtime="20230419 01:04:11.599"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.496" endtime="20230419 01:04:11.599"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="25">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230419 01:04:11.600" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230419 01:04:11.600" endtime="20230419 01:04:11.601"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.600" endtime="20230419 01:04:11.601"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230419 01:04:11.601" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230419 01:04:11.601" endtime="20230419 01:04:11.601"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230419 01:04:11.602" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230419 01:04:11.601" endtime="20230419 01:04:11.602"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230419 01:04:11.701" level="INFO">PUT Request : url=https://serverest.dev/usuarios/eW9pq5kEVsURTrx0 
 path_url=/usuarios/eW9pq5kEVsURTrx0 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230419 01:04:11.701" level="INFO">PUT Response : url=https://serverest.dev/usuarios/eW9pq5kEVsURTrx0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '94818627-f3e1-4f26-8d5f-360c49cde7fc', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '400891078bfdf5b35f1f869fbfb30b90', 'Date': 'Wed, 19 Apr 2023 01:04:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230419 01:04:11.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.602" endtime="20230419 01:04:11.701"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230419 01:04:11.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.702" endtime="20230419 01:04:11.702"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.601" endtime="20230419 01:04:11.702"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230419 01:04:11.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.703" endtime="20230419 01:04:11.703"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230419 01:04:11.703" endtime="20230419 01:04:11.704"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.702" endtime="20230419 01:04:11.704"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230419 01:04:11.705" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230419 01:04:11.704" endtime="20230419 01:04:11.705"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.704" endtime="20230419 01:04:11.705"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.599" endtime="20230419 01:04:11.705"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230419 01:04:11.707" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230419 01:04:11.707" endtime="20230419 01:04:11.707"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.706" endtime="20230419 01:04:11.707"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230419 01:04:11.810" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/eW9pq5kEVsURTrx0 
 path_url=/usuarios/eW9pq5kEVsURTrx0 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230419 01:04:11.811" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/eW9pq5kEVsURTrx0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '273631e9-6f72-4965-b703-bcb00a82f395', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1021668a0ed86daac65eff92048ed369', 'Date': 'Wed, 19 Apr 2023 01:04:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluﾃｭdo com sucesso"
} 
 </msg>
<msg timestamp="20230419 01:04:11.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.707" endtime="20230419 01:04:11.811"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230419 01:04:11.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.811" endtime="20230419 01:04:11.811"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.707" endtime="20230419 01:04:11.811"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230419 01:04:11.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230419 01:04:11.812" endtime="20230419 01:04:11.812"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230419 01:04:11.813" endtime="20230419 01:04:11.813"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.811" endtime="20230419 01:04:11.814"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230419 01:04:11.814" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230419 01:04:11.814" endtime="20230419 01:04:11.815"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.814" endtime="20230419 01:04:11.815"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.706" endtime="20230419 01:04:11.815"/>
</test>
<status status="PASS" starttime="20230419 01:04:10.701" endtime="20230419 01:04:11.815"/>
</suite>
<status status="PASS" starttime="20230419 01:04:10.699" endtime="20230419 01:04:11.816"/>
</suite>
<status status="PASS" starttime="20230419 01:04:10.698" endtime="20230419 01:04:11.817"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230419 01:04:11.827" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:11.827" endtime="20230419 01:04:13.869"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230419 01:04:13.870" endtime="20230419 01:04:13.975"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.826" endtime="20230419 01:04:13.975"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230419 01:04:13.976" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230419 01:04:13.976" endtime="20230419 01:04:14.031"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230419 01:04:14.038" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:14.031" endtime="20230419 01:04:14.038"/>
</kw>
<status status="PASS" starttime="20230419 01:04:13.975" endtime="20230419 01:04:14.038"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:14.040" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230419 01:04:14.038" endtime="20230419 01:04:14.141"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:14.142" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230419 01:04:14.141" endtime="20230419 01:04:14.224"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:14.225" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230419 01:04:14.224" endtime="20230419 01:04:14.318"/>
</kw>
<status status="PASS" starttime="20230419 01:04:14.038" endtime="20230419 01:04:14.318"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230419 01:04:14.322" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230419 01:04:14.319" endtime="20230419 01:04:14.322"/>
</kw>
<status status="PASS" starttime="20230419 01:04:14.318" endtime="20230419 01:04:14.322"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230419 01:04:14.342" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230419 01:04:14.323" endtime="20230419 01:04:14.342"/>
</kw>
<status status="PASS" starttime="20230419 01:04:14.322" endtime="20230419 01:04:14.342"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230419 01:04:14.343" endtime="20230419 01:04:14.399"/>
</kw>
<status status="PASS" starttime="20230419 01:04:14.342" endtime="20230419 01:04:14.399"/>
</kw>
<status status="PASS" starttime="20230419 01:04:11.826" endtime="20230419 01:04:14.400"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230419 01:04:14.402" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:14.401" endtime="20230419 01:04:15.270"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230419 01:04:15.271" endtime="20230419 01:04:15.374"/>
</kw>
<status status="PASS" starttime="20230419 01:04:14.401" endtime="20230419 01:04:15.374"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230419 01:04:15.375" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230419 01:04:15.375" endtime="20230419 01:04:15.421"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230419 01:04:15.426" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:15.421" endtime="20230419 01:04:15.427"/>
</kw>
<status status="PASS" starttime="20230419 01:04:15.375" endtime="20230419 01:04:15.427"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:15.428" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230419 01:04:15.427" endtime="20230419 01:04:15.533"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:15.534" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230419 01:04:15.533" endtime="20230419 01:04:15.612"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:15.613" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230419 01:04:15.612" endtime="20230419 01:04:15.665"/>
</kw>
<status status="PASS" starttime="20230419 01:04:15.427" endtime="20230419 01:04:15.665"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230419 01:04:15.687" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230419 01:04:15.666" endtime="20230419 01:04:15.687"/>
</kw>
<status status="PASS" starttime="20230419 01:04:15.666" endtime="20230419 01:04:15.688"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230419 01:04:15.688" endtime="20230419 01:04:15.745"/>
</kw>
<status status="PASS" starttime="20230419 01:04:15.688" endtime="20230419 01:04:15.745"/>
</kw>
<status status="PASS" starttime="20230419 01:04:14.400" endtime="20230419 01:04:15.745"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230419 01:04:15.747" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:15.747" endtime="20230419 01:04:16.602"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230419 01:04:16.603" endtime="20230419 01:04:16.707"/>
</kw>
<status status="PASS" starttime="20230419 01:04:15.746" endtime="20230419 01:04:16.707"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230419 01:04:16.708" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230419 01:04:16.708" endtime="20230419 01:04:16.776"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230419 01:04:16.780" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:16.776" endtime="20230419 01:04:16.780"/>
</kw>
<status status="PASS" starttime="20230419 01:04:16.707" endtime="20230419 01:04:16.780"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:16.781" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230419 01:04:16.781" endtime="20230419 01:04:16.861"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:16.862" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230419 01:04:16.861" endtime="20230419 01:04:16.938"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:16.939" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230419 01:04:16.938" endtime="20230419 01:04:17.021"/>
</kw>
<status status="PASS" starttime="20230419 01:04:16.780" endtime="20230419 01:04:17.021"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230419 01:04:17.030" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230419 01:04:17.021" endtime="20230419 01:04:17.031"/>
</kw>
<status status="PASS" starttime="20230419 01:04:17.021" endtime="20230419 01:04:17.031"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230419 01:04:17.044" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230419 01:04:17.031" endtime="20230419 01:04:17.044"/>
</kw>
<status status="PASS" starttime="20230419 01:04:17.031" endtime="20230419 01:04:17.044"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230419 01:04:17.044" endtime="20230419 01:04:17.101"/>
</kw>
<status status="PASS" starttime="20230419 01:04:17.044" endtime="20230419 01:04:17.101"/>
</kw>
<status status="PASS" starttime="20230419 01:04:15.746" endtime="20230419 01:04:17.101"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="27">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230419 01:04:17.103" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:17.102" endtime="20230419 01:04:17.967"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230419 01:04:17.968" endtime="20230419 01:04:18.072"/>
</kw>
<status status="PASS" starttime="20230419 01:04:17.102" endtime="20230419 01:04:18.072"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230419 01:04:18.073" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230419 01:04:18.073" endtime="20230419 01:04:18.126"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230419 01:04:18.130" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:18.126" endtime="20230419 01:04:18.130"/>
</kw>
<status status="PASS" starttime="20230419 01:04:18.072" endtime="20230419 01:04:18.130"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:18.131" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230419 01:04:18.131" endtime="20230419 01:04:18.243"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:18.244" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230419 01:04:18.243" endtime="20230419 01:04:18.322"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:18.323" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230419 01:04:18.322" endtime="20230419 01:04:23.416"/>
</kw>
<status status="PASS" starttime="20230419 01:04:18.130" endtime="20230419 01:04:23.416"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230419 01:04:23.427" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230419 01:04:23.417" endtime="20230419 01:04:23.427"/>
</kw>
<status status="PASS" starttime="20230419 01:04:23.416" endtime="20230419 01:04:23.427"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230419 01:04:23.441" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230419 01:04:23.428" endtime="20230419 01:04:23.441"/>
</kw>
<status status="PASS" starttime="20230419 01:04:23.427" endtime="20230419 01:04:23.441"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230419 01:04:23.442" endtime="20230419 01:04:23.498"/>
</kw>
<status status="PASS" starttime="20230419 01:04:23.441" endtime="20230419 01:04:23.498"/>
</kw>
<status status="PASS" starttime="20230419 01:04:17.102" endtime="20230419 01:04:23.498"/>
</test>
<status status="PASS" starttime="20230419 01:04:11.821" endtime="20230419 01:04:23.499"/>
</suite>
<status status="PASS" starttime="20230419 01:04:11.819" endtime="20230419 01:04:23.501"/>
</suite>
<status status="PASS" starttime="20230419 01:04:11.818" endtime="20230419 01:04:23.503"/>
</suite>
<suite id="s1-s3" name="Visual" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual">
<suite id="s1-s3-s1" name="Test Visual Check" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual/test_visual_check.robot">
<test id="s1-s3-s1-t1" name="Scenario: Visual check login page" line="11">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230419 01:04:24.476" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:24.475" endtime="20230419 01:04:25.340"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230419 01:04:25.340" endtime="20230419 01:04:25.446"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230419 01:04:25.447" endtime="20230419 01:04:27.698"/>
</kw>
<status status="PASS" starttime="20230419 01:04:24.474" endtime="20230419 01:04:27.698"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Login Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230419 01:04:27.699" endtime="20230419 01:04:27.699"/>
</kw>
<status status="PASS" starttime="20230419 01:04:27.699" endtime="20230419 01:04:30.171"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230419 01:04:30.172" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230419 01:04:30.172" endtime="20230419 01:04:30.215"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230419 01:04:30.219" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:30.216" endtime="20230419 01:04:30.219"/>
</kw>
<status status="PASS" starttime="20230419 01:04:30.171" endtime="20230419 01:04:30.219"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230419 01:04:30.219" endtime="20230419 01:04:31.244"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230419 01:04:31.244" endtime="20230419 01:04:31.300"/>
</kw>
<status status="PASS" starttime="20230419 01:04:30.219" endtime="20230419 01:04:31.301"/>
</kw>
<status status="PASS" starttime="20230419 01:04:24.473" endtime="20230419 01:04:31.301"/>
</test>
<test id="s1-s3-s1-t2" name="Scenario: Visual check inventory page" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230419 01:04:31.303" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230419 01:04:31.302" endtime="20230419 01:04:32.167"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230419 01:04:32.168" endtime="20230419 01:04:32.273"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230419 01:04:32.274" endtime="20230419 01:04:34.323"/>
</kw>
<status status="PASS" starttime="20230419 01:04:31.302" endtime="20230419 01:04:34.323"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:34.324" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230419 01:04:34.323" endtime="20230419 01:04:34.409"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:34.410" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230419 01:04:34.409" endtime="20230419 01:04:34.488"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230419 01:04:34.489" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230419 01:04:34.488" endtime="20230419 01:04:34.588"/>
</kw>
<status status="PASS" starttime="20230419 01:04:34.323" endtime="20230419 01:04:34.588"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230419 01:04:34.597" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230419 01:04:34.588" endtime="20230419 01:04:34.597"/>
</kw>
<status status="PASS" starttime="20230419 01:04:34.588" endtime="20230419 01:04:34.597"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230419 01:04:34.610" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230419 01:04:34.598" endtime="20230419 01:04:34.610"/>
</kw>
<status status="PASS" starttime="20230419 01:04:34.598" endtime="20230419 01:04:34.610"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Inventory Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230419 01:04:34.611" endtime="20230419 01:04:34.611"/>
</kw>
<status status="PASS" starttime="20230419 01:04:34.610" endtime="20230419 01:04:37.098"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230419 01:04:37.099" endtime="20230419 01:04:38.118"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230419 01:04:38.118" endtime="20230419 01:04:38.176"/>
</kw>
<status status="PASS" starttime="20230419 01:04:37.099" endtime="20230419 01:04:38.176"/>
</kw>
<status status="PASS" starttime="20230419 01:04:31.301" endtime="20230419 01:04:38.176"/>
</test>
<meta name="Applitools TestResults Path">/tmp/tmp682zuwrl/EyesTestResults-7e89000ae3e14581893d7db4d2a138df.json</meta>
<status status="PASS" starttime="20230419 01:04:23.506" endtime="20230419 01:04:38.177"/>
</suite>
<status status="PASS" starttime="20230419 01:04:23.504" endtime="20230419 01:04:38.178"/>
</suite>
<status status="PASS" starttime="20230419 01:04:10.680" endtime="20230419 01:04:38.179"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Visual">Tests.Visual</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Test Visual Check">Tests.Visual.Test Visual Check</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
