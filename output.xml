<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230529 20:10:24.898" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 20:10:25.375" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 20:10:25.375" endtime="20230529 20:10:25.376"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.375" endtime="20230529 20:10:25.376"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 20:10:25.531" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230529 20:10:25.531" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ce757ba5-a35b-46a2-aab6-06ffaa2e788b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f4b027d60f2c2415c916466f15363185;o=1', 'Date': 'Mon, 29 May 2023 20:10:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '6288'} 
 body={
    "quantidade": 29,
    "usuarios": [
        {
            "nome": "Bruna",
            "email": "eubrunacds@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0JnLaNu9iTrWKnG8"
        },
        {
            "nome": "Giovana",
            "email": "giovana@qa.com.br",
            "password": "giovana123",
            "administrador": "false",
            "_id": "0vKMlu1ezcKvELDZ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yzhz@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "1Gk8xfdKrqT8KBQa"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "2fH0yM1Y2ItsXN2r"
        },
        {
            "nome": "User Test",
            "email": "testeUsuario@email.com",
            "password": "teste1234",
            "administrador": "false",
            "_id": "BiFuz700BjUJOhKO"
        },
        {
            "nome": "Juara da Silva",
            "email": "cyclano123@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "GCCp2DZZ7zk5c6MU"
        },
        {
            "nome": "Teste no RobotFramework",
            "email": "juarez4543@hotmail.com",
            "password": "testenovo123",
            "administrador": "true",
            "_id": "GwQMP2DeMjt8HyUZ"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "KjP7ocnNoyQCgsIJ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "kyot@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "N8bbrhlFYLrtRfqd"
        },
        {
            "nome": "Teste 123 Juarez",
            "email": "testejuarez@gmail.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "PHRLc1uR8HHzc1zD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "nbmp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "SBJQ3rfCBHo03Vru"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltranso@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "WH7LEjMIRtrldEdl"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fcci@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "Y9Dwvo7wGPDmMvEh"
        },
        {
            "nome": "Teste Api Juarez",
            "email": "juarez12453@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "YOKMx9GXPKXAf1sV"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fcqs@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "YhaH3IjcPTOBZV0P"
        },
        {
            "nome": "teste",
            "email": "teste@email.com",
            "password": "teste1234",
            "administrador": "true",
            "_id": "aX77sSMl2ji8CB7S"
        },
        {
            "nome": "Fulano da Silva",
            "email": "malq@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "bbHuI35oTb8NRnIX"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fncc@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "dk4vRgyogzEhSvbM"
        },
        {
            "nome": "Fulano da Silva",
            "email": "qrcq@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "fY2CLvGKSxZQKxqM"
        },
        {
            "nome": "Fulano da Silva",
            "email": "smsr@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "gKSP2YW02H9s9b3C"
        },
        {
            "nome": "Bruna",
            "email": "eubr4un3acds@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "hoLkrWGHmWXneGh1"
        },
        {
            "nome": "Bruna",
            "email": "eubrun3acds@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "ldH5Fzj0gdOJVuuv"
        },
        {
            "nome": "Teste no RobotFramework",
            "email": "juarez@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "lxpHAQe6g8XDwJRo"
        },
        {
            "nome": "Maria",
            "email": "maria@qa.com.br",
            "password": "maria",
            "administrador": "true",
            "_id": "nZmKUHitRN0p04rH"
        },
        {
            "nome": "Teste no RobotFramework12345",
            "email": "juarez45432101@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "qjTJ7G94iOkFHq0k"
        },
        {
            "nome": "Teste no RobotFramework123",
            "email": "juarez454321@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "r4LAFXElwZmL87jQ"
        },
        {
            "nome": "Teste no RobotFramework123",
            "email": "juarez12345@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "vZcNJBIBwVTJwmIc"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fvhp@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "vt2Fhub6lqj9X3Se"
        },
        {
            "nome": "Teste Api Juarez",
            "email": "juarez123@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "zBK23ZWouDCYEsqB"
        }
    ]
} 
 </msg>
<msg timestamp="20230529 20:10:25.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.376" endtime="20230529 20:10:25.531"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 20:10:25.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.532" endtime="20230529 20:10:25.532"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.376" endtime="20230529 20:10:25.532"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 20:10:25.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.533" endtime="20230529 20:10:25.534"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 20:10:25.534" endtime="20230529 20:10:25.534"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.532" endtime="20230529 20:10:25.535"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 20:10:25.536" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230529 20:10:25.535" endtime="20230529 20:10:25.536"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.535" endtime="20230529 20:10:25.536"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 20:10:25.374" endtime="20230529 20:10:25.536"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 20:10:25.538" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 20:10:25.537" endtime="20230529 20:10:25.538"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.537" endtime="20230529 20:10:25.538"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230529 20:10:25.539" level="INFO">${name} = Sarah Ruiz</msg>
<status status="PASS" starttime="20230529 20:10:25.538" endtime="20230529 20:10:25.539"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230529 20:10:25.539" level="INFO">${email} = lucasrobinson@example.net</msg>
<status status="PASS" starttime="20230529 20:10:25.539" endtime="20230529 20:10:25.539"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230529 20:10:25.540" level="INFO">${password} = NcKN6y8Nb0dw</msg>
<status status="PASS" starttime="20230529 20:10:25.540" endtime="20230529 20:10:25.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 20:10:25.540" level="INFO">${name} = Sarah Ruiz</msg>
<status status="PASS" starttime="20230529 20:10:25.540" endtime="20230529 20:10:25.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 20:10:25.541" level="INFO">${email} = lucasrobinson@example.net</msg>
<status status="PASS" starttime="20230529 20:10:25.540" endtime="20230529 20:10:25.541"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 20:10:25.541" level="INFO">${password} = NcKN6y8Nb0dw</msg>
<status status="PASS" starttime="20230529 20:10:25.541" endtime="20230529 20:10:25.541"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.538" endtime="20230529 20:10:25.541"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 20:10:25.542" level="INFO">${payload} = {'nome': 'Sarah Ruiz', 'email': 'lucasrobinson@example.net', 'password': 'NcKN6y8Nb0dw', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230529 20:10:25.541" endtime="20230529 20:10:25.542"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 20:10:25.542" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230529 20:10:25.542" endtime="20230529 20:10:25.542"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 20:10:25.611" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "Sarah Ruiz", "email": "lucasrobinson@example.net", "password": "NcKN6y8Nb0dw", "administrador": "false"}' 
 </msg>
<msg timestamp="20230529 20:10:25.611" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cb785047-8f3c-4dae-8d23-3a607f31ae50', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '37c1a188456333e7a13133c83a84d840', 'Date': 'Mon, 29 May 2023 20:10:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Tr2surlQhFo3hhzb"
} 
 </msg>
<msg timestamp="20230529 20:10:25.612" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.542" endtime="20230529 20:10:25.612"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 20:10:25.613" level="INFO">${user_id} = Tr2surlQhFo3hhzb</msg>
<status status="PASS" starttime="20230529 20:10:25.612" endtime="20230529 20:10:25.613"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230529 20:10:25.613" level="INFO">${USER_ID} = Tr2surlQhFo3hhzb</msg>
<status status="PASS" starttime="20230529 20:10:25.613" endtime="20230529 20:10:25.613"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 20:10:25.614" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.614" endtime="20230529 20:10:25.614"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.541" endtime="20230529 20:10:25.614"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 20:10:25.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.614" endtime="20230529 20:10:25.615"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 20:10:25.615" endtime="20230529 20:10:25.616"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.614" endtime="20230529 20:10:25.616"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 20:10:25.617" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230529 20:10:25.617" endtime="20230529 20:10:25.617"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.616" endtime="20230529 20:10:25.617"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 20:10:25.536" endtime="20230529 20:10:25.618"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 20:10:25.619" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 20:10:25.619" endtime="20230529 20:10:25.620"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.618" endtime="20230529 20:10:25.620"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 20:10:25.699" level="INFO">GET Request : url=https://serverest.dev/usuarios/Tr2surlQhFo3hhzb 
 path_url=/usuarios/Tr2surlQhFo3hhzb 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230529 20:10:25.699" level="INFO">GET Response : url=https://serverest.dev/usuarios/Tr2surlQhFo3hhzb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '16dfb2ca-14a0-468c-a679-28f1a3c31667', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5572f2c864b68926fe1986e00a8bf7d3', 'Date': 'Mon, 29 May 2023 20:10:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "Sarah Ruiz",
    "email": "lucasrobinson@example.net",
    "password": "NcKN6y8Nb0dw",
    "administrador": "false",
    "_id": "Tr2surlQhFo3hhzb"
} 
 </msg>
<msg timestamp="20230529 20:10:25.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.620" endtime="20230529 20:10:25.699"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 20:10:25.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.699" endtime="20230529 20:10:25.700"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.620" endtime="20230529 20:10:25.700"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 20:10:25.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.700" endtime="20230529 20:10:25.701"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 20:10:25.701" endtime="20230529 20:10:25.702"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.700" endtime="20230529 20:10:25.702"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 20:10:25.703" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230529 20:10:25.702" endtime="20230529 20:10:25.703"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.702" endtime="20230529 20:10:25.703"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 20:10:25.618" endtime="20230529 20:10:25.703"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 20:10:25.704" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 20:10:25.704" endtime="20230529 20:10:25.705"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.704" endtime="20230529 20:10:25.705"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 20:10:25.705" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230529 20:10:25.705" endtime="20230529 20:10:25.705"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 20:10:25.706" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230529 20:10:25.706" endtime="20230529 20:10:25.706"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 20:10:25.776" level="INFO">PUT Request : url=https://serverest.dev/usuarios/Tr2surlQhFo3hhzb 
 path_url=/usuarios/Tr2surlQhFo3hhzb 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230529 20:10:25.776" level="INFO">PUT Response : url=https://serverest.dev/usuarios/Tr2surlQhFo3hhzb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dc1de838-91c0-4115-8f5d-f4bcce6a5e4d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cfa760c3fbb2a1dc6d68ac96139dc85e', 'Date': 'Mon, 29 May 2023 20:10:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230529 20:10:25.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.706" endtime="20230529 20:10:25.776"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 20:10:25.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.776" endtime="20230529 20:10:25.777"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.705" endtime="20230529 20:10:25.777"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 20:10:25.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.777" endtime="20230529 20:10:25.778"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 20:10:25.778" endtime="20230529 20:10:25.779"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.777" endtime="20230529 20:10:25.779"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 20:10:25.780" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230529 20:10:25.779" endtime="20230529 20:10:25.780"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.779" endtime="20230529 20:10:25.780"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 20:10:25.703" endtime="20230529 20:10:25.780"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 20:10:25.782" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 20:10:25.782" endtime="20230529 20:10:25.782"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.781" endtime="20230529 20:10:25.783"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 20:10:25.855" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/Tr2surlQhFo3hhzb 
 path_url=/usuarios/Tr2surlQhFo3hhzb 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230529 20:10:25.855" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/Tr2surlQhFo3hhzb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd4b886e9-8ff0-4e38-95ad-c3c664df5e55', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'df7e87c7c25676764e2bcc8bf9d8e7c6', 'Date': 'Mon, 29 May 2023 20:10:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230529 20:10:25.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.783" endtime="20230529 20:10:25.855"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 20:10:25.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.855" endtime="20230529 20:10:25.856"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.783" endtime="20230529 20:10:25.856"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 20:10:25.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 20:10:25.856" endtime="20230529 20:10:25.857"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 20:10:25.857" endtime="20230529 20:10:25.858"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.856" endtime="20230529 20:10:25.858"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 20:10:25.859" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230529 20:10:25.858" endtime="20230529 20:10:25.859"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.858" endtime="20230529 20:10:25.859"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 20:10:25.781" endtime="20230529 20:10:25.859"/>
</test>
<status status="PASS" starttime="20230529 20:10:24.919" endtime="20230529 20:10:25.860"/>
</suite>
<status status="PASS" starttime="20230529 20:10:24.917" endtime="20230529 20:10:25.861"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230529 20:10:25.872" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230529 20:10:25.871" endtime="20230529 20:10:27.765"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230529 20:10:27.766" endtime="20230529 20:10:27.872"/>
</kw>
<status status="PASS" starttime="20230529 20:10:25.871" endtime="20230529 20:10:27.872"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230529 20:10:27.877" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230529 20:10:27.873" endtime="20230529 20:10:27.877"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:27.879" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230529 20:10:27.878" endtime="20230529 20:10:27.964"/>
</kw>
<status status="PASS" starttime="20230529 20:10:27.872" endtime="20230529 20:10:27.965"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:27.966" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230529 20:10:27.965" endtime="20230529 20:10:28.032"/>
</kw>
<status status="PASS" starttime="20230529 20:10:27.965" endtime="20230529 20:10:28.032"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230529 20:10:28.033" endtime="20230529 20:10:28.266"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230529 20:10:28.285" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230529 20:10:28.267" endtime="20230529 20:10:28.285"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 20:10:28.301" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230529 20:10:28.286" endtime="20230529 20:10:28.301"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 20:10:28.314" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230529 20:10:28.301" endtime="20230529 20:10:28.314"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 20:10:28.326" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230529 20:10:28.314" endtime="20230529 20:10:28.326"/>
</kw>
<status status="PASS" starttime="20230529 20:10:28.032" endtime="20230529 20:10:28.326"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230529 20:10:28.327" endtime="20230529 20:10:28.382"/>
</kw>
<status status="PASS" starttime="20230529 20:10:28.326" endtime="20230529 20:10:28.382"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230529 20:10:25.871" endtime="20230529 20:10:28.383"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230529 20:10:28.385" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230529 20:10:28.384" endtime="20230529 20:10:29.595"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230529 20:10:29.596" endtime="20230529 20:10:29.700"/>
</kw>
<status status="PASS" starttime="20230529 20:10:28.384" endtime="20230529 20:10:29.700"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230529 20:10:29.706" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230529 20:10:29.701" endtime="20230529 20:10:29.706"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:29.707" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230529 20:10:29.706" endtime="20230529 20:10:29.805"/>
</kw>
<status status="PASS" starttime="20230529 20:10:29.700" endtime="20230529 20:10:29.805"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230529 20:10:29.806" level="INFO">${name} = Zachary Davis</msg>
<status status="PASS" starttime="20230529 20:10:29.805" endtime="20230529 20:10:29.806"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230529 20:10:29.807" level="INFO">${email} = ismith@example.org</msg>
<status status="PASS" starttime="20230529 20:10:29.806" endtime="20230529 20:10:29.807"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230529 20:10:29.807" level="INFO">${password} = U2owDDlfznW6</msg>
<status status="PASS" starttime="20230529 20:10:29.807" endtime="20230529 20:10:29.807"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:29.808" level="INFO">Typing text 'Zachary Davis' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230529 20:10:29.807" endtime="20230529 20:10:29.925"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:29.925" level="INFO">Typing text 'ismith@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230529 20:10:29.925" endtime="20230529 20:10:30.028"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:30.029" level="INFO">Typing text 'U2owDDlfznW6' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230529 20:10:30.028" endtime="20230529 20:10:30.118"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:30.119" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230529 20:10:30.118" endtime="20230529 20:10:30.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 20:10:30.192" level="INFO">${name} = Zachary Davis</msg>
<status status="PASS" starttime="20230529 20:10:30.192" endtime="20230529 20:10:30.192"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 20:10:30.193" level="INFO">${email} = ismith@example.org</msg>
<status status="PASS" starttime="20230529 20:10:30.192" endtime="20230529 20:10:30.193"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 20:10:30.193" level="INFO">${password} = U2owDDlfznW6</msg>
<status status="PASS" starttime="20230529 20:10:30.193" endtime="20230529 20:10:30.193"/>
</kw>
<status status="PASS" starttime="20230529 20:10:29.805" endtime="20230529 20:10:30.193"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:30.194" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230529 20:10:30.194" endtime="20230529 20:10:30.253"/>
</kw>
<status status="PASS" starttime="20230529 20:10:30.193" endtime="20230529 20:10:30.253"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230529 20:10:30.253" endtime="20230529 20:10:30.487"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230529 20:10:30.505" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230529 20:10:30.487" endtime="20230529 20:10:30.505"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 20:10:30.518" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230529 20:10:30.505" endtime="20230529 20:10:30.518"/>
</kw>
<status status="PASS" starttime="20230529 20:10:30.253" endtime="20230529 20:10:30.518"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230529 20:10:30.519" endtime="20230529 20:10:30.574"/>
</kw>
<status status="PASS" starttime="20230529 20:10:30.518" endtime="20230529 20:10:30.574"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230529 20:10:28.383" endtime="20230529 20:10:30.574"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230529 20:10:30.577" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230529 20:10:30.576" endtime="20230529 20:10:31.753"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230529 20:10:31.753" endtime="20230529 20:10:31.858"/>
</kw>
<status status="PASS" starttime="20230529 20:10:30.576" endtime="20230529 20:10:31.858"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230529 20:10:31.864" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230529 20:10:31.859" endtime="20230529 20:10:31.864"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:31.864" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230529 20:10:31.864" endtime="20230529 20:10:31.944"/>
</kw>
<status status="PASS" starttime="20230529 20:10:31.858" endtime="20230529 20:10:31.944"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:31.945" level="INFO">Typing text 'Zachary Davis' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230529 20:10:31.945" endtime="20230529 20:10:32.070"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:32.071" level="INFO">Typing text 'ismith@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230529 20:10:32.071" endtime="20230529 20:10:32.177"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:32.178" level="INFO">Typing text 'U2owDDlfznW6' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230529 20:10:32.178" endtime="20230529 20:10:32.274"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:32.275" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230529 20:10:32.274" endtime="20230529 20:10:32.351"/>
</kw>
<status status="PASS" starttime="20230529 20:10:31.944" endtime="20230529 20:10:32.351"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230529 20:10:32.352" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230529 20:10:32.352" endtime="20230529 20:10:32.411"/>
</kw>
<status status="PASS" starttime="20230529 20:10:32.351" endtime="20230529 20:10:32.411"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230529 20:10:32.412" endtime="20230529 20:10:32.646"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230529 20:10:32.664" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230529 20:10:32.646" endtime="20230529 20:10:32.664"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 20:10:32.678" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230529 20:10:32.664" endtime="20230529 20:10:32.678"/>
</kw>
<status status="PASS" starttime="20230529 20:10:32.411" endtime="20230529 20:10:32.678"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230529 20:10:32.678" endtime="20230529 20:10:32.733"/>
</kw>
<status status="PASS" starttime="20230529 20:10:32.678" endtime="20230529 20:10:32.733"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230529 20:10:30.575" endtime="20230529 20:10:32.733"/>
</test>
<status status="PASS" starttime="20230529 20:10:25.864" endtime="20230529 20:10:32.734"/>
</suite>
<status status="PASS" starttime="20230529 20:10:25.862" endtime="20230529 20:10:32.737"/>
</suite>
<status status="PASS" starttime="20230529 20:10:24.899" endtime="20230529 20:10:32.738"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
