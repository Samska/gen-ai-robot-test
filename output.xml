<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.17 on linux)" generated="20230808 00:55:09.815" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230808 00:55:10.504" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230808 00:55:10.503" endtime="20230808 00:55:10.504"/>
</kw>
<status status="PASS" starttime="20230808 00:55:10.503" endtime="20230808 00:55:10.504"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230808 00:55:15.287" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230808 00:55:15.288" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f78549f0-545a-4e36-b5c7-c15dd3b8c9f3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5241f897582142818ec9d046384205d9;o=1', 'Date': 'Tue, 08 Aug 2023 00:55:15 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230808 00:55:15.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:10.504" endtime="20230808 00:55:15.288"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230808 00:55:15.289" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.288" endtime="20230808 00:55:15.289"/>
</kw>
<status status="PASS" starttime="20230808 00:55:10.504" endtime="20230808 00:55:15.289"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230808 00:55:15.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.290" endtime="20230808 00:55:15.292"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230808 00:55:15.292" endtime="20230808 00:55:15.293"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.290" endtime="20230808 00:55:15.293"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230808 00:55:15.294" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230808 00:55:15.294" endtime="20230808 00:55:15.294"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.293" endtime="20230808 00:55:15.294"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230808 00:55:10.502" endtime="20230808 00:55:15.295"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230808 00:55:15.297" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230808 00:55:15.296" endtime="20230808 00:55:15.297"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.296" endtime="20230808 00:55:15.297"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230808 00:55:15.298" level="INFO">${name} = Michelle Weeks</msg>
<status status="PASS" starttime="20230808 00:55:15.297" endtime="20230808 00:55:15.298"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230808 00:55:15.299" level="INFO">${email} = mcfarlandchristopher@example.net</msg>
<status status="PASS" starttime="20230808 00:55:15.298" endtime="20230808 00:55:15.299"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230808 00:55:15.299" level="INFO">${password} = jbzivBkX4Pgf</msg>
<status status="PASS" starttime="20230808 00:55:15.299" endtime="20230808 00:55:15.299"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230808 00:55:15.300" level="INFO">${name} = Michelle Weeks</msg>
<status status="PASS" starttime="20230808 00:55:15.299" endtime="20230808 00:55:15.300"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230808 00:55:15.300" level="INFO">${email} = mcfarlandchristopher@example.net</msg>
<status status="PASS" starttime="20230808 00:55:15.300" endtime="20230808 00:55:15.300"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230808 00:55:15.301" level="INFO">${password} = jbzivBkX4Pgf</msg>
<status status="PASS" starttime="20230808 00:55:15.300" endtime="20230808 00:55:15.301"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.297" endtime="20230808 00:55:15.301"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230808 00:55:15.302" level="INFO">${payload} = {'nome': 'Michelle Weeks', 'email': 'mcfarlandchristopher@example.net', 'password': 'jbzivBkX4Pgf', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230808 00:55:15.301" endtime="20230808 00:55:15.302"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230808 00:55:15.302" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230808 00:55:15.302" endtime="20230808 00:55:15.302"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230808 00:55:15.406" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '125'} 
 body=b'{"nome": "Michelle Weeks", "email": "mcfarlandchristopher@example.net", "password": "jbzivBkX4Pgf", "administrador": "false"}' 
 </msg>
<msg timestamp="20230808 00:55:15.406" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ea35a60a-155c-43d0-a36e-a161092d144d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '322477728defeb12267ff8a75af501c3', 'Date': 'Tue, 08 Aug 2023 00:55:15 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "8LAPjh5WAWP1jwED"
} 
 </msg>
<msg timestamp="20230808 00:55:15.406" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.302" endtime="20230808 00:55:15.406"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230808 00:55:15.408" level="INFO">${user_id} = 8LAPjh5WAWP1jwED</msg>
<status status="PASS" starttime="20230808 00:55:15.407" endtime="20230808 00:55:15.408"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230808 00:55:15.409" level="INFO">${USER_ID} = 8LAPjh5WAWP1jwED</msg>
<status status="PASS" starttime="20230808 00:55:15.408" endtime="20230808 00:55:15.409"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230808 00:55:15.410" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.409" endtime="20230808 00:55:15.410"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.301" endtime="20230808 00:55:15.410"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230808 00:55:15.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.411" endtime="20230808 00:55:15.412"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230808 00:55:15.412" endtime="20230808 00:55:15.414"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.410" endtime="20230808 00:55:15.414"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230808 00:55:15.415" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230808 00:55:15.414" endtime="20230808 00:55:15.415"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.414" endtime="20230808 00:55:15.415"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230808 00:55:15.295" endtime="20230808 00:55:15.415"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230808 00:55:15.417" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230808 00:55:15.416" endtime="20230808 00:55:15.417"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.416" endtime="20230808 00:55:15.417"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230808 00:55:15.493" level="INFO">GET Request : url=https://serverest.dev/usuarios/8LAPjh5WAWP1jwED 
 path_url=/usuarios/8LAPjh5WAWP1jwED 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230808 00:55:15.493" level="INFO">GET Response : url=https://serverest.dev/usuarios/8LAPjh5WAWP1jwED 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '22203113-c4ba-431b-bcc1-9cc25c2bf081', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3de583a0ccc713c5bd6eaa8e0616acc7', 'Date': 'Tue, 08 Aug 2023 00:55:15 GMT', 'Server': 'Google Frontend', 'Content-Length': '174'} 
 body={
    "nome": "Michelle Weeks",
    "email": "mcfarlandchristopher@example.net",
    "password": "jbzivBkX4Pgf",
    "administrador": "false",
    "_id": "8LAPjh5WAWP1jwED"
} 
 </msg>
<msg timestamp="20230808 00:55:15.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.417" endtime="20230808 00:55:15.493"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230808 00:55:15.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.493" endtime="20230808 00:55:15.494"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.417" endtime="20230808 00:55:15.494"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230808 00:55:15.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.494" endtime="20230808 00:55:15.495"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230808 00:55:15.496" endtime="20230808 00:55:15.496"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.494" endtime="20230808 00:55:15.496"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230808 00:55:15.497" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230808 00:55:15.497" endtime="20230808 00:55:15.497"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.496" endtime="20230808 00:55:15.498"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230808 00:55:15.415" endtime="20230808 00:55:15.498"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230808 00:55:15.499" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230808 00:55:15.499" endtime="20230808 00:55:15.500"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.499" endtime="20230808 00:55:15.500"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230808 00:55:15.501" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230808 00:55:15.500" endtime="20230808 00:55:15.501"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230808 00:55:15.501" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230808 00:55:15.501" endtime="20230808 00:55:15.501"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230808 00:55:15.580" level="INFO">PUT Request : url=https://serverest.dev/usuarios/8LAPjh5WAWP1jwED 
 path_url=/usuarios/8LAPjh5WAWP1jwED 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230808 00:55:15.580" level="INFO">PUT Response : url=https://serverest.dev/usuarios/8LAPjh5WAWP1jwED 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '60aed3a0-c26c-4902-b9b5-7d72adc3a060', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '80468c020faf6e442a5c0f6bbbc86a3e', 'Date': 'Tue, 08 Aug 2023 00:55:15 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230808 00:55:15.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.501" endtime="20230808 00:55:15.581"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230808 00:55:15.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.581" endtime="20230808 00:55:15.582"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.500" endtime="20230808 00:55:15.582"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230808 00:55:15.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.583" endtime="20230808 00:55:15.584"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230808 00:55:15.585" endtime="20230808 00:55:15.586"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.582" endtime="20230808 00:55:15.586"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230808 00:55:15.587" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230808 00:55:15.586" endtime="20230808 00:55:15.587"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.586" endtime="20230808 00:55:15.587"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230808 00:55:15.498" endtime="20230808 00:55:15.587"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230808 00:55:15.589" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230808 00:55:15.589" endtime="20230808 00:55:15.589"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.588" endtime="20230808 00:55:15.589"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230808 00:55:15.673" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/8LAPjh5WAWP1jwED 
 path_url=/usuarios/8LAPjh5WAWP1jwED 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230808 00:55:15.673" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/8LAPjh5WAWP1jwED 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f8663d19-d003-4fab-9890-4de94c5d4b68', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd04471c44bff8291398698294b0398d9', 'Date': 'Tue, 08 Aug 2023 00:55:15 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230808 00:55:15.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.590" endtime="20230808 00:55:15.673"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230808 00:55:15.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.674" endtime="20230808 00:55:15.674"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.589" endtime="20230808 00:55:15.674"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230808 00:55:15.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230808 00:55:15.675" endtime="20230808 00:55:15.677"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230808 00:55:15.678" endtime="20230808 00:55:15.679"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.675" endtime="20230808 00:55:15.679"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230808 00:55:15.680" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230808 00:55:15.679" endtime="20230808 00:55:15.680"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.679" endtime="20230808 00:55:15.680"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230808 00:55:15.588" endtime="20230808 00:55:15.680"/>
</test>
<status status="PASS" starttime="20230808 00:55:09.838" endtime="20230808 00:55:15.681"/>
</suite>
<status status="PASS" starttime="20230808 00:55:09.836" endtime="20230808 00:55:15.683"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230808 00:55:15.696" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230808 00:55:15.696" endtime="20230808 00:55:17.715"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230808 00:55:17.716" endtime="20230808 00:55:17.823"/>
</kw>
<status status="PASS" starttime="20230808 00:55:15.695" endtime="20230808 00:55:17.823"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230808 00:55:17.829" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230808 00:55:17.824" endtime="20230808 00:55:17.830"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:17.831" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230808 00:55:17.830" endtime="20230808 00:55:17.929"/>
</kw>
<status status="PASS" starttime="20230808 00:55:17.823" endtime="20230808 00:55:17.929"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:17.931" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230808 00:55:17.930" endtime="20230808 00:55:17.997"/>
</kw>
<status status="PASS" starttime="20230808 00:55:17.930" endtime="20230808 00:55:17.997"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230808 00:55:17.998" endtime="20230808 00:55:18.238"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230808 00:55:18.263" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230808 00:55:18.238" endtime="20230808 00:55:18.263"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230808 00:55:18.281" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230808 00:55:18.263" endtime="20230808 00:55:18.281"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230808 00:55:18.296" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230808 00:55:18.281" endtime="20230808 00:55:18.296"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230808 00:55:18.311" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230808 00:55:18.297" endtime="20230808 00:55:18.312"/>
</kw>
<status status="PASS" starttime="20230808 00:55:17.997" endtime="20230808 00:55:18.312"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230808 00:55:18.312" endtime="20230808 00:55:18.368"/>
</kw>
<status status="PASS" starttime="20230808 00:55:18.312" endtime="20230808 00:55:18.368"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230808 00:55:15.695" endtime="20230808 00:55:18.368"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230808 00:55:18.372" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230808 00:55:18.371" endtime="20230808 00:55:19.578"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230808 00:55:19.578" endtime="20230808 00:55:19.690"/>
</kw>
<status status="PASS" starttime="20230808 00:55:18.370" endtime="20230808 00:55:19.690"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230808 00:55:19.700" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230808 00:55:19.692" endtime="20230808 00:55:19.700"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:19.701" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230808 00:55:19.700" endtime="20230808 00:55:19.790"/>
</kw>
<status status="PASS" starttime="20230808 00:55:19.691" endtime="20230808 00:55:19.790"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230808 00:55:19.791" level="INFO">${name} = Matthew Levine</msg>
<status status="PASS" starttime="20230808 00:55:19.791" endtime="20230808 00:55:19.792"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230808 00:55:19.792" level="INFO">${email} = joseph02@example.com</msg>
<status status="PASS" starttime="20230808 00:55:19.792" endtime="20230808 00:55:19.792"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230808 00:55:19.793" level="INFO">${password} = 4pP62OuV2wDj</msg>
<status status="PASS" starttime="20230808 00:55:19.793" endtime="20230808 00:55:19.793"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:19.794" level="INFO">Typing text 'Matthew Levine' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230808 00:55:19.793" endtime="20230808 00:55:19.926"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:19.927" level="INFO">Typing text 'joseph02@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230808 00:55:19.926" endtime="20230808 00:55:20.047"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:20.047" level="INFO">Typing text '4pP62OuV2wDj' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230808 00:55:20.047" endtime="20230808 00:55:20.160"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:20.161" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230808 00:55:20.160" endtime="20230808 00:55:20.240"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230808 00:55:20.241" level="INFO">${name} = Matthew Levine</msg>
<status status="PASS" starttime="20230808 00:55:20.240" endtime="20230808 00:55:20.241"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230808 00:55:20.241" level="INFO">${email} = joseph02@example.com</msg>
<status status="PASS" starttime="20230808 00:55:20.241" endtime="20230808 00:55:20.241"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230808 00:55:20.241" level="INFO">${password} = 4pP62OuV2wDj</msg>
<status status="PASS" starttime="20230808 00:55:20.241" endtime="20230808 00:55:20.241"/>
</kw>
<status status="PASS" starttime="20230808 00:55:19.790" endtime="20230808 00:55:20.241"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:20.242" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230808 00:55:20.242" endtime="20230808 00:55:20.310"/>
</kw>
<status status="PASS" starttime="20230808 00:55:20.242" endtime="20230808 00:55:20.310"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230808 00:55:20.311" endtime="20230808 00:55:20.550"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230808 00:55:20.574" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230808 00:55:20.551" endtime="20230808 00:55:20.574"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230808 00:55:20.593" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230808 00:55:20.575" endtime="20230808 00:55:20.594"/>
</kw>
<status status="PASS" starttime="20230808 00:55:20.311" endtime="20230808 00:55:20.594"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230808 00:55:20.594" endtime="20230808 00:55:20.653"/>
</kw>
<status status="PASS" starttime="20230808 00:55:20.594" endtime="20230808 00:55:20.654"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230808 00:55:18.369" endtime="20230808 00:55:20.654"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230808 00:55:20.657" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230808 00:55:20.656" endtime="20230808 00:55:21.859"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230808 00:55:21.860" endtime="20230808 00:55:21.964"/>
</kw>
<status status="PASS" starttime="20230808 00:55:20.656" endtime="20230808 00:55:21.964"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230808 00:55:21.973" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230808 00:55:21.965" endtime="20230808 00:55:21.973"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:21.974" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230808 00:55:21.973" endtime="20230808 00:55:22.084"/>
</kw>
<status status="PASS" starttime="20230808 00:55:21.965" endtime="20230808 00:55:22.084"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:22.086" level="INFO">Typing text 'Matthew Levine' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230808 00:55:22.085" endtime="20230808 00:55:22.230"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:22.231" level="INFO">Typing text 'joseph02@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230808 00:55:22.230" endtime="20230808 00:55:22.355"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:22.356" level="INFO">Typing text '4pP62OuV2wDj' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230808 00:55:22.355" endtime="20230808 00:55:22.477"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:22.478" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230808 00:55:22.477" endtime="20230808 00:55:22.572"/>
</kw>
<status status="PASS" starttime="20230808 00:55:22.084" endtime="20230808 00:55:22.572"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230808 00:55:22.573" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230808 00:55:22.573" endtime="20230808 00:55:22.649"/>
</kw>
<status status="PASS" starttime="20230808 00:55:22.572" endtime="20230808 00:55:22.649"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230808 00:55:22.650" endtime="20230808 00:55:22.895"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230808 00:55:22.918" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230808 00:55:22.896" endtime="20230808 00:55:22.918"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230808 00:55:22.935" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230808 00:55:22.919" endtime="20230808 00:55:22.935"/>
</kw>
<status status="PASS" starttime="20230808 00:55:22.649" endtime="20230808 00:55:22.935"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230808 00:55:22.936" endtime="20230808 00:55:22.991"/>
</kw>
<status status="PASS" starttime="20230808 00:55:22.936" endtime="20230808 00:55:22.991"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230808 00:55:20.655" endtime="20230808 00:55:22.991"/>
</test>
<status status="PASS" starttime="20230808 00:55:15.686" endtime="20230808 00:55:22.992"/>
</suite>
<status status="PASS" starttime="20230808 00:55:15.684" endtime="20230808 00:55:22.994"/>
</suite>
<status status="PASS" starttime="20230808 00:55:09.816" endtime="20230808 00:55:22.995"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
