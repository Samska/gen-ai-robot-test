<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230521 23:01:09.862" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:01:10.368" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:01:10.367" endtime="20230521 23:01:10.368"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.367" endtime="20230521 23:01:10.368"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:01:10.494" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:01:10.494" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e963e905-5db2-4a13-b899-56d2be3dadd7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fed9d310753edb5c39683713192fb0d7;o=1', 'Date': 'Sun, 21 May 2023 23:01:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '3497'} 
 body={
    "quantidade": 16,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "John Bell",
            "email": "ruizevan@example.org",
            "password": "*6OUOdmYrv",
            "administrador": "true",
            "_id": "2IKr7LeKuyL4FtC8"
        },
        {
            "nome": "Nicholas Pacheco",
            "email": "youngkayla@example.com",
            "password": "6)5EZOSrjn",
            "administrador": "true",
            "_id": "38Y0QxwG4PDRWCXi"
        },
        {
            "nome": "Teste",
            "email": "samska@gmail.com",
            "password": "Qw98ed74",
            "administrador": "false",
            "_id": "3Xr3T2ckzgNOAh1F"
        },
        {
            "nome": "Mr. James Peterson PhD",
            "email": "connierivera@example.net",
            "password": "NdU_3!LsKk",
            "administrador": "true",
            "_id": "4pI3IxxAgkZAtnue"
        },
        {
            "nome": "Juan Allen",
            "email": "justingomez@example.com",
            "password": "1(#X9ArRvD",
            "administrador": "true",
            "_id": "8tu4KvMVyoTeP4LJ"
        },
        {
            "nome": "Clifford Price",
            "email": "welchnicholas@example.net",
            "password": "1qY#Rh5L^4",
            "administrador": "true",
            "_id": "CeTenawvCCaAOcoP"
        },
        {
            "nome": "Amy Clark",
            "email": "stephanie62@example.org",
            "password": "g2bHN9v4@4",
            "administrador": "true",
            "_id": "GiHP7flmMy9cnO4x"
        },
        {
            "nome": "Donald Smith",
            "email": "samanthawells@example.com",
            "password": "+N9BWsoU_y",
            "administrador": "true",
            "_id": "Gv7cXeZoEeMSmJ4b"
        },
        {
            "nome": "teste",
            "email": "testee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "PaihpGw8oseaf7q7"
        },
        {
            "nome": "David Sanders",
            "email": "christopher87@example.com",
            "password": "LNkI#4Ah@_",
            "administrador": "true",
            "_id": "SFEcefct8tA4iHXt"
        },
        {
            "nome": "Micheal Caldwell",
            "email": "wilsonphilip@example.org",
            "password": "+BtZAI*Rs9",
            "administrador": "true",
            "_id": "b6YFBA5wmoQHYZRW"
        },
        {
            "nome": "Heidi Downs",
            "email": "urodriguez@example.com",
            "password": "1HQp3Qp5G#",
            "administrador": "true",
            "_id": "kO3ZvqwVu4B467mM"
        },
        {
            "nome": "Erin Perkins",
            "email": "bowenmichael@example.com",
            "password": "^5@&amp;8Xg(u_",
            "administrador": "true",
            "_id": "rd8XVnMFbXai1o5T"
        },
        {
            "nome": "testeeee",
            "email": "testeee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "yedZQ0ohrtKKZHdP"
        },
        {
            "nome": "Shannon Harris",
            "email": "tarapatterson@example.org",
            "password": "46HqkYPe#V",
            "administrador": "true",
            "_id": "zW5jUFJLv4d4MDmN"
        }
    ]
} 
 </msg>
<msg timestamp="20230521 23:01:10.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.369" endtime="20230521 23:01:10.495"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:01:10.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.495" endtime="20230521 23:01:10.495"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.368" endtime="20230521 23:01:10.496"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:01:10.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.496" endtime="20230521 23:01:10.497"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:01:10.497" endtime="20230521 23:01:10.498"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.496" endtime="20230521 23:01:10.498"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:01:10.499" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:01:10.498" endtime="20230521 23:01:10.499"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.498" endtime="20230521 23:01:10.499"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:01:10.366" endtime="20230521 23:01:10.499"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:01:10.501" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:01:10.500" endtime="20230521 23:01:10.501"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.500" endtime="20230521 23:01:10.501"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:01:10.502" level="INFO">${name} = Courtney Knapp</msg>
<status status="PASS" starttime="20230521 23:01:10.501" endtime="20230521 23:01:10.502"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:01:10.503" level="INFO">${email} = howardsamantha@example.com</msg>
<status status="PASS" starttime="20230521 23:01:10.502" endtime="20230521 23:01:10.503"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:01:10.503" level="INFO">${password} = 8u1KJXe+n^</msg>
<status status="PASS" starttime="20230521 23:01:10.503" endtime="20230521 23:01:10.503"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:01:10.503" level="INFO">${name} = Courtney Knapp</msg>
<status status="PASS" starttime="20230521 23:01:10.503" endtime="20230521 23:01:10.503"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:01:10.504" level="INFO">${email} = howardsamantha@example.com</msg>
<status status="PASS" starttime="20230521 23:01:10.503" endtime="20230521 23:01:10.504"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:01:10.504" level="INFO">${password} = 8u1KJXe+n^</msg>
<status status="PASS" starttime="20230521 23:01:10.504" endtime="20230521 23:01:10.504"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.501" endtime="20230521 23:01:10.504"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:01:10.505" level="INFO">${payload} = {'nome': 'Courtney Knapp', 'email': 'howardsamantha@example.com', 'password': '8u1KJXe+n^', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 23:01:10.505" endtime="20230521 23:01:10.505"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:01:10.505" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 23:01:10.505" endtime="20230521 23:01:10.505"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:01:10.581" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"nome": "Courtney Knapp", "email": "howardsamantha@example.com", "password": "8u1KJXe+n^", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 23:01:10.582" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9ae606ea-c33a-43ab-8787-92f46727fd12', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b0ad57f93dfdd50e568d1c662320d280', 'Date': 'Sun, 21 May 2023 23:01:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "zab9rFcjsjANdp7J"
} 
 </msg>
<msg timestamp="20230521 23:01:10.582" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.506" endtime="20230521 23:01:10.582"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230521 23:01:10.583" level="INFO">${user_id} = zab9rFcjsjANdp7J</msg>
<status status="PASS" starttime="20230521 23:01:10.582" endtime="20230521 23:01:10.583"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230521 23:01:10.584" level="INFO">${USER_ID} = zab9rFcjsjANdp7J</msg>
<status status="PASS" starttime="20230521 23:01:10.583" endtime="20230521 23:01:10.584"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:01:10.584" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.584" endtime="20230521 23:01:10.584"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.504" endtime="20230521 23:01:10.584"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:01:10.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.585" endtime="20230521 23:01:10.586"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:01:10.586" endtime="20230521 23:01:10.586"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.584" endtime="20230521 23:01:10.586"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:01:10.588" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:01:10.587" endtime="20230521 23:01:10.588"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.587" endtime="20230521 23:01:10.588"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:01:10.499" endtime="20230521 23:01:10.588"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:01:10.590" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:01:10.589" endtime="20230521 23:01:10.590"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.589" endtime="20230521 23:01:10.590"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:01:10.661" level="INFO">GET Request : url=https://serverest.dev/usuarios/zab9rFcjsjANdp7J 
 path_url=/usuarios/zab9rFcjsjANdp7J 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:01:10.661" level="INFO">GET Response : url=https://serverest.dev/usuarios/zab9rFcjsjANdp7J 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6d8ee9b1-5306-4871-beca-028803b80372', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1a342e6b4acab220fd50342e41775393', 'Date': 'Sun, 21 May 2023 23:01:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '166'} 
 body={
    "nome": "Courtney Knapp",
    "email": "howardsamantha@example.com",
    "password": "8u1KJXe+n^",
    "administrador": "false",
    "_id": "zab9rFcjsjANdp7J"
} 
 </msg>
<msg timestamp="20230521 23:01:10.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.591" endtime="20230521 23:01:10.661"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:01:10.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.661" endtime="20230521 23:01:10.662"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.591" endtime="20230521 23:01:10.662"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:01:10.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.662" endtime="20230521 23:01:10.663"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:01:10.663" endtime="20230521 23:01:10.664"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.662" endtime="20230521 23:01:10.664"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:01:10.665" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230521 23:01:10.665" endtime="20230521 23:01:10.665"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.664" endtime="20230521 23:01:10.666"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:01:10.589" endtime="20230521 23:01:10.666"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:01:10.667" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:01:10.667" endtime="20230521 23:01:10.668"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.667" endtime="20230521 23:01:10.668"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:01:10.668" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 23:01:10.668" endtime="20230521 23:01:10.668"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:01:10.669" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 23:01:10.669" endtime="20230521 23:01:10.669"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:01:10.746" level="INFO">PUT Request : url=https://serverest.dev/usuarios/zab9rFcjsjANdp7J 
 path_url=/usuarios/zab9rFcjsjANdp7J 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 23:01:10.746" level="INFO">PUT Response : url=https://serverest.dev/usuarios/zab9rFcjsjANdp7J 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5fe4a7bb-8afa-4416-a24c-c638d0dcb247', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '20cdabcbd2ac5ca560c1541db9e7fd4c', 'Date': 'Sun, 21 May 2023 23:01:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230521 23:01:10.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.669" endtime="20230521 23:01:10.746"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:01:10.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.746" endtime="20230521 23:01:10.747"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.668" endtime="20230521 23:01:10.747"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:01:10.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.747" endtime="20230521 23:01:10.748"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:01:10.748" endtime="20230521 23:01:10.749"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.747" endtime="20230521 23:01:10.749"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:01:10.750" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 23:01:10.749" endtime="20230521 23:01:10.750"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.749" endtime="20230521 23:01:10.750"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:01:10.666" endtime="20230521 23:01:10.750"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:01:10.752" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:01:10.752" endtime="20230521 23:01:10.753"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.752" endtime="20230521 23:01:10.753"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:01:10.823" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/zab9rFcjsjANdp7J 
 path_url=/usuarios/zab9rFcjsjANdp7J 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:01:10.824" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/zab9rFcjsjANdp7J 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6fbe2184-2224-4e6b-ba17-e9805a96e4e6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '55d8820abe920ae9043e8d38865ddffe', 'Date': 'Sun, 21 May 2023 23:01:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230521 23:01:10.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.753" endtime="20230521 23:01:10.824"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:01:10.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.824" endtime="20230521 23:01:10.824"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.753" endtime="20230521 23:01:10.825"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:01:10.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:01:10.825" endtime="20230521 23:01:10.826"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:01:10.826" endtime="20230521 23:01:10.827"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.825" endtime="20230521 23:01:10.827"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:01:10.828" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 23:01:10.827" endtime="20230521 23:01:10.828"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.827" endtime="20230521 23:01:10.828"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:01:10.751" endtime="20230521 23:01:10.828"/>
</test>
<status status="PASS" starttime="20230521 23:01:09.885" endtime="20230521 23:01:10.829"/>
</suite>
<status status="PASS" starttime="20230521 23:01:09.883" endtime="20230521 23:01:10.830"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:01:10.841" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:01:10.840" endtime="20230521 23:01:13.815"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:01:13.816" endtime="20230521 23:01:13.942"/>
</kw>
<status status="PASS" starttime="20230521 23:01:10.840" endtime="20230521 23:01:13.943"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:01:13.976" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:01:13.944" endtime="20230521 23:01:13.976"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:13.977" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:01:13.976" endtime="20230521 23:01:14.048"/>
</kw>
<status status="PASS" starttime="20230521 23:01:13.943" endtime="20230521 23:01:14.048"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:14.050" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:01:14.049" endtime="20230521 23:01:14.122"/>
</kw>
<status status="PASS" starttime="20230521 23:01:14.049" endtime="20230521 23:01:14.123"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:01:14.123" endtime="20230521 23:01:14.360"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:01:14.380" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:01:14.360" endtime="20230521 23:01:14.380"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:01:14.405" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:01:14.380" endtime="20230521 23:01:14.405"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:01:14.419" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:01:14.405" endtime="20230521 23:01:14.419"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:01:14.434" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:01:14.420" endtime="20230521 23:01:14.434"/>
</kw>
<status status="PASS" starttime="20230521 23:01:14.123" endtime="20230521 23:01:14.434"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:01:14.435" endtime="20230521 23:01:14.491"/>
</kw>
<status status="PASS" starttime="20230521 23:01:14.434" endtime="20230521 23:01:14.491"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:01:10.839" endtime="20230521 23:01:14.491"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:01:14.493" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:01:14.492" endtime="20230521 23:01:15.661"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:01:15.662" endtime="20230521 23:01:15.766"/>
</kw>
<status status="PASS" starttime="20230521 23:01:14.492" endtime="20230521 23:01:15.766"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:01:15.773" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:01:15.767" endtime="20230521 23:01:15.773"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:15.774" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:01:15.773" endtime="20230521 23:01:15.861"/>
</kw>
<status status="PASS" starttime="20230521 23:01:15.767" endtime="20230521 23:01:15.861"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:01:15.862" level="INFO">${name} = Terri Campbell</msg>
<status status="PASS" starttime="20230521 23:01:15.861" endtime="20230521 23:01:15.862"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:01:15.863" level="INFO">${email} = afitzgerald@example.org</msg>
<status status="PASS" starttime="20230521 23:01:15.862" endtime="20230521 23:01:15.863"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:01:15.863" level="INFO">${password} = x$g8ZRbZ*8</msg>
<status status="PASS" starttime="20230521 23:01:15.863" endtime="20230521 23:01:15.863"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:15.864" level="INFO">Typing text 'Terri Campbell' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:01:15.863" endtime="20230521 23:01:16.017"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:16.017" level="INFO">Typing text 'afitzgerald@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:01:16.017" endtime="20230521 23:01:16.139"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:16.140" level="INFO">Typing text 'x$g8ZRbZ*8' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:01:16.139" endtime="20230521 23:01:16.236"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:16.237" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:01:16.236" endtime="20230521 23:01:16.319"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:01:16.320" level="INFO">${name} = Terri Campbell</msg>
<status status="PASS" starttime="20230521 23:01:16.320" endtime="20230521 23:01:16.320"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:01:16.321" level="INFO">${email} = afitzgerald@example.org</msg>
<status status="PASS" starttime="20230521 23:01:16.320" endtime="20230521 23:01:16.321"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:01:16.321" level="INFO">${password} = x$g8ZRbZ*8</msg>
<status status="PASS" starttime="20230521 23:01:16.321" endtime="20230521 23:01:16.321"/>
</kw>
<status status="PASS" starttime="20230521 23:01:15.861" endtime="20230521 23:01:16.321"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:16.322" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:01:16.322" endtime="20230521 23:01:16.391"/>
</kw>
<status status="PASS" starttime="20230521 23:01:16.321" endtime="20230521 23:01:16.392"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:01:16.392" endtime="20230521 23:01:16.843"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:01:16.864" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:01:16.843" endtime="20230521 23:01:16.864"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:01:16.879" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230521 23:01:16.864" endtime="20230521 23:01:16.879"/>
</kw>
<status status="PASS" starttime="20230521 23:01:16.392" endtime="20230521 23:01:16.879"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:01:16.880" endtime="20230521 23:01:16.935"/>
</kw>
<status status="PASS" starttime="20230521 23:01:16.879" endtime="20230521 23:01:16.935"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:01:14.491" endtime="20230521 23:01:16.935"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:01:16.937" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:01:16.937" endtime="20230521 23:01:18.116"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:01:18.116" endtime="20230521 23:01:18.220"/>
</kw>
<status status="PASS" starttime="20230521 23:01:16.936" endtime="20230521 23:01:18.221"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:01:18.227" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:01:18.222" endtime="20230521 23:01:18.227"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:18.228" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:01:18.228" endtime="20230521 23:01:18.315"/>
</kw>
<status status="PASS" starttime="20230521 23:01:18.221" endtime="20230521 23:01:18.315"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:18.316" level="INFO">Typing text 'Terri Campbell' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:01:18.316" endtime="20230521 23:01:18.448"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:18.449" level="INFO">Typing text 'afitzgerald@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:01:18.448" endtime="20230521 23:01:18.570"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:18.571" level="INFO">Typing text 'x$g8ZRbZ*8' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:01:18.570" endtime="20230521 23:01:18.664"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:18.665" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:01:18.665" endtime="20230521 23:01:18.743"/>
</kw>
<status status="PASS" starttime="20230521 23:01:18.315" endtime="20230521 23:01:18.744"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:01:18.745" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:01:18.744" endtime="20230521 23:01:18.810"/>
</kw>
<status status="PASS" starttime="20230521 23:01:18.744" endtime="20230521 23:01:18.810"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:01:18.811" endtime="20230521 23:01:19.049"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:01:19.068" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:01:19.049" endtime="20230521 23:01:19.068"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:01:19.083" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230521 23:01:19.069" endtime="20230521 23:01:19.083"/>
</kw>
<status status="PASS" starttime="20230521 23:01:18.811" endtime="20230521 23:01:19.083"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:01:19.084" endtime="20230521 23:01:19.139"/>
</kw>
<status status="PASS" starttime="20230521 23:01:19.084" endtime="20230521 23:01:19.139"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:01:16.936" endtime="20230521 23:01:19.139"/>
</test>
<status status="PASS" starttime="20230521 23:01:10.832" endtime="20230521 23:01:19.140"/>
</suite>
<status status="PASS" starttime="20230521 23:01:10.831" endtime="20230521 23:01:19.142"/>
</suite>
<status status="PASS" starttime="20230521 23:01:09.863" endtime="20230521 23:01:19.143"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
