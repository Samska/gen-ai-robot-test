<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.17 on linux)" generated="20230801 01:01:23.269" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230801 01:01:23.779" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230801 01:01:23.779" endtime="20230801 01:01:23.779"/>
</kw>
<status status="PASS" starttime="20230801 01:01:23.778" endtime="20230801 01:01:23.779"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230801 01:01:23.917" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230801 01:01:23.918" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '37308ce8-fc2b-4ab9-a4ce-858712ff7803', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '12f468db98bb957c384fdacf3978c142;o=1', 'Date': 'Tue, 01 Aug 2023 01:01:23 GMT', 'Server': 'Google Frontend', 'Content-Length': '1535'} 
 body={
    "quantidade": 7,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "jpbw@email.com",
            "password": "1234",
            "administrador": "false",
            "_id": "1mHMK7wJ0vMO0v8R"
        },
        {
            "nome": "Fulano da Silva",
            "email": "qzkk@email.com",
            "password": "1234",
            "administrador": "false",
            "_id": "4KlckXzCCwuuSHxe"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lxxf@email.com",
            "password": "1234",
            "administrador": "false",
            "_id": "6OVrlMEbRiDlTtFK"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano2@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "8FDaaUxgW419XRgT"
        },
        {
            "nome": "Ana Mirthes Dias da Vit√≥ria Ferreira",
            "email": "anna-gatha@hotmail.com",
            "password": "@Agatha12",
            "administrador": "false",
            "_id": "UjwcIOwQD9ixCiJg"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rwpo@email.com",
            "password": "1234",
            "administrador": "false",
            "_id": "ymueesE3s94dCwAd"
        }
    ]
} 
 </msg>
<msg timestamp="20230801 01:01:23.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:23.780" endtime="20230801 01:01:23.918"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230801 01:01:23.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:23.918" endtime="20230801 01:01:23.919"/>
</kw>
<status status="PASS" starttime="20230801 01:01:23.779" endtime="20230801 01:01:23.919"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230801 01:01:23.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230801 01:01:23.919" endtime="20230801 01:01:23.920"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230801 01:01:23.920" endtime="20230801 01:01:23.921"/>
</kw>
<status status="PASS" starttime="20230801 01:01:23.919" endtime="20230801 01:01:23.921"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230801 01:01:23.922" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230801 01:01:23.921" endtime="20230801 01:01:23.922"/>
</kw>
<status status="PASS" starttime="20230801 01:01:23.921" endtime="20230801 01:01:23.922"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230801 01:01:23.777" endtime="20230801 01:01:23.922"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230801 01:01:23.923" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230801 01:01:23.923" endtime="20230801 01:01:23.924"/>
</kw>
<status status="PASS" starttime="20230801 01:01:23.923" endtime="20230801 01:01:23.924"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230801 01:01:23.925" level="INFO">${name} = Joyce Delacruz</msg>
<status status="PASS" starttime="20230801 01:01:23.924" endtime="20230801 01:01:23.925"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230801 01:01:23.925" level="INFO">${email} = william78@example.org</msg>
<status status="PASS" starttime="20230801 01:01:23.925" endtime="20230801 01:01:23.925"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230801 01:01:23.926" level="INFO">${password} = 2J2D7Ek08XmB</msg>
<status status="PASS" starttime="20230801 01:01:23.925" endtime="20230801 01:01:23.926"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230801 01:01:23.926" level="INFO">${name} = Joyce Delacruz</msg>
<status status="PASS" starttime="20230801 01:01:23.926" endtime="20230801 01:01:23.926"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230801 01:01:23.927" level="INFO">${email} = william78@example.org</msg>
<status status="PASS" starttime="20230801 01:01:23.926" endtime="20230801 01:01:23.927"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230801 01:01:23.927" level="INFO">${password} = 2J2D7Ek08XmB</msg>
<status status="PASS" starttime="20230801 01:01:23.927" endtime="20230801 01:01:23.927"/>
</kw>
<status status="PASS" starttime="20230801 01:01:23.924" endtime="20230801 01:01:23.927"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230801 01:01:23.928" level="INFO">${payload} = {'nome': 'Joyce Delacruz', 'email': 'william78@example.org', 'password': '2J2D7Ek08XmB', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230801 01:01:23.928" endtime="20230801 01:01:23.928"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230801 01:01:23.928" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230801 01:01:23.928" endtime="20230801 01:01:23.929"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230801 01:01:24.002" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "Joyce Delacruz", "email": "william78@example.org", "password": "2J2D7Ek08XmB", "administrador": "false"}' 
 </msg>
<msg timestamp="20230801 01:01:24.002" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '16255916-e75f-4772-be1e-f4ca23daa6c6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4cefae885f382acabad52beaa15b2381', 'Date': 'Tue, 01 Aug 2023 01:01:23 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "1LDnQSfe7IzmK8Lc"
} 
 </msg>
<msg timestamp="20230801 01:01:24.002" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:23.929" endtime="20230801 01:01:24.002"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230801 01:01:24.003" level="INFO">${user_id} = 1LDnQSfe7IzmK8Lc</msg>
<status status="PASS" starttime="20230801 01:01:24.002" endtime="20230801 01:01:24.003"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230801 01:01:24.004" level="INFO">${USER_ID} = 1LDnQSfe7IzmK8Lc</msg>
<status status="PASS" starttime="20230801 01:01:24.003" endtime="20230801 01:01:24.004"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230801 01:01:24.004" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.004" endtime="20230801 01:01:24.004"/>
</kw>
<status status="PASS" starttime="20230801 01:01:23.927" endtime="20230801 01:01:24.004"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230801 01:01:24.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.005" endtime="20230801 01:01:24.006"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230801 01:01:24.006" endtime="20230801 01:01:24.006"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.004" endtime="20230801 01:01:24.006"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230801 01:01:24.008" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230801 01:01:24.007" endtime="20230801 01:01:24.008"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.007" endtime="20230801 01:01:24.008"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230801 01:01:23.922" endtime="20230801 01:01:24.008"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230801 01:01:24.009" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230801 01:01:24.009" endtime="20230801 01:01:24.010"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.009" endtime="20230801 01:01:24.010"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230801 01:01:24.075" level="INFO">GET Request : url=https://serverest.dev/usuarios/1LDnQSfe7IzmK8Lc 
 path_url=/usuarios/1LDnQSfe7IzmK8Lc 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230801 01:01:24.075" level="INFO">GET Response : url=https://serverest.dev/usuarios/1LDnQSfe7IzmK8Lc 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'db5d30b4-5144-417f-98ae-0df995de0405', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'eec8b62b7a7571fc2b2e91b423f7d871', 'Date': 'Tue, 01 Aug 2023 01:01:24 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "Joyce Delacruz",
    "email": "william78@example.org",
    "password": "2J2D7Ek08XmB",
    "administrador": "false",
    "_id": "1LDnQSfe7IzmK8Lc"
} 
 </msg>
<msg timestamp="20230801 01:01:24.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.010" endtime="20230801 01:01:24.075"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230801 01:01:24.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.075" endtime="20230801 01:01:24.076"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.010" endtime="20230801 01:01:24.076"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230801 01:01:24.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.076" endtime="20230801 01:01:24.078"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230801 01:01:24.078" endtime="20230801 01:01:24.078"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.076" endtime="20230801 01:01:24.078"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230801 01:01:24.079" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230801 01:01:24.079" endtime="20230801 01:01:24.080"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.079" endtime="20230801 01:01:24.080"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230801 01:01:24.008" endtime="20230801 01:01:24.080"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230801 01:01:24.081" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230801 01:01:24.081" endtime="20230801 01:01:24.082"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.081" endtime="20230801 01:01:24.082"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230801 01:01:24.082" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230801 01:01:24.082" endtime="20230801 01:01:24.082"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230801 01:01:24.083" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230801 01:01:24.083" endtime="20230801 01:01:24.083"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230801 01:01:24.154" level="INFO">PUT Request : url=https://serverest.dev/usuarios/1LDnQSfe7IzmK8Lc 
 path_url=/usuarios/1LDnQSfe7IzmK8Lc 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230801 01:01:24.154" level="INFO">PUT Response : url=https://serverest.dev/usuarios/1LDnQSfe7IzmK8Lc 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f11d2c90-5e21-443e-a1a8-e38844e39d72', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ca7e688022e9892bcb1445060828aac5', 'Date': 'Tue, 01 Aug 2023 01:01:24 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230801 01:01:24.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.083" endtime="20230801 01:01:24.155"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230801 01:01:24.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.155" endtime="20230801 01:01:24.155"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.082" endtime="20230801 01:01:24.155"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230801 01:01:24.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.156" endtime="20230801 01:01:24.157"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230801 01:01:24.157" endtime="20230801 01:01:24.158"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.155" endtime="20230801 01:01:24.158"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230801 01:01:24.159" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230801 01:01:24.158" endtime="20230801 01:01:24.159"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.158" endtime="20230801 01:01:24.159"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230801 01:01:24.080" endtime="20230801 01:01:24.159"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230801 01:01:24.161" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230801 01:01:24.161" endtime="20230801 01:01:24.161"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.160" endtime="20230801 01:01:24.161"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230801 01:01:24.233" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/1LDnQSfe7IzmK8Lc 
 path_url=/usuarios/1LDnQSfe7IzmK8Lc 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230801 01:01:24.233" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/1LDnQSfe7IzmK8Lc 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a8ab7b2e-c673-442a-8795-5ee9a439cb4d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '491c6db527774b33da9091e9446fa7ef', 'Date': 'Tue, 01 Aug 2023 01:01:24 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro exclu√≠do com sucesso"
} 
 </msg>
<msg timestamp="20230801 01:01:24.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.162" endtime="20230801 01:01:24.234"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230801 01:01:24.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.234" endtime="20230801 01:01:24.234"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.161" endtime="20230801 01:01:24.234"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230801 01:01:24.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230801 01:01:24.235" endtime="20230801 01:01:24.236"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230801 01:01:24.236" endtime="20230801 01:01:24.237"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.234" endtime="20230801 01:01:24.237"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230801 01:01:24.238" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230801 01:01:24.237" endtime="20230801 01:01:24.238"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.237" endtime="20230801 01:01:24.238"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230801 01:01:24.160" endtime="20230801 01:01:24.238"/>
</test>
<status status="PASS" starttime="20230801 01:01:23.292" endtime="20230801 01:01:24.239"/>
</suite>
<status status="PASS" starttime="20230801 01:01:23.290" endtime="20230801 01:01:24.240"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230801 01:01:24.252" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230801 01:01:24.252" endtime="20230801 01:01:26.332"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230801 01:01:26.333" endtime="20230801 01:01:26.452"/>
</kw>
<status status="PASS" starttime="20230801 01:01:24.251" endtime="20230801 01:01:26.452"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230801 01:01:26.458" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230801 01:01:26.453" endtime="20230801 01:01:26.458"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:26.459" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230801 01:01:26.458" endtime="20230801 01:01:26.523"/>
</kw>
<status status="PASS" starttime="20230801 01:01:26.453" endtime="20230801 01:01:26.523"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:26.524" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230801 01:01:26.524" endtime="20230801 01:01:26.591"/>
</kw>
<status status="PASS" starttime="20230801 01:01:26.523" endtime="20230801 01:01:26.591"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230801 01:01:26.592" endtime="20230801 01:01:26.828"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230801 01:01:26.847" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230801 01:01:26.829" endtime="20230801 01:01:26.847"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome √© obrigat√≥rio</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230801 01:01:26.866" level="INFO">Current page contains text 'Nome √© obrigat√≥rio'.</msg>
<status status="PASS" starttime="20230801 01:01:26.847" endtime="20230801 01:01:26.866"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email √© obrigat√≥rio</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230801 01:01:26.879" level="INFO">Current page contains text 'Email √© obrigat√≥rio'.</msg>
<status status="PASS" starttime="20230801 01:01:26.866" endtime="20230801 01:01:26.879"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password √© obrigat√≥rio</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230801 01:01:26.892" level="INFO">Current page contains text 'Password √© obrigat√≥rio'.</msg>
<status status="PASS" starttime="20230801 01:01:26.879" endtime="20230801 01:01:26.892"/>
</kw>
<status status="PASS" starttime="20230801 01:01:26.591" endtime="20230801 01:01:26.892"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230801 01:01:26.893" endtime="20230801 01:01:26.948"/>
</kw>
<status status="PASS" starttime="20230801 01:01:26.892" endtime="20230801 01:01:26.948"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230801 01:01:24.251" endtime="20230801 01:01:26.948"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230801 01:01:26.951" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230801 01:01:26.950" endtime="20230801 01:01:28.257"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230801 01:01:28.257" endtime="20230801 01:01:28.385"/>
</kw>
<status status="PASS" starttime="20230801 01:01:26.950" endtime="20230801 01:01:28.385"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230801 01:01:28.391" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230801 01:01:28.386" endtime="20230801 01:01:28.391"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:28.392" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230801 01:01:28.391" endtime="20230801 01:01:28.446"/>
</kw>
<status status="PASS" starttime="20230801 01:01:28.386" endtime="20230801 01:01:28.446"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230801 01:01:28.447" level="INFO">${name} = Joseph Young</msg>
<status status="PASS" starttime="20230801 01:01:28.446" endtime="20230801 01:01:28.447"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230801 01:01:28.448" level="INFO">${email} = agray@example.com</msg>
<status status="PASS" starttime="20230801 01:01:28.447" endtime="20230801 01:01:28.448"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230801 01:01:28.448" level="INFO">${password} = 2cCXexu5MV1N</msg>
<status status="PASS" starttime="20230801 01:01:28.448" endtime="20230801 01:01:28.448"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:28.449" level="INFO">Typing text 'Joseph Young' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230801 01:01:28.448" endtime="20230801 01:01:28.571"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:28.572" level="INFO">Typing text 'agray@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230801 01:01:28.571" endtime="20230801 01:01:28.668"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:28.669" level="INFO">Typing text '2cCXexu5MV1N' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230801 01:01:28.668" endtime="20230801 01:01:28.772"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:28.773" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230801 01:01:28.772" endtime="20230801 01:01:28.854"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230801 01:01:28.855" level="INFO">${name} = Joseph Young</msg>
<status status="PASS" starttime="20230801 01:01:28.854" endtime="20230801 01:01:28.855"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230801 01:01:28.855" level="INFO">${email} = agray@example.com</msg>
<status status="PASS" starttime="20230801 01:01:28.855" endtime="20230801 01:01:28.855"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230801 01:01:28.856" level="INFO">${password} = 2cCXexu5MV1N</msg>
<status status="PASS" starttime="20230801 01:01:28.855" endtime="20230801 01:01:28.856"/>
</kw>
<status status="PASS" starttime="20230801 01:01:28.446" endtime="20230801 01:01:28.856"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:28.857" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230801 01:01:28.856" endtime="20230801 01:01:28.918"/>
</kw>
<status status="PASS" starttime="20230801 01:01:28.856" endtime="20230801 01:01:28.918"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230801 01:01:28.919" endtime="20230801 01:01:29.154"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230801 01:01:29.174" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230801 01:01:29.155" endtime="20230801 01:01:29.174"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230801 01:01:29.187" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230801 01:01:29.174" endtime="20230801 01:01:29.187"/>
</kw>
<status status="PASS" starttime="20230801 01:01:28.918" endtime="20230801 01:01:29.187"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230801 01:01:29.188" endtime="20230801 01:01:29.242"/>
</kw>
<status status="PASS" starttime="20230801 01:01:29.188" endtime="20230801 01:01:29.243"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230801 01:01:26.949" endtime="20230801 01:01:29.243"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230801 01:01:29.245" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230801 01:01:29.244" endtime="20230801 01:01:30.525"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230801 01:01:30.526" endtime="20230801 01:01:30.653"/>
</kw>
<status status="PASS" starttime="20230801 01:01:29.244" endtime="20230801 01:01:30.654"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230801 01:01:30.660" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230801 01:01:30.654" endtime="20230801 01:01:30.660"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:30.661" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230801 01:01:30.660" endtime="20230801 01:01:30.714"/>
</kw>
<status status="PASS" starttime="20230801 01:01:30.654" endtime="20230801 01:01:30.714"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:30.716" level="INFO">Typing text 'Joseph Young' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230801 01:01:30.715" endtime="20230801 01:01:30.859"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:30.860" level="INFO">Typing text 'agray@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230801 01:01:30.859" endtime="20230801 01:01:30.969"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:30.970" level="INFO">Typing text '2cCXexu5MV1N' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230801 01:01:30.970" endtime="20230801 01:01:31.085"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:31.086" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230801 01:01:31.085" endtime="20230801 01:01:31.169"/>
</kw>
<status status="PASS" starttime="20230801 01:01:30.715" endtime="20230801 01:01:31.169"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230801 01:01:31.171" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230801 01:01:31.170" endtime="20230801 01:01:31.234"/>
</kw>
<status status="PASS" starttime="20230801 01:01:31.170" endtime="20230801 01:01:31.234"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email j√° est√° sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230801 01:01:31.234" endtime="20230801 01:01:31.468"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230801 01:01:31.487" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230801 01:01:31.468" endtime="20230801 01:01:31.487"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230801 01:01:31.501" level="INFO">Current page contains text 'Este email j√° est√° sendo usado'.</msg>
<status status="PASS" starttime="20230801 01:01:31.487" endtime="20230801 01:01:31.501"/>
</kw>
<status status="PASS" starttime="20230801 01:01:31.234" endtime="20230801 01:01:31.501"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230801 01:01:31.502" endtime="20230801 01:01:31.558"/>
</kw>
<status status="PASS" starttime="20230801 01:01:31.501" endtime="20230801 01:01:31.558"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230801 01:01:29.243" endtime="20230801 01:01:31.558"/>
</test>
<status status="PASS" starttime="20230801 01:01:24.243" endtime="20230801 01:01:31.559"/>
</suite>
<status status="PASS" starttime="20230801 01:01:24.241" endtime="20230801 01:01:31.561"/>
</suite>
<status status="PASS" starttime="20230801 01:01:23.270" endtime="20230801 01:01:31.563"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
