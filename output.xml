<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230525 21:36:32.306" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:36:33.103" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:36:33.103" endtime="20230525 21:36:33.104"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.102" endtime="20230525 21:36:33.104"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:36:33.323" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230525 21:36:33.323" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '82817661-f33a-4262-8458-a9da2b70006b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f226fd9da8a092fc4d1a2434d51549e2;o=1', 'Date': 'Thu, 25 May 2023 21:36:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '3903'} 
 body={
    "quantidade": 18,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "cryz@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5Wlo4mCHoDjNaP5x"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "nako@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "FlAY20SGNjJcE3YX"
        },
        {
            "nome": "Patrick Allen",
            "email": "danielle42@example.net",
            "password": "rw5IP9oHPT6s",
            "administrador": "true",
            "_id": "GOf0OqoDNkcDuurY"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "ujxn@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "HfpK4LAx1RO9mZ3S"
        },
        {
            "nome": "Nancy Brown",
            "email": "walterdavis@example.com",
            "password": "qKZjeZoSb6PD",
            "administrador": "true",
            "_id": "ORRSONnYKEYQe6c8"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "wffh@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "RfhevZeD4PdxJFM9"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "qdrd@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "U5xLmUe9sgFQqQTZ"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "XfOvNirOMHFOQ8ip"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "czll@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "YOgJidev4MpmkvO2"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "bksi@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "d9dfzIbziIntlQrT"
        },
        {
            "nome": "Timothy Buchanan",
            "email": "kallen@example.org",
            "password": "KRUDTtcR4pCe",
            "administrador": "true",
            "_id": "oixvdj6ujFoOkGdt"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "ujxy@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "poO8UAk2JUq3Ong3"
        },
        {
            "nome": "{{nome}}",
            "email": "Kaia@qa.com.br",
            "password": "R9tZkf9cCyWYexP",
            "administrador": "true",
            "_id": "prHe7mOKBshMbPuU"
        },
        {
            "nome": "Robin Gallagher DVM",
            "email": "melissa56@example.com",
            "password": "1bTScLAQ87Rk",
            "administrador": "true",
            "_id": "re6Zfuq7Tv3kKF0K"
        },
        {
            "nome": "Tifulano da Silva",
            "email": "qijl@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "rmQfGTfsl3IptIaP"
        },
        {
            "nome": "{{nome}}",
            "email": "Coty@qa.com.br",
            "password": "ohUPWAS_LS3Kq3k",
            "administrador": "true",
            "_id": "rx49xrrBzkIZWoMz"
        },
        {
            "nome": "Paula Garcia",
            "email": "jeffweber@example.net",
            "password": "aRKOOdNHM9N9",
            "administrador": "true",
            "_id": "s6J3zANJCtklHPTf"
        }
    ]
} 
 </msg>
<msg timestamp="20230525 21:36:33.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.105" endtime="20230525 21:36:33.324"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:36:33.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.324" endtime="20230525 21:36:33.325"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.104" endtime="20230525 21:36:33.325"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:36:33.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.325" endtime="20230525 21:36:33.326"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:36:33.327" endtime="20230525 21:36:33.327"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.325" endtime="20230525 21:36:33.327"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:36:33.329" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230525 21:36:33.328" endtime="20230525 21:36:33.329"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.328" endtime="20230525 21:36:33.329"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:36:33.101" endtime="20230525 21:36:33.329"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:36:33.331" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:36:33.331" endtime="20230525 21:36:33.331"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.330" endtime="20230525 21:36:33.332"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230525 21:36:33.333" level="INFO">${name} = Angel Elliott</msg>
<status status="PASS" starttime="20230525 21:36:33.332" endtime="20230525 21:36:33.333"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230525 21:36:33.333" level="INFO">${email} = brian91@example.net</msg>
<status status="PASS" starttime="20230525 21:36:33.333" endtime="20230525 21:36:33.333"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230525 21:36:33.334" level="INFO">${password} = Nd3o5tFjUOGZ</msg>
<status status="PASS" starttime="20230525 21:36:33.334" endtime="20230525 21:36:33.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:36:33.335" level="INFO">${name} = Angel Elliott</msg>
<status status="PASS" starttime="20230525 21:36:33.334" endtime="20230525 21:36:33.335"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:36:33.335" level="INFO">${email} = brian91@example.net</msg>
<status status="PASS" starttime="20230525 21:36:33.335" endtime="20230525 21:36:33.335"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:36:33.336" level="INFO">${password} = Nd3o5tFjUOGZ</msg>
<status status="PASS" starttime="20230525 21:36:33.336" endtime="20230525 21:36:33.336"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.332" endtime="20230525 21:36:33.336"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:36:33.337" level="INFO">${payload} = {'nome': 'Angel Elliott', 'email': 'brian91@example.net', 'password': 'Nd3o5tFjUOGZ', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230525 21:36:33.337" endtime="20230525 21:36:33.337"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:36:33.338" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230525 21:36:33.338" endtime="20230525 21:36:33.338"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:36:33.438" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Angel Elliott", "email": "brian91@example.net", "password": "Nd3o5tFjUOGZ", "administrador": "false"}' 
 </msg>
<msg timestamp="20230525 21:36:33.438" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e8e9ef32-32c1-4061-aec0-2b0bdd5e798f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fa27f8b0c161f3df248f24eb9fe39a7a', 'Date': 'Thu, 25 May 2023 21:36:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "tQO7q6wKLERSfbvu"
} 
 </msg>
<msg timestamp="20230525 21:36:33.439" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.338" endtime="20230525 21:36:33.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230525 21:36:33.440" level="INFO">${user_id} = tQO7q6wKLERSfbvu</msg>
<status status="PASS" starttime="20230525 21:36:33.439" endtime="20230525 21:36:33.440"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230525 21:36:33.441" level="INFO">${USER_ID} = tQO7q6wKLERSfbvu</msg>
<status status="PASS" starttime="20230525 21:36:33.440" endtime="20230525 21:36:33.441"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:36:33.441" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.441" endtime="20230525 21:36:33.441"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.336" endtime="20230525 21:36:33.441"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:36:33.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.442" endtime="20230525 21:36:33.443"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:36:33.443" endtime="20230525 21:36:33.444"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.441" endtime="20230525 21:36:33.444"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:36:33.446" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230525 21:36:33.444" endtime="20230525 21:36:33.446"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.444" endtime="20230525 21:36:33.446"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:36:33.330" endtime="20230525 21:36:33.446"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:36:33.454" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:36:33.453" endtime="20230525 21:36:33.454"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.453" endtime="20230525 21:36:33.455"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:36:33.556" level="INFO">GET Request : url=https://serverest.dev/usuarios/tQO7q6wKLERSfbvu 
 path_url=/usuarios/tQO7q6wKLERSfbvu 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230525 21:36:33.556" level="INFO">GET Response : url=https://serverest.dev/usuarios/tQO7q6wKLERSfbvu 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9d7d3370-ceb7-479b-8a11-bf17e155ac12', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4a60f1885bf5029ed60f57742ef58591', 'Date': 'Thu, 25 May 2023 21:36:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Angel Elliott",
    "email": "brian91@example.net",
    "password": "Nd3o5tFjUOGZ",
    "administrador": "false",
    "_id": "tQO7q6wKLERSfbvu"
} 
 </msg>
<msg timestamp="20230525 21:36:33.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.455" endtime="20230525 21:36:33.556"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:36:33.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.556" endtime="20230525 21:36:33.557"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.455" endtime="20230525 21:36:33.558"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:36:33.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.558" endtime="20230525 21:36:33.559"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:36:33.559" endtime="20230525 21:36:33.560"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.558" endtime="20230525 21:36:33.560"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:36:33.562" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230525 21:36:33.561" endtime="20230525 21:36:33.562"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.560" endtime="20230525 21:36:33.562"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:36:33.452" endtime="20230525 21:36:33.562"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:36:33.564" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:36:33.563" endtime="20230525 21:36:33.564"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.563" endtime="20230525 21:36:33.564"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:36:33.565" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230525 21:36:33.565" endtime="20230525 21:36:33.565"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230525 21:36:33.566" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230525 21:36:33.565" endtime="20230525 21:36:33.566"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:36:33.666" level="INFO">PUT Request : url=https://serverest.dev/usuarios/tQO7q6wKLERSfbvu 
 path_url=/usuarios/tQO7q6wKLERSfbvu 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230525 21:36:33.666" level="INFO">PUT Response : url=https://serverest.dev/usuarios/tQO7q6wKLERSfbvu 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '659e18a8-700c-46f2-9934-68773609966e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '954a422b404cb3b828497ddf42050d85', 'Date': 'Thu, 25 May 2023 21:36:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230525 21:36:33.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.566" endtime="20230525 21:36:33.667"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:36:33.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.667" endtime="20230525 21:36:33.668"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.564" endtime="20230525 21:36:33.668"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:36:33.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.668" endtime="20230525 21:36:33.670"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:36:33.670" endtime="20230525 21:36:33.671"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.668" endtime="20230525 21:36:33.671"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:36:33.672" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230525 21:36:33.671" endtime="20230525 21:36:33.672"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.671" endtime="20230525 21:36:33.672"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:36:33.562" endtime="20230525 21:36:33.673"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230525 21:36:33.674" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230525 21:36:33.674" endtime="20230525 21:36:33.675"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.674" endtime="20230525 21:36:33.675"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230525 21:36:33.773" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/tQO7q6wKLERSfbvu 
 path_url=/usuarios/tQO7q6wKLERSfbvu 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230525 21:36:33.773" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/tQO7q6wKLERSfbvu 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c29497d3-cbb3-4f31-9056-4d24eb3381a1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4e4d0c53f1fc8d99ff9aef53592b5c0d', 'Date': 'Thu, 25 May 2023 21:36:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230525 21:36:33.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.675" endtime="20230525 21:36:33.774"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230525 21:36:33.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.774" endtime="20230525 21:36:33.774"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.675" endtime="20230525 21:36:33.775"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230525 21:36:33.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230525 21:36:33.775" endtime="20230525 21:36:33.776"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230525 21:36:33.776" endtime="20230525 21:36:33.777"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.775" endtime="20230525 21:36:33.777"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230525 21:36:33.778" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230525 21:36:33.778" endtime="20230525 21:36:33.778"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.777" endtime="20230525 21:36:33.779"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230525 21:36:33.673" endtime="20230525 21:36:33.779"/>
</test>
<status status="PASS" starttime="20230525 21:36:32.337" endtime="20230525 21:36:33.780"/>
</suite>
<status status="PASS" starttime="20230525 21:36:32.335" endtime="20230525 21:36:33.781"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:36:33.795" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:36:33.794" endtime="20230525 21:36:35.633"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:36:35.634" endtime="20230525 21:36:35.740"/>
</kw>
<status status="PASS" starttime="20230525 21:36:33.794" endtime="20230525 21:36:35.741"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230525 21:36:35.748" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230525 21:36:35.742" endtime="20230525 21:36:35.748"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:35.750" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230525 21:36:35.748" endtime="20230525 21:36:35.899"/>
</kw>
<status status="PASS" starttime="20230525 21:36:35.741" endtime="20230525 21:36:35.899"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:35.900" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230525 21:36:35.900" endtime="20230525 21:36:35.989"/>
</kw>
<status status="PASS" starttime="20230525 21:36:35.899" endtime="20230525 21:36:35.990"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230525 21:36:35.990" endtime="20230525 21:36:36.235"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230525 21:36:36.259" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230525 21:36:36.235" endtime="20230525 21:36:36.260"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:36:36.282" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230525 21:36:36.260" endtime="20230525 21:36:36.282"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:36:36.302" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230525 21:36:36.283" endtime="20230525 21:36:36.302"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:36:36.319" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230525 21:36:36.302" endtime="20230525 21:36:36.319"/>
</kw>
<status status="PASS" starttime="20230525 21:36:35.990" endtime="20230525 21:36:36.319"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230525 21:36:36.320" endtime="20230525 21:36:36.377"/>
</kw>
<status status="PASS" starttime="20230525 21:36:36.320" endtime="20230525 21:36:36.377"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230525 21:36:33.793" endtime="20230525 21:36:36.377"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:36:36.380" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:36:36.379" endtime="20230525 21:36:37.428"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:36:37.429" endtime="20230525 21:36:37.533"/>
</kw>
<status status="PASS" starttime="20230525 21:36:36.379" endtime="20230525 21:36:37.534"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230525 21:36:37.541" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230525 21:36:37.535" endtime="20230525 21:36:37.541"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:37.542" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230525 21:36:37.541" endtime="20230525 21:36:37.629"/>
</kw>
<status status="PASS" starttime="20230525 21:36:37.534" endtime="20230525 21:36:37.630"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230525 21:36:37.631" level="INFO">${name} = Richard Dixon</msg>
<status status="PASS" starttime="20230525 21:36:37.630" endtime="20230525 21:36:37.631"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230525 21:36:37.632" level="INFO">${email} = patrickgreen@example.net</msg>
<status status="PASS" starttime="20230525 21:36:37.631" endtime="20230525 21:36:37.632"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230525 21:36:37.633" level="INFO">${password} = 0Bb0FaOoEmHF</msg>
<status status="PASS" starttime="20230525 21:36:37.632" endtime="20230525 21:36:37.633"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:37.633" level="INFO">Typing text 'Richard Dixon' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230525 21:36:37.633" endtime="20230525 21:36:37.843"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:37.844" level="INFO">Typing text 'patrickgreen@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230525 21:36:37.844" endtime="20230525 21:36:38.007"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:38.008" level="INFO">Typing text '0Bb0FaOoEmHF' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230525 21:36:38.007" endtime="20230525 21:36:38.143"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:38.144" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230525 21:36:38.143" endtime="20230525 21:36:38.249"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:36:38.250" level="INFO">${name} = Richard Dixon</msg>
<status status="PASS" starttime="20230525 21:36:38.250" endtime="20230525 21:36:38.250"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:36:38.251" level="INFO">${email} = patrickgreen@example.net</msg>
<status status="PASS" starttime="20230525 21:36:38.250" endtime="20230525 21:36:38.251"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230525 21:36:38.251" level="INFO">${password} = 0Bb0FaOoEmHF</msg>
<status status="PASS" starttime="20230525 21:36:38.251" endtime="20230525 21:36:38.251"/>
</kw>
<status status="PASS" starttime="20230525 21:36:37.630" endtime="20230525 21:36:38.251"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:38.253" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230525 21:36:38.252" endtime="20230525 21:36:38.347"/>
</kw>
<status status="PASS" starttime="20230525 21:36:38.252" endtime="20230525 21:36:38.348"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230525 21:36:38.348" endtime="20230525 21:36:38.594"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230525 21:36:38.617" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230525 21:36:38.594" endtime="20230525 21:36:38.618"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:36:38.634" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230525 21:36:38.618" endtime="20230525 21:36:38.634"/>
</kw>
<status status="PASS" starttime="20230525 21:36:38.348" endtime="20230525 21:36:38.635"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230525 21:36:38.635" endtime="20230525 21:36:38.691"/>
</kw>
<status status="PASS" starttime="20230525 21:36:38.635" endtime="20230525 21:36:38.692"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230525 21:36:36.378" endtime="20230525 21:36:38.692"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230525 21:36:38.695" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230525 21:36:38.694" endtime="20230525 21:36:39.703"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230525 21:36:39.704" endtime="20230525 21:36:39.809"/>
</kw>
<status status="PASS" starttime="20230525 21:36:38.694" endtime="20230525 21:36:39.809"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230525 21:36:39.816" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230525 21:36:39.810" endtime="20230525 21:36:39.817"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:39.818" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230525 21:36:39.817" endtime="20230525 21:36:39.916"/>
</kw>
<status status="PASS" starttime="20230525 21:36:39.810" endtime="20230525 21:36:39.916"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:39.918" level="INFO">Typing text 'Richard Dixon' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230525 21:36:39.917" endtime="20230525 21:36:40.126"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:40.127" level="INFO">Typing text 'patrickgreen@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230525 21:36:40.126" endtime="20230525 21:36:40.288"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:40.290" level="INFO">Typing text '0Bb0FaOoEmHF' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230525 21:36:40.289" endtime="20230525 21:36:40.438"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:40.439" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230525 21:36:40.438" endtime="20230525 21:36:40.545"/>
</kw>
<status status="PASS" starttime="20230525 21:36:39.917" endtime="20230525 21:36:40.546"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230525 21:36:40.547" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230525 21:36:40.546" endtime="20230525 21:36:40.630"/>
</kw>
<status status="PASS" starttime="20230525 21:36:40.546" endtime="20230525 21:36:40.630"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230525 21:36:40.631" endtime="20230525 21:36:40.878"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230525 21:36:40.904" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230525 21:36:40.878" endtime="20230525 21:36:40.904"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230525 21:36:40.922" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230525 21:36:40.904" endtime="20230525 21:36:40.922"/>
</kw>
<status status="PASS" starttime="20230525 21:36:40.630" endtime="20230525 21:36:40.923"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230525 21:36:40.923" endtime="20230525 21:36:40.979"/>
</kw>
<status status="PASS" starttime="20230525 21:36:40.923" endtime="20230525 21:36:40.979"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230525 21:36:38.693" endtime="20230525 21:36:40.979"/>
</test>
<status status="PASS" starttime="20230525 21:36:33.784" endtime="20230525 21:36:40.980"/>
</suite>
<status status="PASS" starttime="20230525 21:36:33.782" endtime="20230525 21:36:40.983"/>
</suite>
<status status="PASS" starttime="20230525 21:36:32.307" endtime="20230525 21:36:40.985"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
