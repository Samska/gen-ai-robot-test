<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 14:18:09.453" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:10.163" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:10.163" endtime="20230601 14:18:10.164"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.162" endtime="20230601 14:18:10.164"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:10.325" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:18:10.325" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '55bef99c-47d1-4c1c-9612-2afd381c65f2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ab9b7b6fbfb1ccdf39563e0d2e1a96df;o=1', 'Date': 'Thu, 01 Jun 2023 14:18:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '2869'} 
 body={
    "quantidade": 13,
    "usuarios": [
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "wbGsZa5vMrOWAm7a"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 14:18:10.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.164" endtime="20230601 14:18:10.325"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:10.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.325" endtime="20230601 14:18:10.326"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.164" endtime="20230601 14:18:10.326"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:10.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.326" endtime="20230601 14:18:10.327"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:10.327" endtime="20230601 14:18:10.328"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.326" endtime="20230601 14:18:10.328"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:10.329" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 14:18:10.329" endtime="20230601 14:18:10.329"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.328" endtime="20230601 14:18:10.330"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:10.162" endtime="20230601 14:18:10.330"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:10.331" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:10.331" endtime="20230601 14:18:10.332"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.331" endtime="20230601 14:18:10.332"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 14:18:10.333" level="INFO">${name} = Victoria Rivera</msg>
<status status="PASS" starttime="20230601 14:18:10.332" endtime="20230601 14:18:10.333"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 14:18:10.333" level="INFO">${email} = wcaldwell@example.com</msg>
<status status="PASS" starttime="20230601 14:18:10.333" endtime="20230601 14:18:10.333"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 14:18:10.334" level="INFO">${password} = 6CkKjWJQX1FD</msg>
<status status="PASS" starttime="20230601 14:18:10.333" endtime="20230601 14:18:10.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:10.334" level="INFO">${name} = Victoria Rivera</msg>
<status status="PASS" starttime="20230601 14:18:10.334" endtime="20230601 14:18:10.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:10.334" level="INFO">${email} = wcaldwell@example.com</msg>
<status status="PASS" starttime="20230601 14:18:10.334" endtime="20230601 14:18:10.335"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:10.335" level="INFO">${password} = 6CkKjWJQX1FD</msg>
<status status="PASS" starttime="20230601 14:18:10.335" endtime="20230601 14:18:10.335"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.332" endtime="20230601 14:18:10.335"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:18:10.336" level="INFO">${payload} = {'nome': 'Victoria Rivera', 'email': 'wcaldwell@example.com', 'password': '6CkKjWJQX1FD', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 14:18:10.335" endtime="20230601 14:18:10.336"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:18:10.336" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 14:18:10.336" endtime="20230601 14:18:10.336"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:10.416" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Victoria Rivera", "email": "wcaldwell@example.com", "password": "6CkKjWJQX1FD", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 14:18:10.416" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '93b42542-4a54-4890-9c42-c5630ed55892', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1a8e83d4cf26ac9ef7c68c89f9bc3cf7', 'Date': 'Thu, 01 Jun 2023 14:18:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "3gixyQF5z7lrXVu2"
} 
 </msg>
<msg timestamp="20230601 14:18:10.416" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.336" endtime="20230601 14:18:10.416"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 14:18:10.417" level="INFO">${user_id} = 3gixyQF5z7lrXVu2</msg>
<status status="PASS" starttime="20230601 14:18:10.416" endtime="20230601 14:18:10.417"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 14:18:10.418" level="INFO">${USER_ID} = 3gixyQF5z7lrXVu2</msg>
<status status="PASS" starttime="20230601 14:18:10.417" endtime="20230601 14:18:10.418"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:10.418" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.418" endtime="20230601 14:18:10.418"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.335" endtime="20230601 14:18:10.418"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:10.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.419" endtime="20230601 14:18:10.420"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:10.420" endtime="20230601 14:18:10.420"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.418" endtime="20230601 14:18:10.421"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:10.422" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 14:18:10.421" endtime="20230601 14:18:10.422"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.421" endtime="20230601 14:18:10.422"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:10.330" endtime="20230601 14:18:10.422"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:10.424" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:10.423" endtime="20230601 14:18:10.424"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.423" endtime="20230601 14:18:10.424"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:10.503" level="INFO">GET Request : url=https://serverest.dev/usuarios/3gixyQF5z7lrXVu2 
 path_url=/usuarios/3gixyQF5z7lrXVu2 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:18:10.503" level="INFO">GET Response : url=https://serverest.dev/usuarios/3gixyQF5z7lrXVu2 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd09e37ea-1ee8-40cf-ae0e-5e88e9d017b8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '797a9cfaeb986f0824ddfb61a2c5a984', 'Date': 'Thu, 01 Jun 2023 14:18:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Victoria Rivera",
    "email": "wcaldwell@example.com",
    "password": "6CkKjWJQX1FD",
    "administrador": "false",
    "_id": "3gixyQF5z7lrXVu2"
} 
 </msg>
<msg timestamp="20230601 14:18:10.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.425" endtime="20230601 14:18:10.504"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:10.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.504" endtime="20230601 14:18:10.504"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.424" endtime="20230601 14:18:10.504"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:10.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.505" endtime="20230601 14:18:10.506"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:10.506" endtime="20230601 14:18:10.506"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.504" endtime="20230601 14:18:10.506"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:10.507" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 14:18:10.507" endtime="20230601 14:18:10.507"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.507" endtime="20230601 14:18:10.508"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:10.422" endtime="20230601 14:18:10.508"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:10.510" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:10.509" endtime="20230601 14:18:10.510"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.509" endtime="20230601 14:18:10.510"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:18:10.511" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 14:18:10.510" endtime="20230601 14:18:10.511"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:18:10.511" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 14:18:10.511" endtime="20230601 14:18:10.511"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:10.595" level="INFO">PUT Request : url=https://serverest.dev/usuarios/3gixyQF5z7lrXVu2 
 path_url=/usuarios/3gixyQF5z7lrXVu2 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 14:18:10.595" level="INFO">PUT Response : url=https://serverest.dev/usuarios/3gixyQF5z7lrXVu2 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '460a9f13-e98c-4d41-80ae-5dc3654ecc9d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8d9c92c5f7d7beddfe4c2ff626f25468', 'Date': 'Thu, 01 Jun 2023 14:18:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 14:18:10.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.511" endtime="20230601 14:18:10.595"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:10.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.596" endtime="20230601 14:18:10.596"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.510" endtime="20230601 14:18:10.596"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:10.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.597" endtime="20230601 14:18:10.597"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:10.598" endtime="20230601 14:18:10.598"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.596" endtime="20230601 14:18:10.598"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:10.599" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 14:18:10.599" endtime="20230601 14:18:10.599"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.598" endtime="20230601 14:18:10.599"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:10.508" endtime="20230601 14:18:10.600"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:10.601" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:10.601" endtime="20230601 14:18:10.602"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.601" endtime="20230601 14:18:10.602"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:10.677" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/3gixyQF5z7lrXVu2 
 path_url=/usuarios/3gixyQF5z7lrXVu2 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:18:10.677" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/3gixyQF5z7lrXVu2 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1582b4c5-b7da-44ec-832c-1e1007a00db8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b12c8cd3f3d02f596f053ebef028c1c7', 'Date': 'Thu, 01 Jun 2023 14:18:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 14:18:10.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.602" endtime="20230601 14:18:10.677"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:10.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.678" endtime="20230601 14:18:10.678"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.602" endtime="20230601 14:18:10.678"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:10.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:10.679" endtime="20230601 14:18:10.679"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:10.679" endtime="20230601 14:18:10.680"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.678" endtime="20230601 14:18:10.680"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:10.681" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 14:18:10.681" endtime="20230601 14:18:10.681"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.680" endtime="20230601 14:18:10.681"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:10.600" endtime="20230601 14:18:10.681"/>
</test>
<status status="PASS" starttime="20230601 14:18:09.474" endtime="20230601 14:18:10.682"/>
</suite>
<status status="PASS" starttime="20230601 14:18:09.472" endtime="20230601 14:18:10.683"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:18:10.694" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:18:10.693" endtime="20230601 14:18:13.944"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:18:13.944" endtime="20230601 14:18:14.062"/>
</kw>
<status status="PASS" starttime="20230601 14:18:10.693" endtime="20230601 14:18:14.062"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:18:14.068" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:18:14.063" endtime="20230601 14:18:14.068"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:14.069" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:18:14.068" endtime="20230601 14:18:14.129"/>
</kw>
<status status="PASS" starttime="20230601 14:18:14.062" endtime="20230601 14:18:14.129"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:14.130" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:18:14.129" endtime="20230601 14:18:14.194"/>
</kw>
<status status="PASS" starttime="20230601 14:18:14.129" endtime="20230601 14:18:14.194"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:18:14.194" endtime="20230601 14:18:14.431"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:18:14.450" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:18:14.431" endtime="20230601 14:18:14.450"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:14.466" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:18:14.451" endtime="20230601 14:18:14.466"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:14.479" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:18:14.467" endtime="20230601 14:18:14.479"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:14.492" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:18:14.480" endtime="20230601 14:18:14.492"/>
</kw>
<status status="PASS" starttime="20230601 14:18:14.194" endtime="20230601 14:18:14.492"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:18:14.493" endtime="20230601 14:18:14.548"/>
</kw>
<status status="PASS" starttime="20230601 14:18:14.492" endtime="20230601 14:18:14.549"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:18:10.692" endtime="20230601 14:18:14.549"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:18:14.551" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:18:14.550" endtime="20230601 14:18:15.886"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:18:15.887" endtime="20230601 14:18:16.008"/>
</kw>
<status status="PASS" starttime="20230601 14:18:14.550" endtime="20230601 14:18:16.008"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:18:16.014" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:18:16.009" endtime="20230601 14:18:16.014"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.015" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:18:16.014" endtime="20230601 14:18:16.070"/>
</kw>
<status status="PASS" starttime="20230601 14:18:16.008" endtime="20230601 14:18:16.071"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 14:18:16.072" level="INFO">${name} = Troy Ray</msg>
<status status="PASS" starttime="20230601 14:18:16.071" endtime="20230601 14:18:16.072"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 14:18:16.072" level="INFO">${email} = debbie39@example.net</msg>
<status status="PASS" starttime="20230601 14:18:16.072" endtime="20230601 14:18:16.072"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 14:18:16.073" level="INFO">${password} = di5JjZtW5C2X</msg>
<status status="PASS" starttime="20230601 14:18:16.073" endtime="20230601 14:18:16.073"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.074" level="INFO">Typing text 'Troy Ray' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 14:18:16.073" endtime="20230601 14:18:16.186"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.187" level="INFO">Typing text 'debbie39@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 14:18:16.186" endtime="20230601 14:18:16.298"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.299" level="INFO">Typing text 'di5JjZtW5C2X' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 14:18:16.298" endtime="20230601 14:18:16.395"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.396" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 14:18:16.396" endtime="20230601 14:18:16.471"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:16.472" level="INFO">${name} = Troy Ray</msg>
<status status="PASS" starttime="20230601 14:18:16.471" endtime="20230601 14:18:16.472"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:16.472" level="INFO">${email} = debbie39@example.net</msg>
<status status="PASS" starttime="20230601 14:18:16.472" endtime="20230601 14:18:16.472"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:16.472" level="INFO">${password} = di5JjZtW5C2X</msg>
<status status="PASS" starttime="20230601 14:18:16.472" endtime="20230601 14:18:16.472"/>
</kw>
<status status="PASS" starttime="20230601 14:18:16.071" endtime="20230601 14:18:16.473"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.473" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:18:16.473" endtime="20230601 14:18:16.533"/>
</kw>
<status status="PASS" starttime="20230601 14:18:16.473" endtime="20230601 14:18:16.533"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:18:16.534" endtime="20230601 14:18:16.773"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:18:16.791" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:18:16.773" endtime="20230601 14:18:16.791"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:16.804" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 14:18:16.792" endtime="20230601 14:18:16.804"/>
</kw>
<status status="PASS" starttime="20230601 14:18:16.533" endtime="20230601 14:18:16.805"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:18:16.805" endtime="20230601 14:18:16.860"/>
</kw>
<status status="PASS" starttime="20230601 14:18:16.805" endtime="20230601 14:18:16.860"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:18:14.549" endtime="20230601 14:18:16.860"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:18:16.863" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:18:16.862" endtime="20230601 14:18:18.280"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:18:18.280" endtime="20230601 14:18:18.390"/>
</kw>
<status status="PASS" starttime="20230601 14:18:16.861" endtime="20230601 14:18:18.390"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:18:18.396" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:18:18.391" endtime="20230601 14:18:18.396"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:18.397" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:18:18.396" endtime="20230601 14:18:18.452"/>
</kw>
<status status="PASS" starttime="20230601 14:18:18.390" endtime="20230601 14:18:18.452"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:18.453" level="INFO">Typing text 'Troy Ray' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 14:18:18.453" endtime="20230601 14:18:18.561"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:18.562" level="INFO">Typing text 'debbie39@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 14:18:18.561" endtime="20230601 14:18:18.669"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:18.670" level="INFO">Typing text 'di5JjZtW5C2X' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 14:18:18.670" endtime="20230601 14:18:18.765"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:18.766" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 14:18:18.766" endtime="20230601 14:18:18.846"/>
</kw>
<status status="PASS" starttime="20230601 14:18:18.452" endtime="20230601 14:18:18.846"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:18.847" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:18:18.847" endtime="20230601 14:18:18.907"/>
</kw>
<status status="PASS" starttime="20230601 14:18:18.846" endtime="20230601 14:18:18.907"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:18:18.908" endtime="20230601 14:18:19.143"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:18:19.162" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:18:19.143" endtime="20230601 14:18:19.162"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:19.175" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 14:18:19.162" endtime="20230601 14:18:19.175"/>
</kw>
<status status="PASS" starttime="20230601 14:18:18.908" endtime="20230601 14:18:19.176"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:18:19.176" endtime="20230601 14:18:19.231"/>
</kw>
<status status="PASS" starttime="20230601 14:18:19.176" endtime="20230601 14:18:19.231"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:18:16.861" endtime="20230601 14:18:19.231"/>
</test>
<status status="PASS" starttime="20230601 14:18:10.685" endtime="20230601 14:18:19.232"/>
</suite>
<status status="PASS" starttime="20230601 14:18:10.684" endtime="20230601 14:18:19.233"/>
</suite>
<status status="PASS" starttime="20230601 14:18:09.453" endtime="20230601 14:18:19.234"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
