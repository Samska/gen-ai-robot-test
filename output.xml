<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230521 21:49:41.368" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 21:49:41.889" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 21:49:41.889" endtime="20230521 21:49:41.889"/>
</kw>
<status status="PASS" starttime="20230521 21:49:41.888" endtime="20230521 21:49:41.889"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 21:49:42.064" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 21:49:42.064" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7f3c73bb-fe18-45bd-90ea-4651e942f82f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9b2ceb6f0604fb52ecaade456fd82b0d;o=1', 'Date': 'Sun, 21 May 2023 21:49:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '1737'} 
 body={
    "quantidade": 8,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "John Bell",
            "email": "ruizevan@example.org",
            "password": "*6OUOdmYrv",
            "administrador": "true",
            "_id": "2IKr7LeKuyL4FtC8"
        },
        {
            "nome": "Teste",
            "email": "samska@gmail.com",
            "password": "Qw98ed74",
            "administrador": "false",
            "_id": "3Xr3T2ckzgNOAh1F"
        },
        {
            "nome": "Mr. James Peterson PhD",
            "email": "connierivera@example.net",
            "password": "NdU_3!LsKk",
            "administrador": "true",
            "_id": "4pI3IxxAgkZAtnue"
        },
        {
            "nome": "Donald Smith",
            "email": "samanthawells@example.com",
            "password": "+N9BWsoU_y",
            "administrador": "true",
            "_id": "Gv7cXeZoEeMSmJ4b"
        },
        {
            "nome": "teste",
            "email": "testee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "PaihpGw8oseaf7q7"
        },
        {
            "nome": "Heidi Downs",
            "email": "urodriguez@example.com",
            "password": "1HQp3Qp5G#",
            "administrador": "true",
            "_id": "kO3ZvqwVu4B467mM"
        },
        {
            "nome": "testeeee",
            "email": "testeee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "yedZQ0ohrtKKZHdP"
        }
    ]
} 
 </msg>
<msg timestamp="20230521 21:49:42.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:41.890" endtime="20230521 21:49:42.065"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 21:49:42.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.065" endtime="20230521 21:49:42.065"/>
</kw>
<status status="PASS" starttime="20230521 21:49:41.890" endtime="20230521 21:49:42.065"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 21:49:42.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.066" endtime="20230521 21:49:42.066"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 21:49:42.066" endtime="20230521 21:49:42.067"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.065" endtime="20230521 21:49:42.067"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 21:49:42.068" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 21:49:42.068" endtime="20230521 21:49:42.068"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.067" endtime="20230521 21:49:42.068"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 21:49:41.888" endtime="20230521 21:49:42.068"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 21:49:42.070" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 21:49:42.070" endtime="20230521 21:49:42.070"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.069" endtime="20230521 21:49:42.070"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 21:49:42.071" level="INFO">${name} = Andre Cooley</msg>
<status status="PASS" starttime="20230521 21:49:42.071" endtime="20230521 21:49:42.071"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 21:49:42.072" level="INFO">${email} = ashleywilson@example.com</msg>
<status status="PASS" starttime="20230521 21:49:42.071" endtime="20230521 21:49:42.072"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 21:49:42.072" level="INFO">${password} = J1KT_a_$@4</msg>
<status status="PASS" starttime="20230521 21:49:42.072" endtime="20230521 21:49:42.072"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 21:49:42.073" level="INFO">${name} = Andre Cooley</msg>
<status status="PASS" starttime="20230521 21:49:42.072" endtime="20230521 21:49:42.073"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 21:49:42.073" level="INFO">${email} = ashleywilson@example.com</msg>
<status status="PASS" starttime="20230521 21:49:42.073" endtime="20230521 21:49:42.073"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 21:49:42.073" level="INFO">${password} = J1KT_a_$@4</msg>
<status status="PASS" starttime="20230521 21:49:42.073" endtime="20230521 21:49:42.073"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.071" endtime="20230521 21:49:42.073"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 21:49:42.074" level="INFO">${payload} = {'nome': 'Andre Cooley', 'email': 'ashleywilson@example.com', 'password': 'J1KT_a_$@4', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 21:49:42.074" endtime="20230521 21:49:42.074"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 21:49:42.075" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 21:49:42.074" endtime="20230521 21:49:42.075"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 21:49:42.156" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Andre Cooley", "email": "ashleywilson@example.com", "password": "J1KT_a_$@4", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 21:49:42.156" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6e0da4ca-a1d2-4dc2-bd5f-26632fbc3b7f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '398a826f3427da340cb667381e3c0dc6', 'Date': 'Sun, 21 May 2023 21:49:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "JgXeSWzk8rJP34Dz"
} 
 </msg>
<msg timestamp="20230521 21:49:42.156" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.075" endtime="20230521 21:49:42.156"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230521 21:49:42.157" level="INFO">${user_id} = JgXeSWzk8rJP34Dz</msg>
<status status="PASS" starttime="20230521 21:49:42.156" endtime="20230521 21:49:42.157"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230521 21:49:42.158" level="INFO">${USER_ID} = JgXeSWzk8rJP34Dz</msg>
<status status="PASS" starttime="20230521 21:49:42.157" endtime="20230521 21:49:42.158"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 21:49:42.158" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.158" endtime="20230521 21:49:42.158"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.073" endtime="20230521 21:49:42.158"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 21:49:42.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.159" endtime="20230521 21:49:42.159"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 21:49:42.159" endtime="20230521 21:49:42.160"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.158" endtime="20230521 21:49:42.160"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 21:49:42.161" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 21:49:42.160" endtime="20230521 21:49:42.161"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.160" endtime="20230521 21:49:42.161"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 21:49:42.069" endtime="20230521 21:49:42.161"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 21:49:42.163" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 21:49:42.162" endtime="20230521 21:49:42.163"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.162" endtime="20230521 21:49:42.163"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 21:49:42.244" level="INFO">GET Request : url=https://serverest.dev/usuarios/JgXeSWzk8rJP34Dz 
 path_url=/usuarios/JgXeSWzk8rJP34Dz 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 21:49:42.244" level="INFO">GET Response : url=https://serverest.dev/usuarios/JgXeSWzk8rJP34Dz 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c3c2e89c-cae8-4708-8421-729fe6ce26e2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '41e26dc58664a979eac5da72c055f587', 'Date': 'Sun, 21 May 2023 21:49:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Andre Cooley",
    "email": "ashleywilson@example.com",
    "password": "J1KT_a_$@4",
    "administrador": "false",
    "_id": "JgXeSWzk8rJP34Dz"
} 
 </msg>
<msg timestamp="20230521 21:49:42.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.163" endtime="20230521 21:49:42.245"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 21:49:42.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.245" endtime="20230521 21:49:42.245"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.163" endtime="20230521 21:49:42.245"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 21:49:42.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.246" endtime="20230521 21:49:42.246"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 21:49:42.246" endtime="20230521 21:49:42.247"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.245" endtime="20230521 21:49:42.247"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 21:49:42.248" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230521 21:49:42.247" endtime="20230521 21:49:42.248"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.247" endtime="20230521 21:49:42.248"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 21:49:42.161" endtime="20230521 21:49:42.248"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 21:49:42.250" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 21:49:42.249" endtime="20230521 21:49:42.250"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.249" endtime="20230521 21:49:42.250"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 21:49:42.251" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 21:49:42.250" endtime="20230521 21:49:42.251"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 21:49:42.251" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 21:49:42.251" endtime="20230521 21:49:42.251"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 21:49:42.333" level="INFO">PUT Request : url=https://serverest.dev/usuarios/JgXeSWzk8rJP34Dz 
 path_url=/usuarios/JgXeSWzk8rJP34Dz 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 21:49:42.333" level="INFO">PUT Response : url=https://serverest.dev/usuarios/JgXeSWzk8rJP34Dz 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '394a64f9-6901-4b66-8de4-be0dcf0234df', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6d822e5156785eeed980a67927adb3b8', 'Date': 'Sun, 21 May 2023 21:49:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230521 21:49:42.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.251" endtime="20230521 21:49:42.334"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 21:49:42.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.334" endtime="20230521 21:49:42.334"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.250" endtime="20230521 21:49:42.334"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 21:49:42.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.335" endtime="20230521 21:49:42.335"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 21:49:42.335" endtime="20230521 21:49:42.336"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.334" endtime="20230521 21:49:42.336"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 21:49:42.337" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 21:49:42.336" endtime="20230521 21:49:42.337"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.336" endtime="20230521 21:49:42.337"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 21:49:42.249" endtime="20230521 21:49:42.337"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 21:49:42.339" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 21:49:42.338" endtime="20230521 21:49:42.339"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.338" endtime="20230521 21:49:42.339"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 21:49:42.424" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/JgXeSWzk8rJP34Dz 
 path_url=/usuarios/JgXeSWzk8rJP34Dz 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230521 21:49:42.424" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/JgXeSWzk8rJP34Dz 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b9ca092-3ee9-4d4a-ba36-24c127ce9c22', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9e3cc9fa3897262f5543ead35b7d3dc0', 'Date': 'Sun, 21 May 2023 21:49:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230521 21:49:42.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.339" endtime="20230521 21:49:42.424"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 21:49:42.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.425" endtime="20230521 21:49:42.425"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.339" endtime="20230521 21:49:42.425"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 21:49:42.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 21:49:42.425" endtime="20230521 21:49:42.426"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 21:49:42.426" endtime="20230521 21:49:42.427"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.425" endtime="20230521 21:49:42.427"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 21:49:42.428" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 21:49:42.427" endtime="20230521 21:49:42.428"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.427" endtime="20230521 21:49:42.428"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 21:49:42.338" endtime="20230521 21:49:42.428"/>
</test>
<status status="PASS" starttime="20230521 21:49:41.390" endtime="20230521 21:49:42.429"/>
</suite>
<status status="PASS" starttime="20230521 21:49:41.388" endtime="20230521 21:49:42.430"/>
</suite>
<status status="PASS" starttime="20230521 21:49:41.387" endtime="20230521 21:49:42.431"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_signup.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 21:49:42.442" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 21:49:42.441" endtime="20230521 21:49:44.411"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 21:49:44.411" endtime="20230521 21:49:44.515"/>
</kw>
<status status="PASS" starttime="20230521 21:49:42.441" endtime="20230521 21:49:44.515"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 21:49:44.525" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 21:49:44.516" endtime="20230521 21:49:44.525"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:44.526" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 21:49:44.525" endtime="20230521 21:49:44.584"/>
</kw>
<status status="PASS" starttime="20230521 21:49:44.516" endtime="20230521 21:49:44.584"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:44.585" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 21:49:44.585" endtime="20230521 21:49:44.646"/>
</kw>
<status status="PASS" starttime="20230521 21:49:44.585" endtime="20230521 21:49:44.646"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 21:49:44.647" endtime="20230521 21:49:44.880"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 21:49:44.895" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230521 21:49:44.880" endtime="20230521 21:49:44.895"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 21:49:44.907" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230521 21:49:44.895" endtime="20230521 21:49:44.907"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 21:49:44.919" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230521 21:49:44.908" endtime="20230521 21:49:44.919"/>
</kw>
<status status="PASS" starttime="20230521 21:49:44.647" endtime="20230521 21:49:44.920"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 21:49:44.920" endtime="20230521 21:49:44.975"/>
</kw>
<status status="PASS" starttime="20230521 21:49:44.920" endtime="20230521 21:49:44.975"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 21:49:42.441" endtime="20230521 21:49:44.975"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 21:49:44.977" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 21:49:44.977" endtime="20230521 21:49:46.318"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 21:49:46.318" endtime="20230521 21:49:46.422"/>
</kw>
<status status="PASS" starttime="20230521 21:49:44.976" endtime="20230521 21:49:46.422"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 21:49:46.427" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 21:49:46.423" endtime="20230521 21:49:46.427"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:46.428" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 21:49:46.427" endtime="20230521 21:49:46.481"/>
</kw>
<status status="PASS" starttime="20230521 21:49:46.422" endtime="20230521 21:49:46.481"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 21:49:46.482" level="INFO">${name} = David Sanders</msg>
<status status="PASS" starttime="20230521 21:49:46.482" endtime="20230521 21:49:46.482"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 21:49:46.483" level="INFO">${email} = christopher87@example.com</msg>
<status status="PASS" starttime="20230521 21:49:46.482" endtime="20230521 21:49:46.483"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 21:49:46.483" level="INFO">${password} = LNkI#4Ah@_</msg>
<status status="PASS" starttime="20230521 21:49:46.483" endtime="20230521 21:49:46.483"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:46.484" level="INFO">Typing text 'David Sanders' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 21:49:46.483" endtime="20230521 21:49:46.601"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:46.602" level="INFO">Typing text 'christopher87@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 21:49:46.602" endtime="20230521 21:49:46.721"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:46.721" level="INFO">Typing text 'LNkI#4Ah@_' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 21:49:46.721" endtime="20230521 21:49:46.824"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:46.825" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 21:49:46.824" endtime="20230521 21:49:46.907"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 21:49:46.908" level="INFO">${name} = David Sanders</msg>
<status status="PASS" starttime="20230521 21:49:46.907" endtime="20230521 21:49:46.908"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 21:49:46.908" level="INFO">${email} = christopher87@example.com</msg>
<status status="PASS" starttime="20230521 21:49:46.908" endtime="20230521 21:49:46.908"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 21:49:46.908" level="INFO">${password} = LNkI#4Ah@_</msg>
<status status="PASS" starttime="20230521 21:49:46.908" endtime="20230521 21:49:46.908"/>
</kw>
<status status="PASS" starttime="20230521 21:49:46.481" endtime="20230521 21:49:46.908"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:46.909" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 21:49:46.909" endtime="20230521 21:49:46.968"/>
</kw>
<status status="PASS" starttime="20230521 21:49:46.909" endtime="20230521 21:49:46.968"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 21:49:46.968" endtime="20230521 21:49:47.201"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 21:49:47.214" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230521 21:49:47.201" endtime="20230521 21:49:47.214"/>
</kw>
<status status="PASS" starttime="20230521 21:49:46.968" endtime="20230521 21:49:47.214"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 21:49:47.214" endtime="20230521 21:49:47.270"/>
</kw>
<status status="PASS" starttime="20230521 21:49:47.214" endtime="20230521 21:49:47.270"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 21:49:44.976" endtime="20230521 21:49:47.270"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 21:49:47.272" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 21:49:47.272" endtime="20230521 21:49:48.575"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 21:49:48.576" endtime="20230521 21:49:48.679"/>
</kw>
<status status="PASS" starttime="20230521 21:49:47.271" endtime="20230521 21:49:48.679"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 21:49:48.684" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 21:49:48.680" endtime="20230521 21:49:48.684"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:48.685" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 21:49:48.685" endtime="20230521 21:49:48.737"/>
</kw>
<status status="PASS" starttime="20230521 21:49:48.679" endtime="20230521 21:49:48.737"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:48.739" level="INFO">Typing text 'David Sanders' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 21:49:48.738" endtime="20230521 21:49:48.854"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:48.855" level="INFO">Typing text 'christopher87@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 21:49:48.855" endtime="20230521 21:49:48.964"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:48.965" level="INFO">Typing text 'LNkI#4Ah@_' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 21:49:48.964" endtime="20230521 21:49:49.052"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:49.052" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 21:49:49.052" endtime="20230521 21:49:49.126"/>
</kw>
<status status="PASS" starttime="20230521 21:49:48.738" endtime="20230521 21:49:49.126"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 21:49:49.127" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 21:49:49.127" endtime="20230521 21:49:49.183"/>
</kw>
<status status="PASS" starttime="20230521 21:49:49.126" endtime="20230521 21:49:49.183"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 21:49:49.184" endtime="20230521 21:49:49.415"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 21:49:49.429" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230521 21:49:49.416" endtime="20230521 21:49:49.429"/>
</kw>
<status status="PASS" starttime="20230521 21:49:49.183" endtime="20230521 21:49:49.429"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 21:49:49.430" endtime="20230521 21:49:49.485"/>
</kw>
<status status="PASS" starttime="20230521 21:49:49.429" endtime="20230521 21:49:49.485"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 21:49:47.271" endtime="20230521 21:49:49.485"/>
</test>
<status status="PASS" starttime="20230521 21:49:42.434" endtime="20230521 21:49:49.486"/>
</suite>
<status status="PASS" starttime="20230521 21:49:42.433" endtime="20230521 21:49:49.488"/>
</suite>
<status status="PASS" starttime="20230521 21:49:42.431" endtime="20230521 21:49:49.489"/>
</suite>
<status status="PASS" starttime="20230521 21:49:41.369" endtime="20230521 21:49:49.490"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Signup">Tests.Ui.Login.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
