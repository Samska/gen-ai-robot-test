<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 14:27:04.220" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:27:04.826" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:27:04.826" endtime="20230601 14:27:04.827"/>
</kw>
<status status="PASS" starttime="20230601 14:27:04.826" endtime="20230601 14:27:04.827"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:27:05.058" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:27:05.058" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8e7bb318-b5b9-472b-9b81-85231246d2e4', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8193cce8bf27c68bdd9ca58ca43390bf;o=1', 'Date': 'Thu, 01 Jun 2023 14:27:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '3944'} 
 body={
    "quantidade": 18,
    "usuarios": [
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "{{nome}}",
            "email": "Hadley@qa.com.br",
            "password": "cTFFNtgOYHKCveO",
            "administrador": "true",
            "_id": "gP4GN1H0ztPPVm4T"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Troy Ray",
            "email": "debbie39@example.net",
            "password": "di5JjZtW5C2X",
            "administrador": "true",
            "_id": "w6qnBS2wGoSELmzN"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "wbGsZa5vMrOWAm7a"
        },
        {
            "nome": "julia",
            "email": "contatojuliasena2@gmail.com",
            "password": "07101995",
            "administrador": "false",
            "_id": "x5hhnzNB64soj1IS"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 14:27:05.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:04.828" endtime="20230601 14:27:05.058"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:27:05.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.059" endtime="20230601 14:27:05.060"/>
</kw>
<status status="PASS" starttime="20230601 14:27:04.827" endtime="20230601 14:27:05.060"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:27:05.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.061" endtime="20230601 14:27:05.062"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:27:05.062" endtime="20230601 14:27:05.064"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.060" endtime="20230601 14:27:05.064"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:27:05.066" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 14:27:05.065" endtime="20230601 14:27:05.066"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.064" endtime="20230601 14:27:05.066"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:27:04.825" endtime="20230601 14:27:05.066"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:27:05.069" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:27:05.068" endtime="20230601 14:27:05.069"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.068" endtime="20230601 14:27:05.069"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 14:27:05.070" level="INFO">${name} = Alexander Harris</msg>
<status status="PASS" starttime="20230601 14:27:05.070" endtime="20230601 14:27:05.070"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 14:27:05.071" level="INFO">${email} = jaredstone@example.com</msg>
<status status="PASS" starttime="20230601 14:27:05.070" endtime="20230601 14:27:05.071"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 14:27:05.072" level="INFO">${password} = jp4SdgCKILmW</msg>
<status status="PASS" starttime="20230601 14:27:05.072" endtime="20230601 14:27:05.072"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:27:05.072" level="INFO">${name} = Alexander Harris</msg>
<status status="PASS" starttime="20230601 14:27:05.072" endtime="20230601 14:27:05.073"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:27:05.073" level="INFO">${email} = jaredstone@example.com</msg>
<status status="PASS" starttime="20230601 14:27:05.073" endtime="20230601 14:27:05.073"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:27:05.074" level="INFO">${password} = jp4SdgCKILmW</msg>
<status status="PASS" starttime="20230601 14:27:05.073" endtime="20230601 14:27:05.074"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.069" endtime="20230601 14:27:05.074"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:27:05.075" level="INFO">${payload} = {'nome': 'Alexander Harris', 'email': 'jaredstone@example.com', 'password': 'jp4SdgCKILmW', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 14:27:05.075" endtime="20230601 14:27:05.075"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:27:05.076" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 14:27:05.075" endtime="20230601 14:27:05.076"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:27:05.179" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"nome": "Alexander Harris", "email": "jaredstone@example.com", "password": "jp4SdgCKILmW", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 14:27:05.179" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '202c3244-1194-461b-98ad-2bba5a19960f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '62d190da1ccdf3ac1ee24ba82fe41eb4', 'Date': 'Thu, 01 Jun 2023 14:27:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "QD1YSKCB0P7XukJB"
} 
 </msg>
<msg timestamp="20230601 14:27:05.179" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.076" endtime="20230601 14:27:05.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 14:27:05.181" level="INFO">${user_id} = QD1YSKCB0P7XukJB</msg>
<status status="PASS" starttime="20230601 14:27:05.180" endtime="20230601 14:27:05.181"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 14:27:05.181" level="INFO">${USER_ID} = QD1YSKCB0P7XukJB</msg>
<status status="PASS" starttime="20230601 14:27:05.181" endtime="20230601 14:27:05.181"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:27:05.182" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.182" endtime="20230601 14:27:05.182"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.074" endtime="20230601 14:27:05.182"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:27:05.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.183" endtime="20230601 14:27:05.184"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:27:05.184" endtime="20230601 14:27:05.186"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.182" endtime="20230601 14:27:05.186"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:27:05.187" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 14:27:05.187" endtime="20230601 14:27:05.187"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.186" endtime="20230601 14:27:05.188"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:27:05.067" endtime="20230601 14:27:05.188"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:27:05.190" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:27:05.190" endtime="20230601 14:27:05.190"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.189" endtime="20230601 14:27:05.191"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:27:05.286" level="INFO">GET Request : url=https://serverest.dev/usuarios/QD1YSKCB0P7XukJB 
 path_url=/usuarios/QD1YSKCB0P7XukJB 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:27:05.287" level="INFO">GET Response : url=https://serverest.dev/usuarios/QD1YSKCB0P7XukJB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ee133625-d0fe-4619-9001-d428b1eb224b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '81f27c9a5315fac3b3ec9fb457232cfe', 'Date': 'Thu, 01 Jun 2023 14:27:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '166'} 
 body={
    "nome": "Alexander Harris",
    "email": "jaredstone@example.com",
    "password": "jp4SdgCKILmW",
    "administrador": "false",
    "_id": "QD1YSKCB0P7XukJB"
} 
 </msg>
<msg timestamp="20230601 14:27:05.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.191" endtime="20230601 14:27:05.287"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:27:05.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.287" endtime="20230601 14:27:05.288"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.191" endtime="20230601 14:27:05.288"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:27:05.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.289" endtime="20230601 14:27:05.291"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:27:05.291" endtime="20230601 14:27:05.291"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.288" endtime="20230601 14:27:05.292"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:27:05.293" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 14:27:05.292" endtime="20230601 14:27:05.293"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.292" endtime="20230601 14:27:05.293"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:27:05.189" endtime="20230601 14:27:05.293"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:27:05.295" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:27:05.295" endtime="20230601 14:27:05.295"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.294" endtime="20230601 14:27:05.296"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:27:05.296" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 14:27:05.296" endtime="20230601 14:27:05.296"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:27:05.297" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 14:27:05.297" endtime="20230601 14:27:05.297"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:27:05.402" level="INFO">PUT Request : url=https://serverest.dev/usuarios/QD1YSKCB0P7XukJB 
 path_url=/usuarios/QD1YSKCB0P7XukJB 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 14:27:05.402" level="INFO">PUT Response : url=https://serverest.dev/usuarios/QD1YSKCB0P7XukJB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6d3ffa63-ad97-42cf-b559-f4fbd8d5da82', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c74ff4aa648040ecb20d393787f24e27', 'Date': 'Thu, 01 Jun 2023 14:27:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 14:27:05.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.297" endtime="20230601 14:27:05.403"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:27:05.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.403" endtime="20230601 14:27:05.403"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.296" endtime="20230601 14:27:05.403"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:27:05.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.404" endtime="20230601 14:27:05.405"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:27:05.405" endtime="20230601 14:27:05.406"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.404" endtime="20230601 14:27:05.406"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:27:05.407" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 14:27:05.406" endtime="20230601 14:27:05.407"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.406" endtime="20230601 14:27:05.407"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:27:05.294" endtime="20230601 14:27:05.407"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:27:05.409" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:27:05.409" endtime="20230601 14:27:05.410"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.409" endtime="20230601 14:27:05.410"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:27:05.513" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/QD1YSKCB0P7XukJB 
 path_url=/usuarios/QD1YSKCB0P7XukJB 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:27:05.514" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/QD1YSKCB0P7XukJB 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f9c86de7-6be7-490d-bb2b-117ffd645319', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1c984b4b8b457f971de521ca02f43113', 'Date': 'Thu, 01 Jun 2023 14:27:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 14:27:05.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.411" endtime="20230601 14:27:05.514"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:27:05.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.514" endtime="20230601 14:27:05.515"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.410" endtime="20230601 14:27:05.515"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:27:05.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:27:05.515" endtime="20230601 14:27:05.517"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:27:05.517" endtime="20230601 14:27:05.517"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.515" endtime="20230601 14:27:05.518"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:27:05.519" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 14:27:05.518" endtime="20230601 14:27:05.519"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.518" endtime="20230601 14:27:05.519"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:27:05.408" endtime="20230601 14:27:05.519"/>
</test>
<status status="PASS" starttime="20230601 14:27:04.259" endtime="20230601 14:27:05.520"/>
</suite>
<status status="PASS" starttime="20230601 14:27:04.257" endtime="20230601 14:27:05.521"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:27:05.536" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:27:05.536" endtime="20230601 14:27:07.398"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:27:07.398" endtime="20230601 14:27:07.505"/>
</kw>
<status status="PASS" starttime="20230601 14:27:05.535" endtime="20230601 14:27:07.506"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:27:07.514" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:27:07.506" endtime="20230601 14:27:07.514"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:07.515" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:27:07.514" endtime="20230601 14:27:07.647"/>
</kw>
<status status="PASS" starttime="20230601 14:27:07.506" endtime="20230601 14:27:07.648"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:07.649" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:27:07.648" endtime="20230601 14:27:07.730"/>
</kw>
<status status="PASS" starttime="20230601 14:27:07.648" endtime="20230601 14:27:07.730"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:27:07.731" endtime="20230601 14:27:07.971"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:27:07.993" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:27:07.971" endtime="20230601 14:27:07.993"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:27:08.017" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:27:07.994" endtime="20230601 14:27:08.018"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:27:08.034" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:27:08.018" endtime="20230601 14:27:08.034"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:27:08.049" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:27:08.034" endtime="20230601 14:27:08.049"/>
</kw>
<status status="PASS" starttime="20230601 14:27:07.730" endtime="20230601 14:27:08.049"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:27:08.050" endtime="20230601 14:27:08.106"/>
</kw>
<status status="PASS" starttime="20230601 14:27:08.050" endtime="20230601 14:27:08.107"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:27:05.535" endtime="20230601 14:27:08.107"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:27:08.109" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:27:08.109" endtime="20230601 14:27:09.168"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:27:09.168" endtime="20230601 14:27:09.273"/>
</kw>
<status status="PASS" starttime="20230601 14:27:08.108" endtime="20230601 14:27:09.273"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:27:09.279" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:27:09.274" endtime="20230601 14:27:09.280"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:09.281" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:27:09.280" endtime="20230601 14:27:09.394"/>
</kw>
<status status="PASS" starttime="20230601 14:27:09.273" endtime="20230601 14:27:09.395"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 14:27:09.396" level="INFO">${name} = Stephen Price</msg>
<status status="PASS" starttime="20230601 14:27:09.395" endtime="20230601 14:27:09.396"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 14:27:09.397" level="INFO">${email} = schaeferdylan@example.com</msg>
<status status="PASS" starttime="20230601 14:27:09.396" endtime="20230601 14:27:09.397"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 14:27:09.397" level="INFO">${password} = 8O6ksSdDZp24</msg>
<status status="PASS" starttime="20230601 14:27:09.397" endtime="20230601 14:27:09.397"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:09.398" level="INFO">Typing text 'Stephen Price' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 14:27:09.398" endtime="20230601 14:27:09.558"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:09.559" level="INFO">Typing text 'schaeferdylan@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 14:27:09.558" endtime="20230601 14:27:09.693"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:09.694" level="INFO">Typing text '8O6ksSdDZp24' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 14:27:09.694" endtime="20230601 14:27:09.835"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:09.836" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 14:27:09.835" endtime="20230601 14:27:09.961"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:27:09.962" level="INFO">${name} = Stephen Price</msg>
<status status="PASS" starttime="20230601 14:27:09.961" endtime="20230601 14:27:09.962"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:27:09.962" level="INFO">${email} = schaeferdylan@example.com</msg>
<status status="PASS" starttime="20230601 14:27:09.962" endtime="20230601 14:27:09.963"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:27:09.963" level="INFO">${password} = 8O6ksSdDZp24</msg>
<status status="PASS" starttime="20230601 14:27:09.963" endtime="20230601 14:27:09.963"/>
</kw>
<status status="PASS" starttime="20230601 14:27:09.395" endtime="20230601 14:27:09.963"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:09.966" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:27:09.964" endtime="20230601 14:27:10.061"/>
</kw>
<status status="PASS" starttime="20230601 14:27:09.963" endtime="20230601 14:27:10.061"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:27:10.062" endtime="20230601 14:27:10.306"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:27:10.331" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:27:10.306" endtime="20230601 14:27:10.331"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:27:10.349" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 14:27:10.331" endtime="20230601 14:27:10.349"/>
</kw>
<status status="PASS" starttime="20230601 14:27:10.061" endtime="20230601 14:27:10.349"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:27:10.350" endtime="20230601 14:27:11.405"/>
</kw>
<status status="PASS" starttime="20230601 14:27:10.349" endtime="20230601 14:27:11.406"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:27:08.108" endtime="20230601 14:27:11.406"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:27:11.409" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:27:11.408" endtime="20230601 14:27:12.397"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:27:12.398" endtime="20230601 14:27:12.502"/>
</kw>
<status status="PASS" starttime="20230601 14:27:11.408" endtime="20230601 14:27:12.503"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:27:12.512" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:27:12.503" endtime="20230601 14:27:12.512"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:12.514" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:27:12.512" endtime="20230601 14:27:12.600"/>
</kw>
<status status="PASS" starttime="20230601 14:27:12.503" endtime="20230601 14:27:12.600"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:12.601" level="INFO">Typing text 'Stephen Price' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 14:27:12.601" endtime="20230601 14:27:12.769"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:12.770" level="INFO">Typing text 'schaeferdylan@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 14:27:12.769" endtime="20230601 14:27:12.901"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:12.902" level="INFO">Typing text '8O6ksSdDZp24' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 14:27:12.901" endtime="20230601 14:27:13.059"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:13.060" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 14:27:13.059" endtime="20230601 14:27:13.181"/>
</kw>
<status status="PASS" starttime="20230601 14:27:12.600" endtime="20230601 14:27:13.182"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:27:13.184" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:27:13.183" endtime="20230601 14:27:13.286"/>
</kw>
<status status="PASS" starttime="20230601 14:27:13.182" endtime="20230601 14:27:13.286"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:27:13.287" endtime="20230601 14:27:13.531"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:27:13.554" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:27:13.531" endtime="20230601 14:27:13.554"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:27:13.571" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 14:27:13.554" endtime="20230601 14:27:13.571"/>
</kw>
<status status="PASS" starttime="20230601 14:27:13.286" endtime="20230601 14:27:13.571"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:27:13.572" endtime="20230601 14:27:13.628"/>
</kw>
<status status="PASS" starttime="20230601 14:27:13.571" endtime="20230601 14:27:13.628"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:27:11.407" endtime="20230601 14:27:13.628"/>
</test>
<status status="PASS" starttime="20230601 14:27:05.524" endtime="20230601 14:27:13.630"/>
</suite>
<status status="PASS" starttime="20230601 14:27:05.522" endtime="20230601 14:27:13.632"/>
</suite>
<status status="PASS" starttime="20230601 14:27:04.221" endtime="20230601 14:27:13.634"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
