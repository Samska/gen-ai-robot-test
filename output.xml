<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230529 01:41:41.645" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 01:41:42.357" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 01:41:42.356" endtime="20230529 01:41:42.357"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.356" endtime="20230529 01:41:42.357"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 01:41:42.489" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230529 01:41:42.490" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '150397d9-20ea-4271-951a-730d6de9e1c2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6ba1d83f3a2f5f1f145e54fae929c512;o=1', 'Date': 'Mon, 29 May 2023 01:41:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '1261'} 
 body={
    "quantidade": 6,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "{{nome}}",
            "email": "Chad@qa.com.br",
            "password": "GPXHLDlDyzjsy_d",
            "administrador": "true",
            "_id": "1u870KWeSsm8K0sc"
        },
        {
            "nome": "teste",
            "email": "teste@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "JA0D2CVJRY5C9pxe"
        },
        {
            "nome": "teste3",
            "email": "teste3@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "LS9HmlzpRoPeKn4i"
        },
        {
            "nome": "teste2",
            "email": "teste2@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "U1w3ulAMmK0xk9Qa"
        },
        {
            "nome": "teste1",
            "email": "teste1@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "VqRN1gGgljbJWsED"
        }
    ]
} 
 </msg>
<msg timestamp="20230529 01:41:42.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.357" endtime="20230529 01:41:42.490"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 01:41:42.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.490" endtime="20230529 01:41:42.491"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.357" endtime="20230529 01:41:42.491"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 01:41:42.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.491" endtime="20230529 01:41:42.492"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 01:41:42.492" endtime="20230529 01:41:42.493"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.491" endtime="20230529 01:41:42.493"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 01:41:42.494" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230529 01:41:42.493" endtime="20230529 01:41:42.494"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.493" endtime="20230529 01:41:42.494"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 01:41:42.355" endtime="20230529 01:41:42.494"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 01:41:42.495" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 01:41:42.495" endtime="20230529 01:41:42.496"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.495" endtime="20230529 01:41:42.496"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230529 01:41:42.496" level="INFO">${name} = Jennifer Harrington</msg>
<status status="PASS" starttime="20230529 01:41:42.496" endtime="20230529 01:41:42.496"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230529 01:41:42.497" level="INFO">${email} = patrickbrooks@example.org</msg>
<status status="PASS" starttime="20230529 01:41:42.497" endtime="20230529 01:41:42.497"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230529 01:41:42.498" level="INFO">${password} = IWyjoRMi4eAV</msg>
<status status="PASS" starttime="20230529 01:41:42.497" endtime="20230529 01:41:42.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 01:41:42.498" level="INFO">${name} = Jennifer Harrington</msg>
<status status="PASS" starttime="20230529 01:41:42.498" endtime="20230529 01:41:42.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 01:41:42.498" level="INFO">${email} = patrickbrooks@example.org</msg>
<status status="PASS" starttime="20230529 01:41:42.498" endtime="20230529 01:41:42.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 01:41:42.499" level="INFO">${password} = IWyjoRMi4eAV</msg>
<status status="PASS" starttime="20230529 01:41:42.498" endtime="20230529 01:41:42.499"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.496" endtime="20230529 01:41:42.499"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 01:41:42.500" level="INFO">${payload} = {'nome': 'Jennifer Harrington', 'email': 'patrickbrooks@example.org', 'password': 'IWyjoRMi4eAV', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230529 01:41:42.499" endtime="20230529 01:41:42.500"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 01:41:42.500" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230529 01:41:42.500" endtime="20230529 01:41:42.500"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 01:41:42.579" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '123'} 
 body=b'{"nome": "Jennifer Harrington", "email": "patrickbrooks@example.org", "password": "IWyjoRMi4eAV", "administrador": "false"}' 
 </msg>
<msg timestamp="20230529 01:41:42.579" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6f51d18c-0582-4739-895c-11013bea2a54', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1ee592b605e2f6803957fef26d16f583', 'Date': 'Mon, 29 May 2023 01:41:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "KDgnOxhNbqtfGPas"
} 
 </msg>
<msg timestamp="20230529 01:41:42.579" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.500" endtime="20230529 01:41:42.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230529 01:41:42.580" level="INFO">${user_id} = KDgnOxhNbqtfGPas</msg>
<status status="PASS" starttime="20230529 01:41:42.580" endtime="20230529 01:41:42.580"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230529 01:41:42.581" level="INFO">${USER_ID} = KDgnOxhNbqtfGPas</msg>
<status status="PASS" starttime="20230529 01:41:42.581" endtime="20230529 01:41:42.581"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 01:41:42.581" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.581" endtime="20230529 01:41:42.581"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.499" endtime="20230529 01:41:42.582"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 01:41:42.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.582" endtime="20230529 01:41:42.583"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 01:41:42.583" endtime="20230529 01:41:42.583"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.582" endtime="20230529 01:41:42.584"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 01:41:42.585" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230529 01:41:42.584" endtime="20230529 01:41:42.585"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.584" endtime="20230529 01:41:42.585"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 01:41:42.494" endtime="20230529 01:41:42.585"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 01:41:42.586" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 01:41:42.586" endtime="20230529 01:41:42.587"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.586" endtime="20230529 01:41:42.587"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 01:41:42.673" level="INFO">GET Request : url=https://serverest.dev/usuarios/KDgnOxhNbqtfGPas 
 path_url=/usuarios/KDgnOxhNbqtfGPas 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230529 01:41:42.673" level="INFO">GET Response : url=https://serverest.dev/usuarios/KDgnOxhNbqtfGPas 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '22077fea-8bde-4702-bb0f-1c77201ec583', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '040b3591d024e8c8385277374c4da721', 'Date': 'Mon, 29 May 2023 01:41:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '172'} 
 body={
    "nome": "Jennifer Harrington",
    "email": "patrickbrooks@example.org",
    "password": "IWyjoRMi4eAV",
    "administrador": "false",
    "_id": "KDgnOxhNbqtfGPas"
} 
 </msg>
<msg timestamp="20230529 01:41:42.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.587" endtime="20230529 01:41:42.673"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 01:41:42.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.674" endtime="20230529 01:41:42.674"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.587" endtime="20230529 01:41:42.674"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 01:41:42.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.675" endtime="20230529 01:41:42.675"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 01:41:42.676" endtime="20230529 01:41:42.676"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.674" endtime="20230529 01:41:42.676"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 01:41:42.677" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230529 01:41:42.677" endtime="20230529 01:41:42.677"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.676" endtime="20230529 01:41:42.677"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 01:41:42.585" endtime="20230529 01:41:42.678"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 01:41:42.679" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 01:41:42.679" endtime="20230529 01:41:42.679"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.678" endtime="20230529 01:41:42.679"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 01:41:42.680" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230529 01:41:42.680" endtime="20230529 01:41:42.680"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230529 01:41:42.680" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230529 01:41:42.680" endtime="20230529 01:41:42.680"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 01:41:42.763" level="INFO">PUT Request : url=https://serverest.dev/usuarios/KDgnOxhNbqtfGPas 
 path_url=/usuarios/KDgnOxhNbqtfGPas 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230529 01:41:42.763" level="INFO">PUT Response : url=https://serverest.dev/usuarios/KDgnOxhNbqtfGPas 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '791e0057-586f-40e9-8940-90f8afadbdaa', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8e57d48c5b0f47f82027044caf0beff0', 'Date': 'Mon, 29 May 2023 01:41:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230529 01:41:42.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.680" endtime="20230529 01:41:42.764"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 01:41:42.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.764" endtime="20230529 01:41:42.764"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.679" endtime="20230529 01:41:42.764"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 01:41:42.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.765" endtime="20230529 01:41:42.766"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 01:41:42.766" endtime="20230529 01:41:42.767"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.765" endtime="20230529 01:41:42.767"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 01:41:42.768" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230529 01:41:42.767" endtime="20230529 01:41:42.768"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.767" endtime="20230529 01:41:42.768"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 01:41:42.678" endtime="20230529 01:41:42.768"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230529 01:41:42.769" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230529 01:41:42.769" endtime="20230529 01:41:42.770"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.769" endtime="20230529 01:41:42.770"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230529 01:41:42.853" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/KDgnOxhNbqtfGPas 
 path_url=/usuarios/KDgnOxhNbqtfGPas 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230529 01:41:42.853" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/KDgnOxhNbqtfGPas 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8d93c83c-756a-4ab9-bf46-6083c843ab95', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6d8209fde1d0648e4485057bb54811bf', 'Date': 'Mon, 29 May 2023 01:41:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230529 01:41:42.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.770" endtime="20230529 01:41:42.853"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230529 01:41:42.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.854" endtime="20230529 01:41:42.854"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.770" endtime="20230529 01:41:42.854"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230529 01:41:42.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230529 01:41:42.855" endtime="20230529 01:41:42.856"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230529 01:41:42.856" endtime="20230529 01:41:42.856"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.854" endtime="20230529 01:41:42.856"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230529 01:41:42.858" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230529 01:41:42.857" endtime="20230529 01:41:42.858"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.857" endtime="20230529 01:41:42.858"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230529 01:41:42.768" endtime="20230529 01:41:42.858"/>
</test>
<status status="PASS" starttime="20230529 01:41:41.666" endtime="20230529 01:41:42.858"/>
</suite>
<status status="PASS" starttime="20230529 01:41:41.664" endtime="20230529 01:41:42.860"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230529 01:41:42.870" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230529 01:41:42.869" endtime="20230529 01:41:51.986"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230529 01:41:51.986" endtime="20230529 01:41:52.108"/>
</kw>
<status status="PASS" starttime="20230529 01:41:42.869" endtime="20230529 01:41:52.109"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230529 01:41:52.115" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230529 01:41:52.109" endtime="20230529 01:41:52.115"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:52.116" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230529 01:41:52.115" endtime="20230529 01:41:52.322"/>
</kw>
<status status="PASS" starttime="20230529 01:41:52.109" endtime="20230529 01:41:52.322"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:52.323" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230529 01:41:52.322" endtime="20230529 01:41:52.482"/>
</kw>
<status status="PASS" starttime="20230529 01:41:52.322" endtime="20230529 01:41:52.483"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230529 01:41:52.483" endtime="20230529 01:41:52.724"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230529 01:41:52.743" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230529 01:41:52.724" endtime="20230529 01:41:52.743"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 01:41:52.781" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230529 01:41:52.743" endtime="20230529 01:41:52.781"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 01:41:52.795" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230529 01:41:52.781" endtime="20230529 01:41:52.795"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 01:41:52.807" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230529 01:41:52.795" endtime="20230529 01:41:52.807"/>
</kw>
<status status="PASS" starttime="20230529 01:41:52.483" endtime="20230529 01:41:52.808"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230529 01:41:52.808" endtime="20230529 01:41:52.863"/>
</kw>
<status status="PASS" starttime="20230529 01:41:52.808" endtime="20230529 01:41:52.863"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230529 01:41:42.868" endtime="20230529 01:41:52.864"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230529 01:41:52.866" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230529 01:41:52.865" endtime="20230529 01:41:54.244"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230529 01:41:54.244" endtime="20230529 01:41:54.358"/>
</kw>
<status status="PASS" starttime="20230529 01:41:52.865" endtime="20230529 01:41:54.358"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230529 01:41:54.364" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230529 01:41:54.359" endtime="20230529 01:41:54.364"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:54.365" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230529 01:41:54.364" endtime="20230529 01:41:54.418"/>
</kw>
<status status="PASS" starttime="20230529 01:41:54.359" endtime="20230529 01:41:54.418"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230529 01:41:54.420" level="INFO">${name} = Derrick Wolfe</msg>
<status status="PASS" starttime="20230529 01:41:54.419" endtime="20230529 01:41:54.420"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230529 01:41:54.420" level="INFO">${email} = wwilson@example.com</msg>
<status status="PASS" starttime="20230529 01:41:54.420" endtime="20230529 01:41:54.420"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230529 01:41:54.421" level="INFO">${password} = 9a3HuvXsjKFd</msg>
<status status="PASS" starttime="20230529 01:41:54.420" endtime="20230529 01:41:54.421"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:54.421" level="INFO">Typing text 'Derrick Wolfe' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230529 01:41:54.421" endtime="20230529 01:41:54.590"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:54.591" level="INFO">Typing text 'wwilson@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230529 01:41:54.591" endtime="20230529 01:41:54.719"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:54.719" level="INFO">Typing text '9a3HuvXsjKFd' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230529 01:41:54.719" endtime="20230529 01:41:54.822"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:54.823" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230529 01:41:54.822" endtime="20230529 01:41:54.896"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 01:41:54.897" level="INFO">${name} = Derrick Wolfe</msg>
<status status="PASS" starttime="20230529 01:41:54.896" endtime="20230529 01:41:54.897"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 01:41:54.897" level="INFO">${email} = wwilson@example.com</msg>
<status status="PASS" starttime="20230529 01:41:54.897" endtime="20230529 01:41:54.897"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230529 01:41:54.898" level="INFO">${password} = 9a3HuvXsjKFd</msg>
<status status="PASS" starttime="20230529 01:41:54.897" endtime="20230529 01:41:54.898"/>
</kw>
<status status="PASS" starttime="20230529 01:41:54.418" endtime="20230529 01:41:54.898"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:54.899" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230529 01:41:54.898" endtime="20230529 01:41:54.958"/>
</kw>
<status status="PASS" starttime="20230529 01:41:54.898" endtime="20230529 01:41:54.958"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230529 01:41:54.959" endtime="20230529 01:41:55.192"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230529 01:41:55.210" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230529 01:41:55.192" endtime="20230529 01:41:55.210"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 01:41:55.223" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230529 01:41:55.210" endtime="20230529 01:41:55.223"/>
</kw>
<status status="PASS" starttime="20230529 01:41:54.958" endtime="20230529 01:41:55.223"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230529 01:41:55.223" endtime="20230529 01:41:55.278"/>
</kw>
<status status="PASS" starttime="20230529 01:41:55.223" endtime="20230529 01:41:55.278"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230529 01:41:52.864" endtime="20230529 01:41:55.278"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230529 01:41:55.281" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230529 01:41:55.280" endtime="20230529 01:41:56.623"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230529 01:41:56.624" endtime="20230529 01:41:56.727"/>
</kw>
<status status="PASS" starttime="20230529 01:41:55.279" endtime="20230529 01:41:56.728"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230529 01:41:56.761" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230529 01:41:56.729" endtime="20230529 01:41:56.761"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:56.762" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230529 01:41:56.762" endtime="20230529 01:41:56.816"/>
</kw>
<status status="PASS" starttime="20230529 01:41:56.728" endtime="20230529 01:41:56.816"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:56.817" level="INFO">Typing text 'Derrick Wolfe' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230529 01:41:56.817" endtime="20230529 01:41:56.937"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:56.938" level="INFO">Typing text 'wwilson@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230529 01:41:56.937" endtime="20230529 01:41:57.048"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:57.048" level="INFO">Typing text '9a3HuvXsjKFd' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230529 01:41:57.048" endtime="20230529 01:41:57.141"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:57.142" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230529 01:41:57.141" endtime="20230529 01:41:57.218"/>
</kw>
<status status="PASS" starttime="20230529 01:41:56.816" endtime="20230529 01:41:57.218"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230529 01:41:57.219" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230529 01:41:57.219" endtime="20230529 01:41:57.281"/>
</kw>
<status status="PASS" starttime="20230529 01:41:57.218" endtime="20230529 01:41:57.282"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230529 01:41:57.282" endtime="20230529 01:41:57.517"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230529 01:41:57.536" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230529 01:41:57.517" endtime="20230529 01:41:57.536"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230529 01:41:57.550" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230529 01:41:57.537" endtime="20230529 01:41:57.551"/>
</kw>
<status status="PASS" starttime="20230529 01:41:57.282" endtime="20230529 01:41:57.551"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230529 01:41:57.551" endtime="20230529 01:41:57.606"/>
</kw>
<status status="PASS" starttime="20230529 01:41:57.551" endtime="20230529 01:41:57.606"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230529 01:41:55.279" endtime="20230529 01:41:57.606"/>
</test>
<status status="PASS" starttime="20230529 01:41:42.862" endtime="20230529 01:41:57.607"/>
</suite>
<status status="PASS" starttime="20230529 01:41:42.860" endtime="20230529 01:41:57.609"/>
</suite>
<status status="PASS" starttime="20230529 01:41:41.646" endtime="20230529 01:41:57.610"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
