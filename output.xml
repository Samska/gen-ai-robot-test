<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 19:08:48.173" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:08:48.761" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:08:48.761" endtime="20230601 19:08:48.762"/>
</kw>
<status status="PASS" starttime="20230601 19:08:48.761" endtime="20230601 19:08:48.762"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:08:48.910" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 19:08:48.910" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '559d6593-d298-4b6a-b4de-3ed2b99a1a16', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7aa35206b34714f65a526f11b546c162', 'Date': 'Thu, 01 Jun 2023 19:08:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '20663'} 
 body={
    "quantidade": 94,
    "usuarios": [
        {
            "nome": "Edward Jones",
            "email": "bphillips@example.org",
            "password": "g04o0dMkekzU",
            "administrador": "true",
            "_id": "0NF5phDpupxhrHxN"
        },
        {
            "nome": "Lyman Muller I",
            "email": "lymanmulleri_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "1Iz4EuY2IqGVVJfz"
        },
        {
            "nome": "Nicky Crist",
            "email": "nickycrist_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "1vz4kFeZ6nI0oetX"
        },
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Kristin Mcclain",
            "email": "hawkinssarah@example.net",
            "password": "8DXFqSuwDU7S",
            "administrador": "true",
            "_id": "5FwnXtY5VweuUtv9"
        },
        {
            "nome": "Tonya Robinson MD",
            "email": "waltertracy@example.org",
            "password": "BVU6Qads5Idg",
            "administrador": "true",
            "_id": "5VNrB0GpqKXGQxsQ"
        },
        {
            "nome": "Leanora Lesch",
            "email": "leanoralesch_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "5rsfAHiqjU1j0OIe"
        },
        {
            "nome": "Riley Meadows",
            "email": "wardlindsay@example.com",
            "password": "21nem33sV3Wv",
            "administrador": "true",
            "_id": "6ZrbiguZb3H8xbz7"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulaninhodasilva@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "8GV85HRf3fvz3bA6"
        },
        {
            "nome": "Teste de Exclus√£o",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9gstdMBMAIERTqbi"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Gertie Marvin IV",
            "email": "gertiemarviniv_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "BGj6VzTFs5OHYXz3"
        },
        {
            "nome": "Rep. Marcus Zulauf",
            "email": "repmarcuszulauf_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "C2oIa3elkZu8OgCh"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0104@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "CPotN3cJwU2ytcC0"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0318@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "Cjii886shOMAPasE"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Tim Bailey",
            "email": "brandi91@example.com",
            "password": "C4potpmPdGgK",
            "administrador": "true",
            "_id": "ErsScEURYX1dsYXf"
        },
        {
            "nome": "Vickie Green",
            "email": "vickiegreen_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "FgPTX49i1n7EY9IK"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010601@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "FmAZHqMdTUASVy5E"
        },
        {
            "nome": "Michael Torres",
            "email": "sharonmoore@example.org",
            "password": "t4wu3WWhnqn7",
            "administrador": "true",
            "_id": "GZNbsNpQeHv7ISFa"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulaninhodasilv@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "GenOWVanmZjX7iNC"
        },
        {
            "nome": "Crystal Parks",
            "email": "oolson@example.com",
            "password": "1wdCfdPmvGs3",
            "administrador": "true",
            "_id": "HkeCIJyLaeKC4tfA"
        },
        {
            "nome": "Mohamed Hyatt",
            "email": "mohamedhyatt_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "HwZXX3KaO6cdeyb1"
        },
        {
            "nome": "Jacob Green",
            "email": "fishermichael@example.net",
            "password": "3PZDCPb9061P",
            "administrador": "true",
            "_id": "J9loLcyHGcTT4rpu"
        },
        {
            "nome": "Stephen Reynolds",
            "email": "stephenreynolds_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "JAwEFMxMJ1jzZxEs"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0114@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "MZEGk2tTLklplZrU"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0215@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "NfR9Vy9SIekHqpyG"
        },
        {
            "nome": "Ellis Cremin I",
            "email": "elliscremini_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "OagcOXL77fcQcJcl"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "Quinn Orn",
            "email": "quinnorn_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Q4uzpPanjVopwd6z"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt010603@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "QGQCKYrf91pHsUXF"
        },
        {
            "nome": "Ernest Henderson",
            "email": "hjohnson@example.com",
            "password": "k3i4vvWa5P4T",
            "administrador": "true",
            "_id": "QtqujdoU12lXiYjm"
        },
        {
            "nome": "Teste de Exclus√£o",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Gleyciana Campelo",
            "email": "rkjur30mt1@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "TD5vVEbjmAoCuqIP"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Long Turner",
            "email": "longturner_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "UPJUP841x0xSyuFj"
        },
        {
            "nome": "Fulano da Silva",
            "email": "okns@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "UpSlcfVu8O5cbeOj"
        },
        {
            "nome": "Lindsey Berge",
            "email": "testeteste@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "UswUbgHnjznYal0u"
        },
        {
            "nome": "Sharon Larson",
            "email": "sharonlarson_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "V8M05NI0POHw0e7p"
        },
        {
            "nome": "Randolph Anderson",
            "email": "randolphanderson_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "Ve8YZlGTMPqS9tor"
        },
        {
            "nome": "Miss Mohamed Brakus",
            "email": "missmohamedbrakus_dojo@teste.com",
            "password": "123123",
            "administrador": "true",
            "_id": "VyMVbdglg5ieZjSf"
        },
        {
            "nome": "Donald Palmer",
            "email": "kshannon@example.net",
            "password": "MN61aKMyY2Zp",
            "administrador": "true",
            "_id": "WJLRKci7u4ThQVZi"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230601 19:08:48.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:48.762" endtime="20230601 19:08:48.911"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:08:48.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:48.911" endtime="20230601 19:08:48.912"/>
</kw>
<status status="PASS" starttime="20230601 19:08:48.762" endtime="20230601 19:08:48.912"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:08:48.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:08:48.912" endtime="20230601 19:08:48.913"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:08:48.913" endtime="20230601 19:08:48.914"/>
</kw>
<status status="PASS" starttime="20230601 19:08:48.912" endtime="20230601 19:08:48.914"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:08:48.916" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 19:08:48.915" endtime="20230601 19:08:48.916"/>
</kw>
<status status="PASS" starttime="20230601 19:08:48.914" endtime="20230601 19:08:48.916"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:08:48.760" endtime="20230601 19:08:48.916"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:08:48.918" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:08:48.917" endtime="20230601 19:08:48.918"/>
</kw>
<status status="PASS" starttime="20230601 19:08:48.917" endtime="20230601 19:08:48.918"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 19:08:48.919" level="INFO">${name} = Kent Edwards</msg>
<status status="PASS" starttime="20230601 19:08:48.918" endtime="20230601 19:08:48.919"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 19:08:48.920" level="INFO">${email} = lisachen@example.net</msg>
<status status="PASS" starttime="20230601 19:08:48.919" endtime="20230601 19:08:48.920"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 19:08:48.920" level="INFO">${password} = 1HCwsbnrnnlW</msg>
<status status="PASS" starttime="20230601 19:08:48.920" endtime="20230601 19:08:48.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:08:48.921" level="INFO">${name} = Kent Edwards</msg>
<status status="PASS" starttime="20230601 19:08:48.920" endtime="20230601 19:08:48.921"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:08:48.921" level="INFO">${email} = lisachen@example.net</msg>
<status status="PASS" starttime="20230601 19:08:48.921" endtime="20230601 19:08:48.921"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:08:48.921" level="INFO">${password} = 1HCwsbnrnnlW</msg>
<status status="PASS" starttime="20230601 19:08:48.921" endtime="20230601 19:08:48.921"/>
</kw>
<status status="PASS" starttime="20230601 19:08:48.918" endtime="20230601 19:08:48.922"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 19:08:48.922" level="INFO">${payload} = {'nome': 'Kent Edwards', 'email': 'lisachen@example.net', 'password': '1HCwsbnrnnlW', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 19:08:48.922" endtime="20230601 19:08:48.922"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 19:08:48.923" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 19:08:48.923" endtime="20230601 19:08:48.923"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:08:48.996" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Kent Edwards", "email": "lisachen@example.net", "password": "1HCwsbnrnnlW", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 19:08:48.996" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5e380a04-5bf6-4753-bc7d-bed267cb47c2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '436f3afd3d8821e25013db519ebc0e24', 'Date': 'Thu, 01 Jun 2023 19:08:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Zs90TmNROdIQ4DLd"
} 
 </msg>
<msg timestamp="20230601 19:08:48.996" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:48.923" endtime="20230601 19:08:48.996"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 19:08:48.998" level="INFO">${user_id} = Zs90TmNROdIQ4DLd</msg>
<status status="PASS" starttime="20230601 19:08:48.997" endtime="20230601 19:08:48.998"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 19:08:48.998" level="INFO">${USER_ID} = Zs90TmNROdIQ4DLd</msg>
<status status="PASS" starttime="20230601 19:08:48.998" endtime="20230601 19:08:48.998"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:08:48.999" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:48.999" endtime="20230601 19:08:48.999"/>
</kw>
<status status="PASS" starttime="20230601 19:08:48.922" endtime="20230601 19:08:48.999"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:08:49.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.000" endtime="20230601 19:08:49.000"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:08:49.000" endtime="20230601 19:08:49.001"/>
</kw>
<status status="PASS" starttime="20230601 19:08:48.999" endtime="20230601 19:08:49.001"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:08:49.002" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 19:08:49.002" endtime="20230601 19:08:49.002"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.001" endtime="20230601 19:08:49.003"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:08:48.916" endtime="20230601 19:08:49.003"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:08:49.004" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:08:49.004" endtime="20230601 19:08:49.005"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.004" endtime="20230601 19:08:49.005"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:08:49.070" level="INFO">GET Request : url=https://serverest.dev/usuarios/Zs90TmNROdIQ4DLd 
 path_url=/usuarios/Zs90TmNROdIQ4DLd 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 19:08:49.070" level="INFO">GET Response : url=https://serverest.dev/usuarios/Zs90TmNROdIQ4DLd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c2e0499d-b87e-407a-8fd4-c3cc3ff7e4ab', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5475d9b064a36aacada56fab74725867', 'Date': 'Thu, 01 Jun 2023 19:08:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Kent Edwards",
    "email": "lisachen@example.net",
    "password": "1HCwsbnrnnlW",
    "administrador": "false",
    "_id": "Zs90TmNROdIQ4DLd"
} 
 </msg>
<msg timestamp="20230601 19:08:49.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.005" endtime="20230601 19:08:49.071"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:08:49.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.071" endtime="20230601 19:08:49.071"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.005" endtime="20230601 19:08:49.071"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:08:49.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.072" endtime="20230601 19:08:49.073"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:08:49.073" endtime="20230601 19:08:49.073"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.072" endtime="20230601 19:08:49.073"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:08:49.074" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 19:08:49.074" endtime="20230601 19:08:49.074"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.074" endtime="20230601 19:08:49.075"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:08:49.003" endtime="20230601 19:08:49.075"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:08:49.077" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:08:49.076" endtime="20230601 19:08:49.077"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.076" endtime="20230601 19:08:49.077"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 19:08:49.078" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 19:08:49.077" endtime="20230601 19:08:49.078"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 19:08:49.078" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 19:08:49.078" endtime="20230601 19:08:49.078"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:08:49.148" level="INFO">PUT Request : url=https://serverest.dev/usuarios/Zs90TmNROdIQ4DLd 
 path_url=/usuarios/Zs90TmNROdIQ4DLd 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 19:08:49.148" level="INFO">PUT Response : url=https://serverest.dev/usuarios/Zs90TmNROdIQ4DLd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3798810d-7a94-4e9b-b418-f3b656bfafab', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cb4825167b27d9f2cbc93f4b17cf9693', 'Date': 'Thu, 01 Jun 2023 19:08:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 19:08:49.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.078" endtime="20230601 19:08:49.149"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:08:49.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.149" endtime="20230601 19:08:49.149"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.077" endtime="20230601 19:08:49.150"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:08:49.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.150" endtime="20230601 19:08:49.151"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:08:49.151" endtime="20230601 19:08:49.152"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.150" endtime="20230601 19:08:49.152"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:08:49.153" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 19:08:49.152" endtime="20230601 19:08:49.153"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.152" endtime="20230601 19:08:49.153"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:08:49.076" endtime="20230601 19:08:49.153"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 19:08:49.155" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 19:08:49.155" endtime="20230601 19:08:49.156"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.155" endtime="20230601 19:08:49.156"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 19:08:49.227" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/Zs90TmNROdIQ4DLd 
 path_url=/usuarios/Zs90TmNROdIQ4DLd 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 19:08:49.227" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/Zs90TmNROdIQ4DLd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '952a974a-8bb1-41ff-8d81-8a79d24e6217', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '76434d397eb235a0190fea97f6c72a4b', 'Date': 'Thu, 01 Jun 2023 19:08:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro exclu√≠do com sucesso"
} 
 </msg>
<msg timestamp="20230601 19:08:49.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.156" endtime="20230601 19:08:49.228"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 19:08:49.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.228" endtime="20230601 19:08:49.228"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.156" endtime="20230601 19:08:49.229"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 19:08:49.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 19:08:49.229" endtime="20230601 19:08:49.230"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 19:08:49.230" endtime="20230601 19:08:49.231"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.229" endtime="20230601 19:08:49.231"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 19:08:49.232" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 19:08:49.231" endtime="20230601 19:08:49.232"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.231" endtime="20230601 19:08:49.232"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 19:08:49.154" endtime="20230601 19:08:49.233"/>
</test>
<status status="PASS" starttime="20230601 19:08:48.195" endtime="20230601 19:08:49.234"/>
</suite>
<status status="PASS" starttime="20230601 19:08:48.193" endtime="20230601 19:08:49.236"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 19:08:49.248" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 19:08:49.247" endtime="20230601 19:08:51.770"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 19:08:51.770" endtime="20230601 19:08:51.876"/>
</kw>
<status status="PASS" starttime="20230601 19:08:49.247" endtime="20230601 19:08:51.876"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 19:08:51.882" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 19:08:51.877" endtime="20230601 19:08:51.882"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:51.884" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 19:08:51.882" endtime="20230601 19:08:51.992"/>
</kw>
<status status="PASS" starttime="20230601 19:08:51.876" endtime="20230601 19:08:51.993"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:51.994" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 19:08:51.993" endtime="20230601 19:08:52.076"/>
</kw>
<status status="PASS" starttime="20230601 19:08:51.993" endtime="20230601 19:08:52.076"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 19:08:52.077" endtime="20230601 19:08:52.313"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 19:08:52.333" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 19:08:52.313" endtime="20230601 19:08:52.333"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome √© obrigat√≥rio</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:08:52.350" level="INFO">Current page contains text 'Nome √© obrigat√≥rio'.</msg>
<status status="PASS" starttime="20230601 19:08:52.334" endtime="20230601 19:08:52.350"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email √© obrigat√≥rio</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:08:52.363" level="INFO">Current page contains text 'Email √© obrigat√≥rio'.</msg>
<status status="PASS" starttime="20230601 19:08:52.350" endtime="20230601 19:08:52.364"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password √© obrigat√≥rio</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:08:52.377" level="INFO">Current page contains text 'Password √© obrigat√≥rio'.</msg>
<status status="PASS" starttime="20230601 19:08:52.364" endtime="20230601 19:08:52.377"/>
</kw>
<status status="PASS" starttime="20230601 19:08:52.077" endtime="20230601 19:08:52.378"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 19:08:52.378" endtime="20230601 19:08:52.434"/>
</kw>
<status status="PASS" starttime="20230601 19:08:52.378" endtime="20230601 19:08:52.434"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 19:08:49.247" endtime="20230601 19:08:52.434"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 19:08:52.437" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 19:08:52.437" endtime="20230601 19:08:53.620"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 19:08:53.621" endtime="20230601 19:08:53.726"/>
</kw>
<status status="PASS" starttime="20230601 19:08:52.436" endtime="20230601 19:08:53.726"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 19:08:53.732" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 19:08:53.727" endtime="20230601 19:08:53.733"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:53.734" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 19:08:53.733" endtime="20230601 19:08:53.819"/>
</kw>
<status status="PASS" starttime="20230601 19:08:53.726" endtime="20230601 19:08:53.820"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 19:08:53.821" level="INFO">${name} = Charles Williams</msg>
<status status="PASS" starttime="20230601 19:08:53.820" endtime="20230601 19:08:53.821"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 19:08:53.822" level="INFO">${email} = christopherjohnson@example.org</msg>
<status status="PASS" starttime="20230601 19:08:53.821" endtime="20230601 19:08:53.822"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 19:08:53.822" level="INFO">${password} = sNstmGUb7fmK</msg>
<status status="PASS" starttime="20230601 19:08:53.822" endtime="20230601 19:08:53.822"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:53.823" level="INFO">Typing text 'Charles Williams' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 19:08:53.822" endtime="20230601 19:08:53.959"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:53.960" level="INFO">Typing text 'christopherjohnson@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 19:08:53.959" endtime="20230601 19:08:54.090"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:54.091" level="INFO">Typing text 'sNstmGUb7fmK' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 19:08:54.090" endtime="20230601 19:08:54.218"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:54.219" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 19:08:54.219" endtime="20230601 19:08:54.301"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:08:54.301" level="INFO">${name} = Charles Williams</msg>
<status status="PASS" starttime="20230601 19:08:54.301" endtime="20230601 19:08:54.301"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:08:54.302" level="INFO">${email} = christopherjohnson@example.org</msg>
<status status="PASS" starttime="20230601 19:08:54.302" endtime="20230601 19:08:54.302"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 19:08:54.302" level="INFO">${password} = sNstmGUb7fmK</msg>
<status status="PASS" starttime="20230601 19:08:54.302" endtime="20230601 19:08:54.302"/>
</kw>
<status status="PASS" starttime="20230601 19:08:53.820" endtime="20230601 19:08:54.302"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:54.304" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 19:08:54.303" endtime="20230601 19:08:54.368"/>
</kw>
<status status="PASS" starttime="20230601 19:08:54.302" endtime="20230601 19:08:54.368"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 19:08:54.369" endtime="20230601 19:08:54.606"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 19:08:54.626" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 19:08:54.606" endtime="20230601 19:08:54.626"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:08:54.640" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 19:08:54.627" endtime="20230601 19:08:54.641"/>
</kw>
<status status="PASS" starttime="20230601 19:08:54.369" endtime="20230601 19:08:54.641"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 19:08:54.642" endtime="20230601 19:08:54.696"/>
</kw>
<status status="PASS" starttime="20230601 19:08:54.641" endtime="20230601 19:08:54.697"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 19:08:52.435" endtime="20230601 19:08:54.697"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 19:08:54.700" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 19:08:54.699" endtime="20230601 19:08:55.916"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 19:08:55.917" endtime="20230601 19:08:56.021"/>
</kw>
<status status="PASS" starttime="20230601 19:08:54.698" endtime="20230601 19:08:56.021"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 19:08:56.028" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 19:08:56.022" endtime="20230601 19:08:56.028"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:56.030" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 19:08:56.028" endtime="20230601 19:08:56.118"/>
</kw>
<status status="PASS" starttime="20230601 19:08:56.021" endtime="20230601 19:08:56.119"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:56.120" level="INFO">Typing text 'Charles Williams' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 19:08:56.119" endtime="20230601 19:08:56.278"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:56.279" level="INFO">Typing text 'christopherjohnson@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 19:08:56.278" endtime="20230601 19:08:56.402"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:56.403" level="INFO">Typing text 'sNstmGUb7fmK' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 19:08:56.403" endtime="20230601 19:08:56.520"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:56.521" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 19:08:56.520" endtime="20230601 19:08:56.603"/>
</kw>
<status status="PASS" starttime="20230601 19:08:56.119" endtime="20230601 19:08:56.604"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 19:08:56.605" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 19:08:56.604" endtime="20230601 19:08:56.670"/>
</kw>
<status status="PASS" starttime="20230601 19:08:56.604" endtime="20230601 19:08:56.670"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email j√° est√° sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 19:08:56.671" endtime="20230601 19:08:56.907"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 19:08:56.927" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 19:08:56.907" endtime="20230601 19:08:56.927"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 19:08:56.942" level="INFO">Current page contains text 'Este email j√° est√° sendo usado'.</msg>
<status status="PASS" starttime="20230601 19:08:56.928" endtime="20230601 19:08:56.942"/>
</kw>
<status status="PASS" starttime="20230601 19:08:56.671" endtime="20230601 19:08:56.943"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 19:08:56.943" endtime="20230601 19:08:56.998"/>
</kw>
<status status="PASS" starttime="20230601 19:08:56.943" endtime="20230601 19:08:56.999"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 19:08:54.698" endtime="20230601 19:08:56.999"/>
</test>
<status status="PASS" starttime="20230601 19:08:49.239" endtime="20230601 19:08:57.000"/>
</suite>
<status status="PASS" starttime="20230601 19:08:49.237" endtime="20230601 19:08:57.001"/>
</suite>
<status status="PASS" starttime="20230601 19:08:48.174" endtime="20230601 19:08:57.003"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
