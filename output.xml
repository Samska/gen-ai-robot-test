<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230418 17:34:51.092" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 17:34:51.692" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 17:34:51.692" endtime="20230418 17:34:51.692"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.691" endtime="20230418 17:34:51.692"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 17:34:51.815" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 17:34:51.815" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c0233cc8-fb5b-4d26-abb0-db502b75cfdb', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '33e9db5e86fbb80f5774b50cf300eeca;o=1', 'Date': 'Tue, 18 Apr 2023 17:34:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '2760'} 
 body={
    "quantidade": 13,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Christelle.Fadel31@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "EJkVQhhbAUyMA48V"
        },
        {
            "nome": "Joesph",
            "email": "Elsie_Jast66@gmail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "Ki2g0rlR5QmObeBw"
        },
        {
            "nome": "Augusta",
            "email": "Alejandra.Rippin@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "KuNXgF8bjoZEZALK"
        },
        {
            "nome": "Augusta",
            "email": "Marisa.Hessel@yahoo.com",
            "password": "teste",
            "administrador": "true",
            "_id": "OBNET4kMLgAqdmcU"
        },
        {
            "nome": "Lola",
            "email": "Tad72@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "QUHTwkJWX5unYqNG"
        },
        {
            "nome": "Misael Usuario",
            "email": "misael@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "Y2etvjOChCuLEMIb"
        },
        {
            "nome": "Misael Adm",
            "email": "misael@gmail.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "YMIE73lmcVjnbVjt"
        },
        {
            "nome": "Sabina",
            "email": "Rosario59@yahoo.com",
            "password": "L_vDW80csV_mypw",
            "administrador": "true",
            "_id": "b5bqhHqwL6Vz8CWL"
        },
        {
            "nome": "Lola",
            "email": "Rodolfo_Hudson@yahoo.com",
            "password": "teste",
            "administrador": "true",
            "_id": "iSv29R5iHr7VnHYp"
        },
        {
            "nome": "Joesph",
            "email": "Roberta.Schroeder@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "iaR865Xg1xpQxmTQ"
        },
        {
            "nome": "Reta",
            "email": "Newell58@yahoo.com",
            "password": "teste",
            "administrador": "true",
            "_id": "lJIrn5sPrQLyAkK5"
        },
        {
            "nome": "Reta",
            "email": "Tyrique.Powlowski@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "s71esl94uVJDURVD"
        }
    ]
} 
 </msg>
<msg timestamp="20230418 17:34:51.816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:51.693" endtime="20230418 17:34:51.816"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 17:34:51.816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:51.816" endtime="20230418 17:34:51.816"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.693" endtime="20230418 17:34:51.816"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 17:34:51.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 17:34:51.817" endtime="20230418 17:34:51.818"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 17:34:51.818" endtime="20230418 17:34:51.819"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.817" endtime="20230418 17:34:51.819"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 17:34:51.820" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 17:34:51.819" endtime="20230418 17:34:51.820"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.819" endtime="20230418 17:34:51.820"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.690" endtime="20230418 17:34:51.820"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 17:34:51.822" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 17:34:51.821" endtime="20230418 17:34:51.822"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.821" endtime="20230418 17:34:51.822"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230418 17:34:51.823" level="INFO">${name} = David Powell</msg>
<status status="PASS" starttime="20230418 17:34:51.822" endtime="20230418 17:34:51.823"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230418 17:34:51.824" level="INFO">${email} = michaelhunter@example.net</msg>
<status status="PASS" starttime="20230418 17:34:51.823" endtime="20230418 17:34:51.824"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230418 17:34:51.824" level="INFO">${password} = ^1GzMmojPs</msg>
<status status="PASS" starttime="20230418 17:34:51.824" endtime="20230418 17:34:51.824"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 17:34:51.824" level="INFO">${name} = David Powell</msg>
<status status="PASS" starttime="20230418 17:34:51.824" endtime="20230418 17:34:51.824"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 17:34:51.825" level="INFO">${email} = michaelhunter@example.net</msg>
<status status="PASS" starttime="20230418 17:34:51.824" endtime="20230418 17:34:51.825"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230418 17:34:51.825" level="INFO">${password} = ^1GzMmojPs</msg>
<status status="PASS" starttime="20230418 17:34:51.825" endtime="20230418 17:34:51.825"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.822" endtime="20230418 17:34:51.825"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 17:34:51.826" level="INFO">${payload} = {'nome': 'David Powell', 'email': 'michaelhunter@example.net', 'password': '^1GzMmojPs', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 17:34:51.825" endtime="20230418 17:34:51.826"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 17:34:51.826" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 17:34:51.826" endtime="20230418 17:34:51.826"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 17:34:51.905" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "David Powell", "email": "michaelhunter@example.net", "password": "^1GzMmojPs", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 17:34:51.905" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd7249d81-2f18-4ca4-8563-8bd2de98673b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '416059f5bf5c1420b942b7e641dc4264', 'Date': 'Tue, 18 Apr 2023 17:34:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "jLUbwiAJhP092LkA"
} 
 </msg>
<msg timestamp="20230418 17:34:51.905" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:51.826" endtime="20230418 17:34:51.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230418 17:34:51.906" level="INFO">${user_id} = jLUbwiAJhP092LkA</msg>
<status status="PASS" starttime="20230418 17:34:51.906" endtime="20230418 17:34:51.906"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230418 17:34:51.907" level="INFO">${USER_ID} = jLUbwiAJhP092LkA</msg>
<status status="PASS" starttime="20230418 17:34:51.907" endtime="20230418 17:34:51.907"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 17:34:51.907" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:51.907" endtime="20230418 17:34:51.908"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.825" endtime="20230418 17:34:51.908"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 17:34:51.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 17:34:51.908" endtime="20230418 17:34:51.909"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 17:34:51.909" endtime="20230418 17:34:51.910"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.908" endtime="20230418 17:34:51.910"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 17:34:51.911" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230418 17:34:51.910" endtime="20230418 17:34:51.911"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.910" endtime="20230418 17:34:51.911"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.821" endtime="20230418 17:34:51.911"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 17:34:51.913" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 17:34:51.913" endtime="20230418 17:34:51.913"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.912" endtime="20230418 17:34:51.913"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 17:34:52.002" level="INFO">GET Request : url=https://serverest.dev/usuarios/jLUbwiAJhP092LkA 
 path_url=/usuarios/jLUbwiAJhP092LkA 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230418 17:34:52.002" level="INFO">GET Response : url=https://serverest.dev/usuarios/jLUbwiAJhP092LkA 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bda6b232-3c19-445d-a895-2e8b5d233d04', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0b79d20836c84c1f42e2757f052978f3', 'Date': 'Tue, 18 Apr 2023 17:34:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "David Powell",
    "email": "michaelhunter@example.net",
    "password": "^1GzMmojPs",
    "administrador": "false",
    "_id": "jLUbwiAJhP092LkA"
} 
 </msg>
<msg timestamp="20230418 17:34:52.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:51.914" endtime="20230418 17:34:52.002"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 17:34:52.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:52.002" endtime="20230418 17:34:52.003"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.913" endtime="20230418 17:34:52.003"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 17:34:52.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 17:34:52.003" endtime="20230418 17:34:52.004"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 17:34:52.004" endtime="20230418 17:34:52.005"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.003" endtime="20230418 17:34:52.005"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 17:34:52.006" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230418 17:34:52.005" endtime="20230418 17:34:52.006"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.005" endtime="20230418 17:34:52.006"/>
</kw>
<status status="PASS" starttime="20230418 17:34:51.912" endtime="20230418 17:34:52.006"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 17:34:52.008" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 17:34:52.007" endtime="20230418 17:34:52.008"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.007" endtime="20230418 17:34:52.008"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 17:34:52.009" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230418 17:34:52.008" endtime="20230418 17:34:52.009"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230418 17:34:52.009" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230418 17:34:52.009" endtime="20230418 17:34:52.009"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 17:34:52.074" level="INFO">PUT Request : url=https://serverest.dev/usuarios/jLUbwiAJhP092LkA 
 path_url=/usuarios/jLUbwiAJhP092LkA 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230418 17:34:52.074" level="INFO">PUT Response : url=https://serverest.dev/usuarios/jLUbwiAJhP092LkA 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd055e83b-5c55-408c-8916-6dcc6fa3b94a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '896e3457a8447656c8f36baefadd94d2', 'Date': 'Tue, 18 Apr 2023 17:34:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230418 17:34:52.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:52.009" endtime="20230418 17:34:52.074"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 17:34:52.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:52.075" endtime="20230418 17:34:52.075"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.008" endtime="20230418 17:34:52.075"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 17:34:52.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 17:34:52.076" endtime="20230418 17:34:52.076"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 17:34:52.077" endtime="20230418 17:34:52.077"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.075" endtime="20230418 17:34:52.077"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 17:34:52.078" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 17:34:52.078" endtime="20230418 17:34:52.078"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.077" endtime="20230418 17:34:52.078"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.007" endtime="20230418 17:34:52.078"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230418 17:34:52.080" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230418 17:34:52.080" endtime="20230418 17:34:52.080"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.079" endtime="20230418 17:34:52.080"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230418 17:34:52.162" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/jLUbwiAJhP092LkA 
 path_url=/usuarios/jLUbwiAJhP092LkA 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230418 17:34:52.162" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/jLUbwiAJhP092LkA 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '435d9d5b-7436-4e0e-9135-c7233a289f66', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ac93a6ca73b4e3ee306be50411980dda', 'Date': 'Tue, 18 Apr 2023 17:34:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230418 17:34:52.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:52.081" endtime="20230418 17:34:52.162"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230418 17:34:52.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230418 17:34:52.162" endtime="20230418 17:34:52.163"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.080" endtime="20230418 17:34:52.163"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230418 17:34:52.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230418 17:34:52.163" endtime="20230418 17:34:52.164"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230418 17:34:52.164" endtime="20230418 17:34:52.165"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.163" endtime="20230418 17:34:52.165"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230418 17:34:52.166" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230418 17:34:52.165" endtime="20230418 17:34:52.166"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.165" endtime="20230418 17:34:52.166"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.079" endtime="20230418 17:34:52.166"/>
</test>
<status status="PASS" starttime="20230418 17:34:51.116" endtime="20230418 17:34:52.167"/>
</suite>
<status status="PASS" starttime="20230418 17:34:51.114" endtime="20230418 17:34:52.168"/>
</suite>
<status status="PASS" starttime="20230418 17:34:51.113" endtime="20230418 17:34:52.169"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 17:34:52.180" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 17:34:52.179" endtime="20230418 17:34:54.538"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 17:34:54.539" endtime="20230418 17:34:54.652"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.179" endtime="20230418 17:34:54.653"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 17:34:54.654" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 17:34:54.653" endtime="20230418 17:34:54.717"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 17:34:54.726" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 17:34:54.717" endtime="20230418 17:34:54.726"/>
</kw>
<status status="PASS" starttime="20230418 17:34:54.653" endtime="20230418 17:34:54.726"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:54.728" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 17:34:54.727" endtime="20230418 17:34:54.884"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:54.885" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 17:34:54.884" endtime="20230418 17:34:55.003"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:55.004" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 17:34:55.003" endtime="20230418 17:34:55.158"/>
</kw>
<status status="PASS" starttime="20230418 17:34:54.726" endtime="20230418 17:34:55.158"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 17:34:55.168" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 17:34:55.158" endtime="20230418 17:34:55.168"/>
</kw>
<status status="PASS" starttime="20230418 17:34:55.158" endtime="20230418 17:34:55.168"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 17:34:55.196" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 17:34:55.168" endtime="20230418 17:34:55.196"/>
</kw>
<status status="PASS" starttime="20230418 17:34:55.168" endtime="20230418 17:34:55.196"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 17:34:55.197" endtime="20230418 17:34:55.256"/>
</kw>
<status status="PASS" starttime="20230418 17:34:55.196" endtime="20230418 17:34:55.256"/>
</kw>
<status status="PASS" starttime="20230418 17:34:52.179" endtime="20230418 17:34:55.256"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 17:34:55.258" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 17:34:55.258" endtime="20230418 17:34:56.100"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 17:34:56.100" endtime="20230418 17:34:56.205"/>
</kw>
<status status="PASS" starttime="20230418 17:34:55.257" endtime="20230418 17:34:56.206"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 17:34:56.207" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 17:34:56.206" endtime="20230418 17:34:56.278"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 17:34:56.288" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 17:34:56.278" endtime="20230418 17:34:56.288"/>
</kw>
<status status="PASS" starttime="20230418 17:34:56.206" endtime="20230418 17:34:56.288"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:56.289" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 17:34:56.288" endtime="20230418 17:34:56.384"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:56.385" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 17:34:56.384" endtime="20230418 17:34:56.465"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:56.466" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 17:34:56.466" endtime="20230418 17:34:56.523"/>
</kw>
<status status="PASS" starttime="20230418 17:34:56.288" endtime="20230418 17:34:56.523"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230418 17:34:56.546" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230418 17:34:56.523" endtime="20230418 17:34:56.546"/>
</kw>
<status status="PASS" starttime="20230418 17:34:56.523" endtime="20230418 17:34:56.546"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 17:34:56.547" endtime="20230418 17:34:56.604"/>
</kw>
<status status="PASS" starttime="20230418 17:34:56.546" endtime="20230418 17:34:56.605"/>
</kw>
<status status="PASS" starttime="20230418 17:34:55.257" endtime="20230418 17:34:56.605"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 17:34:56.607" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 17:34:56.606" endtime="20230418 17:34:57.461"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 17:34:57.462" endtime="20230418 17:34:57.575"/>
</kw>
<status status="PASS" starttime="20230418 17:34:56.606" endtime="20230418 17:34:57.575"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 17:34:57.576" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 17:34:57.576" endtime="20230418 17:34:57.646"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 17:34:57.655" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 17:34:57.646" endtime="20230418 17:34:57.655"/>
</kw>
<status status="PASS" starttime="20230418 17:34:57.575" endtime="20230418 17:34:57.655"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:57.656" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 17:34:57.656" endtime="20230418 17:34:57.746"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:57.747" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 17:34:57.746" endtime="20230418 17:34:57.827"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:57.828" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 17:34:57.827" endtime="20230418 17:34:57.911"/>
</kw>
<status status="PASS" starttime="20230418 17:34:57.655" endtime="20230418 17:34:57.912"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 17:34:57.919" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 17:34:57.912" endtime="20230418 17:34:57.919"/>
</kw>
<status status="PASS" starttime="20230418 17:34:57.912" endtime="20230418 17:34:57.919"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 17:34:57.933" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 17:34:57.919" endtime="20230418 17:34:57.933"/>
</kw>
<status status="PASS" starttime="20230418 17:34:57.919" endtime="20230418 17:34:57.934"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 17:34:57.935" endtime="20230418 17:34:57.993"/>
</kw>
<status status="PASS" starttime="20230418 17:34:57.934" endtime="20230418 17:34:57.993"/>
</kw>
<status status="PASS" starttime="20230418 17:34:56.605" endtime="20230418 17:34:57.993"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="27">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230418 17:34:57.996" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 17:34:57.995" endtime="20230418 17:34:58.833"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230418 17:34:58.833" endtime="20230418 17:34:58.943"/>
</kw>
<status status="PASS" starttime="20230418 17:34:57.994" endtime="20230418 17:34:58.943"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230418 17:34:58.944" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230418 17:34:58.944" endtime="20230418 17:34:59.002"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 17:34:59.008" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230418 17:34:59.003" endtime="20230418 17:34:59.008"/>
</kw>
<status status="PASS" starttime="20230418 17:34:58.943" endtime="20230418 17:34:59.008"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:59.010" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230418 17:34:59.009" endtime="20230418 17:34:59.125"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:59.126" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230418 17:34:59.126" endtime="20230418 17:34:59.210"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230418 17:34:59.211" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230418 17:34:59.211" endtime="20230418 17:35:04.314"/>
</kw>
<status status="PASS" starttime="20230418 17:34:59.008" endtime="20230418 17:35:04.314"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230418 17:35:04.329" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230418 17:35:04.315" endtime="20230418 17:35:04.329"/>
</kw>
<status status="PASS" starttime="20230418 17:35:04.315" endtime="20230418 17:35:04.329"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230418 17:35:04.342" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230418 17:35:04.329" endtime="20230418 17:35:04.342"/>
</kw>
<status status="PASS" starttime="20230418 17:35:04.329" endtime="20230418 17:35:04.342"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230418 17:35:04.343" endtime="20230418 17:35:04.402"/>
</kw>
<status status="PASS" starttime="20230418 17:35:04.343" endtime="20230418 17:35:04.402"/>
</kw>
<status status="PASS" starttime="20230418 17:34:57.994" endtime="20230418 17:35:04.402"/>
</test>
<status status="PASS" starttime="20230418 17:34:52.173" endtime="20230418 17:35:04.404"/>
</suite>
<status status="PASS" starttime="20230418 17:34:52.171" endtime="20230418 17:35:04.407"/>
</suite>
<status status="PASS" starttime="20230418 17:34:52.170" endtime="20230418 17:35:04.409"/>
</suite>
<status status="PASS" starttime="20230418 17:34:51.093" endtime="20230418 17:35:04.411"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
