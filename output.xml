<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230527 01:36:10.266" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230527 01:36:10.737" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230527 01:36:10.737" endtime="20230527 01:36:10.738"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.737" endtime="20230527 01:36:10.738"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230527 01:36:10.871" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230527 01:36:10.871" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '73770837-7316-4a64-973c-976602b1af6b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9aaf2284e34f8108b3f4c5834ca4f06d;o=1', 'Date': 'Sat, 27 May 2023 01:36:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '3723'} 
 body={
    "quantidade": 17,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Nome de Teste",
            "email": "attudwbu@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "3LCgfxfH0Wk92OQM"
        },
        {
            "nome": "Nome de Teste",
            "email": "lyjpqksd@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "4b8SsEmLU2dzl8yl"
        },
        {
            "nome": "Nome de Teste",
            "email": "ynhxocxc@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "7W9ZQYeW7EWMJ9AC"
        },
        {
            "nome": "Nome de Teste",
            "email": "mtdfijde@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "9OnJx4R6e7OmUpNK"
        },
        {
            "nome": "Nome de Teste",
            "email": "jedcmzwd@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "G1BDnpZyTIbgnZyt"
        },
        {
            "nome": "Nome de Teste",
            "email": "hykhbfkp@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "JWVrwxtZ4dKWb2cc"
        },
        {
            "nome": "Nome de Teste",
            "email": "jjzbetaa@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "KaGbL2hzILHnPLuB"
        },
        {
            "nome": "Nome de Teste",
            "email": "qywrnvby@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "MWrOsxp3qxjyvgaB"
        },
        {
            "nome": "{{nome}}",
            "email": "Domenico@qa.com.br",
            "password": "_6nSXefQqPQzQUO",
            "administrador": "true",
            "_id": "QWMBxTKZtXwDtHSB"
        },
        {
            "nome": "Nome de Teste",
            "email": "uciyqoiw@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "TGwsVc9XM3XP4ldr"
        },
        {
            "nome": "Nome de Teste",
            "email": "ifszwern@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "aFpAU2qrgwYrGKkn"
        },
        {
            "nome": "Nome de Teste",
            "email": "uzstmiug@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "dAJpkmkiHarxoFqR"
        },
        {
            "nome": "Nome de Teste",
            "email": "nsvwtndm@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "eRPqqKc20bRnuyHx"
        },
        {
            "nome": "Nome de Teste",
            "email": "yxuwdlze@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "iO5nVHJbN81Faho4"
        },
        {
            "nome": "Nome de Teste",
            "email": "dumaiazo@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "l3R1cZtwPQtPuJnm"
        },
        {
            "nome": "Nome de Teste",
            "email": "wnuvwscl@mailinator.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "qibyw0eWfYiH8Pgn"
        }
    ]
} 
 </msg>
<msg timestamp="20230527 01:36:10.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:10.738" endtime="20230527 01:36:10.871"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230527 01:36:10.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:10.872" endtime="20230527 01:36:10.872"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.738" endtime="20230527 01:36:10.872"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230527 01:36:10.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 01:36:10.873" endtime="20230527 01:36:10.873"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230527 01:36:10.874" endtime="20230527 01:36:10.874"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.872" endtime="20230527 01:36:10.874"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230527 01:36:10.875" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230527 01:36:10.875" endtime="20230527 01:36:10.875"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.874" endtime="20230527 01:36:10.876"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230527 01:36:10.736" endtime="20230527 01:36:10.876"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230527 01:36:10.879" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230527 01:36:10.878" endtime="20230527 01:36:10.879"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.878" endtime="20230527 01:36:10.879"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230527 01:36:10.880" level="INFO">${name} = Joanna Duncan</msg>
<status status="PASS" starttime="20230527 01:36:10.880" endtime="20230527 01:36:10.880"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230527 01:36:10.881" level="INFO">${email} = whenderson@example.net</msg>
<status status="PASS" starttime="20230527 01:36:10.880" endtime="20230527 01:36:10.881"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230527 01:36:10.881" level="INFO">${password} = 8QOI7VxfIWKl</msg>
<status status="PASS" starttime="20230527 01:36:10.881" endtime="20230527 01:36:10.881"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230527 01:36:10.881" level="INFO">${name} = Joanna Duncan</msg>
<status status="PASS" starttime="20230527 01:36:10.881" endtime="20230527 01:36:10.882"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230527 01:36:10.882" level="INFO">${email} = whenderson@example.net</msg>
<status status="PASS" starttime="20230527 01:36:10.882" endtime="20230527 01:36:10.882"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230527 01:36:10.882" level="INFO">${password} = 8QOI7VxfIWKl</msg>
<status status="PASS" starttime="20230527 01:36:10.882" endtime="20230527 01:36:10.882"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.879" endtime="20230527 01:36:10.882"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230527 01:36:10.883" level="INFO">${payload} = {'nome': 'Joanna Duncan', 'email': 'whenderson@example.net', 'password': '8QOI7VxfIWKl', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230527 01:36:10.883" endtime="20230527 01:36:10.883"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230527 01:36:10.884" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230527 01:36:10.883" endtime="20230527 01:36:10.884"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230527 01:36:10.951" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"nome": "Joanna Duncan", "email": "whenderson@example.net", "password": "8QOI7VxfIWKl", "administrador": "false"}' 
 </msg>
<msg timestamp="20230527 01:36:10.951" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd5d3f9e5-d05c-4250-a596-7723aa24c19d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '658ba397b29c943a7fa9db21db28eada', 'Date': 'Sat, 27 May 2023 01:36:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Htx2Frnqr7R6NQ2b"
} 
 </msg>
<msg timestamp="20230527 01:36:10.951" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:10.884" endtime="20230527 01:36:10.951"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230527 01:36:10.952" level="INFO">${user_id} = Htx2Frnqr7R6NQ2b</msg>
<status status="PASS" starttime="20230527 01:36:10.951" endtime="20230527 01:36:10.952"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230527 01:36:10.953" level="INFO">${USER_ID} = Htx2Frnqr7R6NQ2b</msg>
<status status="PASS" starttime="20230527 01:36:10.953" endtime="20230527 01:36:10.953"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230527 01:36:10.953" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:10.953" endtime="20230527 01:36:10.953"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.882" endtime="20230527 01:36:10.954"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230527 01:36:10.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 01:36:10.954" endtime="20230527 01:36:10.955"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230527 01:36:10.955" endtime="20230527 01:36:10.956"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.954" endtime="20230527 01:36:10.956"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230527 01:36:10.957" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230527 01:36:10.956" endtime="20230527 01:36:10.957"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.956" endtime="20230527 01:36:10.957"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230527 01:36:10.877" endtime="20230527 01:36:10.957"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230527 01:36:10.960" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230527 01:36:10.960" endtime="20230527 01:36:10.961"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.960" endtime="20230527 01:36:10.961"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230527 01:36:11.028" level="INFO">GET Request : url=https://serverest.dev/usuarios/Htx2Frnqr7R6NQ2b 
 path_url=/usuarios/Htx2Frnqr7R6NQ2b 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230527 01:36:11.028" level="INFO">GET Response : url=https://serverest.dev/usuarios/Htx2Frnqr7R6NQ2b 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f639b9f2-3846-438c-b9b1-e3778c82c655', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2833bb46e3e349a152077270be4b5b74', 'Date': 'Sat, 27 May 2023 01:36:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '163'} 
 body={
    "nome": "Joanna Duncan",
    "email": "whenderson@example.net",
    "password": "8QOI7VxfIWKl",
    "administrador": "false",
    "_id": "Htx2Frnqr7R6NQ2b"
} 
 </msg>
<msg timestamp="20230527 01:36:11.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:10.961" endtime="20230527 01:36:11.028"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230527 01:36:11.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:11.029" endtime="20230527 01:36:11.029"/>
</kw>
<status status="PASS" starttime="20230527 01:36:10.961" endtime="20230527 01:36:11.029"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230527 01:36:11.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 01:36:11.030" endtime="20230527 01:36:11.030"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230527 01:36:11.030" endtime="20230527 01:36:11.031"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.029" endtime="20230527 01:36:11.031"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230527 01:36:11.032" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230527 01:36:11.032" endtime="20230527 01:36:11.032"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.031" endtime="20230527 01:36:11.032"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230527 01:36:10.958" endtime="20230527 01:36:11.032"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230527 01:36:11.034" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230527 01:36:11.033" endtime="20230527 01:36:11.034"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.033" endtime="20230527 01:36:11.034"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230527 01:36:11.035" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230527 01:36:11.034" endtime="20230527 01:36:11.035"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230527 01:36:11.035" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230527 01:36:11.035" endtime="20230527 01:36:11.035"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230527 01:36:11.105" level="INFO">PUT Request : url=https://serverest.dev/usuarios/Htx2Frnqr7R6NQ2b 
 path_url=/usuarios/Htx2Frnqr7R6NQ2b 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230527 01:36:11.106" level="INFO">PUT Response : url=https://serverest.dev/usuarios/Htx2Frnqr7R6NQ2b 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8218aaf3-c47b-4b97-b9e4-962fa983fecb', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2b6a45e7e0d0b8631104c9000c500c4b', 'Date': 'Sat, 27 May 2023 01:36:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230527 01:36:11.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:11.035" endtime="20230527 01:36:11.106"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230527 01:36:11.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:11.106" endtime="20230527 01:36:11.107"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.034" endtime="20230527 01:36:11.107"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230527 01:36:11.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 01:36:11.107" endtime="20230527 01:36:11.108"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230527 01:36:11.108" endtime="20230527 01:36:11.109"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.107" endtime="20230527 01:36:11.109"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230527 01:36:11.110" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230527 01:36:11.109" endtime="20230527 01:36:11.110"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.109" endtime="20230527 01:36:11.110"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230527 01:36:11.033" endtime="20230527 01:36:11.110"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230527 01:36:11.112" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230527 01:36:11.111" endtime="20230527 01:36:11.112"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.111" endtime="20230527 01:36:11.112"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230527 01:36:11.178" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/Htx2Frnqr7R6NQ2b 
 path_url=/usuarios/Htx2Frnqr7R6NQ2b 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230527 01:36:11.179" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/Htx2Frnqr7R6NQ2b 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '147cba56-6516-4ee3-8fae-5689e8c66978', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2121325fe9674e07fd1552391a91f48c', 'Date': 'Sat, 27 May 2023 01:36:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230527 01:36:11.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:11.113" endtime="20230527 01:36:11.179"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230527 01:36:11.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230527 01:36:11.179" endtime="20230527 01:36:11.179"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.112" endtime="20230527 01:36:11.179"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230527 01:36:11.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 01:36:11.180" endtime="20230527 01:36:11.181"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230527 01:36:11.181" endtime="20230527 01:36:11.181"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.180" endtime="20230527 01:36:11.182"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230527 01:36:11.182" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230527 01:36:11.182" endtime="20230527 01:36:11.183"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.182" endtime="20230527 01:36:11.183"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230527 01:36:11.111" endtime="20230527 01:36:11.183"/>
</test>
<status status="PASS" starttime="20230527 01:36:10.287" endtime="20230527 01:36:11.184"/>
</suite>
<status status="PASS" starttime="20230527 01:36:10.285" endtime="20230527 01:36:11.185"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230527 01:36:11.196" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230527 01:36:11.195" endtime="20230527 01:36:13.036"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230527 01:36:13.037" endtime="20230527 01:36:13.152"/>
</kw>
<status status="PASS" starttime="20230527 01:36:11.195" endtime="20230527 01:36:13.152"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230527 01:36:13.158" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230527 01:36:13.153" endtime="20230527 01:36:13.158"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:13.159" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230527 01:36:13.158" endtime="20230527 01:36:13.220"/>
</kw>
<status status="PASS" starttime="20230527 01:36:13.152" endtime="20230527 01:36:13.220"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:13.221" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230527 01:36:13.221" endtime="20230527 01:36:13.285"/>
</kw>
<status status="PASS" starttime="20230527 01:36:13.220" endtime="20230527 01:36:13.286"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230527 01:36:13.286" endtime="20230527 01:36:13.520"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230527 01:36:13.538" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230527 01:36:13.520" endtime="20230527 01:36:13.538"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230527 01:36:13.553" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230527 01:36:13.538" endtime="20230527 01:36:13.553"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230527 01:36:13.566" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230527 01:36:13.553" endtime="20230527 01:36:13.566"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230527 01:36:13.579" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230527 01:36:13.566" endtime="20230527 01:36:13.579"/>
</kw>
<status status="PASS" starttime="20230527 01:36:13.286" endtime="20230527 01:36:13.579"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230527 01:36:13.580" endtime="20230527 01:36:13.636"/>
</kw>
<status status="PASS" starttime="20230527 01:36:13.580" endtime="20230527 01:36:13.636"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230527 01:36:11.194" endtime="20230527 01:36:13.636"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230527 01:36:13.638" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230527 01:36:13.638" endtime="20230527 01:36:15.017"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230527 01:36:15.017" endtime="20230527 01:36:15.143"/>
</kw>
<status status="PASS" starttime="20230527 01:36:13.637" endtime="20230527 01:36:15.144"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230527 01:36:15.150" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230527 01:36:15.144" endtime="20230527 01:36:15.150"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:15.151" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230527 01:36:15.150" endtime="20230527 01:36:15.206"/>
</kw>
<status status="PASS" starttime="20230527 01:36:15.144" endtime="20230527 01:36:15.206"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230527 01:36:15.207" level="INFO">${name} = Tina White</msg>
<status status="PASS" starttime="20230527 01:36:15.207" endtime="20230527 01:36:15.207"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230527 01:36:15.208" level="INFO">${email} = kimberly73@example.com</msg>
<status status="PASS" starttime="20230527 01:36:15.207" endtime="20230527 01:36:15.208"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230527 01:36:15.208" level="INFO">${password} = 21ZQBXVw6jr7</msg>
<status status="PASS" starttime="20230527 01:36:15.208" endtime="20230527 01:36:15.208"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:15.209" level="INFO">Typing text 'Tina White' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230527 01:36:15.209" endtime="20230527 01:36:15.325"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:15.326" level="INFO">Typing text 'kimberly73@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230527 01:36:15.325" endtime="20230527 01:36:15.433"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:15.434" level="INFO">Typing text '21ZQBXVw6jr7' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230527 01:36:15.433" endtime="20230527 01:36:15.520"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:15.521" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230527 01:36:15.520" endtime="20230527 01:36:15.592"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230527 01:36:15.592" level="INFO">${name} = Tina White</msg>
<status status="PASS" starttime="20230527 01:36:15.592" endtime="20230527 01:36:15.592"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230527 01:36:15.593" level="INFO">${email} = kimberly73@example.com</msg>
<status status="PASS" starttime="20230527 01:36:15.592" endtime="20230527 01:36:15.593"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230527 01:36:15.593" level="INFO">${password} = 21ZQBXVw6jr7</msg>
<status status="PASS" starttime="20230527 01:36:15.593" endtime="20230527 01:36:15.593"/>
</kw>
<status status="PASS" starttime="20230527 01:36:15.206" endtime="20230527 01:36:15.593"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:15.594" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230527 01:36:15.594" endtime="20230527 01:36:15.652"/>
</kw>
<status status="PASS" starttime="20230527 01:36:15.593" endtime="20230527 01:36:15.652"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230527 01:36:15.653" endtime="20230527 01:36:15.886"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230527 01:36:15.909" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230527 01:36:15.886" endtime="20230527 01:36:15.909"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230527 01:36:15.922" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230527 01:36:15.909" endtime="20230527 01:36:15.922"/>
</kw>
<status status="PASS" starttime="20230527 01:36:15.652" endtime="20230527 01:36:15.922"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230527 01:36:15.923" endtime="20230527 01:36:15.977"/>
</kw>
<status status="PASS" starttime="20230527 01:36:15.922" endtime="20230527 01:36:15.977"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230527 01:36:13.637" endtime="20230527 01:36:15.977"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230527 01:36:15.980" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230527 01:36:15.979" endtime="20230527 01:36:17.385"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230527 01:36:17.386" endtime="20230527 01:36:17.493"/>
</kw>
<status status="PASS" starttime="20230527 01:36:15.979" endtime="20230527 01:36:17.493"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230527 01:36:17.499" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230527 01:36:17.494" endtime="20230527 01:36:17.499"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:17.500" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230527 01:36:17.499" endtime="20230527 01:36:17.554"/>
</kw>
<status status="PASS" starttime="20230527 01:36:17.493" endtime="20230527 01:36:17.555"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:17.556" level="INFO">Typing text 'Tina White' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230527 01:36:17.555" endtime="20230527 01:36:17.672"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:17.673" level="INFO">Typing text 'kimberly73@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230527 01:36:17.673" endtime="20230527 01:36:17.784"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:17.785" level="INFO">Typing text '21ZQBXVw6jr7' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230527 01:36:17.784" endtime="20230527 01:36:17.877"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:17.878" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230527 01:36:17.877" endtime="20230527 01:36:17.960"/>
</kw>
<status status="PASS" starttime="20230527 01:36:17.555" endtime="20230527 01:36:17.960"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230527 01:36:17.961" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230527 01:36:17.961" endtime="20230527 01:36:18.039"/>
</kw>
<status status="PASS" starttime="20230527 01:36:17.961" endtime="20230527 01:36:18.039"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230527 01:36:18.039" endtime="20230527 01:36:18.275"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230527 01:36:18.294" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230527 01:36:18.275" endtime="20230527 01:36:18.294"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230527 01:36:18.307" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230527 01:36:18.294" endtime="20230527 01:36:18.307"/>
</kw>
<status status="PASS" starttime="20230527 01:36:18.039" endtime="20230527 01:36:18.308"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230527 01:36:18.308" endtime="20230527 01:36:18.363"/>
</kw>
<status status="PASS" starttime="20230527 01:36:18.308" endtime="20230527 01:36:18.363"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230527 01:36:15.978" endtime="20230527 01:36:18.363"/>
</test>
<status status="PASS" starttime="20230527 01:36:11.188" endtime="20230527 01:36:18.364"/>
</suite>
<status status="PASS" starttime="20230527 01:36:11.186" endtime="20230527 01:36:18.365"/>
</suite>
<status status="PASS" starttime="20230527 01:36:10.267" endtime="20230527 01:36:18.366"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
