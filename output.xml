<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230421 01:00:43.490" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230421 01:00:44.157" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230421 01:00:44.157" endtime="20230421 01:00:44.157"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.156" endtime="20230421 01:00:44.157"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230421 01:00:44.317" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230421 01:00:44.317" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f524c625-4b78-40db-a1f5-5892871e7550', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ed2d149dfb6991f0ee00523c6f28fbe5;o=1', 'Date': 'Fri, 21 Apr 2023 01:00:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230421 01:00:44.317" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.158" endtime="20230421 01:00:44.317"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 01:00:44.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.317" endtime="20230421 01:00:44.318"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.158" endtime="20230421 01:00:44.318"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230421 01:00:44.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.318" endtime="20230421 01:00:44.319"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230421 01:00:44.319" endtime="20230421 01:00:44.320"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.318" endtime="20230421 01:00:44.320"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 01:00:44.321" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230421 01:00:44.320" endtime="20230421 01:00:44.321"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.320" endtime="20230421 01:00:44.321"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.156" endtime="20230421 01:00:44.321"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="14">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230421 01:00:44.323" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230421 01:00:44.323" endtime="20230421 01:00:44.323"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.322" endtime="20230421 01:00:44.323"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230421 01:00:44.324" level="INFO">${name} = Donna Brown</msg>
<status status="PASS" starttime="20230421 01:00:44.323" endtime="20230421 01:00:44.324"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230421 01:00:44.324" level="INFO">${email} = yfitzgerald@example.net</msg>
<status status="PASS" starttime="20230421 01:00:44.324" endtime="20230421 01:00:44.325"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230421 01:00:44.325" level="INFO">${password} = #jGCQVnN4@</msg>
<status status="PASS" starttime="20230421 01:00:44.325" endtime="20230421 01:00:44.325"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 01:00:44.325" level="INFO">${name} = Donna Brown</msg>
<status status="PASS" starttime="20230421 01:00:44.325" endtime="20230421 01:00:44.325"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 01:00:44.326" level="INFO">${email} = yfitzgerald@example.net</msg>
<status status="PASS" starttime="20230421 01:00:44.325" endtime="20230421 01:00:44.326"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230421 01:00:44.326" level="INFO">${password} = #jGCQVnN4@</msg>
<status status="PASS" starttime="20230421 01:00:44.326" endtime="20230421 01:00:44.326"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.323" endtime="20230421 01:00:44.326"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 01:00:44.327" level="INFO">${payload} = {'nome': 'Donna Brown', 'email': 'yfitzgerald@example.net', 'password': '#jGCQVnN4@', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230421 01:00:44.326" endtime="20230421 01:00:44.327"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 01:00:44.327" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230421 01:00:44.327" endtime="20230421 01:00:44.327"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230421 01:00:44.432" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Donna Brown", "email": "yfitzgerald@example.net", "password": "#jGCQVnN4@", "administrador": "false"}' 
 </msg>
<msg timestamp="20230421 01:00:44.432" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fdc30753-d696-4ef0-bffc-d73c2a6bbf4f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2d8ea923a6c8d6300057ac757f36ad8d', 'Date': 'Fri, 21 Apr 2023 01:00:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "sf2hAxtC75MoXyyr"
} 
 </msg>
<msg timestamp="20230421 01:00:44.432" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.327" endtime="20230421 01:00:44.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230421 01:00:44.433" level="INFO">${user_id} = sf2hAxtC75MoXyyr</msg>
<status status="PASS" starttime="20230421 01:00:44.432" endtime="20230421 01:00:44.433"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230421 01:00:44.434" level="INFO">${USER_ID} = sf2hAxtC75MoXyyr</msg>
<status status="PASS" starttime="20230421 01:00:44.433" endtime="20230421 01:00:44.434"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 01:00:44.434" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.434" endtime="20230421 01:00:44.434"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.326" endtime="20230421 01:00:44.434"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230421 01:00:44.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.435" endtime="20230421 01:00:44.435"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230421 01:00:44.435" endtime="20230421 01:00:44.436"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.434" endtime="20230421 01:00:44.436"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 01:00:44.437" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230421 01:00:44.436" endtime="20230421 01:00:44.437"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.436" endtime="20230421 01:00:44.437"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.322" endtime="20230421 01:00:44.437"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="20">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230421 01:00:44.438" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230421 01:00:44.438" endtime="20230421 01:00:44.439"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.438" endtime="20230421 01:00:44.439"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230421 01:00:44.526" level="INFO">GET Request : url=https://serverest.dev/usuarios/sf2hAxtC75MoXyyr 
 path_url=/usuarios/sf2hAxtC75MoXyyr 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230421 01:00:44.526" level="INFO">GET Response : url=https://serverest.dev/usuarios/sf2hAxtC75MoXyyr 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ba56ca15-4d20-406e-94de-829c245077a6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0fa5274a61befeead31e341b32324009', 'Date': 'Fri, 21 Apr 2023 01:00:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Donna Brown",
    "email": "yfitzgerald@example.net",
    "password": "#jGCQVnN4@",
    "administrador": "false",
    "_id": "sf2hAxtC75MoXyyr"
} 
 </msg>
<msg timestamp="20230421 01:00:44.526" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.439" endtime="20230421 01:00:44.526"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 01:00:44.526" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.526" endtime="20230421 01:00:44.526"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.439" endtime="20230421 01:00:44.527"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230421 01:00:44.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.527" endtime="20230421 01:00:44.528"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230421 01:00:44.528" endtime="20230421 01:00:44.529"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.527" endtime="20230421 01:00:44.529"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 01:00:44.530" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230421 01:00:44.529" endtime="20230421 01:00:44.530"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.529" endtime="20230421 01:00:44.530"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.437" endtime="20230421 01:00:44.530"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="25">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230421 01:00:44.532" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230421 01:00:44.531" endtime="20230421 01:00:44.532"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.531" endtime="20230421 01:00:44.532"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 01:00:44.533" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230421 01:00:44.532" endtime="20230421 01:00:44.533"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230421 01:00:44.533" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230421 01:00:44.533" endtime="20230421 01:00:44.533"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230421 01:00:44.621" level="INFO">PUT Request : url=https://serverest.dev/usuarios/sf2hAxtC75MoXyyr 
 path_url=/usuarios/sf2hAxtC75MoXyyr 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230421 01:00:44.621" level="INFO">PUT Response : url=https://serverest.dev/usuarios/sf2hAxtC75MoXyyr 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1d8f9412-6338-49a2-b34b-7ac195fab36a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6f5674f4819faa55f61a49e486c1bbd0', 'Date': 'Fri, 21 Apr 2023 01:00:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230421 01:00:44.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.533" endtime="20230421 01:00:44.621"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 01:00:44.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.622" endtime="20230421 01:00:44.622"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.532" endtime="20230421 01:00:44.622"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230421 01:00:44.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.622" endtime="20230421 01:00:44.623"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230421 01:00:44.623" endtime="20230421 01:00:44.624"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.622" endtime="20230421 01:00:44.624"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 01:00:44.625" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230421 01:00:44.624" endtime="20230421 01:00:44.625"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.624" endtime="20230421 01:00:44.625"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.530" endtime="20230421 01:00:44.625"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230421 01:00:44.627" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230421 01:00:44.626" endtime="20230421 01:00:44.627"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.626" endtime="20230421 01:00:44.627"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230421 01:00:44.728" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/sf2hAxtC75MoXyyr 
 path_url=/usuarios/sf2hAxtC75MoXyyr 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230421 01:00:44.728" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/sf2hAxtC75MoXyyr 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '72228a9d-701a-4460-8b26-0e2e5c48bfc2', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e9a89cf294c9c230626743a57fee3d8a', 'Date': 'Fri, 21 Apr 2023 01:00:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230421 01:00:44.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.627" endtime="20230421 01:00:44.728"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230421 01:00:44.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.729" endtime="20230421 01:00:44.729"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.627" endtime="20230421 01:00:44.729"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230421 01:00:44.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 01:00:44.729" endtime="20230421 01:00:44.730"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230421 01:00:44.730" endtime="20230421 01:00:44.731"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.729" endtime="20230421 01:00:44.731"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 01:00:44.732" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230421 01:00:44.732" endtime="20230421 01:00:44.732"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.731" endtime="20230421 01:00:44.733"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.626" endtime="20230421 01:00:44.733"/>
</test>
<status status="PASS" starttime="20230421 01:00:43.512" endtime="20230421 01:00:44.733"/>
</suite>
<status status="PASS" starttime="20230421 01:00:43.510" endtime="20230421 01:00:44.734"/>
</suite>
<status status="PASS" starttime="20230421 01:00:43.509" endtime="20230421 01:00:44.735"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230421 01:00:44.746" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:00:44.746" endtime="20230421 01:00:53.088"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230421 01:00:53.088" endtime="20230421 01:00:53.298"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.745" endtime="20230421 01:00:53.299"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230421 01:00:53.299" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230421 01:00:53.299" endtime="20230421 01:00:53.399"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230421 01:00:53.403" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:00:53.399" endtime="20230421 01:00:53.404"/>
</kw>
<status status="PASS" starttime="20230421 01:00:53.299" endtime="20230421 01:00:53.404"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:53.406" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230421 01:00:53.404" endtime="20230421 01:00:53.688"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:53.689" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230421 01:00:53.688" endtime="20230421 01:00:53.879"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:53.880" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230421 01:00:53.879" endtime="20230421 01:00:54.234"/>
</kw>
<status status="PASS" starttime="20230421 01:00:53.404" endtime="20230421 01:00:54.235"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230421 01:00:54.242" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230421 01:00:54.235" endtime="20230421 01:00:54.242"/>
</kw>
<status status="PASS" starttime="20230421 01:00:54.235" endtime="20230421 01:00:54.242"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230421 01:00:54.271" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230421 01:00:54.243" endtime="20230421 01:00:54.271"/>
</kw>
<status status="PASS" starttime="20230421 01:00:54.242" endtime="20230421 01:00:54.272"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230421 01:00:54.272" endtime="20230421 01:00:54.331"/>
</kw>
<status status="PASS" starttime="20230421 01:00:54.272" endtime="20230421 01:00:54.331"/>
</kw>
<status status="PASS" starttime="20230421 01:00:44.745" endtime="20230421 01:00:54.332"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230421 01:00:54.334" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:00:54.333" endtime="20230421 01:00:55.309"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230421 01:00:55.309" endtime="20230421 01:00:55.416"/>
</kw>
<status status="PASS" starttime="20230421 01:00:54.333" endtime="20230421 01:00:55.416"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230421 01:00:55.417" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230421 01:00:55.417" endtime="20230421 01:00:55.479"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230421 01:00:55.487" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:00:55.479" endtime="20230421 01:00:55.487"/>
</kw>
<status status="PASS" starttime="20230421 01:00:55.416" endtime="20230421 01:00:55.487"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:55.488" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230421 01:00:55.488" endtime="20230421 01:00:55.603"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:55.603" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230421 01:00:55.603" endtime="20230421 01:00:55.703"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:55.703" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230421 01:00:55.703" endtime="20230421 01:00:55.756"/>
</kw>
<status status="PASS" starttime="20230421 01:00:55.487" endtime="20230421 01:00:55.756"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230421 01:00:55.779" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230421 01:00:55.756" endtime="20230421 01:00:55.779"/>
</kw>
<status status="PASS" starttime="20230421 01:00:55.756" endtime="20230421 01:00:55.779"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230421 01:00:55.780" endtime="20230421 01:00:55.837"/>
</kw>
<status status="PASS" starttime="20230421 01:00:55.779" endtime="20230421 01:00:55.838"/>
</kw>
<status status="PASS" starttime="20230421 01:00:54.332" endtime="20230421 01:00:55.838"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230421 01:00:55.840" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:00:55.839" endtime="20230421 01:00:56.821"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230421 01:00:56.821" endtime="20230421 01:00:56.925"/>
</kw>
<status status="PASS" starttime="20230421 01:00:55.839" endtime="20230421 01:00:56.925"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230421 01:00:56.926" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230421 01:00:56.926" endtime="20230421 01:00:56.992"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230421 01:00:56.996" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:00:56.992" endtime="20230421 01:00:56.996"/>
</kw>
<status status="PASS" starttime="20230421 01:00:56.925" endtime="20230421 01:00:56.996"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:56.997" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230421 01:00:56.996" endtime="20230421 01:00:57.093"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:57.094" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230421 01:00:57.093" endtime="20230421 01:00:57.173"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:57.174" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230421 01:00:57.174" endtime="20230421 01:00:57.256"/>
</kw>
<status status="PASS" starttime="20230421 01:00:56.996" endtime="20230421 01:00:57.256"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230421 01:00:57.263" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230421 01:00:57.257" endtime="20230421 01:00:57.263"/>
</kw>
<status status="PASS" starttime="20230421 01:00:57.256" endtime="20230421 01:00:57.263"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230421 01:00:57.280" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230421 01:00:57.264" endtime="20230421 01:00:57.281"/>
</kw>
<status status="PASS" starttime="20230421 01:00:57.264" endtime="20230421 01:00:57.281"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230421 01:00:57.281" endtime="20230421 01:00:57.339"/>
</kw>
<status status="PASS" starttime="20230421 01:00:57.281" endtime="20230421 01:00:57.340"/>
</kw>
<status status="PASS" starttime="20230421 01:00:55.839" endtime="20230421 01:00:57.340"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="27">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230421 01:00:57.342" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:00:57.341" endtime="20230421 01:00:58.315"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230421 01:00:58.316" endtime="20230421 01:00:58.420"/>
</kw>
<status status="PASS" starttime="20230421 01:00:57.341" endtime="20230421 01:00:58.420"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230421 01:00:58.421" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230421 01:00:58.421" endtime="20230421 01:00:58.522"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230421 01:00:58.527" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:00:58.522" endtime="20230421 01:00:58.527"/>
</kw>
<status status="PASS" starttime="20230421 01:00:58.420" endtime="20230421 01:00:58.527"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:58.528" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230421 01:00:58.527" endtime="20230421 01:00:58.645"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:58.646" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230421 01:00:58.645" endtime="20230421 01:00:58.730"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230421 01:00:58.731" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230421 01:00:58.730" endtime="20230421 01:01:03.830"/>
</kw>
<status status="PASS" starttime="20230421 01:00:58.527" endtime="20230421 01:01:03.830"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230421 01:01:03.851" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230421 01:01:03.831" endtime="20230421 01:01:03.851"/>
</kw>
<status status="PASS" starttime="20230421 01:01:03.830" endtime="20230421 01:01:03.851"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230421 01:01:03.864" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230421 01:01:03.851" endtime="20230421 01:01:03.864"/>
</kw>
<status status="PASS" starttime="20230421 01:01:03.851" endtime="20230421 01:01:03.865"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230421 01:01:03.865" endtime="20230421 01:01:03.922"/>
</kw>
<status status="PASS" starttime="20230421 01:01:03.865" endtime="20230421 01:01:03.922"/>
</kw>
<status status="PASS" starttime="20230421 01:00:57.340" endtime="20230421 01:01:03.922"/>
</test>
<status status="PASS" starttime="20230421 01:00:44.739" endtime="20230421 01:01:03.923"/>
</suite>
<status status="PASS" starttime="20230421 01:00:44.738" endtime="20230421 01:01:03.924"/>
</suite>
<status status="PASS" starttime="20230421 01:00:44.736" endtime="20230421 01:01:03.925"/>
</suite>
<suite id="s1-s3" name="Visual" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual">
<suite id="s1-s3-s1" name="Test Visual Check" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/visual/test_visual_check.robot">
<test id="s1-s3-s1-t1" name="Scenario: Visual check login page" line="11">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230421 01:01:05.062" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:01:05.061" endtime="20230421 01:01:06.053"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230421 01:01:06.053" endtime="20230421 01:01:06.156"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230421 01:01:06.157" endtime="20230421 01:01:08.548"/>
</kw>
<status status="PASS" starttime="20230421 01:01:05.061" endtime="20230421 01:01:08.548"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Login Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230421 01:01:08.549" endtime="20230421 01:01:08.549"/>
</kw>
<status status="PASS" starttime="20230421 01:01:08.548" endtime="20230421 01:01:11.025"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230421 01:01:11.026" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230421 01:01:11.026" endtime="20230421 01:01:11.072"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230421 01:01:11.080" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:01:11.072" endtime="20230421 01:01:11.081"/>
</kw>
<status status="PASS" starttime="20230421 01:01:11.025" endtime="20230421 01:01:11.081"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230421 01:01:11.081" endtime="20230421 01:01:12.103"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230421 01:01:12.103" endtime="20230421 01:01:12.161"/>
</kw>
<status status="PASS" starttime="20230421 01:01:11.081" endtime="20230421 01:01:12.161"/>
</kw>
<status status="PASS" starttime="20230421 01:01:05.060" endtime="20230421 01:01:12.161"/>
</test>
<test id="s1-s3-s1-t2" name="Scenario: Visual check inventory page" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230421 01:01:12.164" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230421 01:01:12.163" endtime="20230421 01:01:13.113"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230421 01:01:13.113" endtime="20230421 01:01:13.217"/>
</kw>
<kw name="Eyes Open" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Shared parameters section from `applitools.yaml` could be overwritten during `Eyes Open` call, see `Preconditions`.</doc>
<status status="PASS" starttime="20230421 01:01:13.217" endtime="20230421 01:01:15.265"/>
</kw>
<status status="PASS" starttime="20230421 01:01:12.162" endtime="20230421 01:01:15.265"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:01:15.267" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230421 01:01:15.266" endtime="20230421 01:01:15.356"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230421 01:01:15.357" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230421 01:01:15.356" endtime="20230421 01:01:15.441"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230421 01:01:15.442" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230421 01:01:15.441" endtime="20230421 01:01:15.522"/>
</kw>
<status status="PASS" starttime="20230421 01:01:15.266" endtime="20230421 01:01:15.523"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230421 01:01:15.536" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230421 01:01:15.523" endtime="20230421 01:01:15.536"/>
</kw>
<status status="PASS" starttime="20230421 01:01:15.523" endtime="20230421 01:01:15.536"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230421 01:01:15.552" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230421 01:01:15.537" endtime="20230421 01:01:15.552"/>
</kw>
<status status="PASS" starttime="20230421 01:01:15.536" endtime="20230421 01:01:15.552"/>
</kw>
<kw name="Eyes Check Window" library="EyesLibrary">
<arg>Inventory Page</arg>
<arg>Fully</arg>
<tag>Allow to pass Check Settings keywords</tag>
<tag>Check flow</tag>
<doc>Check current browser window</doc>
<kw name="Fully" library="EyesLibrary">
<tag>Check Settings keyword</tag>
<doc>Returns a CheckSettings object specified fully.</doc>
<status status="PASS" starttime="20230421 01:01:15.553" endtime="20230421 01:01:15.554"/>
</kw>
<status status="PASS" starttime="20230421 01:01:15.553" endtime="20230421 01:01:18.042"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Eyes Close Async" library="EyesLibrary">
<tag>Check flow</tag>
<doc>Closes a session and returns the results of the session.
If a test is running, aborts it. Otherwise, does nothing.</doc>
<status status="PASS" starttime="20230421 01:01:18.043" endtime="20230421 01:01:19.062"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20230421 01:01:19.063" endtime="20230421 01:01:19.120"/>
</kw>
<status status="PASS" starttime="20230421 01:01:18.043" endtime="20230421 01:01:19.121"/>
</kw>
<status status="PASS" starttime="20230421 01:01:12.162" endtime="20230421 01:01:19.121"/>
</test>
<meta name="Applitools TestResults Path">/tmp/tmpfztm7hyi/EyesTestResults-9bf997ac8fda4d22b95e2edef58f365b.json</meta>
<status status="PASS" starttime="20230421 01:01:03.928" endtime="20230421 01:01:19.122"/>
</suite>
<status status="PASS" starttime="20230421 01:01:03.926" endtime="20230421 01:01:19.123"/>
</suite>
<status status="PASS" starttime="20230421 01:00:43.491" endtime="20230421 01:01:19.124"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Visual">Tests.Visual</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Test Visual Check">Tests.Visual.Test Visual Check</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
