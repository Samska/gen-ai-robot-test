<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 14:18:10.891" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:11.539" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:11.538" endtime="20230601 14:18:11.539"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.538" endtime="20230601 14:18:11.539"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:11.693" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:18:11.693" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '55c465e0-8286-4661-9ee6-138729de640c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '36160c88b80e90054a8069cb5a41995c', 'Date': 'Thu, 01 Jun 2023 14:18:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '2869'} 
 body={
    "quantidade": 13,
    "usuarios": [
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "wbGsZa5vMrOWAm7a"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 14:18:11.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.540" endtime="20230601 14:18:11.693"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:11.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.694" endtime="20230601 14:18:11.694"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.539" endtime="20230601 14:18:11.695"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:11.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.695" endtime="20230601 14:18:11.696"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:11.696" endtime="20230601 14:18:11.697"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.695" endtime="20230601 14:18:11.697"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:11.698" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 14:18:11.698" endtime="20230601 14:18:11.698"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.697" endtime="20230601 14:18:11.698"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:11.537" endtime="20230601 14:18:11.699"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:11.700" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:11.700" endtime="20230601 14:18:11.701"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.700" endtime="20230601 14:18:11.701"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 14:18:11.702" level="INFO">${name} = Jason Walton</msg>
<status status="PASS" starttime="20230601 14:18:11.701" endtime="20230601 14:18:11.702"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 14:18:11.703" level="INFO">${email} = jacobdavidson@example.org</msg>
<status status="PASS" starttime="20230601 14:18:11.702" endtime="20230601 14:18:11.703"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 14:18:11.703" level="INFO">${password} = 0LPOjjzeiwEH</msg>
<status status="PASS" starttime="20230601 14:18:11.703" endtime="20230601 14:18:11.703"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:11.704" level="INFO">${name} = Jason Walton</msg>
<status status="PASS" starttime="20230601 14:18:11.703" endtime="20230601 14:18:11.704"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:11.704" level="INFO">${email} = jacobdavidson@example.org</msg>
<status status="PASS" starttime="20230601 14:18:11.704" endtime="20230601 14:18:11.704"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:11.705" level="INFO">${password} = 0LPOjjzeiwEH</msg>
<status status="PASS" starttime="20230601 14:18:11.704" endtime="20230601 14:18:11.705"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.701" endtime="20230601 14:18:11.705"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:18:11.706" level="INFO">${payload} = {'nome': 'Jason Walton', 'email': 'jacobdavidson@example.org', 'password': '0LPOjjzeiwEH', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 14:18:11.705" endtime="20230601 14:18:11.706"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:18:11.706" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 14:18:11.706" endtime="20230601 14:18:11.706"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:11.782" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"nome": "Jason Walton", "email": "jacobdavidson@example.org", "password": "0LPOjjzeiwEH", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 14:18:11.782" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7091108b-9315-48bd-a53c-a3e753c8570a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '84fb9bbf7c6bd043049fb698d062227d', 'Date': 'Thu, 01 Jun 2023 14:18:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "GPxkKsdvTFw1ybl1"
} 
 </msg>
<msg timestamp="20230601 14:18:11.782" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.706" endtime="20230601 14:18:11.782"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 14:18:11.784" level="INFO">${user_id} = GPxkKsdvTFw1ybl1</msg>
<status status="PASS" starttime="20230601 14:18:11.782" endtime="20230601 14:18:11.784"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 14:18:11.785" level="INFO">${USER_ID} = GPxkKsdvTFw1ybl1</msg>
<status status="PASS" starttime="20230601 14:18:11.784" endtime="20230601 14:18:11.785"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:11.785" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.785" endtime="20230601 14:18:11.785"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.705" endtime="20230601 14:18:11.785"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:11.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.786" endtime="20230601 14:18:11.787"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:11.787" endtime="20230601 14:18:11.788"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.786" endtime="20230601 14:18:11.788"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:11.789" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 14:18:11.788" endtime="20230601 14:18:11.789"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.788" endtime="20230601 14:18:11.789"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:11.699" endtime="20230601 14:18:11.789"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:11.791" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:11.791" endtime="20230601 14:18:11.792"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.790" endtime="20230601 14:18:11.792"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:11.871" level="INFO">GET Request : url=https://serverest.dev/usuarios/GPxkKsdvTFw1ybl1 
 path_url=/usuarios/GPxkKsdvTFw1ybl1 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:18:11.872" level="INFO">GET Response : url=https://serverest.dev/usuarios/GPxkKsdvTFw1ybl1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '916ec3d8-e313-4da0-b023-361be3365138', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '729ade04f718af29291ea94a6c45272a', 'Date': 'Thu, 01 Jun 2023 14:18:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '165'} 
 body={
    "nome": "Jason Walton",
    "email": "jacobdavidson@example.org",
    "password": "0LPOjjzeiwEH",
    "administrador": "false",
    "_id": "GPxkKsdvTFw1ybl1"
} 
 </msg>
<msg timestamp="20230601 14:18:11.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.792" endtime="20230601 14:18:11.872"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:11.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.872" endtime="20230601 14:18:11.873"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.792" endtime="20230601 14:18:11.873"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:11.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.874" endtime="20230601 14:18:11.875"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:11.875" endtime="20230601 14:18:11.876"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.873" endtime="20230601 14:18:11.876"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:11.877" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 14:18:11.877" endtime="20230601 14:18:11.877"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.876" endtime="20230601 14:18:11.878"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:11.790" endtime="20230601 14:18:11.878"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:11.879" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:11.879" endtime="20230601 14:18:11.880"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.879" endtime="20230601 14:18:11.880"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:18:11.880" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 14:18:11.880" endtime="20230601 14:18:11.880"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 14:18:11.881" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 14:18:11.881" endtime="20230601 14:18:11.881"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:11.958" level="INFO">PUT Request : url=https://serverest.dev/usuarios/GPxkKsdvTFw1ybl1 
 path_url=/usuarios/GPxkKsdvTFw1ybl1 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 14:18:11.958" level="INFO">PUT Response : url=https://serverest.dev/usuarios/GPxkKsdvTFw1ybl1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '842f2119-ad1e-4617-a405-ab3fdcfad3c8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3aed9fc9ea4e013a82f2c3c05446ae6b', 'Date': 'Thu, 01 Jun 2023 14:18:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 14:18:11.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.881" endtime="20230601 14:18:11.959"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:11.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.959" endtime="20230601 14:18:11.961"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.880" endtime="20230601 14:18:11.961"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:11.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.961" endtime="20230601 14:18:11.962"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:11.963" endtime="20230601 14:18:11.963"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.961" endtime="20230601 14:18:11.963"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:11.965" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 14:18:11.964" endtime="20230601 14:18:11.965"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.964" endtime="20230601 14:18:11.965"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:11.878" endtime="20230601 14:18:11.965"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 14:18:11.966" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 14:18:11.966" endtime="20230601 14:18:11.967"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.966" endtime="20230601 14:18:11.967"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 14:18:12.043" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/GPxkKsdvTFw1ybl1 
 path_url=/usuarios/GPxkKsdvTFw1ybl1 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 14:18:12.043" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/GPxkKsdvTFw1ybl1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e53bee96-0b40-40c5-b209-8459ee37c455', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9cd53aaf3f57c42c7700dbc03e383382', 'Date': 'Thu, 01 Jun 2023 14:18:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 14:18:12.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:11.968" endtime="20230601 14:18:12.044"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 14:18:12.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 14:18:12.044" endtime="20230601 14:18:12.045"/>
</kw>
<status status="PASS" starttime="20230601 14:18:11.967" endtime="20230601 14:18:12.045"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 14:18:12.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 14:18:12.046" endtime="20230601 14:18:12.047"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 14:18:12.048" endtime="20230601 14:18:12.049"/>
</kw>
<status status="PASS" starttime="20230601 14:18:12.045" endtime="20230601 14:18:12.049"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 14:18:12.051" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 14:18:12.050" endtime="20230601 14:18:12.051"/>
</kw>
<status status="PASS" starttime="20230601 14:18:12.049" endtime="20230601 14:18:12.051"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 14:18:11.965" endtime="20230601 14:18:12.051"/>
</test>
<status status="PASS" starttime="20230601 14:18:10.915" endtime="20230601 14:18:12.052"/>
</suite>
<status status="PASS" starttime="20230601 14:18:10.914" endtime="20230601 14:18:12.053"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:18:12.065" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:18:12.065" endtime="20230601 14:18:14.558"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:18:14.558" endtime="20230601 14:18:14.668"/>
</kw>
<status status="PASS" starttime="20230601 14:18:12.064" endtime="20230601 14:18:14.668"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:18:14.675" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:18:14.669" endtime="20230601 14:18:14.675"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:14.676" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:18:14.675" endtime="20230601 14:18:14.782"/>
</kw>
<status status="PASS" starttime="20230601 14:18:14.669" endtime="20230601 14:18:14.782"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:14.783" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:18:14.783" endtime="20230601 14:18:14.860"/>
</kw>
<status status="PASS" starttime="20230601 14:18:14.782" endtime="20230601 14:18:14.860"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:18:14.861" endtime="20230601 14:18:15.104"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:18:15.127" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:18:15.104" endtime="20230601 14:18:15.128"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:15.147" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:18:15.128" endtime="20230601 14:18:15.147"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:15.164" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:18:15.148" endtime="20230601 14:18:15.164"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:15.180" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 14:18:15.164" endtime="20230601 14:18:15.180"/>
</kw>
<status status="PASS" starttime="20230601 14:18:14.860" endtime="20230601 14:18:15.181"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:18:15.181" endtime="20230601 14:18:15.237"/>
</kw>
<status status="PASS" starttime="20230601 14:18:15.181" endtime="20230601 14:18:15.238"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:18:12.064" endtime="20230601 14:18:15.238"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:18:15.241" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:18:15.240" endtime="20230601 14:18:16.432"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:18:16.432" endtime="20230601 14:18:16.537"/>
</kw>
<status status="PASS" starttime="20230601 14:18:15.239" endtime="20230601 14:18:16.537"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:18:16.543" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:18:16.538" endtime="20230601 14:18:16.544"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.545" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:18:16.544" endtime="20230601 14:18:16.647"/>
</kw>
<status status="PASS" starttime="20230601 14:18:16.537" endtime="20230601 14:18:16.647"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 14:18:16.649" level="INFO">${name} = Abigail Pearson</msg>
<status status="PASS" starttime="20230601 14:18:16.648" endtime="20230601 14:18:16.649"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 14:18:16.650" level="INFO">${email} = leelori@example.com</msg>
<status status="PASS" starttime="20230601 14:18:16.649" endtime="20230601 14:18:16.650"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 14:18:16.650" level="INFO">${password} = 4gZoJFVoISqd</msg>
<status status="PASS" starttime="20230601 14:18:16.650" endtime="20230601 14:18:16.650"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.651" level="INFO">Typing text 'Abigail Pearson' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 14:18:16.650" endtime="20230601 14:18:16.809"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.810" level="INFO">Typing text 'leelori@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 14:18:16.810" endtime="20230601 14:18:16.938"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:16.939" level="INFO">Typing text '4gZoJFVoISqd' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 14:18:16.938" endtime="20230601 14:18:17.050"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:17.051" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 14:18:17.050" endtime="20230601 14:18:17.141"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:17.142" level="INFO">${name} = Abigail Pearson</msg>
<status status="PASS" starttime="20230601 14:18:17.142" endtime="20230601 14:18:17.142"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:17.143" level="INFO">${email} = leelori@example.com</msg>
<status status="PASS" starttime="20230601 14:18:17.142" endtime="20230601 14:18:17.143"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 14:18:17.143" level="INFO">${password} = 4gZoJFVoISqd</msg>
<status status="PASS" starttime="20230601 14:18:17.143" endtime="20230601 14:18:17.143"/>
</kw>
<status status="PASS" starttime="20230601 14:18:16.647" endtime="20230601 14:18:17.143"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:17.145" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:18:17.144" endtime="20230601 14:18:17.216"/>
</kw>
<status status="PASS" starttime="20230601 14:18:17.143" endtime="20230601 14:18:17.216"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:18:17.217" endtime="20230601 14:18:17.458"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:18:17.480" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:18:17.459" endtime="20230601 14:18:17.481"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:17.496" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 14:18:17.481" endtime="20230601 14:18:17.496"/>
</kw>
<status status="PASS" starttime="20230601 14:18:17.216" endtime="20230601 14:18:17.496"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:18:17.497" endtime="20230601 14:18:17.552"/>
</kw>
<status status="PASS" starttime="20230601 14:18:17.497" endtime="20230601 14:18:17.553"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:18:15.239" endtime="20230601 14:18:17.553"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 14:18:17.555" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 14:18:17.555" endtime="20230601 14:18:18.820"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 14:18:18.821" endtime="20230601 14:18:18.926"/>
</kw>
<status status="PASS" starttime="20230601 14:18:17.554" endtime="20230601 14:18:18.927"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 14:18:18.943" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 14:18:18.929" endtime="20230601 14:18:18.943"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:18.944" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 14:18:18.943" endtime="20230601 14:18:19.045"/>
</kw>
<status status="PASS" starttime="20230601 14:18:18.928" endtime="20230601 14:18:19.045"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:19.047" level="INFO">Typing text 'Abigail Pearson' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 14:18:19.046" endtime="20230601 14:18:19.196"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:19.197" level="INFO">Typing text 'leelori@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 14:18:19.197" endtime="20230601 14:18:19.321"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:19.322" level="INFO">Typing text '4gZoJFVoISqd' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 14:18:19.321" endtime="20230601 14:18:19.437"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:19.438" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 14:18:19.437" endtime="20230601 14:18:19.530"/>
</kw>
<status status="PASS" starttime="20230601 14:18:19.045" endtime="20230601 14:18:19.531"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 14:18:19.532" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 14:18:19.531" endtime="20230601 14:18:19.604"/>
</kw>
<status status="PASS" starttime="20230601 14:18:19.531" endtime="20230601 14:18:19.604"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 14:18:19.605" endtime="20230601 14:18:19.846"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 14:18:19.868" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 14:18:19.846" endtime="20230601 14:18:19.868"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 14:18:19.884" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 14:18:19.868" endtime="20230601 14:18:19.885"/>
</kw>
<status status="PASS" starttime="20230601 14:18:19.604" endtime="20230601 14:18:19.885"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 14:18:19.885" endtime="20230601 14:18:19.940"/>
</kw>
<status status="PASS" starttime="20230601 14:18:19.885" endtime="20230601 14:18:19.940"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 14:18:17.553" endtime="20230601 14:18:19.940"/>
</test>
<status status="PASS" starttime="20230601 14:18:12.056" endtime="20230601 14:18:19.941"/>
</suite>
<status status="PASS" starttime="20230601 14:18:12.054" endtime="20230601 14:18:19.943"/>
</suite>
<status status="PASS" starttime="20230601 14:18:10.892" endtime="20230601 14:18:19.944"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
