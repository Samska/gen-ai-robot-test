<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230519 01:03:35.316" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 01:03:35.868" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 01:03:35.868" endtime="20230519 01:03:35.869"/>
</kw>
<status status="PASS" starttime="20230519 01:03:35.868" endtime="20230519 01:03:35.869"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 01:03:36.019" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230519 01:03:36.019" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b0991a26-e940-47df-809f-34b300686c34', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a83c6f864cc7d2ff7b3db6c0e360f81d;o=1', 'Date': 'Fri, 19 May 2023 01:03:36 GMT', 'Server': 'Google Frontend', 'Content-Length': '462'} 
 body={
    "quantidade": 2,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "camila",
            "email": "cscassimiro@teste.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "CEjLRT0DjbY9GvKn"
        }
    ]
} 
 </msg>
<msg timestamp="20230519 01:03:36.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:35.869" endtime="20230519 01:03:36.019"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 01:03:36.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.019" endtime="20230519 01:03:36.020"/>
</kw>
<status status="PASS" starttime="20230519 01:03:35.869" endtime="20230519 01:03:36.020"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 01:03:36.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.020" endtime="20230519 01:03:36.021"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 01:03:36.021" endtime="20230519 01:03:36.022"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.020" endtime="20230519 01:03:36.022"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 01:03:36.023" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230519 01:03:36.022" endtime="20230519 01:03:36.023"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.022" endtime="20230519 01:03:36.023"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 01:03:35.867" endtime="20230519 01:03:36.023"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 01:03:36.025" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 01:03:36.024" endtime="20230519 01:03:36.025"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.024" endtime="20230519 01:03:36.025"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230519 01:03:36.026" level="INFO">${name} = Douglas Scott</msg>
<status status="PASS" starttime="20230519 01:03:36.025" endtime="20230519 01:03:36.026"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230519 01:03:36.026" level="INFO">${email} = srichardson@example.net</msg>
<status status="PASS" starttime="20230519 01:03:36.026" endtime="20230519 01:03:36.026"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230519 01:03:36.027" level="INFO">${password} = LX^1uXio)n</msg>
<status status="PASS" starttime="20230519 01:03:36.026" endtime="20230519 01:03:36.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230519 01:03:36.027" level="INFO">${name} = Douglas Scott</msg>
<status status="PASS" starttime="20230519 01:03:36.027" endtime="20230519 01:03:36.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230519 01:03:36.027" level="INFO">${email} = srichardson@example.net</msg>
<status status="PASS" starttime="20230519 01:03:36.027" endtime="20230519 01:03:36.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230519 01:03:36.028" level="INFO">${password} = LX^1uXio)n</msg>
<status status="PASS" starttime="20230519 01:03:36.028" endtime="20230519 01:03:36.028"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.025" endtime="20230519 01:03:36.028"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230519 01:03:36.029" level="INFO">${payload} = {'nome': 'Douglas Scott', 'email': 'srichardson@example.net', 'password': 'LX^1uXio)n', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230519 01:03:36.028" endtime="20230519 01:03:36.029"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230519 01:03:36.029" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230519 01:03:36.029" endtime="20230519 01:03:36.029"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 01:03:36.110" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"nome": "Douglas Scott", "email": "srichardson@example.net", "password": "LX^1uXio)n", "administrador": "false"}' 
 </msg>
<msg timestamp="20230519 01:03:36.110" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2a26f782-f9b1-460c-a1dd-0fde258ca3d7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ce695a6d7b3cd21662d0927fd3b807ed', 'Date': 'Fri, 19 May 2023 01:03:36 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "WNLU4Uj0ley2hwLd"
} 
 </msg>
<msg timestamp="20230519 01:03:36.110" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.029" endtime="20230519 01:03:36.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230519 01:03:36.111" level="INFO">${user_id} = WNLU4Uj0ley2hwLd</msg>
<status status="PASS" starttime="20230519 01:03:36.111" endtime="20230519 01:03:36.111"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230519 01:03:36.112" level="INFO">${USER_ID} = WNLU4Uj0ley2hwLd</msg>
<status status="PASS" starttime="20230519 01:03:36.112" endtime="20230519 01:03:36.112"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 01:03:36.112" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.112" endtime="20230519 01:03:36.112"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.028" endtime="20230519 01:03:36.113"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 01:03:36.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.113" endtime="20230519 01:03:36.114"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 01:03:36.114" endtime="20230519 01:03:36.114"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.113" endtime="20230519 01:03:36.114"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 01:03:36.115" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230519 01:03:36.115" endtime="20230519 01:03:36.115"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.114" endtime="20230519 01:03:36.115"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 01:03:36.024" endtime="20230519 01:03:36.116"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 01:03:36.117" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 01:03:36.117" endtime="20230519 01:03:36.117"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.116" endtime="20230519 01:03:36.117"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 01:03:36.194" level="INFO">GET Request : url=https://serverest.dev/usuarios/WNLU4Uj0ley2hwLd 
 path_url=/usuarios/WNLU4Uj0ley2hwLd 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230519 01:03:36.194" level="INFO">GET Response : url=https://serverest.dev/usuarios/WNLU4Uj0ley2hwLd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'b8a81914-a992-4cc3-a8a1-ae9b5e380030', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '454c2f3f8ecdb8beb7b962be6c35e881', 'Date': 'Fri, 19 May 2023 01:03:36 GMT', 'Server': 'Google Frontend', 'Content-Length': '162'} 
 body={
    "nome": "Douglas Scott",
    "email": "srichardson@example.net",
    "password": "LX^1uXio)n",
    "administrador": "false",
    "_id": "WNLU4Uj0ley2hwLd"
} 
 </msg>
<msg timestamp="20230519 01:03:36.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.118" endtime="20230519 01:03:36.194"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 01:03:36.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.195" endtime="20230519 01:03:36.195"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.118" endtime="20230519 01:03:36.195"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 01:03:36.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.196" endtime="20230519 01:03:36.196"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 01:03:36.197" endtime="20230519 01:03:36.197"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.195" endtime="20230519 01:03:36.197"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 01:03:36.198" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230519 01:03:36.198" endtime="20230519 01:03:36.198"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.197" endtime="20230519 01:03:36.198"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 01:03:36.116" endtime="20230519 01:03:36.199"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 01:03:36.200" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 01:03:36.200" endtime="20230519 01:03:36.201"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.200" endtime="20230519 01:03:36.201"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230519 01:03:36.201" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230519 01:03:36.201" endtime="20230519 01:03:36.201"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230519 01:03:36.202" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230519 01:03:36.202" endtime="20230519 01:03:36.202"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 01:03:36.283" level="INFO">PUT Request : url=https://serverest.dev/usuarios/WNLU4Uj0ley2hwLd 
 path_url=/usuarios/WNLU4Uj0ley2hwLd 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230519 01:03:36.283" level="INFO">PUT Response : url=https://serverest.dev/usuarios/WNLU4Uj0ley2hwLd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '625d7721-0b24-4cfb-9166-4fb937311532', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '053ec63f5fc629e688495e6ccfb21b45', 'Date': 'Fri, 19 May 2023 01:03:36 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230519 01:03:36.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.202" endtime="20230519 01:03:36.283"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 01:03:36.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.283" endtime="20230519 01:03:36.284"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.201" endtime="20230519 01:03:36.284"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 01:03:36.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.284" endtime="20230519 01:03:36.285"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 01:03:36.285" endtime="20230519 01:03:36.286"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.284" endtime="20230519 01:03:36.286"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 01:03:36.287" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230519 01:03:36.286" endtime="20230519 01:03:36.287"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.286" endtime="20230519 01:03:36.287"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 01:03:36.199" endtime="20230519 01:03:36.287"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230519 01:03:36.288" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230519 01:03:36.288" endtime="20230519 01:03:36.289"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.288" endtime="20230519 01:03:36.289"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230519 01:03:36.368" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/WNLU4Uj0ley2hwLd 
 path_url=/usuarios/WNLU4Uj0ley2hwLd 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230519 01:03:36.368" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/WNLU4Uj0ley2hwLd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0e5723d8-986b-406d-a38a-d70fb83abfb7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '257dc60d204e149e119adb0c2845e7c9', 'Date': 'Fri, 19 May 2023 01:03:36 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230519 01:03:36.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.289" endtime="20230519 01:03:36.368"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230519 01:03:36.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.369" endtime="20230519 01:03:36.369"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.289" endtime="20230519 01:03:36.369"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230519 01:03:36.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 01:03:36.369" endtime="20230519 01:03:36.370"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230519 01:03:36.370" endtime="20230519 01:03:36.371"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.369" endtime="20230519 01:03:36.371"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230519 01:03:36.372" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230519 01:03:36.371" endtime="20230519 01:03:36.372"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.371" endtime="20230519 01:03:36.372"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230519 01:03:36.287" endtime="20230519 01:03:36.372"/>
</test>
<status status="PASS" starttime="20230519 01:03:35.339" endtime="20230519 01:03:36.374"/>
</suite>
<status status="PASS" starttime="20230519 01:03:35.337" endtime="20230519 01:03:36.376"/>
</suite>
<status status="PASS" starttime="20230519 01:03:35.335" endtime="20230519 01:03:36.377"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230519 01:03:36.388" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 01:03:36.387" endtime="20230519 01:03:37.777"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230519 01:03:37.777" endtime="20230519 01:03:37.884"/>
</kw>
<status status="PASS" starttime="20230519 01:03:36.387" endtime="20230519 01:03:37.885"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230519 01:03:37.886" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230519 01:03:37.885" endtime="20230519 01:03:37.948"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 01:03:37.953" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 01:03:37.948" endtime="20230519 01:03:37.953"/>
</kw>
<status status="PASS" starttime="20230519 01:03:37.885" endtime="20230519 01:03:37.953"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:37.956" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230519 01:03:37.954" endtime="20230519 01:03:38.076"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:38.076" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230519 01:03:38.076" endtime="20230519 01:03:38.166"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:38.167" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230519 01:03:38.166" endtime="20230519 01:03:38.271"/>
</kw>
<status status="PASS" starttime="20230519 01:03:37.953" endtime="20230519 01:03:38.271"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 01:03:38.283" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230519 01:03:38.272" endtime="20230519 01:03:38.283"/>
</kw>
<status status="PASS" starttime="20230519 01:03:38.271" endtime="20230519 01:03:38.283"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230519 01:03:38.301" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230519 01:03:38.284" endtime="20230519 01:03:38.301"/>
</kw>
<status status="PASS" starttime="20230519 01:03:38.283" endtime="20230519 01:03:38.301"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230519 01:03:38.302" endtime="20230519 01:03:38.361"/>
</kw>
<status status="PASS" starttime="20230519 01:03:38.302" endtime="20230519 01:03:38.361"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230519 01:03:36.386" endtime="20230519 01:03:38.361"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230519 01:03:38.363" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 01:03:38.363" endtime="20230519 01:03:39.201"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230519 01:03:39.201" endtime="20230519 01:03:39.307"/>
</kw>
<status status="PASS" starttime="20230519 01:03:38.363" endtime="20230519 01:03:39.307"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230519 01:03:39.308" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230519 01:03:39.308" endtime="20230519 01:03:39.366"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 01:03:39.374" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 01:03:39.366" endtime="20230519 01:03:39.374"/>
</kw>
<status status="PASS" starttime="20230519 01:03:39.307" endtime="20230519 01:03:39.374"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:39.375" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230519 01:03:39.375" endtime="20230519 01:03:39.482"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:39.483" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230519 01:03:39.483" endtime="20230519 01:03:39.567"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:39.567" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230519 01:03:39.567" endtime="20230519 01:03:39.626"/>
</kw>
<status status="PASS" starttime="20230519 01:03:39.374" endtime="20230519 01:03:39.626"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230519 01:03:39.649" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230519 01:03:39.626" endtime="20230519 01:03:39.649"/>
</kw>
<status status="PASS" starttime="20230519 01:03:39.626" endtime="20230519 01:03:39.650"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230519 01:03:39.650" endtime="20230519 01:03:39.708"/>
</kw>
<status status="PASS" starttime="20230519 01:03:39.650" endtime="20230519 01:03:39.708"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230519 01:03:38.362" endtime="20230519 01:03:39.708"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230519 01:03:39.710" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 01:03:39.710" endtime="20230519 01:03:40.573"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230519 01:03:40.573" endtime="20230519 01:03:40.677"/>
</kw>
<status status="PASS" starttime="20230519 01:03:39.709" endtime="20230519 01:03:40.677"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230519 01:03:40.679" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230519 01:03:40.678" endtime="20230519 01:03:40.741"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 01:03:40.751" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 01:03:40.742" endtime="20230519 01:03:40.751"/>
</kw>
<status status="PASS" starttime="20230519 01:03:40.678" endtime="20230519 01:03:40.751"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:40.753" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230519 01:03:40.752" endtime="20230519 01:03:40.857"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:40.858" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230519 01:03:40.857" endtime="20230519 01:03:40.939"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:40.940" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230519 01:03:40.939" endtime="20230519 01:03:41.028"/>
</kw>
<status status="PASS" starttime="20230519 01:03:40.751" endtime="20230519 01:03:41.029"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 01:03:41.040" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230519 01:03:41.029" endtime="20230519 01:03:41.040"/>
</kw>
<status status="PASS" starttime="20230519 01:03:41.029" endtime="20230519 01:03:41.040"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230519 01:03:41.056" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230519 01:03:41.041" endtime="20230519 01:03:41.056"/>
</kw>
<status status="PASS" starttime="20230519 01:03:41.040" endtime="20230519 01:03:41.056"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230519 01:03:41.057" endtime="20230519 01:03:41.114"/>
</kw>
<status status="PASS" starttime="20230519 01:03:41.056" endtime="20230519 01:03:41.114"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230519 01:03:39.709" endtime="20230519 01:03:41.115"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230519 01:03:41.117" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 01:03:41.117" endtime="20230519 01:03:41.953"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230519 01:03:41.953" endtime="20230519 01:03:42.059"/>
</kw>
<status status="PASS" starttime="20230519 01:03:41.116" endtime="20230519 01:03:42.059"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230519 01:03:42.060" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230519 01:03:42.060" endtime="20230519 01:03:42.111"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 01:03:42.117" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230519 01:03:42.112" endtime="20230519 01:03:42.117"/>
</kw>
<status status="PASS" starttime="20230519 01:03:42.059" endtime="20230519 01:03:42.118"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:42.119" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230519 01:03:42.118" endtime="20230519 01:03:42.245"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:42.246" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230519 01:03:42.245" endtime="20230519 01:03:42.332"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230519 01:03:42.333" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230519 01:03:42.332" endtime="20230519 01:03:47.428"/>
</kw>
<status status="PASS" starttime="20230519 01:03:42.118" endtime="20230519 01:03:47.428"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230519 01:03:47.442" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230519 01:03:47.429" endtime="20230519 01:03:47.442"/>
</kw>
<status status="PASS" starttime="20230519 01:03:47.429" endtime="20230519 01:03:47.442"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230519 01:03:47.457" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230519 01:03:47.442" endtime="20230519 01:03:47.457"/>
</kw>
<status status="PASS" starttime="20230519 01:03:47.442" endtime="20230519 01:03:47.457"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230519 01:03:47.458" endtime="20230519 01:03:47.515"/>
</kw>
<status status="PASS" starttime="20230519 01:03:47.457" endtime="20230519 01:03:47.515"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230519 01:03:41.115" endtime="20230519 01:03:47.515"/>
</test>
<status status="PASS" starttime="20230519 01:03:36.380" endtime="20230519 01:03:47.516"/>
</suite>
<status status="PASS" starttime="20230519 01:03:36.379" endtime="20230519 01:03:47.518"/>
</suite>
<status status="PASS" starttime="20230519 01:03:36.377" endtime="20230519 01:03:47.520"/>
</suite>
<status status="PASS" starttime="20230519 01:03:35.317" endtime="20230519 01:03:47.521"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
