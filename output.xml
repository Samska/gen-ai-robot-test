<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230530 01:41:52.171" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230530 01:41:53.147" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230530 01:41:53.146" endtime="20230530 01:41:53.147"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.146" endtime="20230530 01:41:53.147"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230530 01:41:53.382" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230530 01:41:53.382" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bc2ac4ab-f28e-43e8-9a1f-208657107c8f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1d1479a4d8d4ec4d52fc13fd2c622a77;o=1', 'Date': 'Tue, 30 May 2023 01:41:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '1348'} 
 body={
    "quantidade": 6,
    "usuarios": [
        {
            "nome": "Adrian Vincent",
            "email": "sharonhuffman@example.org",
            "password": "PS8NJX8peaw9",
            "administrador": "true",
            "_id": "0F0Lc8lRd3WEbABt"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Jessica Shelton",
            "email": "joseph87@example.com",
            "password": "82byTwRiFKVT",
            "administrador": "true",
            "_id": "1gIcOs8pYcGi8nNm"
        },
        {
            "nome": "Sara Arnold",
            "email": "penningtonjulia@example.com",
            "password": "ps8dEHTtt408",
            "administrador": "true",
            "_id": "FJNJILSi8bnf3msi"
        },
        {
            "nome": "{{nome}}",
            "email": "Velma@qa.com.br",
            "password": "kWA_JlTS1bg5Ba6",
            "administrador": "true",
            "_id": "kXheeUxsWCOyToUI"
        },
        {
            "nome": "Lisa Erickson",
            "email": "hnguyen@example.net",
            "password": "1w4eFEqPIFAJ",
            "administrador": "true",
            "_id": "uPbLNF8hJAJKQKuV"
        }
    ]
} 
 </msg>
<msg timestamp="20230530 01:41:53.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.148" endtime="20230530 01:41:53.382"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230530 01:41:53.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.382" endtime="20230530 01:41:53.383"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.148" endtime="20230530 01:41:53.383"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230530 01:41:53.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.384" endtime="20230530 01:41:53.385"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230530 01:41:53.385" endtime="20230530 01:41:53.385"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.383" endtime="20230530 01:41:53.385"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230530 01:41:53.387" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230530 01:41:53.386" endtime="20230530 01:41:53.387"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.386" endtime="20230530 01:41:53.387"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230530 01:41:53.145" endtime="20230530 01:41:53.387"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230530 01:41:53.389" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230530 01:41:53.389" endtime="20230530 01:41:53.389"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.388" endtime="20230530 01:41:53.390"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230530 01:41:53.391" level="INFO">${name} = Alicia Martin</msg>
<status status="PASS" starttime="20230530 01:41:53.390" endtime="20230530 01:41:53.391"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230530 01:41:53.391" level="INFO">${email} = michaelalowe@example.com</msg>
<status status="PASS" starttime="20230530 01:41:53.391" endtime="20230530 01:41:53.391"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230530 01:41:53.392" level="INFO">${password} = 0KVvmkKgwC17</msg>
<status status="PASS" starttime="20230530 01:41:53.391" endtime="20230530 01:41:53.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 01:41:53.392" level="INFO">${name} = Alicia Martin</msg>
<status status="PASS" starttime="20230530 01:41:53.392" endtime="20230530 01:41:53.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 01:41:53.393" level="INFO">${email} = michaelalowe@example.com</msg>
<status status="PASS" starttime="20230530 01:41:53.392" endtime="20230530 01:41:53.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 01:41:53.393" level="INFO">${password} = 0KVvmkKgwC17</msg>
<status status="PASS" starttime="20230530 01:41:53.393" endtime="20230530 01:41:53.393"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.390" endtime="20230530 01:41:53.394"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 01:41:53.396" level="INFO">${payload} = {'nome': 'Alicia Martin', 'email': 'michaelalowe@example.com', 'password': '0KVvmkKgwC17', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230530 01:41:53.395" endtime="20230530 01:41:53.396"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 01:41:53.396" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230530 01:41:53.396" endtime="20230530 01:41:53.396"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230530 01:41:53.494" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"nome": "Alicia Martin", "email": "michaelalowe@example.com", "password": "0KVvmkKgwC17", "administrador": "false"}' 
 </msg>
<msg timestamp="20230530 01:41:53.494" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd3eaecb7-0d85-4312-b47b-7e06c6458e1c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '41b7322830cf522ca11211674c1df405', 'Date': 'Tue, 30 May 2023 01:41:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "PsDEjCBIF329WRqE"
} 
 </msg>
<msg timestamp="20230530 01:41:53.495" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.396" endtime="20230530 01:41:53.495"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230530 01:41:53.496" level="INFO">${user_id} = PsDEjCBIF329WRqE</msg>
<status status="PASS" starttime="20230530 01:41:53.495" endtime="20230530 01:41:53.496"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230530 01:41:53.497" level="INFO">${USER_ID} = PsDEjCBIF329WRqE</msg>
<status status="PASS" starttime="20230530 01:41:53.496" endtime="20230530 01:41:53.497"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230530 01:41:53.497" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.497" endtime="20230530 01:41:53.497"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.394" endtime="20230530 01:41:53.498"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230530 01:41:53.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.498" endtime="20230530 01:41:53.499"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230530 01:41:53.499" endtime="20230530 01:41:53.500"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.498" endtime="20230530 01:41:53.500"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230530 01:41:53.501" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230530 01:41:53.501" endtime="20230530 01:41:53.501"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.500" endtime="20230530 01:41:53.502"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230530 01:41:53.387" endtime="20230530 01:41:53.502"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230530 01:41:53.504" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230530 01:41:53.504" endtime="20230530 01:41:53.505"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.503" endtime="20230530 01:41:53.505"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230530 01:41:53.606" level="INFO">GET Request : url=https://serverest.dev/usuarios/PsDEjCBIF329WRqE 
 path_url=/usuarios/PsDEjCBIF329WRqE 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230530 01:41:53.606" level="INFO">GET Response : url=https://serverest.dev/usuarios/PsDEjCBIF329WRqE 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'af9c970a-0848-40dc-a137-2af59e88c19f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9517bae6a7252053339c7e47c3bd6087', 'Date': 'Tue, 30 May 2023 01:41:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '165'} 
 body={
    "nome": "Alicia Martin",
    "email": "michaelalowe@example.com",
    "password": "0KVvmkKgwC17",
    "administrador": "false",
    "_id": "PsDEjCBIF329WRqE"
} 
 </msg>
<msg timestamp="20230530 01:41:53.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.505" endtime="20230530 01:41:53.607"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230530 01:41:53.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.607" endtime="20230530 01:41:53.607"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.505" endtime="20230530 01:41:53.608"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230530 01:41:53.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.608" endtime="20230530 01:41:53.609"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230530 01:41:53.609" endtime="20230530 01:41:53.610"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.608" endtime="20230530 01:41:53.610"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230530 01:41:53.611" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230530 01:41:53.611" endtime="20230530 01:41:53.612"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.610" endtime="20230530 01:41:53.612"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230530 01:41:53.503" endtime="20230530 01:41:53.612"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230530 01:41:53.614" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230530 01:41:53.614" endtime="20230530 01:41:53.614"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.613" endtime="20230530 01:41:53.614"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 01:41:53.615" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230530 01:41:53.615" endtime="20230530 01:41:53.615"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230530 01:41:53.616" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230530 01:41:53.616" endtime="20230530 01:41:53.616"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230530 01:41:53.713" level="INFO">PUT Request : url=https://serverest.dev/usuarios/PsDEjCBIF329WRqE 
 path_url=/usuarios/PsDEjCBIF329WRqE 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230530 01:41:53.713" level="INFO">PUT Response : url=https://serverest.dev/usuarios/PsDEjCBIF329WRqE 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ad70d421-a2dd-4ac9-884e-d54a18062b0a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '91a61eb2d19f071f691f3742fb187640', 'Date': 'Tue, 30 May 2023 01:41:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230530 01:41:53.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.616" endtime="20230530 01:41:53.713"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230530 01:41:53.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.714" endtime="20230530 01:41:53.714"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.615" endtime="20230530 01:41:53.714"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230530 01:41:53.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.715" endtime="20230530 01:41:53.716"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230530 01:41:53.716" endtime="20230530 01:41:53.717"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.715" endtime="20230530 01:41:53.717"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230530 01:41:53.719" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230530 01:41:53.718" endtime="20230530 01:41:53.719"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.717" endtime="20230530 01:41:53.719"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230530 01:41:53.612" endtime="20230530 01:41:53.719"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230530 01:41:53.721" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230530 01:41:53.721" endtime="20230530 01:41:53.722"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.720" endtime="20230530 01:41:53.722"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230530 01:41:53.823" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/PsDEjCBIF329WRqE 
 path_url=/usuarios/PsDEjCBIF329WRqE 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230530 01:41:53.823" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/PsDEjCBIF329WRqE 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '84156ed1-7054-4783-b66f-e17598fa798f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e4386f3161db44129a34b9d51072949d', 'Date': 'Tue, 30 May 2023 01:41:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230530 01:41:53.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.723" endtime="20230530 01:41:53.824"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230530 01:41:53.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.824" endtime="20230530 01:41:53.824"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.722" endtime="20230530 01:41:53.824"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230530 01:41:53.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230530 01:41:53.825" endtime="20230530 01:41:53.826"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230530 01:41:53.826" endtime="20230530 01:41:53.827"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.825" endtime="20230530 01:41:53.827"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230530 01:41:53.828" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230530 01:41:53.827" endtime="20230530 01:41:53.828"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.827" endtime="20230530 01:41:53.828"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230530 01:41:53.720" endtime="20230530 01:41:53.828"/>
</test>
<status status="PASS" starttime="20230530 01:41:52.199" endtime="20230530 01:41:53.829"/>
</suite>
<status status="PASS" starttime="20230530 01:41:52.197" endtime="20230530 01:41:53.830"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230530 01:41:53.844" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230530 01:41:53.844" endtime="20230530 01:42:12.338"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230530 01:42:12.338" endtime="20230530 01:42:12.561"/>
</kw>
<status status="PASS" starttime="20230530 01:41:53.843" endtime="20230530 01:42:12.562"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230530 01:42:12.569" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230530 01:42:12.563" endtime="20230530 01:42:12.569"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:12.571" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230530 01:42:12.570" endtime="20230530 01:42:12.960"/>
</kw>
<status status="PASS" starttime="20230530 01:42:12.562" endtime="20230530 01:42:12.960"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:12.962" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230530 01:42:12.961" endtime="20230530 01:42:13.175"/>
</kw>
<status status="PASS" starttime="20230530 01:42:12.960" endtime="20230530 01:42:13.175"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230530 01:42:13.176" endtime="20230530 01:42:13.425"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230530 01:42:13.452" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230530 01:42:13.425" endtime="20230530 01:42:13.452"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230530 01:42:13.565" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230530 01:42:13.452" endtime="20230530 01:42:13.565"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230530 01:42:13.583" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230530 01:42:13.566" endtime="20230530 01:42:13.583"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230530 01:42:13.601" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230530 01:42:13.584" endtime="20230530 01:42:13.601"/>
</kw>
<status status="PASS" starttime="20230530 01:42:13.175" endtime="20230530 01:42:13.602"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230530 01:42:13.602" endtime="20230530 01:42:13.659"/>
</kw>
<status status="PASS" starttime="20230530 01:42:13.602" endtime="20230530 01:42:13.660"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230530 01:41:53.843" endtime="20230530 01:42:13.660"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230530 01:42:13.663" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230530 01:42:13.662" endtime="20230530 01:42:14.700"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230530 01:42:14.701" endtime="20230530 01:42:14.806"/>
</kw>
<status status="PASS" starttime="20230530 01:42:13.661" endtime="20230530 01:42:14.806"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230530 01:42:14.814" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230530 01:42:14.807" endtime="20230530 01:42:14.814"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:14.815" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230530 01:42:14.815" endtime="20230530 01:42:14.913"/>
</kw>
<status status="PASS" starttime="20230530 01:42:14.806" endtime="20230530 01:42:14.913"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230530 01:42:14.914" level="INFO">${name} = Robert Tucker</msg>
<status status="PASS" starttime="20230530 01:42:14.914" endtime="20230530 01:42:14.914"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230530 01:42:14.916" level="INFO">${email} = simmonssean@example.com</msg>
<status status="PASS" starttime="20230530 01:42:14.915" endtime="20230530 01:42:14.916"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230530 01:42:14.916" level="INFO">${password} = mrLANeGfdy8I</msg>
<status status="PASS" starttime="20230530 01:42:14.916" endtime="20230530 01:42:14.917"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:14.917" level="INFO">Typing text 'Robert Tucker' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230530 01:42:14.917" endtime="20230530 01:42:15.227"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:15.228" level="INFO">Typing text 'simmonssean@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230530 01:42:15.227" endtime="20230530 01:42:15.420"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:15.422" level="INFO">Typing text 'mrLANeGfdy8I' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230530 01:42:15.421" endtime="20230530 01:42:15.611"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:15.612" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230530 01:42:15.611" endtime="20230530 01:42:15.722"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 01:42:15.722" level="INFO">${name} = Robert Tucker</msg>
<status status="PASS" starttime="20230530 01:42:15.722" endtime="20230530 01:42:15.723"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 01:42:15.723" level="INFO">${email} = simmonssean@example.com</msg>
<status status="PASS" starttime="20230530 01:42:15.723" endtime="20230530 01:42:15.723"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230530 01:42:15.724" level="INFO">${password} = mrLANeGfdy8I</msg>
<status status="PASS" starttime="20230530 01:42:15.723" endtime="20230530 01:42:15.724"/>
</kw>
<status status="PASS" starttime="20230530 01:42:14.913" endtime="20230530 01:42:15.724"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:15.726" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230530 01:42:15.725" endtime="20230530 01:42:15.805"/>
</kw>
<status status="PASS" starttime="20230530 01:42:15.724" endtime="20230530 01:42:15.806"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230530 01:42:15.807" endtime="20230530 01:42:16.050"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230530 01:42:16.074" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230530 01:42:16.050" endtime="20230530 01:42:16.074"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230530 01:42:16.090" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230530 01:42:16.074" endtime="20230530 01:42:16.090"/>
</kw>
<status status="PASS" starttime="20230530 01:42:15.806" endtime="20230530 01:42:16.090"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230530 01:42:16.091" endtime="20230530 01:42:16.146"/>
</kw>
<status status="PASS" starttime="20230530 01:42:16.090" endtime="20230530 01:42:16.146"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230530 01:42:13.661" endtime="20230530 01:42:16.147"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230530 01:42:16.150" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230530 01:42:16.149" endtime="20230530 01:42:17.200"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230530 01:42:17.201" endtime="20230530 01:42:17.306"/>
</kw>
<status status="PASS" starttime="20230530 01:42:16.149" endtime="20230530 01:42:17.306"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230530 01:42:17.313" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230530 01:42:17.307" endtime="20230530 01:42:17.313"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:17.314" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230530 01:42:17.314" endtime="20230530 01:42:17.398"/>
</kw>
<status status="PASS" starttime="20230530 01:42:17.306" endtime="20230530 01:42:17.398"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:17.399" level="INFO">Typing text 'Robert Tucker' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230530 01:42:17.398" endtime="20230530 01:42:17.590"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:17.591" level="INFO">Typing text 'simmonssean@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230530 01:42:17.590" endtime="20230530 01:42:17.739"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:17.741" level="INFO">Typing text 'mrLANeGfdy8I' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230530 01:42:17.740" endtime="20230530 01:42:17.865"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:17.866" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230530 01:42:17.865" endtime="20230530 01:42:17.967"/>
</kw>
<status status="PASS" starttime="20230530 01:42:17.398" endtime="20230530 01:42:17.967"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230530 01:42:17.969" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230530 01:42:17.968" endtime="20230530 01:42:18.050"/>
</kw>
<status status="PASS" starttime="20230530 01:42:17.968" endtime="20230530 01:42:18.051"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230530 01:42:18.052" endtime="20230530 01:42:18.294"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230530 01:42:18.318" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230530 01:42:18.295" endtime="20230530 01:42:18.318"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230530 01:42:18.335" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230530 01:42:18.318" endtime="20230530 01:42:18.335"/>
</kw>
<status status="PASS" starttime="20230530 01:42:18.051" endtime="20230530 01:42:18.335"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230530 01:42:18.336" endtime="20230530 01:42:18.391"/>
</kw>
<status status="PASS" starttime="20230530 01:42:18.335" endtime="20230530 01:42:18.391"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230530 01:42:16.148" endtime="20230530 01:42:18.391"/>
</test>
<status status="PASS" starttime="20230530 01:41:53.834" endtime="20230530 01:42:18.392"/>
</suite>
<status status="PASS" starttime="20230530 01:41:53.831" endtime="20230530 01:42:18.395"/>
</suite>
<status status="PASS" starttime="20230530 01:41:52.172" endtime="20230530 01:42:18.397"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
