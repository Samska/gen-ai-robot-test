<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 15:35:13.579" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:35:14.544" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:35:14.543" endtime="20230601 15:35:14.544"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.543" endtime="20230601 15:35:14.544"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:35:14.692" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 15:35:14.692" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bb1eda2f-784d-4cd2-805c-b8410596f7f3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9d910b3aedd0440969d414cae4c2fd91;o=1', 'Date': 'Thu, 01 Jun 2023 15:35:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '5038'} 
 body={
    "quantidade": 23,
    "usuarios": [
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "{{nome}}",
            "email": "Wade@qa.com.br",
            "password": "75sp8gpG4_cwEJL",
            "administrador": "true",
            "_id": "eiYlTXHzMuezZ3JP"
        },
        {
            "nome": "{{nome}}",
            "email": "Hadley@qa.com.br",
            "password": "cTFFNtgOYHKCveO",
            "administrador": "true",
            "_id": "gP4GN1H0ztPPVm4T"
        },
        {
            "nome": "Jason Rodriguez",
            "email": "tracivang@example.com",
            "password": "tFOdqK1b4bdb",
            "administrador": "true",
            "_id": "hOHsnxKpiWHMWThP"
        },
        {
            "nome": "Stephen Price",
            "email": "schaeferdylan@example.com",
            "password": "8O6ksSdDZp24",
            "administrador": "true",
            "_id": "hgBx9ALEJofc7VxJ"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano_teste@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "r4MkfwAxanGM2wV0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Troy Ray",
            "email": "debbie39@example.net",
            "password": "di5JjZtW5C2X",
            "administrador": "true",
            "_id": "w6qnBS2wGoSELmzN"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "wbGsZa5vMrOWAm7a"
        },
        {
            "nome": "julia",
            "email": "contatojuliasena2@gmail.com",
            "password": "07101995",
            "administrador": "false",
            "_id": "x5hhnzNB64soj1IS"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 15:35:14.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.545" endtime="20230601 15:35:14.693"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:35:14.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.693" endtime="20230601 15:35:14.694"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.544" endtime="20230601 15:35:14.694"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:35:14.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.695" endtime="20230601 15:35:14.695"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:35:14.696" endtime="20230601 15:35:14.696"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.694" endtime="20230601 15:35:14.696"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:35:14.698" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 15:35:14.697" endtime="20230601 15:35:14.698"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.697" endtime="20230601 15:35:14.698"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:35:14.542" endtime="20230601 15:35:14.698"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:35:14.701" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:35:14.701" endtime="20230601 15:35:14.702"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.701" endtime="20230601 15:35:14.702"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 15:35:14.703" level="INFO">${name} = Felicia Morton</msg>
<status status="PASS" starttime="20230601 15:35:14.702" endtime="20230601 15:35:14.703"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 15:35:14.704" level="INFO">${email} = taylorveronica@example.org</msg>
<status status="PASS" starttime="20230601 15:35:14.703" endtime="20230601 15:35:14.704"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 15:35:14.704" level="INFO">${password} = eV8ZhSqj2FM9</msg>
<status status="PASS" starttime="20230601 15:35:14.704" endtime="20230601 15:35:14.704"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:35:14.705" level="INFO">${name} = Felicia Morton</msg>
<status status="PASS" starttime="20230601 15:35:14.704" endtime="20230601 15:35:14.705"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:35:14.705" level="INFO">${email} = taylorveronica@example.org</msg>
<status status="PASS" starttime="20230601 15:35:14.705" endtime="20230601 15:35:14.705"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:35:14.705" level="INFO">${password} = eV8ZhSqj2FM9</msg>
<status status="PASS" starttime="20230601 15:35:14.705" endtime="20230601 15:35:14.705"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.702" endtime="20230601 15:35:14.706"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:35:14.707" level="INFO">${payload} = {'nome': 'Felicia Morton', 'email': 'taylorveronica@example.org', 'password': 'eV8ZhSqj2FM9', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 15:35:14.706" endtime="20230601 15:35:14.707"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:35:14.707" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 15:35:14.707" endtime="20230601 15:35:14.707"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:35:14.781" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '119'} 
 body=b'{"nome": "Felicia Morton", "email": "taylorveronica@example.org", "password": "eV8ZhSqj2FM9", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 15:35:14.781" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e64fa9b2-edd1-4e91-905d-205702189289', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c93d895f0381cf00459c052ba5133141', 'Date': 'Thu, 01 Jun 2023 15:35:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "u5Lq4FTlwC2EKXhW"
} 
 </msg>
<msg timestamp="20230601 15:35:14.781" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.707" endtime="20230601 15:35:14.781"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 15:35:14.783" level="INFO">${user_id} = u5Lq4FTlwC2EKXhW</msg>
<status status="PASS" starttime="20230601 15:35:14.781" endtime="20230601 15:35:14.783"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 15:35:14.783" level="INFO">${USER_ID} = u5Lq4FTlwC2EKXhW</msg>
<status status="PASS" starttime="20230601 15:35:14.783" endtime="20230601 15:35:14.783"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:35:14.784" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.783" endtime="20230601 15:35:14.784"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.706" endtime="20230601 15:35:14.784"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:35:14.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.784" endtime="20230601 15:35:14.785"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:35:14.785" endtime="20230601 15:35:14.786"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.784" endtime="20230601 15:35:14.786"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:35:14.787" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 15:35:14.787" endtime="20230601 15:35:14.787"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.786" endtime="20230601 15:35:14.787"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:35:14.700" endtime="20230601 15:35:14.788"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:35:14.789" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:35:14.789" endtime="20230601 15:35:14.790"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.789" endtime="20230601 15:35:14.790"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:35:14.861" level="INFO">GET Request : url=https://serverest.dev/usuarios/u5Lq4FTlwC2EKXhW 
 path_url=/usuarios/u5Lq4FTlwC2EKXhW 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 15:35:14.862" level="INFO">GET Response : url=https://serverest.dev/usuarios/u5Lq4FTlwC2EKXhW 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fc8965ba-a8f8-4d79-b9b8-eaddd5bdeb06', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '115445de86ec9c9c53bdc6fe2bf3e032', 'Date': 'Thu, 01 Jun 2023 15:35:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '168'} 
 body={
    "nome": "Felicia Morton",
    "email": "taylorveronica@example.org",
    "password": "eV8ZhSqj2FM9",
    "administrador": "false",
    "_id": "u5Lq4FTlwC2EKXhW"
} 
 </msg>
<msg timestamp="20230601 15:35:14.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.790" endtime="20230601 15:35:14.862"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:35:14.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.862" endtime="20230601 15:35:14.863"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.790" endtime="20230601 15:35:14.863"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:35:14.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.863" endtime="20230601 15:35:14.864"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:35:14.864" endtime="20230601 15:35:14.865"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.863" endtime="20230601 15:35:14.865"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:35:14.866" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 15:35:14.866" endtime="20230601 15:35:14.866"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.865" endtime="20230601 15:35:14.867"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:35:14.788" endtime="20230601 15:35:14.867"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:35:14.868" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:35:14.868" endtime="20230601 15:35:14.869"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.868" endtime="20230601 15:35:14.869"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:35:14.870" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 15:35:14.869" endtime="20230601 15:35:14.870"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 15:35:14.870" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 15:35:14.870" endtime="20230601 15:35:14.870"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:35:14.947" level="INFO">PUT Request : url=https://serverest.dev/usuarios/u5Lq4FTlwC2EKXhW 
 path_url=/usuarios/u5Lq4FTlwC2EKXhW 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 15:35:14.947" level="INFO">PUT Response : url=https://serverest.dev/usuarios/u5Lq4FTlwC2EKXhW 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '07a7f0f5-71a5-4084-b376-4457898a0236', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a0b48b8c8c604f7017f13539c2bd6ede', 'Date': 'Thu, 01 Jun 2023 15:35:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 15:35:14.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.870" endtime="20230601 15:35:14.947"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:35:14.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.948" endtime="20230601 15:35:14.948"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.869" endtime="20230601 15:35:14.948"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:35:14.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.949" endtime="20230601 15:35:14.950"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:35:14.950" endtime="20230601 15:35:14.950"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.948" endtime="20230601 15:35:14.951"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:35:14.953" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 15:35:14.951" endtime="20230601 15:35:14.953"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.951" endtime="20230601 15:35:14.953"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:35:14.867" endtime="20230601 15:35:14.954"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 15:35:14.959" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 15:35:14.959" endtime="20230601 15:35:14.960"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.956" endtime="20230601 15:35:14.960"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 15:35:15.035" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/u5Lq4FTlwC2EKXhW 
 path_url=/usuarios/u5Lq4FTlwC2EKXhW 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 15:35:15.035" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/u5Lq4FTlwC2EKXhW 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0b5c39e0-8bfd-436b-bec4-c4accb5ca327', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fba9043159719e919643b491f00e3983', 'Date': 'Thu, 01 Jun 2023 15:35:15 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 15:35:15.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:14.961" endtime="20230601 15:35:15.035"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 15:35:15.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 15:35:15.035" endtime="20230601 15:35:15.036"/>
</kw>
<status status="PASS" starttime="20230601 15:35:14.960" endtime="20230601 15:35:15.036"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 15:35:15.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 15:35:15.037" endtime="20230601 15:35:15.038"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 15:35:15.038" endtime="20230601 15:35:15.039"/>
</kw>
<status status="PASS" starttime="20230601 15:35:15.036" endtime="20230601 15:35:15.040"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 15:35:15.041" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 15:35:15.040" endtime="20230601 15:35:15.041"/>
</kw>
<status status="PASS" starttime="20230601 15:35:15.040" endtime="20230601 15:35:15.041"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 15:35:14.955" endtime="20230601 15:35:15.042"/>
</test>
<status status="PASS" starttime="20230601 15:35:13.604" endtime="20230601 15:35:15.042"/>
</suite>
<status status="PASS" starttime="20230601 15:35:13.602" endtime="20230601 15:35:15.044"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 15:35:15.056" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 15:35:15.055" endtime="20230601 15:35:18.498"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 15:35:18.498" endtime="20230601 15:35:18.605"/>
</kw>
<status status="PASS" starttime="20230601 15:35:15.055" endtime="20230601 15:35:18.605"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 15:35:18.613" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 15:35:18.606" endtime="20230601 15:35:18.613"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:18.614" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 15:35:18.613" endtime="20230601 15:35:18.736"/>
</kw>
<status status="PASS" starttime="20230601 15:35:18.605" endtime="20230601 15:35:18.736"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:18.738" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 15:35:18.737" endtime="20230601 15:35:18.827"/>
</kw>
<status status="PASS" starttime="20230601 15:35:18.736" endtime="20230601 15:35:18.827"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 15:35:18.828" endtime="20230601 15:35:19.279"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 15:35:19.305" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 15:35:19.280" endtime="20230601 15:35:19.306"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:35:19.327" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 15:35:19.306" endtime="20230601 15:35:19.327"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:35:19.344" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 15:35:19.328" endtime="20230601 15:35:19.344"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:35:19.361" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 15:35:19.344" endtime="20230601 15:35:19.361"/>
</kw>
<status status="PASS" starttime="20230601 15:35:18.828" endtime="20230601 15:35:19.361"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 15:35:19.362" endtime="20230601 15:35:19.418"/>
</kw>
<status status="PASS" starttime="20230601 15:35:19.361" endtime="20230601 15:35:19.418"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 15:35:15.054" endtime="20230601 15:35:19.418"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 15:35:19.421" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 15:35:19.420" endtime="20230601 15:35:20.681"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 15:35:20.681" endtime="20230601 15:35:20.794"/>
</kw>
<status status="PASS" starttime="20230601 15:35:19.419" endtime="20230601 15:35:20.794"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 15:35:20.802" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 15:35:20.796" endtime="20230601 15:35:20.802"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:20.803" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 15:35:20.802" endtime="20230601 15:35:20.898"/>
</kw>
<status status="PASS" starttime="20230601 15:35:20.795" endtime="20230601 15:35:20.899"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 15:35:20.900" level="INFO">${name} = Cheyenne Knox</msg>
<status status="PASS" starttime="20230601 15:35:20.899" endtime="20230601 15:35:20.900"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 15:35:20.901" level="INFO">${email} = connierodriguez@example.org</msg>
<status status="PASS" starttime="20230601 15:35:20.900" endtime="20230601 15:35:20.901"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 15:35:20.901" level="INFO">${password} = 2XpL75uHis1Y</msg>
<status status="PASS" starttime="20230601 15:35:20.901" endtime="20230601 15:35:20.901"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:20.902" level="INFO">Typing text 'Cheyenne Knox' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 15:35:20.902" endtime="20230601 15:35:21.051"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:21.052" level="INFO">Typing text 'connierodriguez@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 15:35:21.051" endtime="20230601 15:35:21.195"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:21.196" level="INFO">Typing text '2XpL75uHis1Y' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 15:35:21.195" endtime="20230601 15:35:21.311"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:21.312" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 15:35:21.311" endtime="20230601 15:35:21.402"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:35:21.403" level="INFO">${name} = Cheyenne Knox</msg>
<status status="PASS" starttime="20230601 15:35:21.403" endtime="20230601 15:35:21.403"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:35:21.404" level="INFO">${email} = connierodriguez@example.org</msg>
<status status="PASS" starttime="20230601 15:35:21.403" endtime="20230601 15:35:21.404"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 15:35:21.404" level="INFO">${password} = 2XpL75uHis1Y</msg>
<status status="PASS" starttime="20230601 15:35:21.404" endtime="20230601 15:35:21.404"/>
</kw>
<status status="PASS" starttime="20230601 15:35:20.899" endtime="20230601 15:35:21.404"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:21.405" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 15:35:21.405" endtime="20230601 15:35:21.480"/>
</kw>
<status status="PASS" starttime="20230601 15:35:21.404" endtime="20230601 15:35:21.481"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 15:35:21.481" endtime="20230601 15:35:21.721"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 15:35:21.743" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 15:35:21.721" endtime="20230601 15:35:21.744"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:35:21.760" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 15:35:21.744" endtime="20230601 15:35:21.760"/>
</kw>
<status status="PASS" starttime="20230601 15:35:21.481" endtime="20230601 15:35:21.761"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 15:35:21.762" endtime="20230601 15:35:21.817"/>
</kw>
<status status="PASS" starttime="20230601 15:35:21.761" endtime="20230601 15:35:21.817"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 15:35:19.419" endtime="20230601 15:35:21.817"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 15:35:21.820" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 15:35:21.819" endtime="20230601 15:35:23.040"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 15:35:23.041" endtime="20230601 15:35:23.145"/>
</kw>
<status status="PASS" starttime="20230601 15:35:21.818" endtime="20230601 15:35:23.146"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 15:35:23.152" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 15:35:23.146" endtime="20230601 15:35:23.152"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:23.154" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 15:35:23.153" endtime="20230601 15:35:23.257"/>
</kw>
<status status="PASS" starttime="20230601 15:35:23.146" endtime="20230601 15:35:23.257"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:23.259" level="INFO">Typing text 'Cheyenne Knox' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 15:35:23.258" endtime="20230601 15:35:23.408"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:23.409" level="INFO">Typing text 'connierodriguez@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 15:35:23.409" endtime="20230601 15:35:23.569"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:23.570" level="INFO">Typing text '2XpL75uHis1Y' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 15:35:23.569" endtime="20230601 15:35:23.691"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:23.692" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 15:35:23.691" endtime="20230601 15:35:23.789"/>
</kw>
<status status="PASS" starttime="20230601 15:35:23.257" endtime="20230601 15:35:23.789"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 15:35:23.791" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 15:35:23.790" endtime="20230601 15:35:23.864"/>
</kw>
<status status="PASS" starttime="20230601 15:35:23.790" endtime="20230601 15:35:23.864"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 15:35:23.865" endtime="20230601 15:35:24.107"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 15:35:24.139" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 15:35:24.107" endtime="20230601 15:35:24.139"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 15:35:24.156" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 15:35:24.140" endtime="20230601 15:35:24.156"/>
</kw>
<status status="PASS" starttime="20230601 15:35:23.864" endtime="20230601 15:35:24.157"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 15:35:24.157" endtime="20230601 15:35:24.214"/>
</kw>
<status status="PASS" starttime="20230601 15:35:24.157" endtime="20230601 15:35:24.214"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230601 15:35:21.818" endtime="20230601 15:35:24.214"/>
</test>
<status status="PASS" starttime="20230601 15:35:15.046" endtime="20230601 15:35:24.216"/>
</suite>
<status status="PASS" starttime="20230601 15:35:15.044" endtime="20230601 15:35:24.220"/>
</suite>
<status status="PASS" starttime="20230601 15:35:13.580" endtime="20230601 15:35:24.222"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
