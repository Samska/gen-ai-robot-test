<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.8.17 on linux)" generated="20230711 01:02:26.989" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230711 01:02:27.574" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230711 01:02:27.573" endtime="20230711 01:02:27.574"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.573" endtime="20230711 01:02:27.574"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230711 01:02:27.686" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230711 01:02:27.687" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9cef1408-dd9a-4405-919d-e18655e880c5', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e0180cbddad52c373e477527cf10488b', 'Date': 'Tue, 11 Jul 2023 01:02:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '45702'} 
 body={
    "quantidade": 213,
    "usuarios": [
        {
            "email": "ouida.ryan@hotmail.com",
            "password": "jg8510m1nb",
            "administrador": "true",
            "nome": "Marcelene Nolan",
            "_id": "02Y2qhfjD5IpJFLF"
        },
        {
            "nome": "fulano do teste",
            "email": "nefp@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "0GMMvRReKIUj0SwG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "oecae@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "0q8ax03bQOeUUBjJ"
        },
        {
            "email": "gertrud.goyette@yahoo.com",
            "password": "x4ls5yooc9u",
            "administrador": "true",
            "nome": "Ardath Windler",
            "_id": "0tKCqziKtsTHoI8Z"
        },
        {
            "email": "darwin.kovacek@yahoo.com",
            "password": "hwdoj6x94bs",
            "administrador": "true",
            "nome": "Mr. Sean DuBuque",
            "_id": "19haDBYD0Xb1VbOS"
        },
        {
            "email": "linn.kovacek@yahoo.com",
            "password": "mbe135pl",
            "administrador": "true",
            "nome": "Mr. Jessie Reynolds",
            "_id": "1OnzQF2K4FWlw5qi"
        },
        {
            "nome": "Rafael",
            "email": "rafael9@qa.com.br",
            "password": "teste",
            "administrador": "false",
            "_id": "1eXT4a1TDzcTqbJ2"
        },
        {
            "nome": "Fulano da Silva",
            "email": "2beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "2zPFNomflOXdRZGy"
        },
        {
            "email": "luz.sipes@gmail.com",
            "password": "92h5gcpso63v",
            "administrador": "true",
            "nome": "Dirk Turcotte",
            "_id": "3S5mIks30sSWe4uZ"
        },
        {
            "nome": "Fabrícia",
            "email": "Fabrícia@qa.com.br",
            "password": "123456",
            "administrador": "false",
            "_id": "3q1nIEIDOvjJOPGu"
        },
        {
            "nome": "Ian",
            "email": "Ian@qa.com.br",
            "password": "123456",
            "administrador": "true",
            "_id": "40T5exxsGBwZeDyw"
        },
        {
            "email": "sherwood.ferry@yahoo.com",
            "password": "mp8xgtko9r",
            "administrador": "true",
            "nome": "Garland Spencer III",
            "_id": "4DBruIjp7iGDwTuJ"
        },
        {
            "nome": "teste da Silva",
            "email": "Blanche23@yahoo.com",
            "password": "teste",
            "administrador": "false",
            "_id": "4NjRZhcqxry8sSRf"
        },
        {
            "email": "lourdes.feest@gmail.com",
            "password": "pqxg62mg3fkwwl",
            "administrador": "true",
            "nome": "Sharlene Roob DVM",
            "_id": "4ZL959X8Sr8n7eSl"
        },
        {
            "nome": "Testador1",
            "email": "testador01@serverest.com",
            "password": "123",
            "administrador": "true",
            "_id": "4de7MbwBXwW300wF"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ecraw@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "4sX2kB9vlBIp7eD5"
        },
        {
            "email": "ardelle.herman@yahoo.com",
            "password": "j85frphg",
            "administrador": "true",
            "nome": "Mr. Soraya Hickle",
            "_id": "50wF4gQsTQAd9Kdj"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "5MEUkt4xEf6d4sdw"
        },
        {
            "nome": "fulano do teste",
            "email": "awgd@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5a6ba3TGcoyxSGCS"
        },
        {
            "nome": "Marli",
            "email": "Marli@qa.com.br",
            "password": "123456",
            "administrador": "false",
            "_id": "6YI3X1kQeibKmuGk"
        },
        {
            "email": "quintin.hirthe@gmail.com",
            "password": "1m0ktv5s3",
            "administrador": "true",
            "nome": "Jerome Maggio",
            "_id": "6bdleI60UJqw09HR"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ahvo@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "6d2mVae72N4GvJaU"
        },
        {
            "email": "tomoko.pfeffer@yahoo.com",
            "password": "k5y0j3ss",
            "administrador": "true",
            "nome": "Assunta Steuber",
            "_id": "6l18CuNKxcSpvrEB"
        },
        {
            "nome": "Fulano da silva",
            "email": "bhxu@qa.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "6oc1qr5V2PmAYOOu"
        },
        {
            "nome": "Eu QA teste",
            "email": "Qa@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "7Dnu8iYzoEsAMS2F"
        },
        {
            "email": "bryant.pfeffer@yahoo.com",
            "password": "9aq63o308ppc",
            "administrador": "true",
            "nome": "Martha Romaguera",
            "_id": "7JZcNrRq3LWWmGAk"
        },
        {
            "nome": "Fulano da Silva",
            "email": "esers@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "7L3D1KdkUEsE0r4V"
        },
        {
            "email": "augustina.padberg@hotmail.com",
            "password": "sdhorfn3ukw2",
            "administrador": "true",
            "nome": "Dr. Mamie Rodriguez",
            "_id": "7NdkZZ0zn32NRhRm"
        },
        {
            "email": "jaime.dickinson@hotmail.com",
            "password": "yvmnio6ijem",
            "administrador": "true",
            "nome": "Kristeen Walker",
            "_id": "7Puv1zJ0g6HjQQjQ"
        },
        {
            "email": "mabelle.gleason@yahoo.com",
            "password": "j72olclohf1",
            "administrador": "true",
            "nome": "See Goldner",
            "_id": "7bZ3hTN68uGrWZ8g"
        },
        {
            "email": "hayden.fisher@gmail.com",
            "password": "h86utl0y189yt7c",
            "administrador": "true",
            "nome": "Shaun Renner",
            "_id": "7moM4OySCBDMCZiq"
        },
        {
            "email": "patrick.dibbert@yahoo.com",
            "password": "7qrkfqqipnjgw",
            "administrador": "true",
            "nome": "Kerry Mohr",
            "_id": "8E1OljX0HEnzlQkR"
        },
        {
            "email": "jenell.becker@yahoo.com",
            "password": "8hxjkylu0vzw8",
            "administrador": "true",
            "nome": "Kristopher Parker",
            "_id": "8Lo26Z9WDsn7opkp"
        },
        {
            "email": "emil.oconner@hotmail.com",
            "password": "6piivrnnhkwa",
            "administrador": "true",
            "nome": "Omar Sanford",
            "_id": "8QRoJqcoItoH63zX"
        },
        {
            "nome": "Fulano da Silva",
            "email": "esrwl@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "8xnKSOx6HPWofntp"
        },
        {
            "nome": "Fausto da Silva",
            "email": "faustosillva9@qa.com.br",
            "password": "band",
            "administrador": "true",
            "_id": "9MjYp1co4zmbGQjK"
        },
        {
            "email": "clotilde.russel@gmail.com",
            "password": "bzb1y8321",
            "administrador": "true",
            "nome": "Miss Stephen Pfeffer",
            "_id": "9VbTQJPnnfekQM0B"
        },
        {
            "nome": "Fulana da Silva",
            "email": "Nola28@yahoo.com",
            "password": "teste",
            "administrador": "true",
            "_id": "AZQEYoKdFGaWeBdY"
        },
        {
            "email": "tena.kilback@yahoo.com",
            "password": "4bxr8zowsbukv4e",
            "administrador": "true",
            "nome": "Miss Arnette Durgan",
            "_id": "AsQPBGjmkbmZiLdg"
        },
        {
            "email": "leland.lowe@gmail.com",
            "password": "zswae6l7",
            "administrador": "true",
            "nome": "Mr. Wilburn Berge",
            "_id": "AvvkbI0g2cMFfqXW"
        },
        {
            "nome": "Beatriz",
            "email": "johnlenon1@qa.com.br",
            "password": "123456",
            "administrador": "true",
            "_id": "AxUd11DRcgs5n3TK"
        },
        {
            "nome": "Fulano da Silva",
            "email": "inqf@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "B5TnpUlo5ra9tTTC"
        },
        {
            "nome": "Fulano da silva",
            "email": "pvbp@qa.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "BBPtCpGCYr6PLSoq"
        },
        {
            "nome": "Nozinbra",
            "email": "nozinbra@gmail.com",
            "password": "123",
            "administrador": "false",
            "_id": "BHH3kd3O984b3GdM"
        },
        {
            "nome": "Fulano da silva",
            "email": "gyea@qa.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "ByzTqZnyZGnxxPni"
        },
        {
            "nome": "fulano do teste",
            "email": "kpqh@email.com",
            "password": "1234",
            "administrador": "true",
            "_id": "CEmNplxBKKoLsWLn"
        },
        {
            "nome": "Rafael",
            "email": "rafael12@qa.com.br... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230711 01:02:27.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.575" endtime="20230711 01:02:27.687"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230711 01:02:27.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.687" endtime="20230711 01:02:27.688"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.574" endtime="20230711 01:02:27.688"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230711 01:02:27.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.688" endtime="20230711 01:02:27.689"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230711 01:02:27.689" endtime="20230711 01:02:27.690"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.688" endtime="20230711 01:02:27.690"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230711 01:02:27.691" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230711 01:02:27.691" endtime="20230711 01:02:27.692"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.690" endtime="20230711 01:02:27.692"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230711 01:02:27.572" endtime="20230711 01:02:27.692"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230711 01:02:27.693" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230711 01:02:27.693" endtime="20230711 01:02:27.693"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.693" endtime="20230711 01:02:27.694"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230711 01:02:27.694" level="INFO">${name} = Taylor Boone</msg>
<status status="PASS" starttime="20230711 01:02:27.694" endtime="20230711 01:02:27.694"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230711 01:02:27.695" level="INFO">${email} = isantiago@example.org</msg>
<status status="PASS" starttime="20230711 01:02:27.695" endtime="20230711 01:02:27.695"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230711 01:02:27.696" level="INFO">${password} = 9s8f5lTuWiUS</msg>
<status status="PASS" starttime="20230711 01:02:27.695" endtime="20230711 01:02:27.696"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 01:02:27.696" level="INFO">${name} = Taylor Boone</msg>
<status status="PASS" starttime="20230711 01:02:27.696" endtime="20230711 01:02:27.696"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 01:02:27.696" level="INFO">${email} = isantiago@example.org</msg>
<status status="PASS" starttime="20230711 01:02:27.696" endtime="20230711 01:02:27.696"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 01:02:27.697" level="INFO">${password} = 9s8f5lTuWiUS</msg>
<status status="PASS" starttime="20230711 01:02:27.696" endtime="20230711 01:02:27.697"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.694" endtime="20230711 01:02:27.697"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230711 01:02:27.698" level="INFO">${payload} = {'nome': 'Taylor Boone', 'email': 'isantiago@example.org', 'password': '9s8f5lTuWiUS', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230711 01:02:27.697" endtime="20230711 01:02:27.698"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230711 01:02:27.698" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230711 01:02:27.698" endtime="20230711 01:02:27.698"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230711 01:02:27.765" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Taylor Boone", "email": "isantiago@example.org", "password": "9s8f5lTuWiUS", "administrador": "false"}' 
 </msg>
<msg timestamp="20230711 01:02:27.765" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '67127341-9693-4aa9-8feb-dcf1cfc5c8f8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '85642c1be293ce97eb151a24d1a7b9af', 'Date': 'Tue, 11 Jul 2023 01:02:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "vpm46Y3wPY5bHy3o"
} 
 </msg>
<msg timestamp="20230711 01:02:27.766" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.698" endtime="20230711 01:02:27.766"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 01:02:27.767" level="INFO">${user_id} = vpm46Y3wPY5bHy3o</msg>
<status status="PASS" starttime="20230711 01:02:27.766" endtime="20230711 01:02:27.767"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230711 01:02:27.767" level="INFO">${USER_ID} = vpm46Y3wPY5bHy3o</msg>
<status status="PASS" starttime="20230711 01:02:27.767" endtime="20230711 01:02:27.767"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230711 01:02:27.768" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.767" endtime="20230711 01:02:27.768"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.697" endtime="20230711 01:02:27.768"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230711 01:02:27.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.769" endtime="20230711 01:02:27.770"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230711 01:02:27.770" endtime="20230711 01:02:27.770"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.768" endtime="20230711 01:02:27.771"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230711 01:02:27.771" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230711 01:02:27.771" endtime="20230711 01:02:27.772"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.771" endtime="20230711 01:02:27.772"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230711 01:02:27.692" endtime="20230711 01:02:27.772"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230711 01:02:27.773" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230711 01:02:27.773" endtime="20230711 01:02:27.773"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.773" endtime="20230711 01:02:27.774"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230711 01:02:27.840" level="INFO">GET Request : url=https://serverest.dev/usuarios/vpm46Y3wPY5bHy3o 
 path_url=/usuarios/vpm46Y3wPY5bHy3o 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230711 01:02:27.840" level="INFO">GET Response : url=https://serverest.dev/usuarios/vpm46Y3wPY5bHy3o 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3a767099-91e1-4afc-8bb7-509ccc09e23e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd46f6d1c5a1147cfbf9435e770ae6755', 'Date': 'Tue, 11 Jul 2023 01:02:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Taylor Boone",
    "email": "isantiago@example.org",
    "password": "9s8f5lTuWiUS",
    "administrador": "false",
    "_id": "vpm46Y3wPY5bHy3o"
} 
 </msg>
<msg timestamp="20230711 01:02:27.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.774" endtime="20230711 01:02:27.841"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230711 01:02:27.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.841" endtime="20230711 01:02:27.841"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.774" endtime="20230711 01:02:27.841"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230711 01:02:27.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.842" endtime="20230711 01:02:27.842"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230711 01:02:27.843" endtime="20230711 01:02:27.843"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.841" endtime="20230711 01:02:27.843"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230711 01:02:27.844" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230711 01:02:27.844" endtime="20230711 01:02:27.844"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.843" endtime="20230711 01:02:27.844"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230711 01:02:27.772" endtime="20230711 01:02:27.844"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230711 01:02:27.846" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230711 01:02:27.846" endtime="20230711 01:02:27.846"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.845" endtime="20230711 01:02:27.846"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230711 01:02:27.847" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230711 01:02:27.846" endtime="20230711 01:02:27.847"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230711 01:02:27.847" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230711 01:02:27.847" endtime="20230711 01:02:27.847"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230711 01:02:27.914" level="INFO">PUT Request : url=https://serverest.dev/usuarios/vpm46Y3wPY5bHy3o 
 path_url=/usuarios/vpm46Y3wPY5bHy3o 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230711 01:02:27.915" level="INFO">PUT Response : url=https://serverest.dev/usuarios/vpm46Y3wPY5bHy3o 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e2526807-8808-4990-a532-56644425e987', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6322cbe04cb82daf1eb508ac8d53d056', 'Date': 'Tue, 11 Jul 2023 01:02:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230711 01:02:27.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.847" endtime="20230711 01:02:27.915"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230711 01:02:27.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.915" endtime="20230711 01:02:27.915"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.846" endtime="20230711 01:02:27.915"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230711 01:02:27.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.916" endtime="20230711 01:02:27.917"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230711 01:02:27.917" endtime="20230711 01:02:27.918"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.916" endtime="20230711 01:02:27.918"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230711 01:02:27.919" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230711 01:02:27.918" endtime="20230711 01:02:27.919"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.918" endtime="20230711 01:02:27.919"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230711 01:02:27.845" endtime="20230711 01:02:27.919"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230711 01:02:27.921" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230711 01:02:27.920" endtime="20230711 01:02:27.921"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.920" endtime="20230711 01:02:27.921"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230711 01:02:27.988" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/vpm46Y3wPY5bHy3o 
 path_url=/usuarios/vpm46Y3wPY5bHy3o 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230711 01:02:27.988" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/vpm46Y3wPY5bHy3o 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ccc260c0-e61b-45fe-9d54-206a0c6d9910', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f91257d93debc5afd3a45dfd13696ce1', 'Date': 'Tue, 11 Jul 2023 01:02:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230711 01:02:27.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.921" endtime="20230711 01:02:27.989"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230711 01:02:27.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.989" endtime="20230711 01:02:27.989"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.921" endtime="20230711 01:02:27.989"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230711 01:02:27.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 01:02:27.990" endtime="20230711 01:02:27.991"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230711 01:02:27.991" endtime="20230711 01:02:27.992"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.989" endtime="20230711 01:02:27.992"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230711 01:02:27.993" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230711 01:02:27.992" endtime="20230711 01:02:27.993"/>
</kw>
<status status="PASS" starttime="20230711 01:02:27.992" endtime="20230711 01:02:27.993"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230711 01:02:27.920" endtime="20230711 01:02:27.993"/>
</test>
<status status="PASS" starttime="20230711 01:02:27.012" endtime="20230711 01:02:27.994"/>
</suite>
<status status="PASS" starttime="20230711 01:02:27.010" endtime="20230711 01:02:27.995"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230711 01:02:28.007" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230711 01:02:28.006" endtime="20230711 01:02:30.138"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230711 01:02:30.139" endtime="20230711 01:02:30.288"/>
</kw>
<status status="PASS" starttime="20230711 01:02:28.006" endtime="20230711 01:02:30.288"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230711 01:02:30.294" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230711 01:02:30.289" endtime="20230711 01:02:30.295"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:30.296" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230711 01:02:30.295" endtime="20230711 01:02:30.372"/>
</kw>
<status status="PASS" starttime="20230711 01:02:30.289" endtime="20230711 01:02:30.372"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:30.373" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230711 01:02:30.373" endtime="20230711 01:02:30.437"/>
</kw>
<status status="PASS" starttime="20230711 01:02:30.372" endtime="20230711 01:02:30.437"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230711 01:02:30.438" endtime="20230711 01:02:30.674"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230711 01:02:30.692" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230711 01:02:30.674" endtime="20230711 01:02:30.692"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230711 01:02:30.709" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230711 01:02:30.692" endtime="20230711 01:02:30.709"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230711 01:02:30.722" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230711 01:02:30.709" endtime="20230711 01:02:30.722"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230711 01:02:30.734" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230711 01:02:30.722" endtime="20230711 01:02:30.734"/>
</kw>
<status status="PASS" starttime="20230711 01:02:30.437" endtime="20230711 01:02:30.734"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230711 01:02:30.735" endtime="20230711 01:02:30.792"/>
</kw>
<status status="PASS" starttime="20230711 01:02:30.735" endtime="20230711 01:02:30.792"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230711 01:02:28.005" endtime="20230711 01:02:30.792"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230711 01:02:30.795" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230711 01:02:30.794" endtime="20230711 01:02:32.116"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230711 01:02:32.117" endtime="20230711 01:02:32.247"/>
</kw>
<status status="PASS" starttime="20230711 01:02:30.794" endtime="20230711 01:02:32.247"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230711 01:02:32.253" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230711 01:02:32.248" endtime="20230711 01:02:32.253"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:32.253" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230711 01:02:32.253" endtime="20230711 01:02:32.305"/>
</kw>
<status status="PASS" starttime="20230711 01:02:32.247" endtime="20230711 01:02:32.306"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20230711 01:02:32.307" level="INFO">${name} = Michael Montes</msg>
<status status="PASS" starttime="20230711 01:02:32.306" endtime="20230711 01:02:32.307"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230711 01:02:32.307" level="INFO">${email} = pamela13@example.com</msg>
<status status="PASS" starttime="20230711 01:02:32.307" endtime="20230711 01:02:32.307"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230711 01:02:32.308" level="INFO">${password} = 3AsPrD9wlJGo</msg>
<status status="PASS" starttime="20230711 01:02:32.308" endtime="20230711 01:02:32.308"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:32.309" level="INFO">Typing text 'Michael Montes' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230711 01:02:32.308" endtime="20230711 01:02:32.429"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:32.430" level="INFO">Typing text 'pamela13@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230711 01:02:32.429" endtime="20230711 01:02:32.543"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:32.544" level="INFO">Typing text '3AsPrD9wlJGo' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230711 01:02:32.543" endtime="20230711 01:02:32.641"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:32.642" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230711 01:02:32.642" endtime="20230711 01:02:32.714"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 01:02:32.715" level="INFO">${name} = Michael Montes</msg>
<status status="PASS" starttime="20230711 01:02:32.715" endtime="20230711 01:02:32.715"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 01:02:32.716" level="INFO">${email} = pamela13@example.com</msg>
<status status="PASS" starttime="20230711 01:02:32.715" endtime="20230711 01:02:32.716"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 01:02:32.716" level="INFO">${password} = 3AsPrD9wlJGo</msg>
<status status="PASS" starttime="20230711 01:02:32.716" endtime="20230711 01:02:32.716"/>
</kw>
<status status="PASS" starttime="20230711 01:02:32.306" endtime="20230711 01:02:32.716"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:32.717" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230711 01:02:32.716" endtime="20230711 01:02:32.774"/>
</kw>
<status status="PASS" starttime="20230711 01:02:32.716" endtime="20230711 01:02:32.775"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230711 01:02:32.775" endtime="20230711 01:02:33.011"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230711 01:02:33.029" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230711 01:02:33.011" endtime="20230711 01:02:33.029"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230711 01:02:33.041" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230711 01:02:33.029" endtime="20230711 01:02:33.042"/>
</kw>
<status status="PASS" starttime="20230711 01:02:32.775" endtime="20230711 01:02:33.042"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230711 01:02:33.042" endtime="20230711 01:02:33.097"/>
</kw>
<status status="PASS" starttime="20230711 01:02:33.042" endtime="20230711 01:02:33.097"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230711 01:02:30.793" endtime="20230711 01:02:33.097"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230711 01:02:33.100" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230711 01:02:33.099" endtime="20230711 01:02:34.435"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230711 01:02:34.435" endtime="20230711 01:02:34.565"/>
</kw>
<status status="PASS" starttime="20230711 01:02:33.099" endtime="20230711 01:02:34.565"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230711 01:02:34.571" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230711 01:02:34.566" endtime="20230711 01:02:34.571"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:34.572" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230711 01:02:34.572" endtime="20230711 01:02:34.626"/>
</kw>
<status status="PASS" starttime="20230711 01:02:34.566" endtime="20230711 01:02:34.626"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:34.627" level="INFO">Typing text 'Michael Montes' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230711 01:02:34.627" endtime="20230711 01:02:34.741"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:34.742" level="INFO">Typing text 'pamela13@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230711 01:02:34.741" endtime="20230711 01:02:34.851"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:34.852" level="INFO">Typing text '3AsPrD9wlJGo' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230711 01:02:34.851" endtime="20230711 01:02:34.950"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:34.951" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230711 01:02:34.950" endtime="20230711 01:02:35.024"/>
</kw>
<status status="PASS" starttime="20230711 01:02:34.626" endtime="20230711 01:02:35.024"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230711 01:02:35.026" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230711 01:02:35.025" endtime="20230711 01:02:35.084"/>
</kw>
<status status="PASS" starttime="20230711 01:02:35.025" endtime="20230711 01:02:35.084"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230711 01:02:35.085" endtime="20230711 01:02:35.321"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230711 01:02:35.339" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230711 01:02:35.321" endtime="20230711 01:02:35.339"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230711 01:02:35.353" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230711 01:02:35.340" endtime="20230711 01:02:35.353"/>
</kw>
<status status="PASS" starttime="20230711 01:02:35.084" endtime="20230711 01:02:35.353"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230711 01:02:35.354" endtime="20230711 01:02:35.408"/>
</kw>
<status status="PASS" starttime="20230711 01:02:35.353" endtime="20230711 01:02:35.408"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230711 01:02:33.098" endtime="20230711 01:02:35.408"/>
</test>
<status status="PASS" starttime="20230711 01:02:27.997" endtime="20230711 01:02:35.409"/>
</suite>
<status status="PASS" starttime="20230711 01:02:27.996" endtime="20230711 01:02:35.411"/>
</suite>
<status status="PASS" starttime="20230711 01:02:26.990" endtime="20230711 01:02:35.412"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
