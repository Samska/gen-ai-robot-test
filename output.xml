<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.8.17 on linux)" generated="20230614 01:08:19.162" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 01:08:19.661" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 01:08:19.661" endtime="20230614 01:08:19.661"/>
</kw>
<status status="PASS" starttime="20230614 01:08:19.660" endtime="20230614 01:08:19.661"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 01:08:19.912" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230614 01:08:19.912" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '14b64de2-c344-4a57-a48c-6f6d9e87bba0', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bd70540fe32eadabe1deca691ba12ba9;o=1', 'Date': 'Wed, 14 Jun 2023 01:08:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '29162'} 
 body={
    "quantidade": 135,
    "usuarios": [
        {
            "nome": "Nome Teste Maio 2023",
            "email": "1686701091081@mail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "03j6tKb4ugWor99C"
        },
        {
            "nome": "Rosemarie Barrows",
            "email": "Ewald_Rogahn@yahoo.com",
            "password": "MnNI1xyNwO4Du63",
            "administrador": "false",
            "_id": "0ZjCQSmbAHwxPMUX"
        },
        {
            "nome": "Nome Teste Maio 2023",
            "email": "1686701485653@mail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0ibikYPXOMVfkAnE"
        },
        {
            "nome": "Nome Teste Maio 2023",
            "email": "1686691831262@mail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "14g8Z3k5J89zWhPD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "Quentin_Dickinson@hotmail.com",
            "password": "C0nnect123",
            "administrador": "false",
            "_id": "1F98raNUfbDT9m4C"
        },
        {
            "nome": "teste editar",
            "email": "beltran@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "2VSBmf5eaU2kDbD3"
        },
        {
            "nome": "Ana",
            "email": "obie.bednar@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "2oWXQ0934pDsaKAn"
        },
        {
            "nome": "Nome",
            "email": "1686702354178@mail.com",
            "password": "Qa@12345",
            "administrador": "true",
            "_id": "3DCEbUb2dtvy1315"
        },
        {
            "nome": "Nome Teste Maio 2023",
            "email": "1686702485520@mail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "3Y9z7Zvekh1FIy5C"
        },
        {
            "nome": "Lucas",
            "email": "lucasbramalhor@gmail.com",
            "password": "123",
            "administrador": "true",
            "_id": "4hxuQKAChs5r9iR9"
        },
        {
            "nome": "Vera verao",
            "email": "donald25@example.net",
            "password": "123456",
            "administrador": "true",
            "_id": "5guk1XcIHQl5p2i1"
        },
        {
            "nome": "Lloyd Bosco",
            "email": "jermain.balistreri21@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "5jP0K9g0fC2z47L2"
        },
        {
            "nome": "Nome",
            "email": "1686693632339@mail.com",
            "password": "Qa@12345",
            "administrador": "true",
            "_id": "60XtqgtbD4Dwv0Mj"
        },
        {
            "nome": "Guilherme Pequeno",
            "email": "guilherme@teste.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "6O2qWeTCFNwnEtBu"
        },
        {
            "nome": "Ana",
            "email": "herminia_mayert@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "6QWftl3QxBCZekga"
        },
        {
            "nome": "Leandro Nunes",
            "email": "annunes2@gmail.com",
            "password": "123senha",
            "administrador": "true",
            "_id": "6R1Fl0fmnEcRv9u4"
        },
        {
            "nome": "Gertrude Zulauf",
            "email": "maegan.steuber89@gmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "6ZAj8orgw6eymRdK"
        },
        {
            "nome": "Nome",
            "email": "1686693934434@mail.com",
            "password": "Qa@12345",
            "administrador": "true",
            "_id": "7aZ1e93aBl4kePP1"
        },
        {
            "nome": "Daniel Skiles",
            "email": "Fatima.Barton86@hotmail.com",
            "password": "yFj5XOGYJJlzx27",
            "administrador": "true",
            "_id": "80ort8IRgRIo3vwy"
        },
        {
            "nome": "Falcao Belga",
            "email": "belga@qa.com.br",
            "password": "123456",
            "administrador": "true",
            "_id": "8QKXDVl4SY1JrBoC"
        },
        {
            "nome": "Ana",
            "email": "jessika.watsica@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "8mQKWb8sgrKf8zcH"
        },
        {
            "nome": "Pearl Balistreri I",
            "email": "Elena_Nitzsche15@gmail.com",
            "password": "NETa0KanL5_zVEh",
            "administrador": "true",
            "_id": "8wucYvg5SbtwD7r4"
        },
        {
            "nome": "Fulano da Silva",
            "email": "Leora91@yahoo.com",
            "password": "C0nnect123",
            "administrador": "false",
            "_id": "9Mq8t4GHLBt2fSgk"
        },
        {
            "nome": "Boyd Reichert",
            "email": "danny_boyer87@gmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "9a61EPZ8ammx9avh"
        },
        {
            "nome": "Leandro Nunes",
            "email": "yorklawrence@example.com",
            "password": "123senha",
            "administrador": "true",
            "_id": "9mn2hjo9xppcZCzs"
        },
        {
            "nome": "Nome Teste Maio 2023",
            "email": "1686700617345@mail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "AQPhQI08PoK8YAGr"
        },
        {
            "nome": "Nome",
            "email": "1686699384186@mail.com",
            "password": "Qa@12345",
            "administrador": "true",
            "_id": "ArH9DeaB6rj6xfZZ"
        },
        {
            "nome": "Louise Schmidt",
            "email": "Ernestina16@yahoo.com",
            "password": "HKI7Cb9zlXPhIl2",
            "administrador": "true",
            "_id": "BbuyMuymv2fWicM7"
        },
        {
            "nome": "Henry Lesch",
            "email": "Jeanette.Rowe16@hotmail.com",
            "password": "NurGxzrAsgaBwYE",
            "administrador": "false",
            "_id": "Cbr9mOYsxwTLAvll"
        },
        {
            "nome": "Nome Teste Maio 2023",
            "email": "1686703272969@mail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "DsHtI1MF3pTfqdFp"
        },
        {
            "nome": "Jessie Anderson",
            "email": "beatrice_kirlin94@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "DwDUZULy42TDvIjU"
        },
        {
            "nome": "Gilbert Bashirian Jr.",
            "email": "monique_tillman83@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "FF2cDDUovbXwI2Ql"
        },
        {
            "nome": "Dr. Gerardo McGlynn",
            "email": "joshua.erdman23@gmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "FFMGgJ1m2pMIZReE"
        },
        {
            "nome": "Hugh Klein",
            "email": "Boyd_Cronin@hotmail.com",
            "password": "6fflGivRxxCfvLv",
            "administrador": "false",
            "_id": "FY3wGaYYeFVhHYxr"
        },
        {
            "nome": "Dana Batz",
            "email": "reese.gorczany@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "GU5zbQDn7VhEIEux"
        },
        {
            "nome": "Cheryl Brekke",
            "email": "Lucienne28@hotmail.com",
            "password": "DM7D_UbxUgBfuut",
            "administrador": "true",
            "_id": "GXjHT1gLsOrkfNTx"
        },
        {
            "nome": "Toby Champlin",
            "email": "Tierra.Moen@gmail.com",
            "password": "6mc5mgx1OVpcWjE",
            "administrador": "true",
            "_id": "GsceA6ZuHvtnDWUr"
        },
        {
            "nome": "Nome Teste Maio 2023",
            "email": "1686701273834@mail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "HZuhJBmVcvBkpWx3"
        },
        {
            "nome": "Nome",
            "email": "1686700934965@mail.com",
            "password": "Qa@12345",
            "administrador": "true",
            "_id": "HwnPnvOxCqz7RZih"
        },
        {
            "nome": "Nome Teste Maio 2023",
            "email": "1686703190236@mail.com",
            "password": "teste",
            "administrador": "true",
            "_id": "IOtJBoAnkDw0cjr4"
        },
        {
            "nome": "Ana",
            "email": "kane5@hotmail.com",
            "password": "1234",
            "administrador": "true",
            "_id": "IcAs8GtAdDzsze3k"
        },
        {
            "nome": "Betty Baumbach",
            "email": "Hester83@yahoo.com",
            "password": "JGSOzD_s3NcU9EL",
            "administrador": "true",
            "_id": "Isylya0uqe1voarn"
        },
        {
            "nome": "Ms. Boyd Upton",
            "email": "Shaylee_Padberg6@hotmail.com",
            "password": "hit9dVsYrIpe12L",
            "administrador": "false",
            "_id": "JWHwIxWR5lkTvv2t"
        },
        {
            "nome": "Olivia Cosa",
            "email": "beltrano@qa.com.br",
            "password": "1234",
            "administrador": "true",
            "_id": "K9Pswh70HoyLooVP"
        },
        {
            "nome": "Nome",
            "email": "1686693994063@mail.com",
            "password": "Qa@12345",
            "administrador": "true",
            "_id": "KE0SfD5GNROcmE0I"
        },
        {
            "nome": "Nome",
            "email": "1686694060597@mail.com",
            "password": "Qa@12345",
            "administrador": "true",
            "_id": "KYvwYPqFTSzv8HTz"
        },
        {
            ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230614 01:08:19.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:19.662" endtime="20230614 01:08:19.912"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 01:08:19.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:19.913" endtime="20230614 01:08:19.913"/>
</kw>
<status status="PASS" starttime="20230614 01:08:19.661" endtime="20230614 01:08:19.913"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 01:08:19.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 01:08:19.914" endtime="20230614 01:08:19.915"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 01:08:19.915" endtime="20230614 01:08:19.915"/>
</kw>
<status status="PASS" starttime="20230614 01:08:19.913" endtime="20230614 01:08:19.915"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 01:08:19.917" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230614 01:08:19.916" endtime="20230614 01:08:19.917"/>
</kw>
<status status="PASS" starttime="20230614 01:08:19.916" endtime="20230614 01:08:19.917"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 01:08:19.659" endtime="20230614 01:08:19.917"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 01:08:19.918" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 01:08:19.918" endtime="20230614 01:08:19.918"/>
</kw>
<status status="PASS" starttime="20230614 01:08:19.918" endtime="20230614 01:08:19.918"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230614 01:08:19.919" level="INFO">${name} = Nicole Turner</msg>
<status status="PASS" starttime="20230614 01:08:19.919" endtime="20230614 01:08:19.919"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230614 01:08:19.920" level="INFO">${email} = umoore@example.org</msg>
<status status="PASS" starttime="20230614 01:08:19.919" endtime="20230614 01:08:19.920"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230614 01:08:19.920" level="INFO">${password} = 3p150tAKH6CT</msg>
<status status="PASS" starttime="20230614 01:08:19.920" endtime="20230614 01:08:19.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 01:08:19.921" level="INFO">${name} = Nicole Turner</msg>
<status status="PASS" starttime="20230614 01:08:19.920" endtime="20230614 01:08:19.921"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 01:08:19.921" level="INFO">${email} = umoore@example.org</msg>
<status status="PASS" starttime="20230614 01:08:19.921" endtime="20230614 01:08:19.921"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 01:08:19.921" level="INFO">${password} = 3p150tAKH6CT</msg>
<status status="PASS" starttime="20230614 01:08:19.921" endtime="20230614 01:08:19.921"/>
</kw>
<status status="PASS" starttime="20230614 01:08:19.919" endtime="20230614 01:08:19.921"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 01:08:19.922" level="INFO">${payload} = {'nome': 'Nicole Turner', 'email': 'umoore@example.org', 'password': '3p150tAKH6CT', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230614 01:08:19.922" endtime="20230614 01:08:19.922"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 01:08:19.923" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230614 01:08:19.922" endtime="20230614 01:08:19.923"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 01:08:20.020" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Nicole Turner", "email": "umoore@example.org", "password": "3p150tAKH6CT", "administrador": "false"}' 
 </msg>
<msg timestamp="20230614 01:08:20.020" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a0fa4c9b-a423-4617-a47b-18e6f0204ad3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4cf6a8749503116661fec6190ddaa95e', 'Date': 'Wed, 14 Jun 2023 01:08:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "mR7COI1eKlYOhOzd"
} 
 </msg>
<msg timestamp="20230614 01:08:20.021" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:19.923" endtime="20230614 01:08:20.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230614 01:08:20.021" level="INFO">${user_id} = mR7COI1eKlYOhOzd</msg>
<status status="PASS" starttime="20230614 01:08:20.021" endtime="20230614 01:08:20.021"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230614 01:08:20.022" level="INFO">${USER_ID} = mR7COI1eKlYOhOzd</msg>
<status status="PASS" starttime="20230614 01:08:20.022" endtime="20230614 01:08:20.022"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 01:08:20.022" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.022" endtime="20230614 01:08:20.022"/>
</kw>
<status status="PASS" starttime="20230614 01:08:19.922" endtime="20230614 01:08:20.022"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 01:08:20.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.023" endtime="20230614 01:08:20.024"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 01:08:20.024" endtime="20230614 01:08:20.024"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.023" endtime="20230614 01:08:20.024"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 01:08:20.025" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230614 01:08:20.025" endtime="20230614 01:08:20.025"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.024" endtime="20230614 01:08:20.025"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 01:08:19.917" endtime="20230614 01:08:20.025"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 01:08:20.027" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 01:08:20.026" endtime="20230614 01:08:20.027"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.026" endtime="20230614 01:08:20.027"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 01:08:20.123" level="INFO">GET Request : url=https://serverest.dev/usuarios/mR7COI1eKlYOhOzd 
 path_url=/usuarios/mR7COI1eKlYOhOzd 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230614 01:08:20.123" level="INFO">GET Response : url=https://serverest.dev/usuarios/mR7COI1eKlYOhOzd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '77e44da5-e658-4f76-b26a-578788a23b3c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e80142003470ef008b01d8038b6f9711', 'Date': 'Wed, 14 Jun 2023 01:08:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '159'} 
 body={
    "nome": "Nicole Turner",
    "email": "umoore@example.org",
    "password": "3p150tAKH6CT",
    "administrador": "false",
    "_id": "mR7COI1eKlYOhOzd"
} 
 </msg>
<msg timestamp="20230614 01:08:20.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.027" endtime="20230614 01:08:20.124"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 01:08:20.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.124" endtime="20230614 01:08:20.124"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.027" endtime="20230614 01:08:20.124"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 01:08:20.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.125" endtime="20230614 01:08:20.125"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 01:08:20.126" endtime="20230614 01:08:20.126"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.124" endtime="20230614 01:08:20.126"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 01:08:20.127" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230614 01:08:20.127" endtime="20230614 01:08:20.127"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.126" endtime="20230614 01:08:20.127"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 01:08:20.026" endtime="20230614 01:08:20.127"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 01:08:20.129" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 01:08:20.128" endtime="20230614 01:08:20.129"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.128" endtime="20230614 01:08:20.129"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 01:08:20.129" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230614 01:08:20.129" endtime="20230614 01:08:20.129"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 01:08:20.130" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230614 01:08:20.130" endtime="20230614 01:08:20.130"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 01:08:20.225" level="INFO">PUT Request : url=https://serverest.dev/usuarios/mR7COI1eKlYOhOzd 
 path_url=/usuarios/mR7COI1eKlYOhOzd 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230614 01:08:20.225" level="INFO">PUT Response : url=https://serverest.dev/usuarios/mR7COI1eKlYOhOzd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f1595a75-240b-41f6-977f-465f584b5a36', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '020689d6b9d19a2f4b0c3a9632658b37', 'Date': 'Wed, 14 Jun 2023 01:08:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230614 01:08:20.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.130" endtime="20230614 01:08:20.225"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 01:08:20.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.225" endtime="20230614 01:08:20.226"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.129" endtime="20230614 01:08:20.226"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 01:08:20.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.226" endtime="20230614 01:08:20.227"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 01:08:20.227" endtime="20230614 01:08:20.227"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.226" endtime="20230614 01:08:20.227"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 01:08:20.228" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230614 01:08:20.228" endtime="20230614 01:08:20.228"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.228" endtime="20230614 01:08:20.229"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 01:08:20.128" endtime="20230614 01:08:20.229"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 01:08:20.230" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 01:08:20.230" endtime="20230614 01:08:20.230"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.229" endtime="20230614 01:08:20.230"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 01:08:20.333" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/mR7COI1eKlYOhOzd 
 path_url=/usuarios/mR7COI1eKlYOhOzd 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230614 01:08:20.333" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/mR7COI1eKlYOhOzd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ded2c98e-fe52-4ffc-89d1-60be9b683e7e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '44e2913337ae852a9baa90b1bb0fce38', 'Date': 'Wed, 14 Jun 2023 01:08:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230614 01:08:20.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.230" endtime="20230614 01:08:20.333"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 01:08:20.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.333" endtime="20230614 01:08:20.333"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.230" endtime="20230614 01:08:20.334"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 01:08:20.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 01:08:20.334" endtime="20230614 01:08:20.335"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 01:08:20.335" endtime="20230614 01:08:20.336"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.334" endtime="20230614 01:08:20.336"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 01:08:20.337" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230614 01:08:20.336" endtime="20230614 01:08:20.337"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.336" endtime="20230614 01:08:20.337"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 01:08:20.229" endtime="20230614 01:08:20.337"/>
</test>
<status status="PASS" starttime="20230614 01:08:19.184" endtime="20230614 01:08:20.337"/>
</suite>
<status status="PASS" starttime="20230614 01:08:19.182" endtime="20230614 01:08:20.338"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 01:08:20.349" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 01:08:20.349" endtime="20230614 01:08:22.526"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 01:08:22.526" endtime="20230614 01:08:22.630"/>
</kw>
<status status="PASS" starttime="20230614 01:08:20.348" endtime="20230614 01:08:22.630"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 01:08:22.636" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 01:08:22.631" endtime="20230614 01:08:22.636"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:22.637" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 01:08:22.636" endtime="20230614 01:08:22.714"/>
</kw>
<status status="PASS" starttime="20230614 01:08:22.631" endtime="20230614 01:08:22.714"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:22.715" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 01:08:22.715" endtime="20230614 01:08:22.778"/>
</kw>
<status status="PASS" starttime="20230614 01:08:22.714" endtime="20230614 01:08:22.778"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 01:08:22.778" endtime="20230614 01:08:23.009"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 01:08:23.027" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 01:08:23.010" endtime="20230614 01:08:23.027"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 01:08:23.041" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230614 01:08:23.027" endtime="20230614 01:08:23.041"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 01:08:23.053" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230614 01:08:23.041" endtime="20230614 01:08:23.053"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 01:08:23.065" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230614 01:08:23.053" endtime="20230614 01:08:23.065"/>
</kw>
<status status="PASS" starttime="20230614 01:08:22.778" endtime="20230614 01:08:23.065"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 01:08:23.066" endtime="20230614 01:08:23.120"/>
</kw>
<status status="PASS" starttime="20230614 01:08:23.066" endtime="20230614 01:08:23.121"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 01:08:20.348" endtime="20230614 01:08:23.121"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 01:08:23.123" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 01:08:23.122" endtime="20230614 01:08:24.223"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 01:08:24.223" endtime="20230614 01:08:24.326"/>
</kw>
<status status="PASS" starttime="20230614 01:08:23.122" endtime="20230614 01:08:24.327"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 01:08:24.332" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 01:08:24.327" endtime="20230614 01:08:24.332"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:24.333" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 01:08:24.332" endtime="20230614 01:08:24.404"/>
</kw>
<status status="PASS" starttime="20230614 01:08:24.327" endtime="20230614 01:08:24.404"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230614 01:08:24.405" level="INFO">${name} = Erica Singh</msg>
<status status="PASS" starttime="20230614 01:08:24.404" endtime="20230614 01:08:24.405"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230614 01:08:24.406" level="INFO">${email} = michaelbooth@example.com</msg>
<status status="PASS" starttime="20230614 01:08:24.405" endtime="20230614 01:08:24.406"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230614 01:08:24.406" level="INFO">${password} = xxQMTtFsp6yC</msg>
<status status="PASS" starttime="20230614 01:08:24.406" endtime="20230614 01:08:24.406"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:24.407" level="INFO">Typing text 'Erica Singh' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230614 01:08:24.406" endtime="20230614 01:08:24.519"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:24.520" level="INFO">Typing text 'michaelbooth@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230614 01:08:24.519" endtime="20230614 01:08:24.633"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:24.634" level="INFO">Typing text 'xxQMTtFsp6yC' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230614 01:08:24.633" endtime="20230614 01:08:24.724"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:24.725" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230614 01:08:24.724" endtime="20230614 01:08:24.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 01:08:24.793" level="INFO">${name} = Erica Singh</msg>
<status status="PASS" starttime="20230614 01:08:24.793" endtime="20230614 01:08:24.793"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 01:08:24.793" level="INFO">${email} = michaelbooth@example.com</msg>
<status status="PASS" starttime="20230614 01:08:24.793" endtime="20230614 01:08:24.794"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 01:08:24.794" level="INFO">${password} = xxQMTtFsp6yC</msg>
<status status="PASS" starttime="20230614 01:08:24.794" endtime="20230614 01:08:24.794"/>
</kw>
<status status="PASS" starttime="20230614 01:08:24.404" endtime="20230614 01:08:24.794"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:24.795" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 01:08:24.794" endtime="20230614 01:08:24.849"/>
</kw>
<status status="PASS" starttime="20230614 01:08:24.794" endtime="20230614 01:08:24.850"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 01:08:24.850" endtime="20230614 01:08:25.082"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 01:08:25.100" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 01:08:25.083" endtime="20230614 01:08:25.100"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 01:08:25.112" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230614 01:08:25.100" endtime="20230614 01:08:25.112"/>
</kw>
<status status="PASS" starttime="20230614 01:08:24.850" endtime="20230614 01:08:25.112"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 01:08:25.113" endtime="20230614 01:08:25.167"/>
</kw>
<status status="PASS" starttime="20230614 01:08:25.112" endtime="20230614 01:08:25.167"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 01:08:23.121" endtime="20230614 01:08:25.167"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 01:08:25.171" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 01:08:25.170" endtime="20230614 01:08:26.254"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 01:08:26.255" endtime="20230614 01:08:26.358"/>
</kw>
<status status="PASS" starttime="20230614 01:08:25.170" endtime="20230614 01:08:26.358"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 01:08:26.363" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 01:08:26.358" endtime="20230614 01:08:26.363"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:26.364" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 01:08:26.363" endtime="20230614 01:08:26.440"/>
</kw>
<status status="PASS" starttime="20230614 01:08:26.358" endtime="20230614 01:08:26.440"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:26.441" level="INFO">Typing text 'Erica Singh' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230614 01:08:26.440" endtime="20230614 01:08:26.548"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:26.549" level="INFO">Typing text 'michaelbooth@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230614 01:08:26.548" endtime="20230614 01:08:26.658"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:26.659" level="INFO">Typing text 'xxQMTtFsp6yC' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230614 01:08:26.658" endtime="20230614 01:08:26.749"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:26.750" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230614 01:08:26.749" endtime="20230614 01:08:26.818"/>
</kw>
<status status="PASS" starttime="20230614 01:08:26.440" endtime="20230614 01:08:26.818"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 01:08:26.819" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 01:08:26.819" endtime="20230614 01:08:26.876"/>
</kw>
<status status="PASS" starttime="20230614 01:08:26.818" endtime="20230614 01:08:26.876"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 01:08:26.877" endtime="20230614 01:08:27.107"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 01:08:27.125" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 01:08:27.107" endtime="20230614 01:08:27.125"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 01:08:27.137" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230614 01:08:27.125" endtime="20230614 01:08:27.138"/>
</kw>
<status status="PASS" starttime="20230614 01:08:26.876" endtime="20230614 01:08:27.138"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 01:08:27.138" endtime="20230614 01:08:27.194"/>
</kw>
<status status="PASS" starttime="20230614 01:08:27.138" endtime="20230614 01:08:27.194"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 01:08:25.169" endtime="20230614 01:08:27.194"/>
</test>
<status status="PASS" starttime="20230614 01:08:20.341" endtime="20230614 01:08:27.195"/>
</suite>
<status status="PASS" starttime="20230614 01:08:20.339" endtime="20230614 01:08:27.197"/>
</suite>
<status status="PASS" starttime="20230614 01:08:19.163" endtime="20230614 01:08:27.198"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
