<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230522 13:21:47.810" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:21:48.442" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:21:48.441" endtime="20230522 13:21:48.442"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.441" endtime="20230522 13:21:48.442"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:21:48.602" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:21:48.603" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '15a754f4-d9f1-4087-94bb-6ed3214e90b3', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1a893e61a5c05780a9298114e94aada8;o=1', 'Date': 'Mon, 22 May 2023 13:21:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '1548'} 
 body={
    "quantidade": 7,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "cwkpuktx",
            "email": "cwkpuktx@qa.com",
            "password": "cwkpuktx",
            "administrador": "false",
            "_id": "8GMc4wczqMQBOBZx"
        },
        {
            "nome": "Mariah Vaughan",
            "email": "michael84@example.com",
            "password": "MsdhntXM0Bo3",
            "administrador": "true",
            "_id": "Cng5QlDV2dmwnaD6"
        },
        {
            "nome": "David Walton",
            "email": "jmiller@example.com",
            "password": "m33CxzZc6BiA",
            "administrador": "true",
            "_id": "MPSxGdwNDmcX3Kos"
        },
        {
            "nome": "{{nome}}",
            "email": "Annabell@qa.com.br",
            "password": "rsufMwpMdtzksgs",
            "administrador": "true",
            "_id": "PoEdyv8dPUQ7S1Xn"
        },
        {
            "nome": "Timothy Werner",
            "email": "ebailey@example.com",
            "password": "1Rx@4DrMJi",
            "administrador": "true",
            "_id": "VoVnSiPQ9t1MBWuE"
        },
        {
            "nome": "Jose Milton",
            "email": "milton@1234578923101010271109.com",
            "password": "test123",
            "administrador": "true",
            "_id": "gVP9mDqHqLvFeI2W"
        }
    ]
} 
 </msg>
<msg timestamp="20230522 13:21:48.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.443" endtime="20230522 13:21:48.603"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:21:48.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.603" endtime="20230522 13:21:48.604"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.442" endtime="20230522 13:21:48.604"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:21:48.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.604" endtime="20230522 13:21:48.605"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:21:48.605" endtime="20230522 13:21:48.606"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.604" endtime="20230522 13:21:48.606"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:21:48.607" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 13:21:48.606" endtime="20230522 13:21:48.607"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.606" endtime="20230522 13:21:48.607"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:21:48.440" endtime="20230522 13:21:48.607"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:21:48.609" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:21:48.609" endtime="20230522 13:21:48.610"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.609" endtime="20230522 13:21:48.610"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 13:21:48.611" level="INFO">${name} = Mary Thomas</msg>
<status status="PASS" starttime="20230522 13:21:48.610" endtime="20230522 13:21:48.611"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 13:21:48.611" level="INFO">${email} = rachel41@example.org</msg>
<status status="PASS" starttime="20230522 13:21:48.611" endtime="20230522 13:21:48.611"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 13:21:48.612" level="INFO">${password} = M7NxSROdJptV</msg>
<status status="PASS" starttime="20230522 13:21:48.611" endtime="20230522 13:21:48.612"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:21:48.612" level="INFO">${name} = Mary Thomas</msg>
<status status="PASS" starttime="20230522 13:21:48.612" endtime="20230522 13:21:48.612"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:21:48.613" level="INFO">${email} = rachel41@example.org</msg>
<status status="PASS" starttime="20230522 13:21:48.612" endtime="20230522 13:21:48.613"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:21:48.613" level="INFO">${password} = M7NxSROdJptV</msg>
<status status="PASS" starttime="20230522 13:21:48.613" endtime="20230522 13:21:48.613"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.610" endtime="20230522 13:21:48.613"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:21:48.614" level="INFO">${payload} = {'nome': 'Mary Thomas', 'email': 'rachel41@example.org', 'password': 'M7NxSROdJptV', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 13:21:48.613" endtime="20230522 13:21:48.614"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:21:48.614" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 13:21:48.614" endtime="20230522 13:21:48.614"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:21:48.717" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Mary Thomas", "email": "rachel41@example.org", "password": "M7NxSROdJptV", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 13:21:48.717" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '348117d8-c2cb-497a-b08b-0d009b1edc79', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bd98550eb3fb9d2fd0d6a5be824a8086', 'Date': 'Mon, 22 May 2023 13:21:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "KT8NZh4S4Z0RCQcq"
} 
 </msg>
<msg timestamp="20230522 13:21:48.718" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.614" endtime="20230522 13:21:48.718"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230522 13:21:48.719" level="INFO">${user_id} = KT8NZh4S4Z0RCQcq</msg>
<status status="PASS" starttime="20230522 13:21:48.718" endtime="20230522 13:21:48.719"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230522 13:21:48.719" level="INFO">${USER_ID} = KT8NZh4S4Z0RCQcq</msg>
<status status="PASS" starttime="20230522 13:21:48.719" endtime="20230522 13:21:48.719"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:21:48.720" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.720" endtime="20230522 13:21:48.720"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.613" endtime="20230522 13:21:48.720"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:21:48.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.720" endtime="20230522 13:21:48.721"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:21:48.721" endtime="20230522 13:21:48.722"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.720" endtime="20230522 13:21:48.722"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:21:48.723" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230522 13:21:48.723" endtime="20230522 13:21:48.723"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.722" endtime="20230522 13:21:48.723"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:21:48.608" endtime="20230522 13:21:48.723"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:21:48.725" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:21:48.725" endtime="20230522 13:21:48.725"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.724" endtime="20230522 13:21:48.725"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:21:48.797" level="INFO">GET Request : url=https://serverest.dev/usuarios/KT8NZh4S4Z0RCQcq 
 path_url=/usuarios/KT8NZh4S4Z0RCQcq 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:21:48.797" level="INFO">GET Response : url=https://serverest.dev/usuarios/KT8NZh4S4Z0RCQcq 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3e4a0e3d-2a64-4e68-8542-67e3895a2f72', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '342d844aa69b24c18e1d6f9922f9679a', 'Date': 'Mon, 22 May 2023 13:21:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '159'} 
 body={
    "nome": "Mary Thomas",
    "email": "rachel41@example.org",
    "password": "M7NxSROdJptV",
    "administrador": "false",
    "_id": "KT8NZh4S4Z0RCQcq"
} 
 </msg>
<msg timestamp="20230522 13:21:48.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.726" endtime="20230522 13:21:48.797"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:21:48.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.797" endtime="20230522 13:21:48.798"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.726" endtime="20230522 13:21:48.798"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:21:48.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.798" endtime="20230522 13:21:48.799"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:21:48.799" endtime="20230522 13:21:48.800"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.798" endtime="20230522 13:21:48.800"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:21:48.801" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230522 13:21:48.801" endtime="20230522 13:21:48.801"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.800" endtime="20230522 13:21:48.801"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:21:48.724" endtime="20230522 13:21:48.802"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:21:48.803" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:21:48.803" endtime="20230522 13:21:48.804"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.803" endtime="20230522 13:21:48.804"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:21:48.804" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230522 13:21:48.804" endtime="20230522 13:21:48.804"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230522 13:21:48.805" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230522 13:21:48.805" endtime="20230522 13:21:48.805"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:21:48.874" level="INFO">PUT Request : url=https://serverest.dev/usuarios/KT8NZh4S4Z0RCQcq 
 path_url=/usuarios/KT8NZh4S4Z0RCQcq 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230522 13:21:48.874" level="INFO">PUT Response : url=https://serverest.dev/usuarios/KT8NZh4S4Z0RCQcq 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fd712ae7-7f88-4036-a2ef-198023b520b7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1c2387d966095e2de08722772f092df1', 'Date': 'Mon, 22 May 2023 13:21:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230522 13:21:48.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.805" endtime="20230522 13:21:48.874"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:21:48.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.874" endtime="20230522 13:21:48.875"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.804" endtime="20230522 13:21:48.875"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:21:48.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.875" endtime="20230522 13:21:48.876"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:21:48.876" endtime="20230522 13:21:48.877"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.875" endtime="20230522 13:21:48.877"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:21:48.878" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 13:21:48.877" endtime="20230522 13:21:48.878"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.877" endtime="20230522 13:21:48.878"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:21:48.802" endtime="20230522 13:21:48.878"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230522 13:21:48.880" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230522 13:21:48.879" endtime="20230522 13:21:48.880"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.879" endtime="20230522 13:21:48.880"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230522 13:21:48.949" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/KT8NZh4S4Z0RCQcq 
 path_url=/usuarios/KT8NZh4S4Z0RCQcq 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230522 13:21:48.949" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/KT8NZh4S4Z0RCQcq 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'aeef02c9-bacb-4bd9-be38-ed9582f5da05', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '50b629471e181adc6a25ffe33fec8f9b', 'Date': 'Mon, 22 May 2023 13:21:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230522 13:21:48.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.881" endtime="20230522 13:21:48.949"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230522 13:21:48.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.949" endtime="20230522 13:21:48.950"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.880" endtime="20230522 13:21:48.950"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230522 13:21:48.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230522 13:21:48.950" endtime="20230522 13:21:48.951"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230522 13:21:48.951" endtime="20230522 13:21:48.952"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.950" endtime="20230522 13:21:48.952"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230522 13:21:48.953" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230522 13:21:48.952" endtime="20230522 13:21:48.953"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.952" endtime="20230522 13:21:48.953"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230522 13:21:48.879" endtime="20230522 13:21:48.954"/>
</test>
<status status="PASS" starttime="20230522 13:21:47.832" endtime="20230522 13:21:48.954"/>
</suite>
<status status="PASS" starttime="20230522 13:21:47.830" endtime="20230522 13:21:48.956"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:21:48.966" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:21:48.966" endtime="20230522 13:21:51.014"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:21:51.014" endtime="20230522 13:21:51.143"/>
</kw>
<status status="PASS" starttime="20230522 13:21:48.965" endtime="20230522 13:21:51.143"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:21:51.153" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:21:51.144" endtime="20230522 13:21:51.153"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:51.155" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:21:51.154" endtime="20230522 13:21:51.312"/>
</kw>
<status status="PASS" starttime="20230522 13:21:51.144" endtime="20230522 13:21:51.312"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:51.314" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:21:51.313" endtime="20230522 13:21:51.413"/>
</kw>
<status status="PASS" starttime="20230522 13:21:51.313" endtime="20230522 13:21:51.413"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:21:51.413" endtime="20230522 13:21:51.649"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:21:51.669" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:21:51.649" endtime="20230522 13:21:51.669"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:21:51.719" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:21:51.669" endtime="20230522 13:21:51.719"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:21:51.736" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:21:51.720" endtime="20230522 13:21:51.736"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:21:51.752" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230522 13:21:51.736" endtime="20230522 13:21:51.753"/>
</kw>
<status status="PASS" starttime="20230522 13:21:51.413" endtime="20230522 13:21:51.753"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:21:51.754" endtime="20230522 13:21:51.810"/>
</kw>
<status status="PASS" starttime="20230522 13:21:51.753" endtime="20230522 13:21:51.810"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:21:48.965" endtime="20230522 13:21:51.810"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:21:51.813" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:21:51.812" endtime="20230522 13:21:53.061"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:21:53.061" endtime="20230522 13:21:53.166"/>
</kw>
<status status="PASS" starttime="20230522 13:21:51.812" endtime="20230522 13:21:53.166"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:21:53.172" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:21:53.167" endtime="20230522 13:21:53.172"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:53.173" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:21:53.172" endtime="20230522 13:21:53.247"/>
</kw>
<status status="PASS" starttime="20230522 13:21:53.166" endtime="20230522 13:21:53.247"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230522 13:21:53.249" level="INFO">${name} = Alexis Burnett</msg>
<status status="PASS" starttime="20230522 13:21:53.248" endtime="20230522 13:21:53.249"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230522 13:21:53.249" level="INFO">${email} = torresdebbie@example.com</msg>
<status status="PASS" starttime="20230522 13:21:53.249" endtime="20230522 13:21:53.249"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230522 13:21:53.250" level="INFO">${password} = FHdMznir6YzJ</msg>
<status status="PASS" starttime="20230522 13:21:53.249" endtime="20230522 13:21:53.250"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:53.255" level="INFO">Typing text 'Alexis Burnett' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 13:21:53.250" endtime="20230522 13:21:53.450"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:53.451" level="INFO">Typing text 'torresdebbie@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 13:21:53.450" endtime="20230522 13:21:53.572"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:53.573" level="INFO">Typing text 'FHdMznir6YzJ' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 13:21:53.572" endtime="20230522 13:21:53.676"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:53.677" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 13:21:53.676" endtime="20230522 13:21:53.762"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:21:53.763" level="INFO">${name} = Alexis Burnett</msg>
<status status="PASS" starttime="20230522 13:21:53.763" endtime="20230522 13:21:53.763"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:21:53.764" level="INFO">${email} = torresdebbie@example.com</msg>
<status status="PASS" starttime="20230522 13:21:53.763" endtime="20230522 13:21:53.764"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230522 13:21:53.764" level="INFO">${password} = FHdMznir6YzJ</msg>
<status status="PASS" starttime="20230522 13:21:53.764" endtime="20230522 13:21:53.764"/>
</kw>
<status status="PASS" starttime="20230522 13:21:53.247" endtime="20230522 13:21:53.764"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:53.765" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:21:53.765" endtime="20230522 13:21:53.831"/>
</kw>
<status status="PASS" starttime="20230522 13:21:53.764" endtime="20230522 13:21:53.832"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucess&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:21:53.832" endtime="20230522 13:21:54.070"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:21:54.090" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:21:54.070" endtime="20230522 13:21:54.090"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:21:54.104" level="INFO">Current page contains text 'Cadastro realizado com sucess'.</msg>
<status status="PASS" starttime="20230522 13:21:54.090" endtime="20230522 13:21:54.104"/>
</kw>
<status status="PASS" starttime="20230522 13:21:53.832" endtime="20230522 13:21:54.104"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:21:54.105" endtime="20230522 13:21:54.160"/>
</kw>
<status status="PASS" starttime="20230522 13:21:54.105" endtime="20230522 13:21:54.160"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:21:51.811" endtime="20230522 13:21:54.161"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230522 13:21:54.163" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230522 13:21:54.162" endtime="20230522 13:21:55.385"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230522 13:21:55.386" endtime="20230522 13:21:55.492"/>
</kw>
<status status="PASS" starttime="20230522 13:21:54.162" endtime="20230522 13:21:55.492"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230522 13:21:55.498" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230522 13:21:55.493" endtime="20230522 13:21:55.498"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:55.499" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230522 13:21:55.498" endtime="20230522 13:21:55.582"/>
</kw>
<status status="PASS" starttime="20230522 13:21:55.492" endtime="20230522 13:21:55.582"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:55.583" level="INFO">Typing text 'Alexis Burnett' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230522 13:21:55.583" endtime="20230522 13:21:55.715"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:55.716" level="INFO">Typing text 'torresdebbie@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230522 13:21:55.715" endtime="20230522 13:21:55.840"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:55.841" level="INFO">Typing text 'FHdMznir6YzJ' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230522 13:21:55.840" endtime="20230522 13:21:55.954"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:55.955" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230522 13:21:55.954" endtime="20230522 13:21:56.049"/>
</kw>
<status status="PASS" starttime="20230522 13:21:55.582" endtime="20230522 13:21:56.049"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230522 13:21:56.050" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230522 13:21:56.050" endtime="20230522 13:21:56.115"/>
</kw>
<status status="PASS" starttime="20230522 13:21:56.049" endtime="20230522 13:21:56.115"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230522 13:21:56.116" endtime="20230522 13:21:56.351"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230522 13:21:56.371" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230522 13:21:56.351" endtime="20230522 13:21:56.371"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230522 13:21:56.385" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230522 13:21:56.371" endtime="20230522 13:21:56.385"/>
</kw>
<status status="PASS" starttime="20230522 13:21:56.115" endtime="20230522 13:21:56.385"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230522 13:21:56.386" endtime="20230522 13:21:56.443"/>
</kw>
<status status="PASS" starttime="20230522 13:21:56.386" endtime="20230522 13:21:56.443"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230522 13:21:54.161" endtime="20230522 13:21:56.443"/>
</test>
<status status="PASS" starttime="20230522 13:21:48.958" endtime="20230522 13:21:56.444"/>
</suite>
<status status="PASS" starttime="20230522 13:21:48.956" endtime="20230522 13:21:56.445"/>
</suite>
<status status="PASS" starttime="20230522 13:21:47.811" endtime="20230522 13:21:56.446"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
