<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.8.17 on linux)" generated="20230627 14:02:32.046" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230627 14:02:32.621" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230627 14:02:32.621" endtime="20230627 14:02:32.621"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.620" endtime="20230627 14:02:32.622"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230627 14:02:32.783" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230627 14:02:32.783" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dcb68072-fffb-4cf4-a9db-e8d4ed81c94f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7200b28c5bc297c6494a786ad003f065;o=1', 'Date': 'Tue, 27 Jun 2023 14:02:32 GMT', 'Server': 'Google Frontend', 'Content-Length': '36241'} 
 body={
    "quantidade": 164,
    "usuarios": [
        {
            "nome": "Maria Burns",
            "email": "natalierivera@example.net",
            "password": "Y95Eobhv*v",
            "administrador": "true",
            "_id": "0s10LfAelxXmXkw3"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "dkig@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "1E3RgHgWcPNoPawT"
        },
        {
            "nome": "Christopher Woods",
            "email": "desireewilliams@example.org",
            "password": "(7OP+DHeRd",
            "administrador": "true",
            "_id": "1IBUivJBae6BBC4Z"
        },
        {
            "nome": "Becky Waters",
            "email": "ericksonshawna@example.net",
            "password": "#^#!7YWmbr",
            "administrador": "true",
            "_id": "1mESP4V4fQgcXiSV"
        },
        {
            "nome": "Jessica Nader",
            "email": "willow.spinka@hotmail.com",
            "password": "bsb6k62jylmxf",
            "administrador": "true",
            "_id": "1qOXGBmSYDN72K2m"
        },
        {
            "nome": "Brittany Webb",
            "email": "vholmes@example.com",
            "password": "e)%n6VEXQe",
            "administrador": "true",
            "_id": "1qvB23JLyEXQBloF"
        },
        {
            "nome": "Jeramy Cremin",
            "email": "hosea.maggio@yahoo.com",
            "password": "zwh9v6orgg",
            "administrador": "true",
            "_id": "2J1C3rQSKcxL1bL1"
        },
        {
            "nome": "Miss Maureen Runolfsson",
            "email": "Oscar_Jacobi@yahoo.com",
            "password": "RJPCvET_i_5Xpdr",
            "administrador": "true",
            "_id": "2KhOXHWOf8aznxVB"
        },
        {
            "nome": "Jonathan Reed",
            "email": "perkinsjames@example.net",
            "password": "w*G4w4NjXF",
            "administrador": "true",
            "_id": "2bnS3kqRkXxqDk7J"
        },
        {
            "nome": "Mark Lester",
            "email": "bonnie26@example.net",
            "password": "Er0KpC6bE@",
            "administrador": "true",
            "_id": "2c27FvohUmKoMx2q"
        },
        {
            "nome": "Donn Considine",
            "email": "brigette.krajcik@gmail.com",
            "password": "cj9xqfcel",
            "administrador": "true",
            "_id": "2l8zMgbnVwWl1zak"
        },
        {
            "nome": "Roy Kelly",
            "email": "jasonfowler@example.org",
            "password": "+ONdX)b8T1",
            "administrador": "true",
            "_id": "3LL4M17ihXCLwz41"
        },
        {
            "nome": "nullDonald Schummnull",
            "email": "cody.little@hotmail.com",
            "password": "5958g1qyf8",
            "administrador": "true",
            "_id": "3Q7G8iJqIlgCs1Ye"
        },
        {
            "nome": "Toby Kling",
            "email": "ronna.hamill@hotmail.com",
            "password": "ys05h28957l",
            "administrador": "true",
            "_id": "3UloNMKRWVKsSZE7"
        },
        {
            "nome": "Lilian Harber",
            "email": "deon.marvin@gmail.com",
            "password": "1r8v04uqjt08jle",
            "administrador": "true",
            "_id": "4n4Q807kG0h5peTE"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fefo@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "4tyh8FgS8kIJdvog"
        },
        {
            "nome": "Jonathan Norman",
            "email": "warnerkelly@example.com",
            "password": ")Fcq9HwhE*",
            "administrador": "true",
            "_id": "5G7BIYdMMfnoUdcZ"
        },
        {
            "nome": "Lisa Fox",
            "email": "bowenfrancisco@example.net",
            "password": "+(dAttths7",
            "administrador": "true",
            "_id": "65d6kaURTmtEtkYN"
        },
        {
            "nome": "Ms. Milo Rohan",
            "email": "dorla.hilll@yahoo.com",
            "password": "e5svxxoquyi",
            "administrador": "true",
            "_id": "6TcjGr8z8SjLUhjO"
        },
        {
            "nome": "Jacquiline Bergstrom",
            "email": "lizette.west@gmail.com",
            "password": "o734zm1c",
            "administrador": "true",
            "_id": "6gPlj9yMTAjYknay"
        },
        {
            "nome": "Kyle Wilson",
            "email": "qray@example.net",
            "password": "$%6PK)aenD",
            "administrador": "true",
            "_id": "6jNwi74Qt6hf75b2"
        },
        {
            "nome": "Kirk Hickle",
            "email": "Rusty_Hoppe-Haley28@gmail.com",
            "password": "qtAEu4dQhlNO41z",
            "administrador": "true",
            "_id": "70KgTOnveI1nn8WY"
        },
        {
            "nome": "Keith Ramos",
            "email": "sarahbrewer@example.net",
            "password": "t+r1gINn&amp;5",
            "administrador": "true",
            "_id": "7AYA7tHY5O4KPYLp"
        },
        {
            "nome": "Lauren Williams",
            "email": "brucefowler@example.org",
            "password": "&amp;5IWt(w16#",
            "administrador": "true",
            "_id": "7VRdA1iO9s683Ukq"
        },
        {
            "nome": "Jeffrey Hernandez",
            "email": "gutierrezrichard@example.net",
            "password": "&amp;x5Z9swQb*",
            "administrador": "true",
            "_id": "7s8ug5rhZhKkTm9G"
        },
        {
            "nome": "James Lopez",
            "email": "josephramirez@example.net",
            "password": "#S9wAGlq))",
            "administrador": "true",
            "_id": "86lKN9mgcKpQoiPi"
        },
        {
            "nome": "Kristin Hickle",
            "email": "olin.schuppe@gmail.com",
            "password": "onvk2gutf4k",
            "administrador": "true",
            "_id": "8hmpO3eLH2yjOiIl"
        },
        {
            "nome": "Mr. Errol Paucek",
            "email": "wendell.stanton@gmail.com",
            "password": "jw3u135zdwfq",
            "administrador": "true",
            "_id": "8tqiCUl4Mh0SQIid"
        },
        {
            "nome": "Lera Muller",
            "email": "paul.hahn@gmail.com",
            "password": "0e9d5ze6yxvv6to",
            "administrador": "true",
            "_id": "8xynx5RNkeEoA8Jy"
        },
        {
            "nome": "Conrad Barrows",
            "email": "conradbarrows@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "9GCXFR62OUQYSQhS"
        },
        {
            "nome": "Hulda_Bradtke",
            "email": "Abby_Hermiston78@yahoo.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "9Hhch2DyqLoQQrBU"
        },
        {
            "nome": "Donetta Grimes",
            "email": "colton.kirlin@gmail.com",
            "password": "59al6docgimotb3",
            "administrador": "true",
            "_id": "9LfAxWFL2zSerOEv"
        },
        {
            "nome": "Nicole Ramsey",
            "email": "jtaylor@example.org",
            "password": "y%$0)HsqJp",
            "administrador": "true",
            "_id": "9k2B85ZSjdHxxvq1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "9kmZIjLJU8emeohZ"
        },
        {
            "nome": "Emmitt Heidenreich",
            "email": "juliane.wiza@gmail.com",
            "password": "m358vht6yj",
            "administrador": "true",
            "_id": "9uRR6C3sdSHrukHo"
        },
        {
            "nome": "Kenneth Morris",
            "email": "wileyjohn@example.com",
            "password": ")NUVsBy_2&amp;",
            "administrador": "true",
            "_id": "AOz5Y2S46DrsOzeF"
        },
        {
            "nome": "Monique Adams",
            "email": "joshua75@example.net",
            "password": "!llZ2NqE9N",
            "administrador": "true",
            "_id": "BOpYmKPfl26TJXYt"
        },
        {
            "nome": "Demetrice Macejkovic",
            "email": "ernesto.nikolaus@hotmail.com",
            "password": "6afcmf6m9",
            "administrador": "true",
            "_id": "C1qM0u3C6gE5nscH"
        },
        {
            "nome": "Odell Heller",
            "email": "jerold.conroy@yahoo.com",
            "password": "fjjhzph6xcm3",
            "administrador": "true",
            "_id": "CMMwp4KMpxoMhAFe"
        },
        {
            "nome": "Wellington Daniel",
            "email": "wellington.t@teste.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "Di0OL9KGrGk45vUr"
        },
        {
            "nome": "Kevin Drake",
            "email": "patrick55@example.com",
            "password": "8lVSO4Wg(9",
            "administrador": "true",
            "_id": "E3PLCShGJnEn2KdD"
        },
        {
            "nome": "Patrick Morales",
            "email": "kelli57@example.net",
            "password": "k$c*1M*rw#",
            "administrador": "true",
            "_id": "ENq1l5nTZQJFCIWH"
        },
        {
            "nome": "Lakita MacGyver",
            "email": "hung.bayer@gmail.com",
            "password": "70rgvw6eyfk23t",
            "administrador": "true",
            "_id": "EVQgSPalTUnYWebF"
        },
        {
            "nome": "Cornelius Balistreri",
            "email": "Elissa_Mante-Parisian35@hotmail.com",
            "password": "QHfXriPF6N5KNft",
            "administrador": "true",
            "_id": "FFZM41Oow8l2qF2x"
        },
        {
            "nome": "Steve O'Reilly",
      ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230627 14:02:32.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.622" endtime="20230627 14:02:32.784"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230627 14:02:32.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.784" endtime="20230627 14:02:32.784"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.622" endtime="20230627 14:02:32.784"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230627 14:02:32.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.785" endtime="20230627 14:02:32.786"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230627 14:02:32.786" endtime="20230627 14:02:32.787"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.785" endtime="20230627 14:02:32.787"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230627 14:02:32.788" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230627 14:02:32.787" endtime="20230627 14:02:32.788"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.787" endtime="20230627 14:02:32.788"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230627 14:02:32.620" endtime="20230627 14:02:32.788"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230627 14:02:32.789" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230627 14:02:32.789" endtime="20230627 14:02:32.790"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.789" endtime="20230627 14:02:32.790"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230627 14:02:32.790" level="INFO">${name} = Sarah Harris</msg>
<status status="PASS" starttime="20230627 14:02:32.790" endtime="20230627 14:02:32.790"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230627 14:02:32.791" level="INFO">${email} = michaeldaniel@example.org</msg>
<status status="PASS" starttime="20230627 14:02:32.791" endtime="20230627 14:02:32.791"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230627 14:02:32.792" level="INFO">${password} = 2ZPCADPomjLd</msg>
<status status="PASS" starttime="20230627 14:02:32.791" endtime="20230627 14:02:32.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230627 14:02:32.792" level="INFO">${name} = Sarah Harris</msg>
<status status="PASS" starttime="20230627 14:02:32.792" endtime="20230627 14:02:32.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230627 14:02:32.792" level="INFO">${email} = michaeldaniel@example.org</msg>
<status status="PASS" starttime="20230627 14:02:32.792" endtime="20230627 14:02:32.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230627 14:02:32.793" level="INFO">${password} = 2ZPCADPomjLd</msg>
<status status="PASS" starttime="20230627 14:02:32.792" endtime="20230627 14:02:32.793"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.790" endtime="20230627 14:02:32.793"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230627 14:02:32.794" level="INFO">${payload} = {'nome': 'Sarah Harris', 'email': 'michaeldaniel@example.org', 'password': '2ZPCADPomjLd', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230627 14:02:32.793" endtime="20230627 14:02:32.794"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230627 14:02:32.794" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230627 14:02:32.794" endtime="20230627 14:02:32.794"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230627 14:02:32.863" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"nome": "Sarah Harris", "email": "michaeldaniel@example.org", "password": "2ZPCADPomjLd", "administrador": "false"}' 
 </msg>
<msg timestamp="20230627 14:02:32.863" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0bf01bf6-a972-47da-a830-7d6183847361', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd52d847124f17d9161da50dd79d6b858', 'Date': 'Tue, 27 Jun 2023 14:02:32 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "cgieC5SocU5xDKVD"
} 
 </msg>
<msg timestamp="20230627 14:02:32.863" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.794" endtime="20230627 14:02:32.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230627 14:02:32.864" level="INFO">${user_id} = cgieC5SocU5xDKVD</msg>
<status status="PASS" starttime="20230627 14:02:32.863" endtime="20230627 14:02:32.864"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230627 14:02:32.865" level="INFO">${USER_ID} = cgieC5SocU5xDKVD</msg>
<status status="PASS" starttime="20230627 14:02:32.864" endtime="20230627 14:02:32.865"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230627 14:02:32.865" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.865" endtime="20230627 14:02:32.865"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.793" endtime="20230627 14:02:32.865"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230627 14:02:32.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.865" endtime="20230627 14:02:32.866"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230627 14:02:32.866" endtime="20230627 14:02:32.867"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.865" endtime="20230627 14:02:32.867"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230627 14:02:32.868" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230627 14:02:32.867" endtime="20230627 14:02:32.868"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.867" endtime="20230627 14:02:32.868"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230627 14:02:32.788" endtime="20230627 14:02:32.868"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230627 14:02:32.869" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230627 14:02:32.869" endtime="20230627 14:02:32.870"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.869" endtime="20230627 14:02:32.870"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230627 14:02:32.942" level="INFO">GET Request : url=https://serverest.dev/usuarios/cgieC5SocU5xDKVD 
 path_url=/usuarios/cgieC5SocU5xDKVD 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230627 14:02:32.942" level="INFO">GET Response : url=https://serverest.dev/usuarios/cgieC5SocU5xDKVD 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '451bda7e-32dc-4114-b89c-d37a333cc849', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8a1a6b74edc2656ddfce25999818e2e6', 'Date': 'Tue, 27 Jun 2023 14:02:32 GMT', 'Server': 'Google Frontend', 'Content-Length': '165'} 
 body={
    "nome": "Sarah Harris",
    "email": "michaeldaniel@example.org",
    "password": "2ZPCADPomjLd",
    "administrador": "false",
    "_id": "cgieC5SocU5xDKVD"
} 
 </msg>
<msg timestamp="20230627 14:02:32.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.870" endtime="20230627 14:02:32.942"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230627 14:02:32.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.942" endtime="20230627 14:02:32.943"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.870" endtime="20230627 14:02:32.943"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230627 14:02:32.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.943" endtime="20230627 14:02:32.944"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230627 14:02:32.944" endtime="20230627 14:02:32.945"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.943" endtime="20230627 14:02:32.945"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230627 14:02:32.946" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230627 14:02:32.945" endtime="20230627 14:02:32.946"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.945" endtime="20230627 14:02:32.946"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230627 14:02:32.868" endtime="20230627 14:02:32.946"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230627 14:02:32.947" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230627 14:02:32.947" endtime="20230627 14:02:32.947"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.947" endtime="20230627 14:02:32.947"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230627 14:02:32.948" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230627 14:02:32.948" endtime="20230627 14:02:32.948"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230627 14:02:32.948" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230627 14:02:32.948" endtime="20230627 14:02:32.949"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230627 14:02:33.020" level="INFO">PUT Request : url=https://serverest.dev/usuarios/cgieC5SocU5xDKVD 
 path_url=/usuarios/cgieC5SocU5xDKVD 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230627 14:02:33.020" level="INFO">PUT Response : url=https://serverest.dev/usuarios/cgieC5SocU5xDKVD 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c4696089-67d4-49f0-b60e-6377d83a88d5', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '19cdc5d9e93f293a52ad52cd554d27af', 'Date': 'Tue, 27 Jun 2023 14:02:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230627 14:02:33.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:32.949" endtime="20230627 14:02:33.020"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230627 14:02:33.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:33.020" endtime="20230627 14:02:33.021"/>
</kw>
<status status="PASS" starttime="20230627 14:02:32.948" endtime="20230627 14:02:33.021"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230627 14:02:33.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230627 14:02:33.021" endtime="20230627 14:02:33.022"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230627 14:02:33.022" endtime="20230627 14:02:33.022"/>
</kw>
<status status="PASS" starttime="20230627 14:02:33.021" endtime="20230627 14:02:33.023"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230627 14:02:33.023" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230627 14:02:33.023" endtime="20230627 14:02:33.024"/>
</kw>
<status status="PASS" starttime="20230627 14:02:33.023" endtime="20230627 14:02:33.024"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230627 14:02:32.946" endtime="20230627 14:02:33.024"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230627 14:02:33.025" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230627 14:02:33.025" endtime="20230627 14:02:33.025"/>
</kw>
<status status="PASS" starttime="20230627 14:02:33.025" endtime="20230627 14:02:33.025"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230627 14:02:33.091" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/cgieC5SocU5xDKVD 
 path_url=/usuarios/cgieC5SocU5xDKVD 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230627 14:02:33.091" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/cgieC5SocU5xDKVD 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dea0e695-09ac-400b-8e8d-cb270b231dd6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '07c19896d57691e686670ccb5970dbec', 'Date': 'Tue, 27 Jun 2023 14:02:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230627 14:02:33.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:33.026" endtime="20230627 14:02:33.091"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230627 14:02:33.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230627 14:02:33.092" endtime="20230627 14:02:33.092"/>
</kw>
<status status="PASS" starttime="20230627 14:02:33.025" endtime="20230627 14:02:33.092"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230627 14:02:33.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230627 14:02:33.093" endtime="20230627 14:02:33.093"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230627 14:02:33.094" endtime="20230627 14:02:33.094"/>
</kw>
<status status="PASS" starttime="20230627 14:02:33.092" endtime="20230627 14:02:33.094"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230627 14:02:33.095" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230627 14:02:33.095" endtime="20230627 14:02:33.095"/>
</kw>
<status status="PASS" starttime="20230627 14:02:33.094" endtime="20230627 14:02:33.095"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230627 14:02:33.024" endtime="20230627 14:02:33.095"/>
</test>
<status status="PASS" starttime="20230627 14:02:32.067" endtime="20230627 14:02:33.096"/>
</suite>
<status status="PASS" starttime="20230627 14:02:32.066" endtime="20230627 14:02:33.097"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230627 14:02:33.108" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230627 14:02:33.107" endtime="20230627 14:02:34.877"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230627 14:02:34.877" endtime="20230627 14:02:34.987"/>
</kw>
<status status="PASS" starttime="20230627 14:02:33.107" endtime="20230627 14:02:34.987"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230627 14:02:34.992" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230627 14:02:34.988" endtime="20230627 14:02:34.992"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:34.993" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230627 14:02:34.993" endtime="20230627 14:02:35.061"/>
</kw>
<status status="PASS" starttime="20230627 14:02:34.987" endtime="20230627 14:02:35.061"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:35.062" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230627 14:02:35.061" endtime="20230627 14:02:35.123"/>
</kw>
<status status="PASS" starttime="20230627 14:02:35.061" endtime="20230627 14:02:35.123"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230627 14:02:35.124" endtime="20230627 14:02:35.357"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230627 14:02:35.374" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230627 14:02:35.357" endtime="20230627 14:02:35.375"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230627 14:02:35.401" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230627 14:02:35.375" endtime="20230627 14:02:35.402"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230627 14:02:35.414" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230627 14:02:35.402" endtime="20230627 14:02:35.414"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230627 14:02:35.427" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230627 14:02:35.415" endtime="20230627 14:02:35.427"/>
</kw>
<status status="PASS" starttime="20230627 14:02:35.123" endtime="20230627 14:02:35.427"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230627 14:02:35.428" endtime="20230627 14:02:35.483"/>
</kw>
<status status="PASS" starttime="20230627 14:02:35.427" endtime="20230627 14:02:35.483"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230627 14:02:33.107" endtime="20230627 14:02:35.483"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230627 14:02:35.485" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230627 14:02:35.484" endtime="20230627 14:02:36.659"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230627 14:02:36.659" endtime="20230627 14:02:36.762"/>
</kw>
<status status="PASS" starttime="20230627 14:02:35.484" endtime="20230627 14:02:36.762"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230627 14:02:36.789" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230627 14:02:36.763" endtime="20230627 14:02:36.789"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:36.790" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230627 14:02:36.789" endtime="20230627 14:02:36.843"/>
</kw>
<status status="PASS" starttime="20230627 14:02:36.763" endtime="20230627 14:02:36.843"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230627 14:02:36.845" level="INFO">${name} = Kenneth Guerrero</msg>
<status status="PASS" starttime="20230627 14:02:36.844" endtime="20230627 14:02:36.845"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230627 14:02:36.845" level="INFO">${email} = vjames@example.org</msg>
<status status="PASS" starttime="20230627 14:02:36.845" endtime="20230627 14:02:36.845"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230627 14:02:36.846" level="INFO">${password} = 9sjXpOzueDnd</msg>
<status status="PASS" starttime="20230627 14:02:36.845" endtime="20230627 14:02:36.846"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:36.846" level="INFO">Typing text 'Kenneth Guerrero' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230627 14:02:36.846" endtime="20230627 14:02:36.978"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:36.979" level="INFO">Typing text 'vjames@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230627 14:02:36.979" endtime="20230627 14:02:37.084"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:37.085" level="INFO">Typing text '9sjXpOzueDnd' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230627 14:02:37.084" endtime="20230627 14:02:37.182"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:37.183" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230627 14:02:37.182" endtime="20230627 14:02:37.256"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230627 14:02:37.256" level="INFO">${name} = Kenneth Guerrero</msg>
<status status="PASS" starttime="20230627 14:02:37.256" endtime="20230627 14:02:37.256"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230627 14:02:37.257" level="INFO">${email} = vjames@example.org</msg>
<status status="PASS" starttime="20230627 14:02:37.256" endtime="20230627 14:02:37.257"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230627 14:02:37.257" level="INFO">${password} = 9sjXpOzueDnd</msg>
<status status="PASS" starttime="20230627 14:02:37.257" endtime="20230627 14:02:37.257"/>
</kw>
<status status="PASS" starttime="20230627 14:02:36.844" endtime="20230627 14:02:37.257"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:37.258" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230627 14:02:37.257" endtime="20230627 14:02:37.317"/>
</kw>
<status status="PASS" starttime="20230627 14:02:37.257" endtime="20230627 14:02:37.317"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230627 14:02:37.318" endtime="20230627 14:02:37.549"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230627 14:02:37.567" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230627 14:02:37.550" endtime="20230627 14:02:37.567"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230627 14:02:37.580" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230627 14:02:37.567" endtime="20230627 14:02:37.580"/>
</kw>
<status status="PASS" starttime="20230627 14:02:37.317" endtime="20230627 14:02:37.580"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230627 14:02:37.581" endtime="20230627 14:02:37.637"/>
</kw>
<status status="PASS" starttime="20230627 14:02:37.580" endtime="20230627 14:02:37.637"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230627 14:02:35.483" endtime="20230627 14:02:37.637"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230627 14:02:37.639" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230627 14:02:37.639" endtime="20230627 14:02:38.794"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230627 14:02:38.794" endtime="20230627 14:02:38.897"/>
</kw>
<status status="PASS" starttime="20230627 14:02:37.638" endtime="20230627 14:02:38.897"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230627 14:02:38.907" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230627 14:02:38.898" endtime="20230627 14:02:38.908"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:38.908" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230627 14:02:38.908" endtime="20230627 14:02:38.980"/>
</kw>
<status status="PASS" starttime="20230627 14:02:38.898" endtime="20230627 14:02:38.980"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:38.981" level="INFO">Typing text 'Kenneth Guerrero' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230627 14:02:38.980" endtime="20230627 14:02:39.106"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:39.107" level="INFO">Typing text 'vjames@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230627 14:02:39.106" endtime="20230627 14:02:39.208"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:39.209" level="INFO">Typing text '9sjXpOzueDnd' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230627 14:02:39.208" endtime="20230627 14:02:39.298"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:39.299" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230627 14:02:39.298" endtime="20230627 14:02:39.374"/>
</kw>
<status status="PASS" starttime="20230627 14:02:38.980" endtime="20230627 14:02:39.374"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230627 14:02:39.375" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230627 14:02:39.375" endtime="20230627 14:02:39.434"/>
</kw>
<status status="PASS" starttime="20230627 14:02:39.375" endtime="20230627 14:02:39.434"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230627 14:02:39.435" endtime="20230627 14:02:39.666"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230627 14:02:39.684" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230627 14:02:39.666" endtime="20230627 14:02:39.684"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230627 14:02:39.697" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230627 14:02:39.684" endtime="20230627 14:02:39.697"/>
</kw>
<status status="PASS" starttime="20230627 14:02:39.434" endtime="20230627 14:02:39.697"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230627 14:02:39.698" endtime="20230627 14:02:39.754"/>
</kw>
<status status="PASS" starttime="20230627 14:02:39.697" endtime="20230627 14:02:39.754"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230627 14:02:37.638" endtime="20230627 14:02:39.754"/>
</test>
<status status="PASS" starttime="20230627 14:02:33.099" endtime="20230627 14:02:39.755"/>
</suite>
<status status="PASS" starttime="20230627 14:02:33.098" endtime="20230627 14:02:39.756"/>
</suite>
<status status="PASS" starttime="20230627 14:02:32.047" endtime="20230627 14:02:39.757"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
