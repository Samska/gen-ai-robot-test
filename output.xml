<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230601 16:14:16.716" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:14:17.223" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:14:17.223" endtime="20230601 16:14:17.223"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.222" endtime="20230601 16:14:17.223"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:14:17.354" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 16:14:17.355" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a94c26f4-4bc2-47ed-93ab-1b59a2912fa5', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '990b4bc86025ac248fbdbaa5cf7b156f;o=1', 'Date': 'Thu, 01 Jun 2023 16:14:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '7004'} 
 body={
    "quantidade": 32,
    "usuarios": [
        {
            "nome": "Keith White",
            "email": "keithwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "3VkyFCZjaX55brOB"
        },
        {
            "nome": "Riley Meadows",
            "email": "wardlindsay@example.com",
            "password": "21nem33sV3Wv",
            "administrador": "true",
            "_id": "6ZrbiguZb3H8xbz7"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa123.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "96IkPoiwTd6W8E6G"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "9gstdMBMAIERTqbi"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0113@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "ANUh6vcjepjot9m4"
        },
        {
            "nome": "Teste no RobotFramework1234",
            "email": "juarez4543210@hotmail.com",
            "password": "testenovo1234",
            "administrador": "true",
            "_id": "DJQllXTesdJUv25t"
        },
        {
            "nome": "Jose Souza da Silva",
            "email": "testetwt0114@google.com.br",
            "password": "12345",
            "administrador": "true",
            "_id": "MZEGk2tTLklplZrU"
        },
        {
            "nome": "Abigail Pearson",
            "email": "leelori@example.com",
            "password": "4gZoJFVoISqd",
            "administrador": "true",
            "_id": "P11p6mS9e6j3lRWe"
        },
        {
            "nome": "{{nome}}",
            "email": "Cruz@qa.com.br",
            "password": "SCHV6xXB1_PATmh",
            "administrador": "true",
            "_id": "QEculbd1dJsuv18G"
        },
        {
            "nome": "Teste de Exclusão",
            "email": "exlusao@qa.com.br",
            "password": "teste123",
            "administrador": "true",
            "_id": "RsFp1ZZGSqG68iGD"
        },
        {
            "nome": "Troy Moran",
            "email": "jonesdavid@example.org",
            "password": "fwHMTsFS3mgk",
            "administrador": "true",
            "_id": "U4gcbj9QPFePTMvA"
        },
        {
            "nome": "Donald Palmer",
            "email": "kshannon@example.net",
            "password": "MN61aKMyY2Zp",
            "administrador": "true",
            "_id": "WJLRKci7u4ThQVZi"
        },
        {
            "nome": "Bridget Satterfield",
            "email": "bridgetsatterfield@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "WaoQ0bq06WgCyzh1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ernx@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "WtAPGAoNV80jZwAT"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "eQc31OFVrLb6TURi"
        },
        {
            "nome": "{{nome}}",
            "email": "Jodie@qa.com.br",
            "password": "3onkUz5ipDWE6lF",
            "administrador": "true",
            "_id": "eebiRBQzxAfjwBud"
        },
        {
            "nome": "{{nome}}",
            "email": "Wade@qa.com.br",
            "password": "75sp8gpG4_cwEJL",
            "administrador": "true",
            "_id": "eiYlTXHzMuezZ3JP"
        },
        {
            "nome": "{{nome}}",
            "email": "Laurianne@qa.com.br",
            "password": "BehI7ZauXa4BWJG",
            "administrador": "true",
            "_id": "fxPPNR85wYe2RWUx"
        },
        {
            "nome": "{{nome}}",
            "email": "Hadley@qa.com.br",
            "password": "cTFFNtgOYHKCveO",
            "administrador": "true",
            "_id": "gP4GN1H0ztPPVm4T"
        },
        {
            "nome": "Jason Rodriguez",
            "email": "tracivang@example.com",
            "password": "tFOdqK1b4bdb",
            "administrador": "true",
            "_id": "hOHsnxKpiWHMWThP"
        },
        {
            "nome": "Stephen Price",
            "email": "schaeferdylan@example.com",
            "password": "8O6ksSdDZp24",
            "administrador": "true",
            "_id": "hgBx9ALEJofc7VxJ"
        },
        {
            "nome": "Ola Kilback",
            "email": "Bernadine_Feeney@hotmail.com",
            "password": "2RdPzziLESCIj3C",
            "administrador": "false",
            "_id": "jxTheZsEleTA4Xfv"
        },
        {
            "nome": "Mercedes Gardner",
            "email": "rkoch@example.com",
            "password": "OyTwLmx2r7d6",
            "administrador": "true",
            "_id": "kBYMC5WIZH4pm0RH"
        },
        {
            "nome": "anderson",
            "email": "anderson@qa.com.br",
            "password": "123",
            "administrador": "false",
            "_id": "lW623yJDD7ZwfEO0"
        },
        {
            "nome": "Cheyenne Knox",
            "email": "connierodriguez@example.org",
            "password": "2XpL75uHis1Y",
            "administrador": "true",
            "_id": "nQr8zF2KskcB67UX"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano_teste@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "r4MkfwAxanGM2wV0"
        },
        {
            "nome": "Marcelle_Grant92",
            "email": "Adrien_Rowe89@gmail.com",
            "password": "123456789",
            "administrador": "true",
            "_id": "sU9Mo6xgAmg5VBph"
        },
        {
            "nome": "Eric Adkins",
            "email": "qmcclure@example.org",
            "password": "1JkxKESr0UqK",
            "administrador": "true",
            "_id": "srS7Ou0Du5FNhP2x"
        },
        {
            "nome": "Kenneth Hardy",
            "email": "katieschneider@example.net",
            "password": "efCQm5Pmd34V",
            "administrador": "true",
            "_id": "t4aiT0ZRVdeAqfI0"
        },
        {
            "nome": "Troy Ray",
            "email": "debbie39@example.net",
            "password": "di5JjZtW5C2X",
            "administrador": "true",
            "_id": "w6qnBS2wGoSELmzN"
        },
        {
            "nome": "Wendell White",
            "email": "wendellwhite@test.com",
            "password": "Test;123",
            "administrador": "true",
            "_id": "wbGsZa5vMrOWAm7a"
        },
        {
            "nome": "julia",
            "email": "contatojuliasena2@gmail.com",
            "password": "07101995",
            "administrador": "false",
            "_id": "x5hhnzNB64soj1IS"
        }
    ]
} 
 </msg>
<msg timestamp="20230601 16:14:17.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.224" endtime="20230601 16:14:17.355"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:14:17.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.355" endtime="20230601 16:14:17.355"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.223" endtime="20230601 16:14:17.356"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:14:17.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.356" endtime="20230601 16:14:17.357"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:14:17.357" endtime="20230601 16:14:17.357"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.356" endtime="20230601 16:14:17.358"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:14:17.358" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 16:14:17.358" endtime="20230601 16:14:17.358"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.358" endtime="20230601 16:14:17.359"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:14:17.222" endtime="20230601 16:14:17.359"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:14:17.360" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:14:17.360" endtime="20230601 16:14:17.360"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.360" endtime="20230601 16:14:17.360"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 16:14:17.361" level="INFO">${name} = Daniel Stephens</msg>
<status status="PASS" starttime="20230601 16:14:17.361" endtime="20230601 16:14:17.361"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 16:14:17.362" level="INFO">${email} = fcunningham@example.com</msg>
<status status="PASS" starttime="20230601 16:14:17.361" endtime="20230601 16:14:17.362"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 16:14:17.362" level="INFO">${password} = xMsOnWhH7SUV</msg>
<status status="PASS" starttime="20230601 16:14:17.362" endtime="20230601 16:14:17.362"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:14:17.362" level="INFO">${name} = Daniel Stephens</msg>
<status status="PASS" starttime="20230601 16:14:17.362" endtime="20230601 16:14:17.362"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:14:17.363" level="INFO">${email} = fcunningham@example.com</msg>
<status status="PASS" starttime="20230601 16:14:17.363" endtime="20230601 16:14:17.363"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:14:17.363" level="INFO">${password} = xMsOnWhH7SUV</msg>
<status status="PASS" starttime="20230601 16:14:17.363" endtime="20230601 16:14:17.363"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.360" endtime="20230601 16:14:17.363"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:14:17.364" level="INFO">${payload} = {'nome': 'Daniel Stephens', 'email': 'fcunningham@example.com', 'password': 'xMsOnWhH7SUV', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 16:14:17.364" endtime="20230601 16:14:17.364"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:14:17.364" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 16:14:17.364" endtime="20230601 16:14:17.364"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:14:17.428" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"nome": "Daniel Stephens", "email": "fcunningham@example.com", "password": "xMsOnWhH7SUV", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 16:14:17.428" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3eb8ddde-c38c-41b2-967f-b1f63fb51905', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ab33f361503a4af1060660f96f199074', 'Date': 'Thu, 01 Jun 2023 16:14:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "cZ7Bh84rCfutIsEk"
} 
 </msg>
<msg timestamp="20230601 16:14:17.428" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.364" endtime="20230601 16:14:17.428"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230601 16:14:17.429" level="INFO">${user_id} = cZ7Bh84rCfutIsEk</msg>
<status status="PASS" starttime="20230601 16:14:17.428" endtime="20230601 16:14:17.429"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230601 16:14:17.429" level="INFO">${USER_ID} = cZ7Bh84rCfutIsEk</msg>
<status status="PASS" starttime="20230601 16:14:17.429" endtime="20230601 16:14:17.429"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:14:17.430" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.429" endtime="20230601 16:14:17.430"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.363" endtime="20230601 16:14:17.430"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:14:17.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.430" endtime="20230601 16:14:17.431"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:14:17.431" endtime="20230601 16:14:17.431"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.430" endtime="20230601 16:14:17.432"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:14:17.432" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230601 16:14:17.432" endtime="20230601 16:14:17.432"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.432" endtime="20230601 16:14:17.433"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:14:17.359" endtime="20230601 16:14:17.433"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:14:17.434" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:14:17.434" endtime="20230601 16:14:17.435"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.434" endtime="20230601 16:14:17.435"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:14:17.497" level="INFO">GET Request : url=https://serverest.dev/usuarios/cZ7Bh84rCfutIsEk 
 path_url=/usuarios/cZ7Bh84rCfutIsEk 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230601 16:14:17.497" level="INFO">GET Response : url=https://serverest.dev/usuarios/cZ7Bh84rCfutIsEk 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '9c5889f3-8f58-433f-b2d7-24e2d3d1a532', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c16334956be195fe89d9e2eeb18ea528', 'Date': 'Thu, 01 Jun 2023 16:14:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '166'} 
 body={
    "nome": "Daniel Stephens",
    "email": "fcunningham@example.com",
    "password": "xMsOnWhH7SUV",
    "administrador": "false",
    "_id": "cZ7Bh84rCfutIsEk"
} 
 </msg>
<msg timestamp="20230601 16:14:17.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.435" endtime="20230601 16:14:17.498"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:14:17.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.498" endtime="20230601 16:14:17.498"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.435" endtime="20230601 16:14:17.498"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:14:17.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.498" endtime="20230601 16:14:17.499"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:14:17.499" endtime="20230601 16:14:17.500"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.498" endtime="20230601 16:14:17.500"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:14:17.501" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230601 16:14:17.500" endtime="20230601 16:14:17.501"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.500" endtime="20230601 16:14:17.501"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:14:17.433" endtime="20230601 16:14:17.501"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:14:17.502" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:14:17.502" endtime="20230601 16:14:17.503"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.502" endtime="20230601 16:14:17.503"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:14:17.503" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230601 16:14:17.503" endtime="20230601 16:14:17.503"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230601 16:14:17.504" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230601 16:14:17.503" endtime="20230601 16:14:17.504"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:14:17.571" level="INFO">PUT Request : url=https://serverest.dev/usuarios/cZ7Bh84rCfutIsEk 
 path_url=/usuarios/cZ7Bh84rCfutIsEk 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230601 16:14:17.571" level="INFO">PUT Response : url=https://serverest.dev/usuarios/cZ7Bh84rCfutIsEk 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1886f584-2a12-4637-9355-aecb0e16672d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ff565b96d4fd78b1c8919fe4a73ab186', 'Date': 'Thu, 01 Jun 2023 16:14:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230601 16:14:17.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.504" endtime="20230601 16:14:17.571"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:14:17.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.571" endtime="20230601 16:14:17.572"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.503" endtime="20230601 16:14:17.572"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:14:17.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.572" endtime="20230601 16:14:17.573"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:14:17.573" endtime="20230601 16:14:17.574"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.572" endtime="20230601 16:14:17.574"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:14:17.575" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 16:14:17.574" endtime="20230601 16:14:17.575"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.574" endtime="20230601 16:14:17.575"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:14:17.501" endtime="20230601 16:14:17.575"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230601 16:14:17.576" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230601 16:14:17.576" endtime="20230601 16:14:17.576"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.576" endtime="20230601 16:14:17.577"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230601 16:14:17.640" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/cZ7Bh84rCfutIsEk 
 path_url=/usuarios/cZ7Bh84rCfutIsEk 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230601 16:14:17.640" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/cZ7Bh84rCfutIsEk 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '584ddbea-ef11-49e2-ae5d-16ae6307ce38', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9c73af424a09e80b952d26c8dfcef027', 'Date': 'Thu, 01 Jun 2023 16:14:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230601 16:14:17.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.577" endtime="20230601 16:14:17.640"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230601 16:14:17.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.640" endtime="20230601 16:14:17.641"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.577" endtime="20230601 16:14:17.641"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230601 16:14:17.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 16:14:17.641" endtime="20230601 16:14:17.642"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230601 16:14:17.642" endtime="20230601 16:14:17.642"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.641" endtime="20230601 16:14:17.643"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230601 16:14:17.643" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230601 16:14:17.643" endtime="20230601 16:14:17.643"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.643" endtime="20230601 16:14:17.644"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230601 16:14:17.575" endtime="20230601 16:14:17.644"/>
</test>
<status status="PASS" starttime="20230601 16:14:16.737" endtime="20230601 16:14:17.644"/>
</suite>
<status status="PASS" starttime="20230601 16:14:16.736" endtime="20230601 16:14:17.645"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 16:14:17.655" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 16:14:17.655" endtime="20230601 16:14:22.640"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 16:14:22.641" endtime="20230601 16:14:22.757"/>
</kw>
<status status="PASS" starttime="20230601 16:14:17.654" endtime="20230601 16:14:22.757"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 16:14:22.762" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 16:14:22.758" endtime="20230601 16:14:22.762"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:22.763" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 16:14:22.762" endtime="20230601 16:14:22.909"/>
</kw>
<status status="PASS" starttime="20230601 16:14:22.757" endtime="20230601 16:14:22.909"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:22.910" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 16:14:22.909" endtime="20230601 16:14:23.028"/>
</kw>
<status status="PASS" starttime="20230601 16:14:22.909" endtime="20230601 16:14:23.029"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 16:14:23.029" endtime="20230601 16:14:23.268"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 16:14:23.286" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 16:14:23.268" endtime="20230601 16:14:23.286"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:14:23.327" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230601 16:14:23.286" endtime="20230601 16:14:23.327"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:14:23.339" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230601 16:14:23.327" endtime="20230601 16:14:23.339"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:14:23.351" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230601 16:14:23.339" endtime="20230601 16:14:23.351"/>
</kw>
<status status="PASS" starttime="20230601 16:14:23.029" endtime="20230601 16:14:23.352"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 16:14:23.352" endtime="20230601 16:14:23.407"/>
</kw>
<status status="PASS" starttime="20230601 16:14:23.352" endtime="20230601 16:14:23.408"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 16:14:17.654" endtime="20230601 16:14:23.408"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 16:14:23.410" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 16:14:23.409" endtime="20230601 16:14:24.608"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 16:14:24.609" endtime="20230601 16:14:24.729"/>
</kw>
<status status="PASS" starttime="20230601 16:14:23.409" endtime="20230601 16:14:24.729"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 16:14:24.734" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 16:14:24.730" endtime="20230601 16:14:24.734"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:24.735" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 16:14:24.734" endtime="20230601 16:14:24.787"/>
</kw>
<status status="PASS" starttime="20230601 16:14:24.729" endtime="20230601 16:14:24.787"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230601 16:14:24.788" level="INFO">${name} = Michael Torres</msg>
<status status="PASS" starttime="20230601 16:14:24.787" endtime="20230601 16:14:24.788"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230601 16:14:24.789" level="INFO">${email} = sharonmoore@example.org</msg>
<status status="PASS" starttime="20230601 16:14:24.788" endtime="20230601 16:14:24.789"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230601 16:14:24.789" level="INFO">${password} = t4wu3WWhnqn7</msg>
<status status="PASS" starttime="20230601 16:14:24.789" endtime="20230601 16:14:24.789"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:24.790" level="INFO">Typing text 'Michael Torres' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 16:14:24.790" endtime="20230601 16:14:24.942"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:24.942" level="INFO">Typing text 'sharonmoore@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 16:14:24.942" endtime="20230601 16:14:25.062"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:25.063" level="INFO">Typing text 't4wu3WWhnqn7' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 16:14:25.062" endtime="20230601 16:14:25.159"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:25.160" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 16:14:25.159" endtime="20230601 16:14:25.238"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:14:25.239" level="INFO">${name} = Michael Torres</msg>
<status status="PASS" starttime="20230601 16:14:25.238" endtime="20230601 16:14:25.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:14:25.239" level="INFO">${email} = sharonmoore@example.org</msg>
<status status="PASS" starttime="20230601 16:14:25.239" endtime="20230601 16:14:25.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230601 16:14:25.240" level="INFO">${password} = t4wu3WWhnqn7</msg>
<status status="PASS" starttime="20230601 16:14:25.239" endtime="20230601 16:14:25.240"/>
</kw>
<status status="PASS" starttime="20230601 16:14:24.787" endtime="20230601 16:14:25.240"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:25.241" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 16:14:25.240" endtime="20230601 16:14:25.296"/>
</kw>
<status status="PASS" starttime="20230601 16:14:25.240" endtime="20230601 16:14:25.297"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 16:14:25.297" endtime="20230601 16:14:25.528"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 16:14:25.546" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 16:14:25.529" endtime="20230601 16:14:25.546"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:14:25.558" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230601 16:14:25.546" endtime="20230601 16:14:25.558"/>
</kw>
<status status="PASS" starttime="20230601 16:14:25.297" endtime="20230601 16:14:25.558"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 16:14:25.559" endtime="20230601 16:14:25.614"/>
</kw>
<status status="PASS" starttime="20230601 16:14:25.559" endtime="20230601 16:14:25.614"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 16:14:23.408" endtime="20230601 16:14:25.614"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230601 16:14:25.616" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230601 16:14:25.616" endtime="20230601 16:14:26.759"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230601 16:14:26.760" endtime="20230601 16:14:26.863"/>
</kw>
<status status="PASS" starttime="20230601 16:14:25.615" endtime="20230601 16:14:26.863"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230601 16:14:26.869" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230601 16:14:26.864" endtime="20230601 16:14:26.869"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:26.870" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230601 16:14:26.869" endtime="20230601 16:14:26.941"/>
</kw>
<status status="PASS" starttime="20230601 16:14:26.863" endtime="20230601 16:14:26.941"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:26.942" level="INFO">Typing text 'Michael Torres' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230601 16:14:26.941" endtime="20230601 16:14:27.057"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:27.058" level="INFO">Typing text 'sharonmoore@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230601 16:14:27.057" endtime="20230601 16:14:27.154"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:27.155" level="INFO">Typing text 't4wu3WWhnqn7' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230601 16:14:27.154" endtime="20230601 16:14:27.233"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:27.234" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230601 16:14:27.233" endtime="20230601 16:14:27.303"/>
</kw>
<status status="PASS" starttime="20230601 16:14:26.941" endtime="20230601 16:14:27.303"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230601 16:14:27.304" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230601 16:14:27.303" endtime="20230601 16:14:27.358"/>
</kw>
<status status="PASS" starttime="20230601 16:14:27.303" endtime="20230601 16:14:27.358"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230601 16:14:27.359" endtime="20230601 16:14:27.591"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230601 16:14:27.609" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230601 16:14:27.592" endtime="20230601 16:14:27.609"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230601 16:14:27.621" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230601 16:14:27.609" endtime="20230601 16:14:27.621"/>
</kw>
<status status="PASS" starttime="20230601 16:14:27.359" endtime="20230601 16:14:27.622"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230601 16:14:27.622" endtime="20230601 16:14:27.677"/>
</kw>
<status status="PASS" starttime="20230601 16:14:27.622" endtime="20230601 16:14:27.678"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230601 16:14:25.615" endtime="20230601 16:14:27.678"/>
</test>
<status status="PASS" starttime="20230601 16:14:17.648" endtime="20230601 16:14:27.678"/>
</suite>
<status status="PASS" starttime="20230601 16:14:17.646" endtime="20230601 16:14:27.680"/>
</suite>
<status status="PASS" starttime="20230601 16:14:16.717" endtime="20230601 16:14:27.681"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
