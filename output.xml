<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230415 15:49:47.872" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230415 15:49:48.277" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230415 15:49:48.277" endtime="20230415 15:49:48.278"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.276" endtime="20230415 15:49:48.278"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230415 15:49:48.441" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230415 15:49:48.441" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '7facfa7c-c1b0-4b66-b44e-7d32427a6ce7', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9c2d6602b4fe04972d914c872d21a683;o=1', 'Date': 'Sat, 15 Apr 2023 15:49:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '1123'} 
 body={
    "quantidade": 5,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Fulano da Silva",
            "email": "mvsc@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "Ese8kfsNXBvZG0WI"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Delphine89@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "TOqVYuQcEdeGpnmy"
        },
        {
            "nome": "{{generatedName}}",
            "email": "August_Kovacek60@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "U9ecwP72iGF8nlgy"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Trevion.Sawayn66@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "X8x3JKpZZAsVzaXo"
        }
    ]
} 
 </msg>
<msg timestamp="20230415 15:49:48.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.278" endtime="20230415 15:49:48.441"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230415 15:49:48.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.442" endtime="20230415 15:49:48.442"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.278" endtime="20230415 15:49:48.442"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230415 15:49:48.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.443" endtime="20230415 15:49:48.443"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230415 15:49:48.444" endtime="20230415 15:49:48.444"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.442" endtime="20230415 15:49:48.444"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230415 15:49:48.445" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230415 15:49:48.445" endtime="20230415 15:49:48.445"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.444" endtime="20230415 15:49:48.446"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.276" endtime="20230415 15:49:48.446"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230415 15:49:48.447" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230415 15:49:48.447" endtime="20230415 15:49:48.447"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.447" endtime="20230415 15:49:48.448"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230415 15:49:48.448" level="INFO">${name} = Amy Pollard</msg>
<status status="PASS" starttime="20230415 15:49:48.448" endtime="20230415 15:49:48.448"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230415 15:49:48.449" level="INFO">${email} = pnolan@example.net</msg>
<status status="PASS" starttime="20230415 15:49:48.449" endtime="20230415 15:49:48.449"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230415 15:49:48.449" level="INFO">${password} = _TD2DZrvCg</msg>
<status status="PASS" starttime="20230415 15:49:48.449" endtime="20230415 15:49:48.449"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230415 15:49:48.450" level="INFO">${name} = Amy Pollard</msg>
<status status="PASS" starttime="20230415 15:49:48.449" endtime="20230415 15:49:48.450"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230415 15:49:48.450" level="INFO">${email} = pnolan@example.net</msg>
<status status="PASS" starttime="20230415 15:49:48.450" endtime="20230415 15:49:48.450"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230415 15:49:48.450" level="INFO">${password} = _TD2DZrvCg</msg>
<status status="PASS" starttime="20230415 15:49:48.450" endtime="20230415 15:49:48.450"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.448" endtime="20230415 15:49:48.451"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230415 15:49:48.452" level="INFO">${payload} = {'nome': 'Amy Pollard', 'email': 'pnolan@example.net', 'password': '_TD2DZrvCg', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230415 15:49:48.451" endtime="20230415 15:49:48.452"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230415 15:49:48.452" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230415 15:49:48.452" endtime="20230415 15:49:48.452"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230415 15:49:48.545" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '106'} 
 body=b'{"nome": "Amy Pollard", "email": "pnolan@example.net", "password": "_TD2DZrvCg", "administrador": "false"}' 
 </msg>
<msg timestamp="20230415 15:49:48.545" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '37936107-a843-488f-b3e8-648ca2f1d295', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4c9f189fb962c0aa9472a99ac8f060db', 'Date': 'Sat, 15 Apr 2023 15:49:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "KcOfFlLMLEUMY78K"
} 
 </msg>
<msg timestamp="20230415 15:49:48.545" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.452" endtime="20230415 15:49:48.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230415 15:49:48.546" level="INFO">${user_id} = KcOfFlLMLEUMY78K</msg>
<status status="PASS" starttime="20230415 15:49:48.545" endtime="20230415 15:49:48.546"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230415 15:49:48.546" level="INFO">${USER_ID} = KcOfFlLMLEUMY78K</msg>
<status status="PASS" starttime="20230415 15:49:48.546" endtime="20230415 15:49:48.547"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230415 15:49:48.547" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.547" endtime="20230415 15:49:48.547"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.451" endtime="20230415 15:49:48.547"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230415 15:49:48.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.548" endtime="20230415 15:49:48.548"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230415 15:49:48.548" endtime="20230415 15:49:48.549"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.547" endtime="20230415 15:49:48.549"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230415 15:49:48.550" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230415 15:49:48.550" endtime="20230415 15:49:48.550"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.549" endtime="20230415 15:49:48.550"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.446" endtime="20230415 15:49:48.550"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230415 15:49:48.552" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230415 15:49:48.551" endtime="20230415 15:49:48.552"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.551" endtime="20230415 15:49:48.552"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230415 15:49:48.628" level="INFO">GET Request : url=https://serverest.dev/usuarios/KcOfFlLMLEUMY78K 
 path_url=/usuarios/KcOfFlLMLEUMY78K 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230415 15:49:48.628" level="INFO">GET Response : url=https://serverest.dev/usuarios/KcOfFlLMLEUMY78K 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f83fc2c9-3092-4678-abbc-068a6952c240', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ea5b93236347c8d702d0eab3728ccfaa', 'Date': 'Sat, 15 Apr 2023 15:49:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '155'} 
 body={
    "nome": "Amy Pollard",
    "email": "pnolan@example.net",
    "password": "_TD2DZrvCg",
    "administrador": "false",
    "_id": "KcOfFlLMLEUMY78K"
} 
 </msg>
<msg timestamp="20230415 15:49:48.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.552" endtime="20230415 15:49:48.628"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230415 15:49:48.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.628" endtime="20230415 15:49:48.629"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.552" endtime="20230415 15:49:48.629"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230415 15:49:48.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.629" endtime="20230415 15:49:48.630"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230415 15:49:48.630" endtime="20230415 15:49:48.631"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.629" endtime="20230415 15:49:48.631"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230415 15:49:48.632" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230415 15:49:48.631" endtime="20230415 15:49:48.632"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.631" endtime="20230415 15:49:48.632"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.551" endtime="20230415 15:49:48.632"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230415 15:49:48.633" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230415 15:49:48.633" endtime="20230415 15:49:48.634"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.633" endtime="20230415 15:49:48.634"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230415 15:49:48.635" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230415 15:49:48.634" endtime="20230415 15:49:48.635"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230415 15:49:48.635" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230415 15:49:48.635" endtime="20230415 15:49:48.635"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230415 15:49:48.716" level="INFO">PUT Request : url=https://serverest.dev/usuarios/KcOfFlLMLEUMY78K 
 path_url=/usuarios/KcOfFlLMLEUMY78K 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230415 15:49:48.717" level="INFO">PUT Response : url=https://serverest.dev/usuarios/KcOfFlLMLEUMY78K 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bd428571-6950-4c98-bd9d-d3928e7bf1d9', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '34553a75948775ed42bfc1c507622162', 'Date': 'Sat, 15 Apr 2023 15:49:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230415 15:49:48.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.635" endtime="20230415 15:49:48.717"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230415 15:49:48.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.717" endtime="20230415 15:49:48.717"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.634" endtime="20230415 15:49:48.717"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230415 15:49:48.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.718" endtime="20230415 15:49:48.719"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230415 15:49:48.719" endtime="20230415 15:49:48.720"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.718" endtime="20230415 15:49:48.720"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230415 15:49:48.721" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230415 15:49:48.720" endtime="20230415 15:49:48.721"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.720" endtime="20230415 15:49:48.721"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.632" endtime="20230415 15:49:48.721"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230415 15:49:48.722" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230415 15:49:48.722" endtime="20230415 15:49:48.722"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.722" endtime="20230415 15:49:48.723"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230415 15:49:48.802" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/KcOfFlLMLEUMY78K 
 path_url=/usuarios/KcOfFlLMLEUMY78K 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230415 15:49:48.802" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/KcOfFlLMLEUMY78K 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6fbcb0c7-cba4-4a4a-a16b-357299f2082a', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '97afe3ab66431c314964d567e379bd01', 'Date': 'Sat, 15 Apr 2023 15:49:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230415 15:49:48.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.723" endtime="20230415 15:49:48.802"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230415 15:49:48.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.803" endtime="20230415 15:49:48.803"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.723" endtime="20230415 15:49:48.803"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230415 15:49:48.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230415 15:49:48.804" endtime="20230415 15:49:48.804"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230415 15:49:48.805" endtime="20230415 15:49:48.805"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.803" endtime="20230415 15:49:48.805"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230415 15:49:48.806" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230415 15:49:48.806" endtime="20230415 15:49:48.806"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.805" endtime="20230415 15:49:48.806"/>
</kw>
<status status="PASS" starttime="20230415 15:49:48.721" endtime="20230415 15:49:48.806"/>
</test>
<status status="PASS" starttime="20230415 15:49:47.894" endtime="20230415 15:49:48.807"/>
</suite>
<status status="PASS" starttime="20230415 15:49:47.893" endtime="20230415 15:49:48.809"/>
</suite>
<status status="PASS" starttime="20230415 15:49:47.891" endtime="20230415 15:49:48.810"/>
</suite>
<status status="PASS" starttime="20230415 15:49:47.873" endtime="20230415 15:49:48.811"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
