<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230511 01:02:36.187" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230511 01:02:36.797" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230511 01:02:36.797" endtime="20230511 01:02:36.797"/>
</kw>
<status status="PASS" starttime="20230511 01:02:36.796" endtime="20230511 01:02:36.797"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230511 01:02:36.954" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230511 01:02:36.955" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8ede36ee-b040-4390-8ddf-c6052a12d8ac', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '60cfa329166e17fc3e14ce910736f298;o=1', 'Date': 'Thu, 11 May 2023 01:02:36 GMT', 'Server': 'Google Frontend', 'Content-Length': '10442'} 
 body={
    "quantidade": 47,
    "usuarios": [
        {
            "nome": "Michael Webb",
            "email": "rachael48@example.net",
            "password": "vsJ$SoOEy0JIk0qu",
            "administrador": "true",
            "_id": "0MghHke0QStGAK3g"
        },
        {
            "nome": "Harold Jennings",
            "email": "zsullivan@example.org",
            "password": "bN3ssgx9%sM+V!)*",
            "administrador": "true",
            "_id": "0m911ghkq8ntw9IK"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Gregory Weaver",
            "email": "omiranda@example.org",
            "password": "@1CMm$SKugI2F84s",
            "administrador": "true",
            "_id": "1Q9djnBPzFD9ETHn"
        },
        {
            "nome": "Ruben Powell",
            "email": "rgregory@example.net",
            "password": "c(24VE0hm4yxNMUF",
            "administrador": "true",
            "_id": "2FKTqhuQtl2PnATU"
        },
        {
            "nome": "Joshua Nichols",
            "email": "williamsdouglas@example.net",
            "password": "&amp;C(O0Pw%E4S@TKHV",
            "administrador": "true",
            "_id": "4B8mLgyC67MUVxhG"
        },
        {
            "nome": "Jill Williams",
            "email": "justin54@example.org",
            "password": "yjlZD8Gd4(wu7Uia",
            "administrador": "true",
            "_id": "5toVyfTGvejmsNmP"
        },
        {
            "nome": "Teste QA",
            "email": "testesa@gmail.com",
            "password": "12345",
            "administrador": "true",
            "_id": "6YPO5RopSLZh3xxN"
        },
        {
            "nome": "Laura Jackson",
            "email": "rdiaz@example.net",
            "password": "l5Q_pI&amp;X!*ys#G(S",
            "administrador": "true",
            "_id": "6rlmCO9QImLQNIKQ"
        },
        {
            "nome": "Leandro",
            "email": "leandro@leandroadmin.com",
            "password": "h8HnXG7d6MuftUM",
            "administrador": "true",
            "_id": "8VNgSzi2quIlyf0F"
        },
        {
            "nome": "Darin Garcia",
            "email": "marywilkerson@example.net",
            "password": "Nu*@25l@$FNyO1i3",
            "administrador": "true",
            "_id": "8fW66uxNpu425kXY"
        },
        {
            "nome": "Glenn Pearson",
            "email": "cookmichele@example.net",
            "password": "bc4Us(Sjw+pH6!3Q",
            "administrador": "true",
            "_id": "A5CeshpKijIaXECF"
        },
        {
            "nome": "Fulano da Silva",
            "email": "gbak@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "BQgVf5uQh7uAluL7"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Virgil.Bednar@example.org",
            "password": "teste",
            "administrador": "true",
            "_id": "D4LI18QjrDcWzY2L"
        },
        {
            "nome": "Heather Young",
            "email": "savagelarry@example.org",
            "password": "kt_H)yQugnx6f7BW",
            "administrador": "true",
            "_id": "ErBpdRUfhzGeAaVW"
        },
        {
            "nome": "Nancy Graham",
            "email": "zclark@example.org",
            "password": "rHYN9hOL+*3ix4ed",
            "administrador": "true",
            "_id": "J1VAc5ZB2Rqq39Wr"
        },
        {
            "nome": "Marvin.Windler",
            "email": "Lori_Leannon79@hotmail.com",
            "password": "d6jCUP_oTWRLYct",
            "administrador": "true",
            "_id": "N8XEYEz9HTykBWsk"
        },
        {
            "nome": "Hannah Williams",
            "email": "lsnyder@example.com",
            "password": "DGA)*3OH(1smHQ84",
            "administrador": "true",
            "_id": "NmEDXu5mk3JqH5xe"
        },
        {
            "nome": "Leandro",
            "email": "leandro@leandronaoadmin.com",
            "password": "h8HnXG7d6MuftUM",
            "administrador": "false",
            "_id": "OU84cZHEQOCkjEGi"
        },
        {
            "nome": "Christopher Brown",
            "email": "perezterri@example.net",
            "password": "N)H$l7V7%(8%2rmz",
            "administrador": "true",
            "_id": "QYcAggInS7cXOMJE"
        },
        {
            "nome": "Norma Hernandez",
            "email": "margarethoward@example.org",
            "password": "p9T%o!cN$#Tni87t",
            "administrador": "true",
            "_id": "SYg8vOVxFCnb015V"
        },
        {
            "nome": "Fulano da Silva",
            "email": "idpr@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "TSEYwcizzXmSqPoX"
        },
        {
            "nome": "Elizabeth Bruce",
            "email": "cohenjohnathan@example.net",
            "password": "$3A9HEzo5_1IxsOL",
            "administrador": "true",
            "_id": "V0k2wYvzWpE9Gjbo"
        },
        {
            "nome": "Jillian Ryan",
            "email": "justin78@example.com",
            "password": "*6*TzA9k0g4FiY5L",
            "administrador": "true",
            "_id": "V8zF7KL465Tjevz5"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ojyn@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "VGHnLkfwDeF2nPsg"
        },
        {
            "nome": "Jason56",
            "email": "Abdullah.Kuvalis11@hotmail.com",
            "password": "uPF5URIc5y6Rsq2",
            "administrador": "true",
            "_id": "VJGBEA5ae6L8NYx5"
        },
        {
            "nome": "Luis Perez",
            "email": "adrianreid@example.net",
            "password": "@M*6K^YyV*mlEAGy",
            "administrador": "true",
            "_id": "W9HZHqoz5BGv7Od5"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Cierra52@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "XXLOpypnC99N4laQ"
        },
        {
            "nome": "Keith Strong",
            "email": "michael89@example.net",
            "password": "TRe1HIgK5&amp;br2ZAl",
            "administrador": "true",
            "_id": "YzCM9N10T5VeeNbM"
        },
        {
            "nome": "Jonathan Carlson",
            "email": "phillip60@example.com",
            "password": "eT7*im)z)mMt60ke",
            "administrador": "true",
            "_id": "cPRNbmAdWmuydEE1"
        },
        {
            "nome": "Mallory.Green69",
            "email": "Danika_Braun20@gmail.com",
            "password": "CV1Tczcrwm8GDXg",
            "administrador": "true",
            "_id": "en3Rs4f9EQGB9r3M"
        },
        {
            "nome": "Dana Melton",
            "email": "jillrollins@example.org",
            "password": "y0WTM^E$!kFpEkxt",
            "administrador": "false",
            "_id": "fOoF3xe1ywS41ZU1"
        },
        {
            "nome": "{{generatedName}}",
            "email": "Cory_Bergstrom@example.net",
            "password": "teste",
            "administrador": "true",
            "_id": "h8WgZOPVhiM8OHAh"
        },
        {
            "nome": "Dr. Mike Simmons",
            "email": "jamesburke@example.com",
            "password": "GH&amp;)XdXhC)9223Zn",
            "administrador": "true",
            "_id": "hwlnAOmgTaBMT73h"
        },
        {
            "nome": "Joseph Miller",
            "email": "ortizdaniel@example.com",
            "password": "7%Ro9zW3zcqB(nzm",
            "administrador": "true",
            "_id": "isz3ESAmlfFPmrxq"
        },
        {
            "nome": "Wendy47",
            "email": "Dahlia34@hotmail.com",
            "password": "PUApF1mS6kPBZW4",
            "administrador": "true",
            "_id": "jU35e5XJUz48UAGu"
        },
        {
            "nome": "John Hartman",
            "email": "bridget37@example.org",
            "password": "e9gDoV4oL_P++ZmB",
            "administrador": "true",
            "_id": "lzK1bHVqlZ7nJTeR"
        },
        {
            "nome": "Daniel Martin",
            "email": "cory23@example.com",
            "password": "S&amp;90pFnwxI8KBh_O",
            "administrador": "true",
            "_id": "mBmsUPmbrGCNDa6y"
        },
        {
            "nome": "teste2_usuario",
            "email": "teste2_usuario@qa.com.br",
            "password": "teste",
            "administrador": "false",
            "_id": "mZgnMSA906U22daG"
        },
        {
            "nome": "Fulano da Silva",
            "email": "pyid@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "mpGupvLg017I3Sf0"
        },
        {
            "nome": "Chad Gardner",
            "email": "jenniferaguilar@example.net",
            "password": "12YCnr#G@%@9Y_p5",
            "administrador": "true",
            "_id": "orhMG4TwbOHCd6cz"
        },
        {
            "nome": "Tara Silva",
            "email": "johnsonbradley@example.com",
            "password": "#VD7S1nTTfBFa@t+",
            "administrador": "true",
            "_id": "prZwLxnCycVYP2iZ"
        },
        {
            "nome": "Robert Ayala",
            "email": "christopher85@example.org",
            "password": "E+eL6fclWZo(3GIp",
            "administrador": "false",
            "_id": "rmicndgrWJTWIwRW"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rsod@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "tMbyiR3RPawM2Oyh"
        },
        {
            "nome": "usuario_teste",
            "email": "usuario_teste@gmail.com",
            "password": "teste",
            "administrador": "false",
            "_id": "y66ugXQ46BOLp7bS"
        },
        {
   ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230511 01:02:36.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:36.798" endtime="20230511 01:02:36.955"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230511 01:02:36.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:36.955" endtime="20230511 01:02:36.955"/>
</kw>
<status status="PASS" starttime="20230511 01:02:36.797" endtime="20230511 01:02:36.956"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230511 01:02:36.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230511 01:02:36.956" endtime="20230511 01:02:36.957"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230511 01:02:36.957" endtime="20230511 01:02:36.957"/>
</kw>
<status status="PASS" starttime="20230511 01:02:36.956" endtime="20230511 01:02:36.958"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230511 01:02:36.958" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230511 01:02:36.958" endtime="20230511 01:02:36.959"/>
</kw>
<status status="PASS" starttime="20230511 01:02:36.958" endtime="20230511 01:02:36.959"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230511 01:02:36.795" endtime="20230511 01:02:36.959"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230511 01:02:36.960" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230511 01:02:36.960" endtime="20230511 01:02:36.960"/>
</kw>
<status status="PASS" starttime="20230511 01:02:36.960" endtime="20230511 01:02:36.960"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230511 01:02:36.961" level="INFO">${name} = Eric Sanchez</msg>
<status status="PASS" starttime="20230511 01:02:36.961" endtime="20230511 01:02:36.961"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230511 01:02:36.962" level="INFO">${email} = wilsonvictoria@example.net</msg>
<status status="PASS" starttime="20230511 01:02:36.961" endtime="20230511 01:02:36.962"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230511 01:02:36.962" level="INFO">${password} = TmC7s3Ys@$</msg>
<status status="PASS" starttime="20230511 01:02:36.962" endtime="20230511 01:02:36.962"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230511 01:02:36.962" level="INFO">${name} = Eric Sanchez</msg>
<status status="PASS" starttime="20230511 01:02:36.962" endtime="20230511 01:02:36.963"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230511 01:02:36.963" level="INFO">${email} = wilsonvictoria@example.net</msg>
<status status="PASS" starttime="20230511 01:02:36.963" endtime="20230511 01:02:36.963"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230511 01:02:36.963" level="INFO">${password} = TmC7s3Ys@$</msg>
<status status="PASS" starttime="20230511 01:02:36.963" endtime="20230511 01:02:36.963"/>
</kw>
<status status="PASS" starttime="20230511 01:02:36.961" endtime="20230511 01:02:36.963"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230511 01:02:36.964" level="INFO">${payload} = {'nome': 'Eric Sanchez', 'email': 'wilsonvictoria@example.net', 'password': 'TmC7s3Ys@$', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230511 01:02:36.964" endtime="20230511 01:02:36.964"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230511 01:02:36.964" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230511 01:02:36.964" endtime="20230511 01:02:36.964"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230511 01:02:37.046" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Eric Sanchez", "email": "wilsonvictoria@example.net", "password": "TmC7s3Ys@$", "administrador": "false"}' 
 </msg>
<msg timestamp="20230511 01:02:37.046" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '306ea9cb-0e61-4695-ac95-00b95d8af842', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd21487c217ece73d3874bc04a7442cd3', 'Date': 'Thu, 11 May 2023 01:02:37 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "1TLQRjCYM1HpPfeU"
} 
 </msg>
<msg timestamp="20230511 01:02:37.047" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:36.965" endtime="20230511 01:02:37.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230511 01:02:37.047" level="INFO">${user_id} = 1TLQRjCYM1HpPfeU</msg>
<status status="PASS" starttime="20230511 01:02:37.047" endtime="20230511 01:02:37.047"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230511 01:02:37.048" level="INFO">${USER_ID} = 1TLQRjCYM1HpPfeU</msg>
<status status="PASS" starttime="20230511 01:02:37.048" endtime="20230511 01:02:37.048"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230511 01:02:37.048" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.048" endtime="20230511 01:02:37.048"/>
</kw>
<status status="PASS" starttime="20230511 01:02:36.963" endtime="20230511 01:02:37.048"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230511 01:02:37.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.049" endtime="20230511 01:02:37.049"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230511 01:02:37.050" endtime="20230511 01:02:37.050"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.049" endtime="20230511 01:02:37.050"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230511 01:02:37.051" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230511 01:02:37.051" endtime="20230511 01:02:37.051"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.050" endtime="20230511 01:02:37.051"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230511 01:02:36.959" endtime="20230511 01:02:37.051"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230511 01:02:37.053" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230511 01:02:37.052" endtime="20230511 01:02:37.053"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.052" endtime="20230511 01:02:37.053"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230511 01:02:37.133" level="INFO">GET Request : url=https://serverest.dev/usuarios/1TLQRjCYM1HpPfeU 
 path_url=/usuarios/1TLQRjCYM1HpPfeU 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230511 01:02:37.133" level="INFO">GET Response : url=https://serverest.dev/usuarios/1TLQRjCYM1HpPfeU 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f63bc566-212a-4abe-b2b0-6d57b0a9189c', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c2d3c2645d56904ae27dfd8433a44354', 'Date': 'Thu, 11 May 2023 01:02:37 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Eric Sanchez",
    "email": "wilsonvictoria@example.net",
    "password": "TmC7s3Ys@$",
    "administrador": "false",
    "_id": "1TLQRjCYM1HpPfeU"
} 
 </msg>
<msg timestamp="20230511 01:02:37.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.054" endtime="20230511 01:02:37.133"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230511 01:02:37.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.133" endtime="20230511 01:02:37.134"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.053" endtime="20230511 01:02:37.134"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230511 01:02:37.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.134" endtime="20230511 01:02:37.135"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230511 01:02:37.135" endtime="20230511 01:02:37.135"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.134" endtime="20230511 01:02:37.136"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230511 01:02:37.137" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230511 01:02:37.136" endtime="20230511 01:02:37.137"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.136" endtime="20230511 01:02:37.137"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230511 01:02:37.052" endtime="20230511 01:02:37.137"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230511 01:02:37.138" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230511 01:02:37.138" endtime="20230511 01:02:37.138"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.138" endtime="20230511 01:02:37.138"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230511 01:02:37.139" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230511 01:02:37.139" endtime="20230511 01:02:37.139"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230511 01:02:37.139" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230511 01:02:37.139" endtime="20230511 01:02:37.139"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230511 01:02:37.223" level="INFO">PUT Request : url=https://serverest.dev/usuarios/1TLQRjCYM1HpPfeU 
 path_url=/usuarios/1TLQRjCYM1HpPfeU 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230511 01:02:37.223" level="INFO">PUT Response : url=https://serverest.dev/usuarios/1TLQRjCYM1HpPfeU 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '43726f38-ea2f-465a-a7b2-a583d131c51b', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '39ebcec53ea67482bb40dd458161af5f', 'Date': 'Thu, 11 May 2023 01:02:37 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230511 01:02:37.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.139" endtime="20230511 01:02:37.223"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230511 01:02:37.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.223" endtime="20230511 01:02:37.223"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.138" endtime="20230511 01:02:37.224"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230511 01:02:37.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.224" endtime="20230511 01:02:37.225"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230511 01:02:37.225" endtime="20230511 01:02:37.225"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.224" endtime="20230511 01:02:37.225"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230511 01:02:37.226" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230511 01:02:37.226" endtime="20230511 01:02:37.226"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.226" endtime="20230511 01:02:37.227"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230511 01:02:37.137" endtime="20230511 01:02:37.227"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230511 01:02:37.228" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230511 01:02:37.228" endtime="20230511 01:02:37.228"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.227" endtime="20230511 01:02:37.228"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230511 01:02:37.306" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/1TLQRjCYM1HpPfeU 
 path_url=/usuarios/1TLQRjCYM1HpPfeU 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230511 01:02:37.306" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/1TLQRjCYM1HpPfeU 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '82b56216-6784-48ee-9abf-53af68f921d8', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd2831fe3b4ced622e6659fa5d40a86aa', 'Date': 'Thu, 11 May 2023 01:02:37 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230511 01:02:37.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.229" endtime="20230511 01:02:37.306"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230511 01:02:37.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.306" endtime="20230511 01:02:37.306"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.229" endtime="20230511 01:02:37.307"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230511 01:02:37.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230511 01:02:37.307" endtime="20230511 01:02:37.308"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230511 01:02:37.308" endtime="20230511 01:02:37.308"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.307" endtime="20230511 01:02:37.308"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230511 01:02:37.309" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230511 01:02:37.309" endtime="20230511 01:02:37.309"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.309" endtime="20230511 01:02:37.309"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230511 01:02:37.227" endtime="20230511 01:02:37.310"/>
</test>
<status status="PASS" starttime="20230511 01:02:36.209" endtime="20230511 01:02:37.310"/>
</suite>
<status status="PASS" starttime="20230511 01:02:36.207" endtime="20230511 01:02:37.311"/>
</suite>
<status status="PASS" starttime="20230511 01:02:36.206" endtime="20230511 01:02:37.312"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login">
<suite id="s1-s2-s1-s1" name="Test Ui Login" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/login/test_ui_login.robot">
<test id="s1-s2-s1-s1-t1" name="Scenario: Log in to Sauce Demo with Standard User" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230511 01:02:37.322" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230511 01:02:37.322" endtime="20230511 01:02:49.931"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230511 01:02:49.932" endtime="20230511 01:02:50.065"/>
</kw>
<status status="PASS" starttime="20230511 01:02:37.322" endtime="20230511 01:02:50.065"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230511 01:02:50.066" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230511 01:02:50.066" endtime="20230511 01:02:50.188"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230511 01:02:50.194" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230511 01:02:50.188" endtime="20230511 01:02:50.194"/>
</kw>
<status status="PASS" starttime="20230511 01:02:50.065" endtime="20230511 01:02:50.194"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>standard_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:50.196" level="INFO">Typing text 'standard_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230511 01:02:50.194" endtime="20230511 01:02:50.543"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:50.543" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230511 01:02:50.543" endtime="20230511 01:02:50.707"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:50.708" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230511 01:02:50.708" endtime="20230511 01:02:50.970"/>
</kw>
<status status="PASS" starttime="20230511 01:02:50.194" endtime="20230511 01:02:50.970"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230511 01:02:50.986" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230511 01:02:50.970" endtime="20230511 01:02:50.986"/>
</kw>
<status status="PASS" starttime="20230511 01:02:50.970" endtime="20230511 01:02:50.986"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230511 01:02:51.011" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230511 01:02:50.986" endtime="20230511 01:02:51.011"/>
</kw>
<status status="PASS" starttime="20230511 01:02:50.986" endtime="20230511 01:02:51.011"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230511 01:02:51.012" endtime="20230511 01:02:51.068"/>
</kw>
<status status="PASS" starttime="20230511 01:02:51.011" endtime="20230511 01:02:51.069"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230511 01:02:37.321" endtime="20230511 01:02:51.069"/>
</test>
<test id="s1-s2-s1-s1-t2" name="Scenario: Log in to Sauce Demo with Locked Out User" line="17">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230511 01:02:51.071" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230511 01:02:51.070" endtime="20230511 01:02:51.887"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230511 01:02:51.888" endtime="20230511 01:02:51.991"/>
</kw>
<status status="PASS" starttime="20230511 01:02:51.070" endtime="20230511 01:02:51.992"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230511 01:02:51.992" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230511 01:02:51.992" endtime="20230511 01:02:52.055"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230511 01:02:52.063" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230511 01:02:52.055" endtime="20230511 01:02:52.063"/>
</kw>
<status status="PASS" starttime="20230511 01:02:51.992" endtime="20230511 01:02:52.063"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>locked_out_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:52.064" level="INFO">Typing text 'locked_out_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230511 01:02:52.064" endtime="20230511 01:02:52.167"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:52.168" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230511 01:02:52.167" endtime="20230511 01:02:52.262"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:52.262" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230511 01:02:52.262" endtime="20230511 01:02:52.319"/>
</kw>
<status status="PASS" starttime="20230511 01:02:52.063" endtime="20230511 01:02:52.319"/>
</kw>
<kw name="Then the locked out message should be displayed" library="test_keywords_login">
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>class:error-message-container</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230511 01:02:52.347" level="INFO">Element 'class:error-message-container' is displayed.</msg>
<status status="PASS" starttime="20230511 01:02:52.320" endtime="20230511 01:02:52.348"/>
</kw>
<status status="PASS" starttime="20230511 01:02:52.320" endtime="20230511 01:02:52.348"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230511 01:02:52.348" endtime="20230511 01:02:52.405"/>
</kw>
<status status="PASS" starttime="20230511 01:02:52.348" endtime="20230511 01:02:52.405"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230511 01:02:51.069" endtime="20230511 01:02:52.405"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Scenario: Log in to Sauce Demo with Problem User" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230511 01:02:52.407" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230511 01:02:52.407" endtime="20230511 01:02:53.224"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230511 01:02:53.224" endtime="20230511 01:02:53.334"/>
</kw>
<status status="PASS" starttime="20230511 01:02:52.406" endtime="20230511 01:02:53.335"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230511 01:02:53.336" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230511 01:02:53.335" endtime="20230511 01:02:53.396"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230511 01:02:53.401" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230511 01:02:53.396" endtime="20230511 01:02:53.401"/>
</kw>
<status status="PASS" starttime="20230511 01:02:53.335" endtime="20230511 01:02:53.401"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>problem_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:53.402" level="INFO">Typing text 'problem_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230511 01:02:53.401" endtime="20230511 01:02:53.501"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:53.502" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230511 01:02:53.501" endtime="20230511 01:02:53.581"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:53.581" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230511 01:02:53.581" endtime="20230511 01:02:53.664"/>
</kw>
<status status="PASS" starttime="20230511 01:02:53.401" endtime="20230511 01:02:53.664"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230511 01:02:53.675" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230511 01:02:53.665" endtime="20230511 01:02:53.675"/>
</kw>
<status status="PASS" starttime="20230511 01:02:53.665" endtime="20230511 01:02:53.675"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230511 01:02:53.689" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230511 01:02:53.676" endtime="20230511 01:02:53.689"/>
</kw>
<status status="PASS" starttime="20230511 01:02:53.675" endtime="20230511 01:02:53.689"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230511 01:02:53.690" endtime="20230511 01:02:53.746"/>
</kw>
<status status="PASS" starttime="20230511 01:02:53.690" endtime="20230511 01:02:53.747"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230511 01:02:52.406" endtime="20230511 01:02:53.747"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Scenario: Log in to Sauce Demo with Performance Glitch User" line="30">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230511 01:02:53.749" level="INFO">Opening browser 'headless Chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230511 01:02:53.748" endtime="20230511 01:02:54.590"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230511 01:02:54.590" endtime="20230511 01:02:54.695"/>
</kw>
<status status="PASS" starttime="20230511 01:02:53.748" endtime="20230511 01:02:54.696"/>
</kw>
<kw name="Given Im on the main application page" library="test_keywords_login">
<kw name="Go To" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230511 01:02:54.697" level="INFO">Opening url 'https://www.saucedemo.com/'</msg>
<status status="PASS" starttime="20230511 01:02:54.696" endtime="20230511 01:02:54.747"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230511 01:02:54.754" level="INFO">Current location is 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230511 01:02:54.747" endtime="20230511 01:02:54.754"/>
</kw>
<status status="PASS" starttime="20230511 01:02:54.696" endtime="20230511 01:02:54.754"/>
</kw>
<kw name="When I log in with credentials" library="test_keywords_login">
<arg>performance_glitch_user</arg>
<arg>secret_sauce</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:user-name</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:54.755" level="INFO">Typing text 'performance_glitch_user' into text field 'id:user-name'.</msg>
<status status="PASS" starttime="20230511 01:02:54.754" endtime="20230511 01:02:54.877"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:54.877" level="INFO">Typing text 'secret_sauce' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230511 01:02:54.877" endtime="20230511 01:02:54.956"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>id:login-button</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230511 01:02:54.957" level="INFO">Clicking button 'id:login-button'.</msg>
<status status="PASS" starttime="20230511 01:02:54.956" endtime="20230511 01:03:00.050"/>
</kw>
<status status="PASS" starttime="20230511 01:02:54.754" endtime="20230511 01:03:00.050"/>
</kw>
<kw name="And the Inventory page loads" library="test_keywords_login">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://www.saucedemo.com/inventory.html</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230511 01:03:00.064" level="INFO">Current location is 'https://www.saucedemo.com/inventory.html'.</msg>
<status status="PASS" starttime="20230511 01:03:00.051" endtime="20230511 01:03:00.064"/>
</kw>
<status status="PASS" starttime="20230511 01:03:00.050" endtime="20230511 01:03:00.064"/>
</kw>
<kw name="Then the page should contain the text &quot;Products&quot;" library="test_keywords_login" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230511 01:03:00.078" level="INFO">Current page contains text 'Products'.</msg>
<status status="PASS" starttime="20230511 01:03:00.064" endtime="20230511 01:03:00.078"/>
</kw>
<status status="PASS" starttime="20230511 01:03:00.064" endtime="20230511 01:03:00.078"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230511 01:03:00.078" endtime="20230511 01:03:00.138"/>
</kw>
<status status="PASS" starttime="20230511 01:03:00.078" endtime="20230511 01:03:00.139"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230511 01:02:53.747" endtime="20230511 01:03:00.139"/>
</test>
<status status="PASS" starttime="20230511 01:02:37.316" endtime="20230511 01:03:00.140"/>
</suite>
<status status="PASS" starttime="20230511 01:02:37.314" endtime="20230511 01:03:00.141"/>
</suite>
<status status="PASS" starttime="20230511 01:02:37.313" endtime="20230511 01:03:00.143"/>
</suite>
<status status="PASS" starttime="20230511 01:02:36.188" endtime="20230511 01:03:00.144"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Login">Tests.Ui.Login</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Test Ui Login">Tests.Ui.Login.Test Ui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
