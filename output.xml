<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230526 21:09:40.630" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:09:41.223" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:09:41.223" endtime="20230526 21:09:41.223"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.222" endtime="20230526 21:09:41.223"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:09:41.343" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:09:41.343" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5a5c7ff5-8646-4274-b536-5c447c0f4227', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1b36e07733ba2aeb6a29a6b831bf365c;o=1', 'Date': 'Fri, 26 May 2023 21:09:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '3304'} 
 body={
    "quantidade": 15,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Nichole White",
            "email": "garciastephen@example.com",
            "password": "mSEXXw1MQ1q2",
            "administrador": "true",
            "_id": "8DygXGzSxgFKifQv"
        },
        {
            "nome": "Carol Smith",
            "email": "yguzman@example.com",
            "password": "Z8OOhg3tOyqQ",
            "administrador": "true",
            "_id": "HXPaxOE28NFgzgJh"
        },
        {
            "nome": "Dillon Gibson",
            "email": "jeffreymitchell@example.com",
            "password": "P7jYMEnhP5om",
            "administrador": "true",
            "_id": "HzusPP4B294O7zVO"
        },
        {
            "nome": "Lisa Greene",
            "email": "john32@example.net",
            "password": "JXimtd1w7Jdd",
            "administrador": "true",
            "_id": "KJe5wBwnfCR2mWW3"
        },
        {
            "nome": "Lawrence Hanson",
            "email": "michelle11@example.org",
            "password": "7feQ4sbxy6Ie",
            "administrador": "true",
            "_id": "MgBVcaaQYuq5SEYk"
        },
        {
            "nome": "sadas",
            "email": "mill2@mil.com",
            "password": "123",
            "administrador": "true",
            "_id": "OvyYUousDsG4JYeX"
        },
        {
            "nome": "Mr. Matthew Collins",
            "email": "wanglauren@example.org",
            "password": "xIuLyrW2E8fs",
            "administrador": "true",
            "_id": "Pd9cZNjcG1eWfUMQ"
        },
        {
            "nome": "Cody Valentine",
            "email": "todd72@example.org",
            "password": "do58Eoup2qUy",
            "administrador": "true",
            "_id": "T2V5t8ZpKz0PTqGQ"
        },
        {
            "nome": "Brendan George",
            "email": "leslie86@example.com",
            "password": "1GiqcZl305aG",
            "administrador": "true",
            "_id": "TMKqdrqnRTNFOyht"
        },
        {
            "nome": "Hayley Byrd",
            "email": "kimberlymartin@example.com",
            "password": "q78F3X1rG3oF",
            "administrador": "true",
            "_id": "bLBFKECXSYeoPEjz"
        },
        {
            "nome": "Sheila Esparza",
            "email": "ycarter@example.org",
            "password": "gX9w2NckaW0K",
            "administrador": "true",
            "_id": "jSiHSVUpLmNpts8M"
        },
        {
            "nome": "Juan Reese",
            "email": "stephen03@example.com",
            "password": "STxJqTlLO5Ok",
            "administrador": "true",
            "_id": "v1MH0Jry6qPgJ0Gd"
        },
        {
            "nome": "Kyle Cooper",
            "email": "yflores@example.org",
            "password": "k7JpINT2Qek2",
            "administrador": "true",
            "_id": "vbb2T2tN8byhWgGI"
        },
        {
            "nome": "Terry Buchanan",
            "email": "jacobanderson@example.com",
            "password": "eg4zJyPl4QnT",
            "administrador": "true",
            "_id": "zHru6fs2sCmJnPry"
        }
    ]
} 
 </msg>
<msg timestamp="20230526 21:09:41.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.224" endtime="20230526 21:09:41.344"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:09:41.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.344" endtime="20230526 21:09:41.344"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.224" endtime="20230526 21:09:41.344"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:09:41.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.345" endtime="20230526 21:09:41.346"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:09:41.346" endtime="20230526 21:09:41.347"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.345" endtime="20230526 21:09:41.347"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:09:41.348" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:09:41.347" endtime="20230526 21:09:41.348"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.347" endtime="20230526 21:09:41.348"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:09:41.221" endtime="20230526 21:09:41.348"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:09:41.350" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:09:41.349" endtime="20230526 21:09:41.350"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.349" endtime="20230526 21:09:41.350"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:09:41.351" level="INFO">${name} = Roger Blair</msg>
<status status="PASS" starttime="20230526 21:09:41.351" endtime="20230526 21:09:41.351"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:09:41.352" level="INFO">${email} = jonathangiles@example.net</msg>
<status status="PASS" starttime="20230526 21:09:41.351" endtime="20230526 21:09:41.352"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:09:41.352" level="INFO">${password} = sImgoJwcX8cB</msg>
<status status="PASS" starttime="20230526 21:09:41.352" endtime="20230526 21:09:41.352"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:09:41.353" level="INFO">${name} = Roger Blair</msg>
<status status="PASS" starttime="20230526 21:09:41.353" endtime="20230526 21:09:41.353"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:09:41.353" level="INFO">${email} = jonathangiles@example.net</msg>
<status status="PASS" starttime="20230526 21:09:41.353" endtime="20230526 21:09:41.353"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:09:41.353" level="INFO">${password} = sImgoJwcX8cB</msg>
<status status="PASS" starttime="20230526 21:09:41.353" endtime="20230526 21:09:41.354"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.350" endtime="20230526 21:09:41.354"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:09:41.354" level="INFO">${payload} = {'nome': 'Roger Blair', 'email': 'jonathangiles@example.net', 'password': 'sImgoJwcX8cB', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:09:41.354" endtime="20230526 21:09:41.354"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:09:41.355" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:09:41.355" endtime="20230526 21:09:41.355"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:09:41.422" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"nome": "Roger Blair", "email": "jonathangiles@example.net", "password": "sImgoJwcX8cB", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:09:41.423" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ba2c4119-a0e0-470d-b29f-e03c3197a66f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2e8920b1a3925790d19bcdc3fd8a1ea4', 'Date': 'Fri, 26 May 2023 21:09:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "1jtJeKnBIF4zNXUC"
} 
 </msg>
<msg timestamp="20230526 21:09:41.423" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.355" endtime="20230526 21:09:41.423"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230526 21:09:41.424" level="INFO">${user_id} = 1jtJeKnBIF4zNXUC</msg>
<status status="PASS" starttime="20230526 21:09:41.423" endtime="20230526 21:09:41.424"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230526 21:09:41.424" level="INFO">${USER_ID} = 1jtJeKnBIF4zNXUC</msg>
<status status="PASS" starttime="20230526 21:09:41.424" endtime="20230526 21:09:41.424"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:09:41.425" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.425" endtime="20230526 21:09:41.425"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.354" endtime="20230526 21:09:41.425"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:09:41.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.425" endtime="20230526 21:09:41.426"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:09:41.426" endtime="20230526 21:09:41.427"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.425" endtime="20230526 21:09:41.427"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:09:41.428" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230526 21:09:41.427" endtime="20230526 21:09:41.428"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.427" endtime="20230526 21:09:41.428"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:09:41.349" endtime="20230526 21:09:41.428"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:09:41.430" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:09:41.429" endtime="20230526 21:09:41.430"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.429" endtime="20230526 21:09:41.430"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:09:41.497" level="INFO">GET Request : url=https://serverest.dev/usuarios/1jtJeKnBIF4zNXUC 
 path_url=/usuarios/1jtJeKnBIF4zNXUC 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:09:41.497" level="INFO">GET Response : url=https://serverest.dev/usuarios/1jtJeKnBIF4zNXUC 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b744f8e-55d8-400f-af8b-9f075aad6fb0', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3b884caee33f55598574dd7135d09148', 'Date': 'Fri, 26 May 2023 21:09:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '164'} 
 body={
    "nome": "Roger Blair",
    "email": "jonathangiles@example.net",
    "password": "sImgoJwcX8cB",
    "administrador": "false",
    "_id": "1jtJeKnBIF4zNXUC"
} 
 </msg>
<msg timestamp="20230526 21:09:41.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.430" endtime="20230526 21:09:41.497"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:09:41.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.497" endtime="20230526 21:09:41.498"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.430" endtime="20230526 21:09:41.498"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:09:41.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.498" endtime="20230526 21:09:41.499"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:09:41.499" endtime="20230526 21:09:41.500"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.498" endtime="20230526 21:09:41.500"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:09:41.501" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230526 21:09:41.500" endtime="20230526 21:09:41.501"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.500" endtime="20230526 21:09:41.501"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:09:41.428" endtime="20230526 21:09:41.501"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:09:41.503" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:09:41.503" endtime="20230526 21:09:41.503"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.502" endtime="20230526 21:09:41.503"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:09:41.504" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230526 21:09:41.504" endtime="20230526 21:09:41.504"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230526 21:09:41.505" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230526 21:09:41.504" endtime="20230526 21:09:41.505"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:09:41.574" level="INFO">PUT Request : url=https://serverest.dev/usuarios/1jtJeKnBIF4zNXUC 
 path_url=/usuarios/1jtJeKnBIF4zNXUC 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230526 21:09:41.574" level="INFO">PUT Response : url=https://serverest.dev/usuarios/1jtJeKnBIF4zNXUC 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1cacea4e-f8e5-468e-b956-a7f292955f10', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '19fd26acc1804a75f6f5bab3621598f8', 'Date': 'Fri, 26 May 2023 21:09:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:09:41.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.505" endtime="20230526 21:09:41.574"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:09:41.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.574" endtime="20230526 21:09:41.574"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.504" endtime="20230526 21:09:41.575"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:09:41.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.575" endtime="20230526 21:09:41.576"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:09:41.576" endtime="20230526 21:09:41.577"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.575" endtime="20230526 21:09:41.577"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:09:41.578" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:09:41.577" endtime="20230526 21:09:41.578"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.577" endtime="20230526 21:09:41.578"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:09:41.502" endtime="20230526 21:09:41.578"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230526 21:09:41.579" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230526 21:09:41.579" endtime="20230526 21:09:41.580"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.579" endtime="20230526 21:09:41.580"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230526 21:09:41.650" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/1jtJeKnBIF4zNXUC 
 path_url=/usuarios/1jtJeKnBIF4zNXUC 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230526 21:09:41.650" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/1jtJeKnBIF4zNXUC 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ba0bcbaa-bd66-4998-afe4-4b899f342d8d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c21553135f6345d79cae7ca9c57c36ff', 'Date': 'Fri, 26 May 2023 21:09:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230526 21:09:41.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.580" endtime="20230526 21:09:41.650"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230526 21:09:41.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.650" endtime="20230526 21:09:41.650"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.580" endtime="20230526 21:09:41.651"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230526 21:09:41.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230526 21:09:41.651" endtime="20230526 21:09:41.652"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230526 21:09:41.652" endtime="20230526 21:09:41.653"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.651" endtime="20230526 21:09:41.653"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230526 21:09:41.654" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230526 21:09:41.653" endtime="20230526 21:09:41.654"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.653" endtime="20230526 21:09:41.654"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230526 21:09:41.578" endtime="20230526 21:09:41.654"/>
</test>
<status status="PASS" starttime="20230526 21:09:40.651" endtime="20230526 21:09:41.655"/>
</suite>
<status status="PASS" starttime="20230526 21:09:40.650" endtime="20230526 21:09:41.656"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:09:41.667" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:09:41.666" endtime="20230526 21:09:44.349"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:09:44.350" endtime="20230526 21:09:44.467"/>
</kw>
<status status="PASS" starttime="20230526 21:09:41.666" endtime="20230526 21:09:44.467"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:09:44.473" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:09:44.468" endtime="20230526 21:09:44.473"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:44.474" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:09:44.473" endtime="20230526 21:09:44.536"/>
</kw>
<status status="PASS" starttime="20230526 21:09:44.468" endtime="20230526 21:09:44.536"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:44.537" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:09:44.537" endtime="20230526 21:09:44.601"/>
</kw>
<status status="PASS" starttime="20230526 21:09:44.536" endtime="20230526 21:09:44.601"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:09:44.602" endtime="20230526 21:09:44.837"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:09:44.866" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:09:44.837" endtime="20230526 21:09:44.866"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:09:44.881" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:09:44.866" endtime="20230526 21:09:44.881"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:09:44.893" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:09:44.881" endtime="20230526 21:09:44.893"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:09:44.906" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230526 21:09:44.894" endtime="20230526 21:09:44.906"/>
</kw>
<status status="PASS" starttime="20230526 21:09:44.602" endtime="20230526 21:09:44.906"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:09:44.907" endtime="20230526 21:09:44.962"/>
</kw>
<status status="PASS" starttime="20230526 21:09:44.906" endtime="20230526 21:09:44.962"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:09:41.666" endtime="20230526 21:09:44.962"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:09:44.964" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:09:44.964" endtime="20230526 21:09:46.351"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:09:46.352" endtime="20230526 21:09:46.455"/>
</kw>
<status status="PASS" starttime="20230526 21:09:44.963" endtime="20230526 21:09:46.456"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:09:46.491" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:09:46.456" endtime="20230526 21:09:46.491"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:46.492" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:09:46.491" endtime="20230526 21:09:46.547"/>
</kw>
<status status="PASS" starttime="20230526 21:09:46.456" endtime="20230526 21:09:46.547"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230526 21:09:46.548" level="INFO">${name} = Mary Butler</msg>
<status status="PASS" starttime="20230526 21:09:46.548" endtime="20230526 21:09:46.548"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230526 21:09:46.549" level="INFO">${email} = zperez@example.net</msg>
<status status="PASS" starttime="20230526 21:09:46.548" endtime="20230526 21:09:46.549"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230526 21:09:46.549" level="INFO">${password} = KUSsb75E4Tai</msg>
<status status="PASS" starttime="20230526 21:09:46.549" endtime="20230526 21:09:46.549"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:46.550" level="INFO">Typing text 'Mary Butler' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:09:46.549" endtime="20230526 21:09:46.667"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:46.668" level="INFO">Typing text 'zperez@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:09:46.667" endtime="20230526 21:09:46.772"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:46.773" level="INFO">Typing text 'KUSsb75E4Tai' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:09:46.772" endtime="20230526 21:09:46.866"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:46.867" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:09:46.866" endtime="20230526 21:09:46.939"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:09:46.939" level="INFO">${name} = Mary Butler</msg>
<status status="PASS" starttime="20230526 21:09:46.939" endtime="20230526 21:09:46.939"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:09:46.940" level="INFO">${email} = zperez@example.net</msg>
<status status="PASS" starttime="20230526 21:09:46.940" endtime="20230526 21:09:46.940"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230526 21:09:46.940" level="INFO">${password} = KUSsb75E4Tai</msg>
<status status="PASS" starttime="20230526 21:09:46.940" endtime="20230526 21:09:46.940"/>
</kw>
<status status="PASS" starttime="20230526 21:09:46.547" endtime="20230526 21:09:46.940"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:46.941" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:09:46.941" endtime="20230526 21:09:46.999"/>
</kw>
<status status="PASS" starttime="20230526 21:09:46.940" endtime="20230526 21:09:46.999"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:09:47.000" endtime="20230526 21:09:47.231"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:09:47.249" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:09:47.231" endtime="20230526 21:09:47.250"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:09:47.262" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230526 21:09:47.250" endtime="20230526 21:09:47.262"/>
</kw>
<status status="PASS" starttime="20230526 21:09:46.999" endtime="20230526 21:09:47.262"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:09:47.263" endtime="20230526 21:09:47.318"/>
</kw>
<status status="PASS" starttime="20230526 21:09:47.263" endtime="20230526 21:09:47.318"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:09:44.963" endtime="20230526 21:09:47.318"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230526 21:09:47.320" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230526 21:09:47.319" endtime="20230526 21:09:48.681"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230526 21:09:48.681" endtime="20230526 21:09:48.796"/>
</kw>
<status status="PASS" starttime="20230526 21:09:47.319" endtime="20230526 21:09:48.796"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230526 21:09:48.802" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230526 21:09:48.797" endtime="20230526 21:09:48.802"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:48.803" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230526 21:09:48.802" endtime="20230526 21:09:48.855"/>
</kw>
<status status="PASS" starttime="20230526 21:09:48.797" endtime="20230526 21:09:48.855"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:48.856" level="INFO">Typing text 'Mary Butler' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230526 21:09:48.856" endtime="20230526 21:09:48.973"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:48.974" level="INFO">Typing text 'zperez@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230526 21:09:48.973" endtime="20230526 21:09:49.074"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:49.075" level="INFO">Typing text 'KUSsb75E4Tai' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230526 21:09:49.074" endtime="20230526 21:09:49.161"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:49.162" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230526 21:09:49.161" endtime="20230526 21:09:49.235"/>
</kw>
<status status="PASS" starttime="20230526 21:09:48.855" endtime="20230526 21:09:49.236"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230526 21:09:49.237" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230526 21:09:49.236" endtime="20230526 21:09:49.294"/>
</kw>
<status status="PASS" starttime="20230526 21:09:49.236" endtime="20230526 21:09:49.294"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230526 21:09:49.295" endtime="20230526 21:09:49.528"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230526 21:09:49.547" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230526 21:09:49.528" endtime="20230526 21:09:49.547"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230526 21:09:49.560" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230526 21:09:49.547" endtime="20230526 21:09:49.560"/>
</kw>
<status status="PASS" starttime="20230526 21:09:49.294" endtime="20230526 21:09:49.561"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230526 21:09:49.561" endtime="20230526 21:09:49.617"/>
</kw>
<status status="PASS" starttime="20230526 21:09:49.561" endtime="20230526 21:09:49.617"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230526 21:09:47.318" endtime="20230526 21:09:49.617"/>
</test>
<status status="PASS" starttime="20230526 21:09:41.659" endtime="20230526 21:09:49.619"/>
</suite>
<status status="PASS" starttime="20230526 21:09:41.657" endtime="20230526 21:09:49.621"/>
</suite>
<status status="PASS" starttime="20230526 21:09:40.631" endtime="20230526 21:09:49.622"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
