<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230414 17:45:49.248" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users">
<suite id="s1-s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/users/test_api_users.robot">
<test id="s1-s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230414 17:45:49.630" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230414 17:45:49.630" endtime="20230414 17:45:49.631"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.629" endtime="20230414 17:45:49.631"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230414 17:45:49.747" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230414 17:45:49.747" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ee837085-e4b7-4806-bfcd-6d8ed1bb5803', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '347978352121232c284822c024ae1c3e', 'Date': 'Fri, 14 Apr 2023 17:45:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '253'} 
 body={
    "quantidade": 1,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        }
    ]
} 
 </msg>
<msg timestamp="20230414 17:45:49.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.631" endtime="20230414 17:45:49.747"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230414 17:45:49.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.747" endtime="20230414 17:45:49.748"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.631" endtime="20230414 17:45:49.748"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230414 17:45:49.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.748" endtime="20230414 17:45:49.749"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230414 17:45:49.749" endtime="20230414 17:45:49.749"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.748" endtime="20230414 17:45:49.750"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230414 17:45:49.750" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230414 17:45:49.750" endtime="20230414 17:45:49.751"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.750" endtime="20230414 17:45:49.751"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.629" endtime="20230414 17:45:49.751"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230414 17:45:49.752" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230414 17:45:49.752" endtime="20230414 17:45:49.752"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.751" endtime="20230414 17:45:49.752"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230414 17:45:49.753" level="INFO">${name} = Jenny Taylor</msg>
<status status="PASS" starttime="20230414 17:45:49.753" endtime="20230414 17:45:49.753"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230414 17:45:49.754" level="INFO">${email} = carolyn86@example.net</msg>
<status status="PASS" starttime="20230414 17:45:49.753" endtime="20230414 17:45:49.754"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230414 17:45:49.754" level="INFO">${password} = )oYO4A1lUB</msg>
<status status="PASS" starttime="20230414 17:45:49.754" endtime="20230414 17:45:49.754"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230414 17:45:49.754" level="INFO">${name} = Jenny Taylor</msg>
<status status="PASS" starttime="20230414 17:45:49.754" endtime="20230414 17:45:49.754"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230414 17:45:49.755" level="INFO">${email} = carolyn86@example.net</msg>
<status status="PASS" starttime="20230414 17:45:49.754" endtime="20230414 17:45:49.755"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230414 17:45:49.755" level="INFO">${password} = )oYO4A1lUB</msg>
<status status="PASS" starttime="20230414 17:45:49.755" endtime="20230414 17:45:49.755"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.752" endtime="20230414 17:45:49.755"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230414 17:45:49.756" level="INFO">${payload} = {'nome': 'Jenny Taylor', 'email': 'carolyn86@example.net', 'password': ')oYO4A1lUB', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230414 17:45:49.755" endtime="20230414 17:45:49.756"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230414 17:45:49.756" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230414 17:45:49.756" endtime="20230414 17:45:49.756"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230414 17:45:49.839" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "Jenny Taylor", "email": "carolyn86@example.net", "password": ")oYO4A1lUB", "administrador": "false"}' 
 </msg>
<msg timestamp="20230414 17:45:49.840" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'fea7fbb4-299c-4183-b33d-8f07cc5bf0bd', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9e83b7c117e3fdb40d70c125188615ea', 'Date': 'Fri, 14 Apr 2023 17:45:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "reXSPrGB8XmfuuO1"
} 
 </msg>
<msg timestamp="20230414 17:45:49.840" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.757" endtime="20230414 17:45:49.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230414 17:45:49.841" level="INFO">${user_id} = reXSPrGB8XmfuuO1</msg>
<status status="PASS" starttime="20230414 17:45:49.840" endtime="20230414 17:45:49.841"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230414 17:45:49.841" level="INFO">${USER_ID} = reXSPrGB8XmfuuO1</msg>
<status status="PASS" starttime="20230414 17:45:49.841" endtime="20230414 17:45:49.841"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230414 17:45:49.841" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.841" endtime="20230414 17:45:49.842"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.755" endtime="20230414 17:45:49.842"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230414 17:45:49.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.842" endtime="20230414 17:45:49.843"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230414 17:45:49.843" endtime="20230414 17:45:49.843"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.842" endtime="20230414 17:45:49.843"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230414 17:45:49.844" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230414 17:45:49.844" endtime="20230414 17:45:49.844"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.843" endtime="20230414 17:45:49.844"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.751" endtime="20230414 17:45:49.845"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="21">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230414 17:45:49.846" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230414 17:45:49.845" endtime="20230414 17:45:49.846"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.845" endtime="20230414 17:45:49.846"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230414 17:45:49.915" level="INFO">GET Request : url=https://serverest.dev/usuarios/reXSPrGB8XmfuuO1 
 path_url=/usuarios/reXSPrGB8XmfuuO1 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230414 17:45:49.915" level="INFO">GET Response : url=https://serverest.dev/usuarios/reXSPrGB8XmfuuO1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'abc46fdb-077d-4ef4-9ec6-654fe009fa2f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '143c685163b1d213a7a94ffbc1be7205', 'Date': 'Fri, 14 Apr 2023 17:45:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '159'} 
 body={
    "nome": "Jenny Taylor",
    "email": "carolyn86@example.net",
    "password": ")oYO4A1lUB",
    "administrador": "false",
    "_id": "reXSPrGB8XmfuuO1"
} 
 </msg>
<msg timestamp="20230414 17:45:49.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.846" endtime="20230414 17:45:49.916"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230414 17:45:49.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.916" endtime="20230414 17:45:49.916"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.846" endtime="20230414 17:45:49.916"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230414 17:45:49.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.917" endtime="20230414 17:45:49.917"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230414 17:45:49.918" endtime="20230414 17:45:49.918"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.916" endtime="20230414 17:45:49.918"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230414 17:45:49.919" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230414 17:45:49.919" endtime="20230414 17:45:49.919"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.918" endtime="20230414 17:45:49.919"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.845" endtime="20230414 17:45:49.919"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Scenario: Update the created user" line="26">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230414 17:45:49.921" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230414 17:45:49.920" endtime="20230414 17:45:49.921"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.920" endtime="20230414 17:45:49.921"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230414 17:45:49.922" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230414 17:45:49.921" endtime="20230414 17:45:49.922"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230414 17:45:49.922" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230414 17:45:49.922" endtime="20230414 17:45:49.922"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230414 17:45:50.000" level="INFO">PUT Request : url=https://serverest.dev/usuarios/reXSPrGB8XmfuuO1 
 path_url=/usuarios/reXSPrGB8XmfuuO1 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230414 17:45:50.000" level="INFO">PUT Response : url=https://serverest.dev/usuarios/reXSPrGB8XmfuuO1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'bc1ce0fa-f918-4d78-8412-0f305a166449', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6929e2d6a2f109b16ba08211bf9baa1d', 'Date': 'Fri, 14 Apr 2023 17:45:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230414 17:45:50.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:49.922" endtime="20230414 17:45:50.000"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230414 17:45:50.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:50.000" endtime="20230414 17:45:50.000"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.921" endtime="20230414 17:45:50.001"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230414 17:45:50.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230414 17:45:50.001" endtime="20230414 17:45:50.002"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230414 17:45:50.002" endtime="20230414 17:45:50.002"/>
</kw>
<status status="PASS" starttime="20230414 17:45:50.001" endtime="20230414 17:45:50.002"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230414 17:45:50.003" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230414 17:45:50.003" endtime="20230414 17:45:50.003"/>
</kw>
<status status="PASS" starttime="20230414 17:45:50.003" endtime="20230414 17:45:50.003"/>
</kw>
<status status="PASS" starttime="20230414 17:45:49.920" endtime="20230414 17:45:50.004"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Scenario: Delete the created user" line="31">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230414 17:45:50.005" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230414 17:45:50.004" endtime="20230414 17:45:50.005"/>
</kw>
<status status="PASS" starttime="20230414 17:45:50.004" endtime="20230414 17:45:50.005"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230414 17:45:50.075" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/reXSPrGB8XmfuuO1 
 path_url=/usuarios/reXSPrGB8XmfuuO1 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230414 17:45:50.075" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/reXSPrGB8XmfuuO1 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cadb55a7-71e0-45b8-b9bd-52c47a83e6fd', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'baff6965ef754e5db4542e27cd0d98fb', 'Date': 'Fri, 14 Apr 2023 17:45:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230414 17:45:50.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:50.005" endtime="20230414 17:45:50.076"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230414 17:45:50.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230414 17:45:50.076" endtime="20230414 17:45:50.076"/>
</kw>
<status status="PASS" starttime="20230414 17:45:50.005" endtime="20230414 17:45:50.076"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230414 17:45:50.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230414 17:45:50.077" endtime="20230414 17:45:50.077"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230414 17:45:50.077" endtime="20230414 17:45:50.078"/>
</kw>
<status status="PASS" starttime="20230414 17:45:50.076" endtime="20230414 17:45:50.078"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230414 17:45:50.079" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230414 17:45:50.078" endtime="20230414 17:45:50.079"/>
</kw>
<status status="PASS" starttime="20230414 17:45:50.078" endtime="20230414 17:45:50.079"/>
</kw>
<status status="PASS" starttime="20230414 17:45:50.004" endtime="20230414 17:45:50.079"/>
</test>
<status status="PASS" starttime="20230414 17:45:49.270" endtime="20230414 17:45:50.080"/>
</suite>
<status status="PASS" starttime="20230414 17:45:49.269" endtime="20230414 17:45:50.081"/>
</suite>
<status status="PASS" starttime="20230414 17:45:49.268" endtime="20230414 17:45:50.081"/>
</suite>
<status status="PASS" starttime="20230414 17:45:49.249" endtime="20230414 17:45:50.082"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Users">Tests.Api.Users</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Test Api Users">Tests.Api.Users.Test Api Users</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
