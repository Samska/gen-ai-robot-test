<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on linux)" generated="20230521 23:41:18.311" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:41:18.782" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:41:18.781" endtime="20230521 23:41:18.782"/>
</kw>
<status status="PASS" starttime="20230521 23:41:18.781" endtime="20230521 23:41:18.782"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:41:18.931" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:41:18.931" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '84fc81be-722a-4e01-b6eb-f8c58d6405b1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '846e56a5aa1d6e9b80e75abe5ddcde46;o=1', 'Date': 'Sun, 21 May 2023 23:41:18 GMT', 'Server': 'Google Frontend', 'Content-Length': '4363'} 
 body={
    "quantidade": 20,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "John Bell",
            "email": "ruizevan@example.org",
            "password": "*6OUOdmYrv",
            "administrador": "true",
            "_id": "2IKr7LeKuyL4FtC8"
        },
        {
            "nome": "Nicholas Pacheco",
            "email": "youngkayla@example.com",
            "password": "6)5EZOSrjn",
            "administrador": "true",
            "_id": "38Y0QxwG4PDRWCXi"
        },
        {
            "nome": "Teste",
            "email": "samska@gmail.com",
            "password": "Qw98ed74",
            "administrador": "false",
            "_id": "3Xr3T2ckzgNOAh1F"
        },
        {
            "nome": "Mr. James Peterson PhD",
            "email": "connierivera@example.net",
            "password": "NdU_3!LsKk",
            "administrador": "true",
            "_id": "4pI3IxxAgkZAtnue"
        },
        {
            "nome": "Juan Allen",
            "email": "justingomez@example.com",
            "password": "1(#X9ArRvD",
            "administrador": "true",
            "_id": "8tu4KvMVyoTeP4LJ"
        },
        {
            "nome": "Jessica Carter",
            "email": "ashley35@example.org",
            "password": "2o#CnmFC!x",
            "administrador": "true",
            "_id": "Cb7CzMJO3TAjHhNf"
        },
        {
            "nome": "Clifford Price",
            "email": "welchnicholas@example.net",
            "password": "1qY#Rh5L^4",
            "administrador": "true",
            "_id": "CeTenawvCCaAOcoP"
        },
        {
            "nome": "Amy Clark",
            "email": "stephanie62@example.org",
            "password": "g2bHN9v4@4",
            "administrador": "true",
            "_id": "GiHP7flmMy9cnO4x"
        },
        {
            "nome": "Donald Smith",
            "email": "samanthawells@example.com",
            "password": "+N9BWsoU_y",
            "administrador": "true",
            "_id": "Gv7cXeZoEeMSmJ4b"
        },
        {
            "nome": "Terri Campbell",
            "email": "afitzgerald@example.org",
            "password": "x$g8ZRbZ*8",
            "administrador": "true",
            "_id": "HYf8IxtoxgZTI2YN"
        },
        {
            "nome": "Aaron Wilson",
            "email": "ghughes@example.org",
            "password": "#5Ioppb^^!",
            "administrador": "true",
            "_id": "IPrmJNRK8nMHPC5g"
        },
        {
            "nome": "teste",
            "email": "testee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "PaihpGw8oseaf7q7"
        },
        {
            "nome": "David Sanders",
            "email": "christopher87@example.com",
            "password": "LNkI#4Ah@_",
            "administrador": "true",
            "_id": "SFEcefct8tA4iHXt"
        },
        {
            "nome": "Jamie Brown",
            "email": "herbert98@example.com",
            "password": ")XOI49rn5y",
            "administrador": "true",
            "_id": "XfnGX96SQDLjXcGb"
        },
        {
            "nome": "Micheal Caldwell",
            "email": "wilsonphilip@example.org",
            "password": "+BtZAI*Rs9",
            "administrador": "true",
            "_id": "b6YFBA5wmoQHYZRW"
        },
        {
            "nome": "Heidi Downs",
            "email": "urodriguez@example.com",
            "password": "1HQp3Qp5G#",
            "administrador": "true",
            "_id": "kO3ZvqwVu4B467mM"
        },
        {
            "nome": "Erin Perkins",
            "email": "bowenmichael@example.com",
            "password": "^5@&amp;8Xg(u_",
            "administrador": "true",
            "_id": "rd8XVnMFbXai1o5T"
        },
        {
            "nome": "testeeee",
            "email": "testeee@teste.com",
            "password": "150364",
            "administrador": "true",
            "_id": "yedZQ0ohrtKKZHdP"
        },
        {
            "nome": "Shannon Harris",
            "email": "tarapatterson@example.org",
            "password": "46HqkYPe#V",
            "administrador": "true",
            "_id": "zW5jUFJLv4d4MDmN"
        }
    ]
} 
 </msg>
<msg timestamp="20230521 23:41:18.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:18.782" endtime="20230521 23:41:18.931"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:41:18.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:18.932" endtime="20230521 23:41:18.932"/>
</kw>
<status status="PASS" starttime="20230521 23:41:18.782" endtime="20230521 23:41:18.932"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:41:18.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:41:18.933" endtime="20230521 23:41:18.933"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:41:18.933" endtime="20230521 23:41:18.934"/>
</kw>
<status status="PASS" starttime="20230521 23:41:18.932" endtime="20230521 23:41:18.934"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:41:18.935" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:41:18.935" endtime="20230521 23:41:18.935"/>
</kw>
<status status="PASS" starttime="20230521 23:41:18.934" endtime="20230521 23:41:18.935"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:41:18.780" endtime="20230521 23:41:18.936"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:41:18.937" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:41:18.937" endtime="20230521 23:41:18.937"/>
</kw>
<status status="PASS" starttime="20230521 23:41:18.937" endtime="20230521 23:41:18.938"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:41:18.938" level="INFO">${name} = Manuel Guzman</msg>
<status status="PASS" starttime="20230521 23:41:18.938" endtime="20230521 23:41:18.938"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:41:18.939" level="INFO">${email} = zmartinez@example.com</msg>
<status status="PASS" starttime="20230521 23:41:18.939" endtime="20230521 23:41:18.939"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:41:18.939" level="INFO">${password} = DYK3sG)e@r</msg>
<status status="PASS" starttime="20230521 23:41:18.939" endtime="20230521 23:41:18.939"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:41:18.940" level="INFO">${name} = Manuel Guzman</msg>
<status status="PASS" starttime="20230521 23:41:18.939" endtime="20230521 23:41:18.940"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:41:18.940" level="INFO">${email} = zmartinez@example.com</msg>
<status status="PASS" starttime="20230521 23:41:18.940" endtime="20230521 23:41:18.940"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:41:18.940" level="INFO">${password} = DYK3sG)e@r</msg>
<status status="PASS" starttime="20230521 23:41:18.940" endtime="20230521 23:41:18.940"/>
</kw>
<status status="PASS" starttime="20230521 23:41:18.938" endtime="20230521 23:41:18.940"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:41:18.941" level="INFO">${payload} = {'nome': 'Manuel Guzman', 'email': 'zmartinez@example.com', 'password': 'DYK3sG)e@r', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 23:41:18.941" endtime="20230521 23:41:18.941"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:41:18.942" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 23:41:18.941" endtime="20230521 23:41:18.942"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:41:19.020" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Manuel Guzman", "email": "zmartinez@example.com", "password": "DYK3sG)e@r", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 23:41:19.020" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a9296393-0018-4ba5-ab5a-b47f371ab8da', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9d3ad9ead07a3e3b74b755e92fef4800', 'Date': 'Sun, 21 May 2023 23:41:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "UCluFsfBwFlpsJ4K"
} 
 </msg>
<msg timestamp="20230521 23:41:19.020" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:18.942" endtime="20230521 23:41:19.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230521 23:41:19.021" level="INFO">${user_id} = UCluFsfBwFlpsJ4K</msg>
<status status="PASS" starttime="20230521 23:41:19.020" endtime="20230521 23:41:19.021"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230521 23:41:19.021" level="INFO">${USER_ID} = UCluFsfBwFlpsJ4K</msg>
<status status="PASS" starttime="20230521 23:41:19.021" endtime="20230521 23:41:19.021"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:41:19.022" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.022" endtime="20230521 23:41:19.022"/>
</kw>
<status status="PASS" starttime="20230521 23:41:18.941" endtime="20230521 23:41:19.022"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:41:19.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.022" endtime="20230521 23:41:19.023"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:41:19.023" endtime="20230521 23:41:19.024"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.022" endtime="20230521 23:41:19.024"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:41:19.025" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230521 23:41:19.024" endtime="20230521 23:41:19.025"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.024" endtime="20230521 23:41:19.025"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:41:18.936" endtime="20230521 23:41:19.025"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:41:19.027" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:41:19.027" endtime="20230521 23:41:19.029"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.026" endtime="20230521 23:41:19.029"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:41:19.105" level="INFO">GET Request : url=https://serverest.dev/usuarios/UCluFsfBwFlpsJ4K 
 path_url=/usuarios/UCluFsfBwFlpsJ4K 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:41:19.105" level="INFO">GET Response : url=https://serverest.dev/usuarios/UCluFsfBwFlpsJ4K 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'df6269d5-6687-4e50-a5eb-89a14be51969', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0229ed14e8eec1c7bb65db2d0d4f129b', 'Date': 'Sun, 21 May 2023 23:41:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '160'} 
 body={
    "nome": "Manuel Guzman",
    "email": "zmartinez@example.com",
    "password": "DYK3sG)e@r",
    "administrador": "false",
    "_id": "UCluFsfBwFlpsJ4K"
} 
 </msg>
<msg timestamp="20230521 23:41:19.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.029" endtime="20230521 23:41:19.105"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:41:19.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.105" endtime="20230521 23:41:19.106"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.029" endtime="20230521 23:41:19.106"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:41:19.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.106" endtime="20230521 23:41:19.107"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:41:19.107" endtime="20230521 23:41:19.108"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.106" endtime="20230521 23:41:19.108"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:41:19.109" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230521 23:41:19.108" endtime="20230521 23:41:19.109"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.108" endtime="20230521 23:41:19.109"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:41:19.026" endtime="20230521 23:41:19.110"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:41:19.111" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:41:19.111" endtime="20230521 23:41:19.111"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.110" endtime="20230521 23:41:19.112"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:41:19.112" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230521 23:41:19.112" endtime="20230521 23:41:19.112"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230521 23:41:19.113" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230521 23:41:19.112" endtime="20230521 23:41:19.113"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:41:19.190" level="INFO">PUT Request : url=https://serverest.dev/usuarios/UCluFsfBwFlpsJ4K 
 path_url=/usuarios/UCluFsfBwFlpsJ4K 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230521 23:41:19.190" level="INFO">PUT Response : url=https://serverest.dev/usuarios/UCluFsfBwFlpsJ4K 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c4fa946d-71b5-4d24-9adc-62dbe4fd8225', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '74eba71c5ae4b9267e0558c92b222294', 'Date': 'Sun, 21 May 2023 23:41:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230521 23:41:19.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.113" endtime="20230521 23:41:19.191"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:41:19.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.191" endtime="20230521 23:41:19.191"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.112" endtime="20230521 23:41:19.191"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:41:19.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.192" endtime="20230521 23:41:19.192"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:41:19.192" endtime="20230521 23:41:19.193"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.191" endtime="20230521 23:41:19.193"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:41:19.194" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 23:41:19.194" endtime="20230521 23:41:19.194"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.193" endtime="20230521 23:41:19.194"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:41:19.110" endtime="20230521 23:41:19.195"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230521 23:41:19.196" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230521 23:41:19.196" endtime="20230521 23:41:19.197"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.196" endtime="20230521 23:41:19.197"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230521 23:41:19.278" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/UCluFsfBwFlpsJ4K 
 path_url=/usuarios/UCluFsfBwFlpsJ4K 
 headers={'User-Agent': 'python-requests/2.30.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230521 23:41:19.278" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/UCluFsfBwFlpsJ4K 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '06935ee2-d66c-4bf4-a113-c8747756484f', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '41465361b82b629fa94e908a9fb905ab', 'Date': 'Sun, 21 May 2023 23:41:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230521 23:41:19.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.197" endtime="20230521 23:41:19.278"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230521 23:41:19.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.278" endtime="20230521 23:41:19.278"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.197" endtime="20230521 23:41:19.278"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230521 23:41:19.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230521 23:41:19.279" endtime="20230521 23:41:19.280"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230521 23:41:19.280" endtime="20230521 23:41:19.280"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.279" endtime="20230521 23:41:19.280"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230521 23:41:19.281" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230521 23:41:19.281" endtime="20230521 23:41:19.281"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.281" endtime="20230521 23:41:19.281"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230521 23:41:19.195" endtime="20230521 23:41:19.282"/>
</test>
<status status="PASS" starttime="20230521 23:41:18.333" endtime="20230521 23:41:19.282"/>
</suite>
<status status="PASS" starttime="20230521 23:41:18.332" endtime="20230521 23:41:19.284"/>
</suite>
<suite id="s1-s2" name="Ui" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/ui/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:41:19.294" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:41:19.293" endtime="20230521 23:41:21.128"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:41:21.128" endtime="20230521 23:41:21.258"/>
</kw>
<status status="PASS" starttime="20230521 23:41:19.293" endtime="20230521 23:41:21.259"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:41:21.265" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:41:21.259" endtime="20230521 23:41:21.265"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:21.266" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:41:21.265" endtime="20230521 23:41:21.327"/>
</kw>
<status status="PASS" starttime="20230521 23:41:21.259" endtime="20230521 23:41:21.327"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:21.328" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:41:21.328" endtime="20230521 23:41:21.391"/>
</kw>
<status status="PASS" starttime="20230521 23:41:21.327" endtime="20230521 23:41:21.392"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:41:21.392" endtime="20230521 23:41:21.626"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:41:21.644" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:41:21.626" endtime="20230521 23:41:21.644"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:41:21.658" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:41:21.644" endtime="20230521 23:41:21.659"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:41:21.671" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:41:21.659" endtime="20230521 23:41:21.671"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:41:21.683" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230521 23:41:21.671" endtime="20230521 23:41:21.683"/>
</kw>
<status status="PASS" starttime="20230521 23:41:21.392" endtime="20230521 23:41:21.683"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:41:21.684" endtime="20230521 23:41:21.740"/>
</kw>
<status status="PASS" starttime="20230521 23:41:21.683" endtime="20230521 23:41:21.740"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:41:19.293" endtime="20230521 23:41:21.740"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:41:21.743" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:41:21.742" endtime="20230521 23:41:23.095"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:41:23.096" endtime="20230521 23:41:23.215"/>
</kw>
<status status="PASS" starttime="20230521 23:41:21.742" endtime="20230521 23:41:23.216"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:41:23.221" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:41:23.216" endtime="20230521 23:41:23.221"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:23.222" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:41:23.222" endtime="20230521 23:41:23.275"/>
</kw>
<status status="PASS" starttime="20230521 23:41:23.216" endtime="20230521 23:41:23.275"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230521 23:41:23.276" level="INFO">${name} = Christopher Crawford</msg>
<status status="PASS" starttime="20230521 23:41:23.276" endtime="20230521 23:41:23.277"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230521 23:41:23.277" level="INFO">${email} = bushsarah@example.com</msg>
<status status="PASS" starttime="20230521 23:41:23.277" endtime="20230521 23:41:23.277"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230521 23:41:23.278" level="INFO">${password} = (TjXS4oL$6</msg>
<status status="PASS" starttime="20230521 23:41:23.277" endtime="20230521 23:41:23.278"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:23.278" level="INFO">Typing text 'Christopher Crawford' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:41:23.278" endtime="20230521 23:41:23.414"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:23.415" level="INFO">Typing text 'bushsarah@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:41:23.415" endtime="20230521 23:41:23.528"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:23.529" level="INFO">Typing text '(TjXS4oL$6' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:41:23.528" endtime="20230521 23:41:23.616"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:23.617" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:41:23.617" endtime="20230521 23:41:23.692"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:41:23.692" level="INFO">${name} = Christopher Crawford</msg>
<status status="PASS" starttime="20230521 23:41:23.692" endtime="20230521 23:41:23.692"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:41:23.693" level="INFO">${email} = bushsarah@example.com</msg>
<status status="PASS" starttime="20230521 23:41:23.693" endtime="20230521 23:41:23.693"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230521 23:41:23.693" level="INFO">${password} = (TjXS4oL$6</msg>
<status status="PASS" starttime="20230521 23:41:23.693" endtime="20230521 23:41:23.693"/>
</kw>
<status status="PASS" starttime="20230521 23:41:23.276" endtime="20230521 23:41:23.693"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:23.694" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:41:23.694" endtime="20230521 23:41:23.751"/>
</kw>
<status status="PASS" starttime="20230521 23:41:23.693" endtime="20230521 23:41:23.751"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:41:23.752" endtime="20230521 23:41:23.984"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:41:24.001" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:41:23.984" endtime="20230521 23:41:24.001"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:41:24.014" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230521 23:41:24.002" endtime="20230521 23:41:24.014"/>
</kw>
<status status="PASS" starttime="20230521 23:41:23.751" endtime="20230521 23:41:24.014"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:41:24.015" endtime="20230521 23:41:24.070"/>
</kw>
<status status="PASS" starttime="20230521 23:41:24.014" endtime="20230521 23:41:24.071"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:41:21.741" endtime="20230521 23:41:24.071"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230521 23:41:24.073" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230521 23:41:24.072" endtime="20230521 23:41:25.377"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230521 23:41:25.377" endtime="20230521 23:41:25.496"/>
</kw>
<status status="PASS" starttime="20230521 23:41:24.072" endtime="20230521 23:41:25.496"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230521 23:41:25.502" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230521 23:41:25.497" endtime="20230521 23:41:25.502"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:25.503" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230521 23:41:25.502" endtime="20230521 23:41:25.557"/>
</kw>
<status status="PASS" starttime="20230521 23:41:25.496" endtime="20230521 23:41:25.557"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:25.558" level="INFO">Typing text 'Christopher Crawford' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230521 23:41:25.557" endtime="20230521 23:41:25.676"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:25.677" level="INFO">Typing text 'bushsarah@example.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230521 23:41:25.676" endtime="20230521 23:41:25.788"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:25.789" level="INFO">Typing text '(TjXS4oL$6' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230521 23:41:25.788" endtime="20230521 23:41:25.877"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:25.878" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230521 23:41:25.878" endtime="20230521 23:41:25.953"/>
</kw>
<status status="PASS" starttime="20230521 23:41:25.557" endtime="20230521 23:41:25.953"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230521 23:41:25.954" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230521 23:41:25.954" endtime="20230521 23:41:26.011"/>
</kw>
<status status="PASS" starttime="20230521 23:41:25.954" endtime="20230521 23:41:26.011"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230521 23:41:26.012" endtime="20230521 23:41:26.244"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230521 23:41:26.261" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230521 23:41:26.244" endtime="20230521 23:41:26.261"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230521 23:41:26.275" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230521 23:41:26.262" endtime="20230521 23:41:26.275"/>
</kw>
<status status="PASS" starttime="20230521 23:41:26.012" endtime="20230521 23:41:26.275"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230521 23:41:26.275" endtime="20230521 23:41:26.332"/>
</kw>
<status status="PASS" starttime="20230521 23:41:26.275" endtime="20230521 23:41:26.332"/>
</kw>
<tag>ui</tag>
<status status="PASS" starttime="20230521 23:41:24.071" endtime="20230521 23:41:26.332"/>
</test>
<status status="PASS" starttime="20230521 23:41:19.286" endtime="20230521 23:41:26.333"/>
</suite>
<status status="PASS" starttime="20230521 23:41:19.284" endtime="20230521 23:41:26.335"/>
</suite>
<status status="PASS" starttime="20230521 23:41:18.312" endtime="20230521 23:41:26.337"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Ui">Tests.Ui</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.Ui.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
