<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.18 on linux)" generated="20231024 00:10:16.686" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231024 00:10:17.448" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231024 00:10:17.448" endtime="20231024 00:10:17.449"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.448" endtime="20231024 00:10:17.449"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20231024 00:10:17.605" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231024 00:10:17.606" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f56443585f42c13831e37aad640ceef6;o=1', 'Date': 'Tue, 24 Oct 2023 00:10:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '13733'} 
 body={
    "quantidade": 61,
    "usuarios": [
        {
            "nome": "Judge_Padberg-Walter",
            "email": "Stanford_Yost@hotmail.com",
            "password": "6qKJXUg2gjpBNJS",
            "administrador": "true",
            "_id": "1ioHQ7fD432PdeDb"
        },
        {
            "nome": "com.github.javafaker.Name@4d41ba0f",
            "email": "yi.torp@hotmail.com",
            "password": "47x0bwrsv2mp",
            "administrador": "true",
            "_id": "2wXVCWgeuthWs3Bn"
        },
        {
            "nome": "ederson meira",
            "email": "ederson@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "2zWljoYqsaRR6Qe6"
        },
        {
            "nome": "Dr. Guadalupe Ruecker",
            "email": "Penelope_Gorczany4@hotmail.com",
            "password": "IWRhKmYcpsPP7QO",
            "administrador": "true",
            "_id": "4OM5t3oEQERHORfc"
        },
        {
            "nome": "Recadastro",
            "email": "recadastro@gmail.com",
            "password": "recadastro1",
            "administrador": "true",
            "_id": "5kNOubrYnBBzK5tL"
        },
        {
            "nome": "com.github.javafaker.Name@fc807c1",
            "email": "salvatore.smitham@yahoo.com",
            "password": "3iojdswcf0u",
            "administrador": "true",
            "_id": "AMnVZKqwXvTvNvA8"
        },
        {
            "nome": "com.github.javafaker.Name@fc807c1",
            "email": "arnette.jacobson@gmail.com",
            "password": "qo938u9yt5",
            "administrador": "true",
            "_id": "D1hBVIrfZQ4x5gkd"
        },
        {
            "nome": "Norbert5",
            "email": "Ally.Torp@yahoo.com",
            "password": "KHpYynYlWN6eI5H",
            "administrador": "true",
            "_id": "EgCIjuGsOyCmlFh5"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "F9YfEKNjOeuVDxpu"
        },
        {
            "nome": "Fulano da Silva",
            "email": "beltrano3@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "JjehMocKcXloE8qM"
        },
        {
            "nome": "Eron CRsales",
            "email": "Crsales@ebac.com.br",
            "password": "teste@testecrsales",
            "administrador": "true",
            "_id": "K5zWNXwbLam5eT4Y"
        },
        {
            "nome": "LuisTeste",
            "email": "luisteste@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "KgOC2yZ65V8J0KYV"
        },
        {
            "nome": "Cathy Gorczany",
            "email": "Tyrique.Ritchie89@hotmail.com",
            "password": "g5Ujrsvz2FLUcbs",
            "administrador": "false",
            "_id": "LCQiqiEeX59YjkP7"
        },
        {
            "nome": "Fulano da Silva",
            "email": "rateste@qa.com.br",
            "password": "rfdgf",
            "administrador": "true",
            "_id": "Ldn4jq3irU6Tdn6H"
        },
        {
            "nome": "Teste trÃªs",
            "email": "testetres@gmail.com",
            "password": "testeback3",
            "administrador": "true",
            "_id": "MyiNfGpupoLt39Ul"
        },
        {
            "nome": "Mr. Billy Glover",
            "email": "Luz.Kshlerin37@yahoo.com",
            "password": "_q8ZPqLJX50JVFO",
            "administrador": "true",
            "_id": "NkE7EusvlVYE9nf6"
        },
        {
            "nome": "Angela Carvalho da Silva",
            "email": "angela.csilva1@valid.com",
            "password": "QATestes123",
            "administrador": "true",
            "_id": "PRAVTJv9KPNW4NpN"
        },
        {
            "nome": "com.github.javafaker.Name@4d654825",
            "email": "normand.collins@hotmail.com",
            "password": "b4jn0h9vc",
            "administrador": "true",
            "_id": "QOICkpJFt1QpzIB4"
        },
        {
            "nome": "Emma25",
            "email": "Rebekah35@yahoo.com",
            "password": "WfugQN6XMDU0UOg",
            "administrador": "true",
            "_id": "S0oPrMLXD4S1YBNe"
        },
        {
            "nome": "Rudy50",
            "email": "Jonatan_Howell@hotmail.com",
            "password": "iX8ljyVU0MbsO7s",
            "administrador": "true",
            "_id": "THOj4QRmA8VtvX3h"
        },
        {
            "nome": "Christy_Doyle",
            "email": "Cydney88@gmail.com",
            "password": "9Uuc7tIGkryAOXj",
            "administrador": "true",
            "_id": "WRKHfJ4E5dNKE0QL"
        },
        {
            "nome": "Erika",
            "email": "teste@teste.com",
            "password": "teste@123",
            "administrador": "true",
            "_id": "XVviURmsSvoFAxyf"
        },
        {
            "nome": "Bruna Costa",
            "email": "bruna@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "YJhrX2g7QwcvwkTU"
        },
        {
            "nome": "Ivory55",
            "email": "Kasandra_Hoppe48@hotmail.com",
            "password": "3kyeGWYaoBIt6UV",
            "administrador": "true",
            "_id": "Z6n7zXToeb1AxVit"
        },
        {
            "nome": "com.github.javafaker.Name@49faf066",
            "email": "hipolito.skiles@gmail.com",
            "password": "26sjwgha1",
            "administrador": "true",
            "_id": "ZXqEUUIU1LT6mKIL"
        },
        {
            "nome": "Fulano QA",
            "email": "fulano@qa.com",
            "password": "teste123",
            "administrador": "true",
            "_id": "ZsHLrmYgsxLYLxS3"
        },
        {
            "nome": "Jaida38",
            "email": "Jody_Schamberger9@gmail.com",
            "password": "MtnBHju2hmm8Kqs",
            "administrador": "true",
            "_id": "a70ys6R5q9HmZ8m3"
        },
        {
            "nome": "com.github.javafaker.Name@f288c14",
            "email": "mika.hodkiewicz@gmail.com",
            "password": "ymri74xx",
            "administrador": "true",
            "_id": "cUx3cT0UoxJ23pHT"
        },
        {
            "nome": "Nikki89",
            "email": "Carmela.Monahan94@yahoo.com",
            "password": "_3oepPoveff8nrC",
            "administrador": "true",
            "_id": "e1wpWnYiJDBhansH"
        },
        {
            "nome": "teste",
            "email": "isa@santos.com.br",
            "password": "123456",
            "administrador": "true",
            "_id": "fQ75VUcS0K4yizV4"
        },
        {
            "nome": "Leonardo Regular Account",
            "email": "leonardo@regular.com",
            "password": "regularAccount",
            "administrador": "false",
            "_id": "g9fu9Ov2jwpjlZpi"
        },
        {
            "nome": "Lucas_Bayer13",
            "email": "Eriberto.Ortiz15@hotmail.com",
            "password": "cgwhV39qlZ7s9aI",
            "administrador": "true",
            "_id": "hfOSgYgYZZGSJa6h"
        },
        {
            "nome": "rafaelqa",
            "email": "rafaelqa@teste.com",
            "password": "senha123",
            "administrador": "true",
            "_id": "hujD6rnFG0vRBnks"
        },
        {
            "nome": "Leonardo Regular Account",
            "email": "leonardo@regular.com",
            "password": "regularAccount",
            "administrador": "false",
            "_id": "hziyg6F7rLqa3xOb"
        },
        {
            "nome": "Alexandre Pereira",
            "email": "alexandre.pereira@valid.com.br",
            "password": "ale123@",
            "administrador": "true",
            "_id": "iRLbSCTnsXHF85UM"
        },
        {
            "nome": "Kianna.Spencer",
            "email": "Gregorio.Durgan@gmail.com",
            "password": "OZmSM6gJGDUmUcY",
            "administrador": "true",
            "_id": "iSWVEOwRfZckSSER"
        },
        {
            "nome": "Nicola_Jakubowski64",
            "email": "Isom_Greenfelder@yahoo.com",
            "password": "2U9VEJh8E6hUfjI",
            "administrador": "true",
            "_id": "iewShpjkMlgWLfe2"
        },
        {
            "nome": "com.github.javafaker.Name@2b680207",
            "email": "adam.friesen@gmail.com",
            "password": "bx7k111e0adc",
            "administrador": "true",
            "_id": "jVk4kG87HOhlA7FH"
        },
        {
            "nome": "Cliente",
            "email": "cliente@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "jlMZBSoMnKIJC1zu"
        },
        {
            "nome": "Ciclano da Silva",
            "email": "ciclano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "kPHKc6b1i57xC3xK"
        },
        {
            "nome": "Admin QA",
            "email": "admin@qa.com",
            "password": "admin123",
            "administrador": "true",
            "_id": "kpfAYmPtzVOHPKRo"
        },
        {
            "nome": "com.github.javafaker.Name@a92be4f",
            "email": "benny.watsica@hotmail.com",
            "password": "c49cs1rb04omh6k",
            "administrador": "true",
            "_id": "lD7CYMWT0hJ9yMfN"
        },
        {
            "nome": "Fulano da Silva",
            "email": "gfhfgh@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "lE1RDWdTPDjAsIuF"
        },
        {
            "nome": "Tania80",
            "email": "Rodger_Sauer94@hotmail.com",
            "password": "GMqqx_CBC0kYS3h",
            "administrador": "true",
            "_id": "lz5NJOXmA5kpcXax"
        },
        {
            "nome": "com.github.javafaker.Name@a92be4f",
            "email": "junko.satterfield@hotmail.com",
            "password": "jmbga10u1sb",
            "administrador": "tr... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20231024 00:10:17.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.449" endtime="20231024 00:10:17.606"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231024 00:10:17.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.606" endtime="20231024 00:10:17.607"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.449" endtime="20231024 00:10:17.607"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231024 00:10:17.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.607" endtime="20231024 00:10:17.608"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231024 00:10:17.608" endtime="20231024 00:10:17.609"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.607" endtime="20231024 00:10:17.609"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231024 00:10:17.610" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20231024 00:10:17.610" endtime="20231024 00:10:17.610"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.609" endtime="20231024 00:10:17.610"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231024 00:10:17.446" endtime="20231024 00:10:17.610"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231024 00:10:17.612" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231024 00:10:17.612" endtime="20231024 00:10:17.613"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.612" endtime="20231024 00:10:17.613"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20231024 00:10:17.614" level="INFO">${name} = Andre Alvarado</msg>
<status status="PASS" starttime="20231024 00:10:17.613" endtime="20231024 00:10:17.614"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20231024 00:10:17.614" level="INFO">${email} = cindy68@example.org</msg>
<status status="PASS" starttime="20231024 00:10:17.614" endtime="20231024 00:10:17.614"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231024 00:10:17.615" level="INFO">${password} = fVdW5nhT9HTy</msg>
<status status="PASS" starttime="20231024 00:10:17.615" endtime="20231024 00:10:17.615"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231024 00:10:17.615" level="INFO">${name} = Andre Alvarado</msg>
<status status="PASS" starttime="20231024 00:10:17.615" endtime="20231024 00:10:17.615"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231024 00:10:17.616" level="INFO">${email} = cindy68@example.org</msg>
<status status="PASS" starttime="20231024 00:10:17.616" endtime="20231024 00:10:17.616"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231024 00:10:17.616" level="INFO">${password} = fVdW5nhT9HTy</msg>
<status status="PASS" starttime="20231024 00:10:17.616" endtime="20231024 00:10:17.616"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.613" endtime="20231024 00:10:17.616"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231024 00:10:17.617" level="INFO">${payload} = {'nome': 'Andre Alvarado', 'email': 'cindy68@example.org', 'password': 'fVdW5nhT9HTy', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20231024 00:10:17.617" endtime="20231024 00:10:17.617"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231024 00:10:17.618" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20231024 00:10:17.617" endtime="20231024 00:10:17.618"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20231024 00:10:17.695" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"nome": "Andre Alvarado", "email": "cindy68@example.org", "password": "fVdW5nhT9HTy", "administrador": "false"}' 
 </msg>
<msg timestamp="20231024 00:10:17.695" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9d33f12d7ed704dd1c83a790c469c7eb', 'Date': 'Tue, 24 Oct 2023 00:10:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "vwWVr1dJcYKPDLOa"
} 
 </msg>
<msg timestamp="20231024 00:10:17.696" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.618" endtime="20231024 00:10:17.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231024 00:10:17.697" level="INFO">${user_id} = vwWVr1dJcYKPDLOa</msg>
<status status="PASS" starttime="20231024 00:10:17.696" endtime="20231024 00:10:17.697"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231024 00:10:17.697" level="INFO">${USER_ID} = vwWVr1dJcYKPDLOa</msg>
<status status="PASS" starttime="20231024 00:10:17.697" endtime="20231024 00:10:17.698"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231024 00:10:17.698" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.698" endtime="20231024 00:10:17.698"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.616" endtime="20231024 00:10:17.698"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231024 00:10:17.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.699" endtime="20231024 00:10:17.700"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231024 00:10:17.700" endtime="20231024 00:10:17.700"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.698" endtime="20231024 00:10:17.700"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231024 00:10:17.701" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20231024 00:10:17.701" endtime="20231024 00:10:17.702"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.701" endtime="20231024 00:10:17.702"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231024 00:10:17.611" endtime="20231024 00:10:17.702"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231024 00:10:17.704" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231024 00:10:17.704" endtime="20231024 00:10:17.704"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.703" endtime="20231024 00:10:17.704"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20231024 00:10:17.784" level="INFO">GET Request : url=https://serverest.dev/usuarios/vwWVr1dJcYKPDLOa 
 path_url=/usuarios/vwWVr1dJcYKPDLOa 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20231024 00:10:17.784" level="INFO">GET Response : url=https://serverest.dev/usuarios/vwWVr1dJcYKPDLOa 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b45678bc2594f56816f11151403041c2', 'Date': 'Tue, 24 Oct 2023 00:10:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '161'} 
 body={
    "nome": "Andre Alvarado",
    "email": "cindy68@example.org",
    "password": "fVdW5nhT9HTy",
    "administrador": "false",
    "_id": "vwWVr1dJcYKPDLOa"
} 
 </msg>
<msg timestamp="20231024 00:10:17.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.705" endtime="20231024 00:10:17.784"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231024 00:10:17.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.784" endtime="20231024 00:10:17.785"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.705" endtime="20231024 00:10:17.785"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231024 00:10:17.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.785" endtime="20231024 00:10:17.786"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231024 00:10:17.787" endtime="20231024 00:10:17.787"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.785" endtime="20231024 00:10:17.787"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231024 00:10:17.788" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20231024 00:10:17.788" endtime="20231024 00:10:17.788"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.787" endtime="20231024 00:10:17.788"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231024 00:10:17.703" endtime="20231024 00:10:17.789"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231024 00:10:17.791" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231024 00:10:17.790" endtime="20231024 00:10:17.791"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.790" endtime="20231024 00:10:17.791"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231024 00:10:17.792" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20231024 00:10:17.791" endtime="20231024 00:10:17.792"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231024 00:10:17.792" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20231024 00:10:17.792" endtime="20231024 00:10:17.792"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20231024 00:10:17.870" level="INFO">PUT Request : url=https://serverest.dev/usuarios/vwWVr1dJcYKPDLOa 
 path_url=/usuarios/vwWVr1dJcYKPDLOa 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20231024 00:10:17.870" level="INFO">PUT Response : url=https://serverest.dev/usuarios/vwWVr1dJcYKPDLOa 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2afdf9dbb0dc25ea3b43ab85cb383141', 'Date': 'Tue, 24 Oct 2023 00:10:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20231024 00:10:17.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.792" endtime="20231024 00:10:17.870"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231024 00:10:17.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.870" endtime="20231024 00:10:17.871"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.791" endtime="20231024 00:10:17.871"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231024 00:10:17.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.872" endtime="20231024 00:10:17.873"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231024 00:10:17.873" endtime="20231024 00:10:17.873"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.871" endtime="20231024 00:10:17.873"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231024 00:10:17.875" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20231024 00:10:17.874" endtime="20231024 00:10:17.875"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.874" endtime="20231024 00:10:17.875"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231024 00:10:17.789" endtime="20231024 00:10:17.875"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231024 00:10:17.877" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20231024 00:10:17.877" endtime="20231024 00:10:17.877"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.876" endtime="20231024 00:10:17.877"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20231024 00:10:17.958" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/vwWVr1dJcYKPDLOa 
 path_url=/usuarios/vwWVr1dJcYKPDLOa 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20231024 00:10:17.959" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/vwWVr1dJcYKPDLOa 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0160d2899db71d06032bed8b31ad4826', 'Date': 'Tue, 24 Oct 2023 00:10:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluÃ­do com sucesso"
} 
 </msg>
<msg timestamp="20231024 00:10:17.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.878" endtime="20231024 00:10:17.959"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231024 00:10:17.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.959" endtime="20231024 00:10:17.960"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.878" endtime="20231024 00:10:17.960"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20231024 00:10:17.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231024 00:10:17.960" endtime="20231024 00:10:17.961"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231024 00:10:17.962" endtime="20231024 00:10:17.962"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.960" endtime="20231024 00:10:17.962"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231024 00:10:17.963" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20231024 00:10:17.963" endtime="20231024 00:10:17.964"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.962" endtime="20231024 00:10:17.964"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20231024 00:10:17.876" endtime="20231024 00:10:17.964"/>
</test>
<status status="PASS" starttime="20231024 00:10:16.710" endtime="20231024 00:10:17.965"/>
</suite>
<status status="PASS" starttime="20231024 00:10:16.708" endtime="20231024 00:10:17.966"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231024 00:10:17.980" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20231024 00:10:17.979" endtime="20231024 00:10:25.822"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231024 00:10:25.822" endtime="20231024 00:10:26.003"/>
</kw>
<status status="PASS" starttime="20231024 00:10:17.979" endtime="20231024 00:10:26.004"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20231024 00:10:26.032" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20231024 00:10:26.005" endtime="20231024 00:10:26.032"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:26.034" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20231024 00:10:26.033" endtime="20231024 00:10:26.224"/>
</kw>
<status status="PASS" starttime="20231024 00:10:26.004" endtime="20231024 00:10:26.224"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:26.225" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20231024 00:10:26.225" endtime="20231024 00:10:26.365"/>
</kw>
<status status="PASS" starttime="20231024 00:10:26.224" endtime="20231024 00:10:26.365"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231024 00:10:26.366" endtime="20231024 00:10:26.602"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20231024 00:10:26.623" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20231024 00:10:26.603" endtime="20231024 00:10:26.624"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome Ã© obrigatÃ³rio</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231024 00:10:26.668" level="INFO">Current page contains text 'Nome Ã© obrigatÃ³rio'.</msg>
<status status="PASS" starttime="20231024 00:10:26.624" endtime="20231024 00:10:26.668"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email Ã© obrigatÃ³rio</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231024 00:10:26.683" level="INFO">Current page contains text 'Email Ã© obrigatÃ³rio'.</msg>
<status status="PASS" starttime="20231024 00:10:26.668" endtime="20231024 00:10:26.683"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password Ã© obrigatÃ³rio</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231024 00:10:26.697" level="INFO">Current page contains text 'Password Ã© obrigatÃ³rio'.</msg>
<status status="PASS" starttime="20231024 00:10:26.683" endtime="20231024 00:10:26.697"/>
</kw>
<status status="PASS" starttime="20231024 00:10:26.365" endtime="20231024 00:10:26.697"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231024 00:10:26.698" endtime="20231024 00:10:26.754"/>
</kw>
<status status="PASS" starttime="20231024 00:10:26.697" endtime="20231024 00:10:26.754"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20231024 00:10:17.979" endtime="20231024 00:10:26.754"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231024 00:10:26.757" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20231024 00:10:26.756" endtime="20231024 00:10:28.022"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231024 00:10:28.023" endtime="20231024 00:10:28.127"/>
</kw>
<status status="PASS" starttime="20231024 00:10:26.756" endtime="20231024 00:10:28.127"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20231024 00:10:28.134" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20231024 00:10:28.128" endtime="20231024 00:10:28.134"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:28.135" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20231024 00:10:28.134" endtime="20231024 00:10:28.224"/>
</kw>
<status status="PASS" starttime="20231024 00:10:28.128" endtime="20231024 00:10:28.224"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20231024 00:10:28.225" level="INFO">${name} = April Turner</msg>
<status status="PASS" starttime="20231024 00:10:28.224" endtime="20231024 00:10:28.225"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20231024 00:10:28.226" level="INFO">${email} = suzanne63@example.org</msg>
<status status="PASS" starttime="20231024 00:10:28.225" endtime="20231024 00:10:28.226"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231024 00:10:28.226" level="INFO">${password} = VYX7NtkwcuHx</msg>
<status status="PASS" starttime="20231024 00:10:28.226" endtime="20231024 00:10:28.226"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:28.227" level="INFO">Typing text 'April Turner' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20231024 00:10:28.227" endtime="20231024 00:10:28.395"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:28.396" level="INFO">Typing text 'suzanne63@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20231024 00:10:28.395" endtime="20231024 00:10:28.507"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:28.508" level="INFO">Typing text 'VYX7NtkwcuHx' into text field 'id:password'.</msg>
<status status="PASS" starttime="20231024 00:10:28.507" endtime="20231024 00:10:28.630"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:28.631" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20231024 00:10:28.630" endtime="20231024 00:10:28.715"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231024 00:10:28.716" level="INFO">${name} = April Turner</msg>
<status status="PASS" starttime="20231024 00:10:28.715" endtime="20231024 00:10:28.716"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231024 00:10:28.716" level="INFO">${email} = suzanne63@example.org</msg>
<status status="PASS" starttime="20231024 00:10:28.716" endtime="20231024 00:10:28.716"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231024 00:10:28.717" level="INFO">${password} = VYX7NtkwcuHx</msg>
<status status="PASS" starttime="20231024 00:10:28.716" endtime="20231024 00:10:28.717"/>
</kw>
<status status="PASS" starttime="20231024 00:10:28.224" endtime="20231024 00:10:28.717"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:28.718" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20231024 00:10:28.717" endtime="20231024 00:10:28.780"/>
</kw>
<status status="PASS" starttime="20231024 00:10:28.717" endtime="20231024 00:10:28.780"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231024 00:10:28.781" endtime="20231024 00:10:29.017"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20231024 00:10:29.038" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20231024 00:10:29.017" endtime="20231024 00:10:29.038"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231024 00:10:29.052" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20231024 00:10:29.038" endtime="20231024 00:10:29.052"/>
</kw>
<status status="PASS" starttime="20231024 00:10:28.780" endtime="20231024 00:10:29.052"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231024 00:10:29.053" endtime="20231024 00:10:29.112"/>
</kw>
<status status="PASS" starttime="20231024 00:10:29.052" endtime="20231024 00:10:29.112"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20231024 00:10:26.754" endtime="20231024 00:10:29.112"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231024 00:10:29.114" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20231024 00:10:29.114" endtime="20231024 00:10:30.465"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231024 00:10:30.466" endtime="20231024 00:10:30.570"/>
</kw>
<status status="PASS" starttime="20231024 00:10:29.113" endtime="20231024 00:10:30.570"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20231024 00:10:30.577" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20231024 00:10:30.571" endtime="20231024 00:10:30.577"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:30.578" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20231024 00:10:30.577" endtime="20231024 00:10:30.665"/>
</kw>
<status status="PASS" starttime="20231024 00:10:30.570" endtime="20231024 00:10:30.665"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:30.666" level="INFO">Typing text 'April Turner' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20231024 00:10:30.665" endtime="20231024 00:10:30.787"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:30.788" level="INFO">Typing text 'suzanne63@example.org' into text field 'id:email'.</msg>
<status status="PASS" starttime="20231024 00:10:30.787" endtime="20231024 00:10:30.905"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:30.906" level="INFO">Typing text 'VYX7NtkwcuHx' into text field 'id:password'.</msg>
<status status="PASS" starttime="20231024 00:10:30.905" endtime="20231024 00:10:31.003"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:31.004" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20231024 00:10:31.003" endtime="20231024 00:10:31.083"/>
</kw>
<status status="PASS" starttime="20231024 00:10:30.665" endtime="20231024 00:10:31.083"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20231024 00:10:31.084" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20231024 00:10:31.084" endtime="20231024 00:10:31.148"/>
</kw>
<status status="PASS" starttime="20231024 00:10:31.083" endtime="20231024 00:10:31.148"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email jÃ¡ estÃ¡ sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231024 00:10:31.149" endtime="20231024 00:10:31.384"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20231024 00:10:31.404" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20231024 00:10:31.385" endtime="20231024 00:10:31.405"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20231024 00:10:31.419" level="INFO">Current page contains text 'Este email jÃ¡ estÃ¡ sendo usado'.</msg>
<status status="PASS" starttime="20231024 00:10:31.405" endtime="20231024 00:10:31.419"/>
</kw>
<status status="PASS" starttime="20231024 00:10:31.148" endtime="20231024 00:10:31.419"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231024 00:10:31.420" endtime="20231024 00:10:31.477"/>
</kw>
<status status="PASS" starttime="20231024 00:10:31.419" endtime="20231024 00:10:31.477"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20231024 00:10:29.112" endtime="20231024 00:10:31.477"/>
</test>
<status status="PASS" starttime="20231024 00:10:17.970" endtime="20231024 00:10:31.478"/>
</suite>
<status status="PASS" starttime="20231024 00:10:17.968" endtime="20231024 00:10:31.481"/>
</suite>
<status status="PASS" starttime="20231024 00:10:16.687" endtime="20231024 00:10:31.482"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
