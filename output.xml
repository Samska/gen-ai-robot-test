<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.8.16 on linux)" generated="20230614 15:22:41.469" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests">
<suite id="s1-s1" name="Api" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api">
<suite id="s1-s1-s1" name="Test Api Users" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/api/test_api_users.robot">
<test id="s1-s1-s1-t1" name="Scenario: Get all registered users" line="9">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:22:42.126" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:22:42.126" endtime="20230614 15:22:42.127"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.126" endtime="20230614 15:22:42.127"/>
</kw>
<kw name="When I request the list of all registered users" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:22:42.240" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230614 15:22:42.240" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '116649ff-0bb7-4efb-b8f9-1eb5ef59e856', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6a82707f9676de2c2012f24686eb1b7b;o=1', 'Date': 'Wed, 14 Jun 2023 15:22:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '1777'} 
 body={
    "quantidade": 8,
    "usuarios": [
        {
            "nome": "Fulano da Silva",
            "email": "beltrano@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Joseph Frank",
            "email": "rodriguezjonathon@example.net",
            "password": "9Wi9NKtUjXm1",
            "administrador": "true",
            "_id": "LroURRC5q1y0XyjP"
        },
        {
            "nome": "Tonya Torres",
            "email": "averyterri@example.com",
            "password": "8Hr55QDbnQez",
            "administrador": "true",
            "_id": "S3tB0GbUUUnpzCLi"
        },
        {
            "nome": "Cleisson Atrix",
            "email": "atrix@qa.com.br",
            "password": "teste",
            "administrador": "true",
            "_id": "U8yE3jAZEwClVz2R"
        },
        {
            "nome": "Anthony Shaw",
            "email": "glovermelissa@example.net",
            "password": "G4l2UyUnVBBH",
            "administrador": "true",
            "_id": "a0rAjzmPy9MPnMbD"
        },
        {
            "nome": "Fulano da Silva",
            "email": "lwoq@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "i267z8MqsiGOJDrN"
        },
        {
            "nome": "Fulano da Silva",
            "email": "nysm@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "jlb2vMqgPSciFizX"
        },
        {
            "nome": "Matthew Henderson",
            "email": "emcdonald@example.net",
            "password": "P9nLVXys6QWD",
            "administrador": "true",
            "_id": "mTT73HwO7cmCOupH"
        }
    ]
} 
 </msg>
<msg timestamp="20230614 15:22:42.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.127" endtime="20230614 15:22:42.241"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:22:42.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.241" endtime="20230614 15:22:42.241"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.127" endtime="20230614 15:22:42.241"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:22:42.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.242" endtime="20230614 15:22:42.243"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:22:42.243" endtime="20230614 15:22:42.244"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.242" endtime="20230614 15:22:42.244"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:22:42.245" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230614 15:22:42.244" endtime="20230614 15:22:42.245"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.244" endtime="20230614 15:22:42.245"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:22:42.125" endtime="20230614 15:22:42.245"/>
</test>
<test id="s1-s1-s1-t2" name="Scenario: Create a new user" line="15">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:22:42.247" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:22:42.247" endtime="20230614 15:22:42.248"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.247" endtime="20230614 15:22:42.248"/>
</kw>
<kw name="Given I have a valid user data" library="test_keywords_users">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230614 15:22:42.249" level="INFO">${name} = Jacob Long</msg>
<status status="PASS" starttime="20230614 15:22:42.248" endtime="20230614 15:22:42.249"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230614 15:22:42.249" level="INFO">${email} = martha97@example.org</msg>
<status status="PASS" starttime="20230614 15:22:42.249" endtime="20230614 15:22:42.249"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230614 15:22:42.250" level="INFO">${password} = yK274gcbp9Qp</msg>
<status status="PASS" starttime="20230614 15:22:42.249" endtime="20230614 15:22:42.250"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:22:42.250" level="INFO">${name} = Jacob Long</msg>
<status status="PASS" starttime="20230614 15:22:42.250" endtime="20230614 15:22:42.250"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:22:42.251" level="INFO">${email} = martha97@example.org</msg>
<status status="PASS" starttime="20230614 15:22:42.250" endtime="20230614 15:22:42.251"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:22:42.251" level="INFO">${password} = yK274gcbp9Qp</msg>
<status status="PASS" starttime="20230614 15:22:42.251" endtime="20230614 15:22:42.251"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.248" endtime="20230614 15:22:42.251"/>
</kw>
<kw name="When I create the user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=${name}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 15:22:42.252" level="INFO">${payload} = {'nome': 'Jacob Long', 'email': 'martha97@example.org', 'password': 'yK274gcbp9Qp', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230614 15:22:42.251" endtime="20230614 15:22:42.252"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 15:22:42.252" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230614 15:22:42.252" endtime="20230614 15:22:42.252"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:22:42.321" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"nome": "Jacob Long", "email": "martha97@example.org", "password": "yK274gcbp9Qp", "administrador": "false"}' 
 </msg>
<msg timestamp="20230614 15:22:42.321" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2f9a3ca1-1c1f-4ccd-b2fc-db4795da8a72', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7bb644278e1ffd265ae91fb10d704531', 'Date': 'Wed, 14 Jun 2023 15:22:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "S1MCHsYCaJa70nXp"
} 
 </msg>
<msg timestamp="20230614 15:22:42.321" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.253" endtime="20230614 15:22:42.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230614 15:22:42.323" level="INFO">${user_id} = S1MCHsYCaJa70nXp</msg>
<status status="PASS" starttime="20230614 15:22:42.322" endtime="20230614 15:22:42.323"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230614 15:22:42.323" level="INFO">${USER_ID} = S1MCHsYCaJa70nXp</msg>
<status status="PASS" starttime="20230614 15:22:42.323" endtime="20230614 15:22:42.323"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:22:42.324" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.323" endtime="20230614 15:22:42.324"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.251" endtime="20230614 15:22:42.324"/>
</kw>
<kw name="Then the response status code should be 201" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:22:42.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.324" endtime="20230614 15:22:42.325"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:22:42.325" endtime="20230614 15:22:42.326"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.324" endtime="20230614 15:22:42.326"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:22:42.327" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20230614 15:22:42.326" endtime="20230614 15:22:42.327"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.326" endtime="20230614 15:22:42.327"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:22:42.246" endtime="20230614 15:22:42.327"/>
</test>
<test id="s1-s1-s1-t3" name="Scenario: Get a specific user informations" line="22">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:22:42.328" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:22:42.328" endtime="20230614 15:22:42.329"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.328" endtime="20230614 15:22:42.329"/>
</kw>
<kw name="When I request the created user" library="test_keywords_users">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:22:42.398" level="INFO">GET Request : url=https://serverest.dev/usuarios/S1MCHsYCaJa70nXp 
 path_url=/usuarios/S1MCHsYCaJa70nXp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230614 15:22:42.398" level="INFO">GET Response : url=https://serverest.dev/usuarios/S1MCHsYCaJa70nXp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '16196af2-2289-47bb-b77c-0b02ab4c32d1', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b8dc13b7b3ebe741a1f3398c60fe74c3', 'Date': 'Wed, 14 Jun 2023 15:22:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '158'} 
 body={
    "nome": "Jacob Long",
    "email": "martha97@example.org",
    "password": "yK274gcbp9Qp",
    "administrador": "false",
    "_id": "S1MCHsYCaJa70nXp"
} 
 </msg>
<msg timestamp="20230614 15:22:42.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.329" endtime="20230614 15:22:42.398"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:22:42.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.399" endtime="20230614 15:22:42.399"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.329" endtime="20230614 15:22:42.399"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:22:42.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.400" endtime="20230614 15:22:42.400"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:22:42.401" endtime="20230614 15:22:42.401"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.399" endtime="20230614 15:22:42.401"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:22:42.402" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230614 15:22:42.402" endtime="20230614 15:22:42.403"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.401" endtime="20230614 15:22:42.403"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:22:42.327" endtime="20230614 15:22:42.403"/>
</test>
<test id="s1-s1-s1-t4" name="Scenario: Update the created user" line="28">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:22:42.404" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:22:42.404" endtime="20230614 15:22:42.404"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.404" endtime="20230614 15:22:42.405"/>
</kw>
<kw name="When I update the created user" library="test_keywords_users">
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>nome=John Smith</arg>
<arg>email=john.smith@example.com</arg>
<arg>password=P@ssw0rd123</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 15:22:42.405" level="INFO">${payload} = {'nome': 'John Smith', 'email': 'john.smith@example.com', 'password': 'P@ssw0rd123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20230614 15:22:42.405" endtime="20230614 15:22:42.405"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230614 15:22:42.406" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230614 15:22:42.405" endtime="20230614 15:22:42.406"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:22:42.473" level="INFO">PUT Request : url=https://serverest.dev/usuarios/S1MCHsYCaJa70nXp 
 path_url=/usuarios/S1MCHsYCaJa70nXp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"nome": "John Smith", "email": "john.smith@example.com", "password": "P@ssw0rd123", "administrador": "false"}' 
 </msg>
<msg timestamp="20230614 15:22:42.473" level="INFO">PUT Response : url=https://serverest.dev/usuarios/S1MCHsYCaJa70nXp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ac37bea9-88a1-425c-b1f8-1a548e944a14', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '10ca417c96869c0b0e24f2cd887652e2', 'Date': 'Wed, 14 Jun 2023 15:22:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20230614 15:22:42.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.406" endtime="20230614 15:22:42.473"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:22:42.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.474" endtime="20230614 15:22:42.474"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.405" endtime="20230614 15:22:42.474"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:22:42.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.474" endtime="20230614 15:22:42.475"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:22:42.475" endtime="20230614 15:22:42.476"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.474" endtime="20230614 15:22:42.476"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:22:42.477" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230614 15:22:42.476" endtime="20230614 15:22:42.477"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.476" endtime="20230614 15:22:42.477"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:22:42.403" endtime="20230614 15:22:42.477"/>
</test>
<test id="s1-s1-s1-t5" name="Scenario: Delete the created user" line="34">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${SERVER_BASE_URL}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230614 15:22:42.479" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230614 15:22:42.478" endtime="20230614 15:22:42.479"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.478" endtime="20230614 15:22:42.479"/>
</kw>
<kw name="When I delete the created user" library="test_keywords_users">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>${USERS_API_ENDPOINT}/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20230614 15:22:42.545" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/S1MCHsYCaJa70nXp 
 path_url=/usuarios/S1MCHsYCaJa70nXp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230614 15:22:42.545" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/S1MCHsYCaJa70nXp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '391f5b17-4fa2-446f-b87a-040a3b71316d', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '83e2aed0023714a2f02b9a0c98917806', 'Date': 'Wed, 14 Jun 2023 15:22:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20230614 15:22:42.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.479" endtime="20230614 15:22:42.546"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230614 15:22:42.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.546" endtime="20230614 15:22:42.546"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.479" endtime="20230614 15:22:42.546"/>
</kw>
<kw name="Then the response status code should be 200" library="test_keywords_users" sourcename="Then the response status code should be ${status_code}">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230614 15:22:42.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230614 15:22:42.547" endtime="20230614 15:22:42.548"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230614 15:22:42.548" endtime="20230614 15:22:42.548"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.546" endtime="20230614 15:22:42.548"/>
</kw>
<kw name="And the response body should not be empty" library="test_keywords_users">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230614 15:22:42.549" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230614 15:22:42.549" endtime="20230614 15:22:42.549"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.549" endtime="20230614 15:22:42.550"/>
</kw>
<tag>api</tag>
<status status="PASS" starttime="20230614 15:22:42.478" endtime="20230614 15:22:42.550"/>
</test>
<status status="PASS" starttime="20230614 15:22:41.491" endtime="20230614 15:22:42.550"/>
</suite>
<status status="PASS" starttime="20230614 15:22:41.490" endtime="20230614 15:22:42.551"/>
</suite>
<suite id="s1-s2" name="E2E" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e">
<suite id="s1-s2-s1" name="Test Ui Signup" source="/home/runner/work/gen-ai-robot-test/gen-ai-robot-test/tests/e2e/test_ui_signup.robot">
<test id="s1-s2-s1-t1" name="Scenario: Signup with empty fields" line="10">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 15:22:42.563" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 15:22:42.562" endtime="20230614 15:22:45.726"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 15:22:45.727" endtime="20230614 15:22:45.907"/>
</kw>
<status status="PASS" starttime="20230614 15:22:42.562" endtime="20230614 15:22:45.907"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 15:22:45.913" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 15:22:45.908" endtime="20230614 15:22:45.913"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:45.914" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 15:22:45.913" endtime="20230614 15:22:45.989"/>
</kw>
<status status="PASS" starttime="20230614 15:22:45.908" endtime="20230614 15:22:45.989"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:45.990" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 15:22:45.990" endtime="20230614 15:22:46.065"/>
</kw>
<status status="PASS" starttime="20230614 15:22:45.989" endtime="20230614 15:22:46.065"/>
</kw>
<kw name="Then required field messages should be displayed" library="test_keywords_signup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 15:22:46.065" endtime="20230614 15:22:46.299"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 15:22:46.318" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 15:22:46.300" endtime="20230614 15:22:46.318"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Nome é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:46.344" level="INFO">Current page contains text 'Nome é obrigatório'.</msg>
<status status="PASS" starttime="20230614 15:22:46.318" endtime="20230614 15:22:46.344"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Email é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:46.357" level="INFO">Current page contains text 'Email é obrigatório'.</msg>
<status status="PASS" starttime="20230614 15:22:46.344" endtime="20230614 15:22:46.357"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Password é obrigatório</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:46.370" level="INFO">Current page contains text 'Password é obrigatório'.</msg>
<status status="PASS" starttime="20230614 15:22:46.357" endtime="20230614 15:22:46.370"/>
</kw>
<status status="PASS" starttime="20230614 15:22:46.065" endtime="20230614 15:22:46.370"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 15:22:46.371" endtime="20230614 15:22:46.426"/>
</kw>
<status status="PASS" starttime="20230614 15:22:46.371" endtime="20230614 15:22:46.426"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 15:22:42.562" endtime="20230614 15:22:46.426"/>
</test>
<test id="s1-s2-s1-t2" name="Scenario: Signup done successfully" line="16">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 15:22:46.429" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 15:22:46.428" endtime="20230614 15:22:47.746"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 15:22:47.747" endtime="20230614 15:22:47.876"/>
</kw>
<status status="PASS" starttime="20230614 15:22:46.428" endtime="20230614 15:22:47.876"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 15:22:47.882" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 15:22:47.877" endtime="20230614 15:22:47.882"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:47.883" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 15:22:47.882" endtime="20230614 15:22:47.937"/>
</kw>
<status status="PASS" starttime="20230614 15:22:47.876" endtime="20230614 15:22:47.937"/>
</kw>
<kw name="And I fill in the signup fields with valid data" library="test_keywords_signup">
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20230614 15:22:47.938" level="INFO">${name} = Casey Potter</msg>
<status status="PASS" starttime="20230614 15:22:47.938" endtime="20230614 15:22:47.938"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20230614 15:22:47.939" level="INFO">${email} = nrichardson@example.net</msg>
<status status="PASS" starttime="20230614 15:22:47.939" endtime="20230614 15:22:47.939"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${password}</var>
<arg>length=12</arg>
<arg>special_chars=False</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20230614 15:22:47.940" level="INFO">${password} = N8vairrYHQCh</msg>
<status status="PASS" starttime="20230614 15:22:47.939" endtime="20230614 15:22:47.940"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:47.940" level="INFO">Typing text 'Casey Potter' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230614 15:22:47.940" endtime="20230614 15:22:48.094"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:48.094" level="INFO">Typing text 'nrichardson@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230614 15:22:48.094" endtime="20230614 15:22:48.210"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:48.211" level="INFO">Typing text 'N8vairrYHQCh' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230614 15:22:48.211" endtime="20230614 15:22:48.300"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:48.301" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230614 15:22:48.300" endtime="20230614 15:22:48.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:22:48.374" level="INFO">${name} = Casey Potter</msg>
<status status="PASS" starttime="20230614 15:22:48.374" endtime="20230614 15:22:48.375"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${email}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:22:48.375" level="INFO">${email} = nrichardson@example.net</msg>
<status status="PASS" starttime="20230614 15:22:48.375" endtime="20230614 15:22:48.375"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${password}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230614 15:22:48.375" level="INFO">${password} = N8vairrYHQCh</msg>
<status status="PASS" starttime="20230614 15:22:48.375" endtime="20230614 15:22:48.375"/>
</kw>
<status status="PASS" starttime="20230614 15:22:47.937" endtime="20230614 15:22:48.375"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:48.376" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 15:22:48.376" endtime="20230614 15:22:48.435"/>
</kw>
<status status="PASS" starttime="20230614 15:22:48.376" endtime="20230614 15:22:48.435"/>
</kw>
<kw name="Then the page should contain the text &quot;Cadastro realizado com sucesso&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 15:22:48.436" endtime="20230614 15:22:48.671"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 15:22:48.690" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 15:22:48.671" endtime="20230614 15:22:48.690"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:48.703" level="INFO">Current page contains text 'Cadastro realizado com sucesso'.</msg>
<status status="PASS" starttime="20230614 15:22:48.690" endtime="20230614 15:22:48.703"/>
</kw>
<status status="PASS" starttime="20230614 15:22:48.436" endtime="20230614 15:22:48.703"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 15:22:48.704" endtime="20230614 15:22:48.759"/>
</kw>
<status status="PASS" starttime="20230614 15:22:48.704" endtime="20230614 15:22:48.759"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 15:22:46.427" endtime="20230614 15:22:48.759"/>
</test>
<test id="s1-s2-s1-t3" name="Scenario: Signup with already used email" line="23">
<kw name="Before Tests" library="test_keywords_common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${SERVER_BASE_URL}</arg>
<arg>${HEADLESS} ${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230614 15:22:48.762" level="INFO">Opening browser 'headless Chrome' to base url 'https://front.serverest.dev/'.</msg>
<status status="PASS" starttime="20230614 15:22:48.761" endtime="20230614 15:22:50.084"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20230614 15:22:50.085" endtime="20230614 15:22:50.212"/>
</kw>
<status status="PASS" starttime="20230614 15:22:48.761" endtime="20230614 15:22:50.212"/>
</kw>
<kw name="Given Im on the signup page" library="test_keywords_signup">
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>https://front.serverest.dev/login</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20230614 15:22:50.219" level="INFO">Current location is 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20230614 15:22:50.213" endtime="20230614 15:22:50.219"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>css=a.btn.btn-link</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:50.220" level="INFO">Clicking element 'css=a.btn.btn-link'.</msg>
<status status="PASS" starttime="20230614 15:22:50.219" endtime="20230614 15:22:50.274"/>
</kw>
<status status="PASS" starttime="20230614 15:22:50.212" endtime="20230614 15:22:50.274"/>
</kw>
<kw name="And I fill in the signup fields with an email already registered" library="test_keywords_signup">
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:nome</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:50.276" level="INFO">Typing text 'Casey Potter' into text field 'id:nome'.</msg>
<status status="PASS" starttime="20230614 15:22:50.275" endtime="20230614 15:22:50.396"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:email</arg>
<arg>${email}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:50.397" level="INFO">Typing text 'nrichardson@example.net' into text field 'id:email'.</msg>
<status status="PASS" starttime="20230614 15:22:50.396" endtime="20230614 15:22:50.508"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:50.509" level="INFO">Typing text 'N8vairrYHQCh' into text field 'id:password'.</msg>
<status status="PASS" starttime="20230614 15:22:50.508" endtime="20230614 15:22:50.598"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>id=administrador</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:50.598" level="INFO">Selecting checkbox 'id=administrador'.</msg>
<status status="PASS" starttime="20230614 15:22:50.598" endtime="20230614 15:22:50.672"/>
</kw>
<status status="PASS" starttime="20230614 15:22:50.274" endtime="20230614 15:22:50.672"/>
</kw>
<kw name="When I click in signup" library="test_keywords_signup">
<kw name="Click Button" library="SeleniumLibrary">
<arg>css=.btn.btn-primary</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230614 15:22:50.673" level="INFO">Clicking button 'css=.btn.btn-primary'.</msg>
<status status="PASS" starttime="20230614 15:22:50.673" endtime="20230614 15:22:50.741"/>
</kw>
<status status="PASS" starttime="20230614 15:22:50.673" endtime="20230614 15:22:50.741"/>
</kw>
<kw name="Then the page should contain the text &quot;Este email já está sendo usado&quot;" library="test_keywords_signup" sourcename="Then the page should contain the text &quot;${expected_text}&quot;">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230614 15:22:50.741" endtime="20230614 15:22:50.981"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>css=.alert-dismissible</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20230614 15:22:51.001" level="INFO">Element 'css=.alert-dismissible' is displayed.</msg>
<status status="PASS" starttime="20230614 15:22:50.982" endtime="20230614 15:22:51.001"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${expected_text}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20230614 15:22:51.015" level="INFO">Current page contains text 'Este email já está sendo usado'.</msg>
<status status="PASS" starttime="20230614 15:22:51.002" endtime="20230614 15:22:51.015"/>
</kw>
<status status="PASS" starttime="20230614 15:22:50.741" endtime="20230614 15:22:51.015"/>
</kw>
<kw name="After Tests" library="test_keywords_common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230614 15:22:51.016" endtime="20230614 15:22:51.072"/>
</kw>
<status status="PASS" starttime="20230614 15:22:51.016" endtime="20230614 15:22:51.072"/>
</kw>
<tag>e2e</tag>
<status status="PASS" starttime="20230614 15:22:48.760" endtime="20230614 15:22:51.072"/>
</test>
<status status="PASS" starttime="20230614 15:22:42.554" endtime="20230614 15:22:51.073"/>
</suite>
<status status="PASS" starttime="20230614 15:22:42.552" endtime="20230614 15:22:51.075"/>
</suite>
<status status="PASS" starttime="20230614 15:22:41.470" endtime="20230614 15:22:51.076"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api</stat>
<stat pass="3" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Test Api Users">Tests.Api.Test Api Users</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="E2E">Tests.E2E</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Test Ui Signup">Tests.E2E.Test Ui Signup</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
